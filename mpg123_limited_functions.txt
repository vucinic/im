===========================================================================
..get_next_file():::ENTER
::stopped == ::paused
::stopped == ::control_file
::stopped == ::loptchr
::stopped == ::framenum
::stopped == ::htd.icy_interval
::stopped == ::OutputDescriptor
::stopped == ::intflag
::stopped == ::param.aggressive
::stopped == ::param.shuffle
::stopped == ::param.remote
::stopped == ::param.remote_err
::stopped == ::param.quiet
::stopped == ::param.xterm_title
::stopped == ::param.usebuffer
::stopped == ::param.verbose
::stopped == ::param.checkrange
::stopped == ::param.force_reopen
::stopped == ::param.test_cpu
::stopped == ::param.realtime
::stopped == ::param.listentry
::stopped == ::param.long_id3
::stopped == ::param.list_cpu
::stopped == ::param.timeout
::stopped == ::param.delay
::stopped == ::param.index
::stopped == ::param.down_sample
::stopped == ::param.rva
::stopped == ::param.halfspeed
::stopped == ::param.doublespeed
::stopped == ::param.start_frame
::stopped == ::param.force_rate
::stopped == ::param.smooth
::stopped == ::param.keep_open
::stopped == ::param.force_utf8
::stopped == ::param.icy_interval
::stopped == ::global_premium
::stopped == ::frames_left
::stopped == ::deathflag
::stopped == ::seeking
::stopped == ::opts[::stopped].value
::stopped == ::pl.list[::stopped].freeit
::stopped == ::opts[::paused].value
::stopped == ::pl.list[::paused].freeit
::stopped == ::opts[::control_file].value
::stopped == ::pl.list[::control_file].freeit
::stopped == ::opts[::loptind].value
::stopped == ::opts[::loptind-1].value
::stopped == ::term_help[::loptind].key2
::stopped == ::term_help[::loptind-1].key2
::stopped == ::opts[::loptchr].value
::stopped == ::pl.list[::loptchr].freeit
::stopped == ::opts[::framenum].value
::stopped == ::pl.list[::framenum].freeit
::stopped == ::opts[::htd.icy_interval].value
::stopped == ::pl.list[::htd.icy_interval].freeit
::stopped == ::opts[::OutputDescriptor].value
::stopped == ::pl.list[::OutputDescriptor].freeit
::stopped == ::opts[::intflag].value
::stopped == ::pl.list[::intflag].freeit
::stopped == ::opts[::param.aggressive].value
::stopped == ::pl.list[::param.aggressive].freeit
::stopped == ::opts[::param.shuffle].value
::stopped == ::pl.list[::param.shuffle].freeit
::stopped == ::opts[::param.remote].value
::stopped == ::pl.list[::param.remote].freeit
::stopped == ::opts[::param.remote_err].value
::stopped == ::pl.list[::param.remote_err].freeit
::stopped == ::opts[::param.quiet].value
::stopped == ::pl.list[::param.quiet].freeit
::stopped == ::opts[::param.xterm_title].value
::stopped == ::pl.list[::param.xterm_title].freeit
::stopped == ::opts[::param.usebuffer].value
::stopped == ::pl.list[::param.usebuffer].freeit
::stopped == ::opts[::param.verbose].value
::stopped == ::pl.list[::param.verbose].freeit
::stopped == ::opts[::param.output_flags-1].sname
::stopped == ::term_help[::param.output_flags].key2
::stopped == ::term_help[::param.output_flags-1].key2
::stopped == ::opts[::param.term_ctrl-1].value
::stopped == ::pl.list[::param.term_ctrl].freeit
::stopped == ::pl.list[::param.term_ctrl-1].freeit
::stopped == ::term_help[::param.term_ctrl].key2
::stopped == ::opts[::param.checkrange].value
::stopped == ::pl.list[::param.checkrange].freeit
::stopped == ::opts[::param.force_reopen].value
::stopped == ::pl.list[::param.force_reopen].freeit
::stopped == ::opts[::param.test_cpu].value
::stopped == ::pl.list[::param.test_cpu].freeit
::stopped == ::opts[::param.realtime].value
::stopped == ::pl.list[::param.realtime].freeit
::stopped == ::opts[::param.listentry].value
::stopped == ::pl.list[::param.listentry].freeit
::stopped == ::opts[::param.long_id3].value
::stopped == ::pl.list[::param.long_id3].freeit
::stopped == ::opts[::param.list_cpu].value
::stopped == ::pl.list[::param.list_cpu].freeit
::stopped == ::opts[::param.timeout].value
::stopped == ::pl.list[::param.timeout].freeit
::stopped == ::opts[::param.loop-1].value
::stopped == ::pl.list[::param.loop].freeit
::stopped == ::pl.list[::param.loop-1].freeit
::stopped == ::term_help[::param.loop].key2
::stopped == ::opts[::param.delay].value
::stopped == ::pl.list[::param.delay].freeit
::stopped == ::opts[::param.index].value
::stopped == ::pl.list[::param.index].freeit
::stopped == ::opts[::param.down_sample].value
::stopped == ::pl.list[::param.down_sample].freeit
::stopped == ::opts[::param.rva].value
::stopped == ::pl.list[::param.rva].freeit
::stopped == ::opts[::param.halfspeed].value
::stopped == ::pl.list[::param.halfspeed].freeit
::stopped == ::opts[::param.doublespeed].value
::stopped == ::pl.list[::param.doublespeed].freeit
::stopped == ::opts[::param.start_frame].value
::stopped == ::pl.list[::param.start_frame].freeit
::stopped == ::opts[::param.force_rate].value
::stopped == ::pl.list[::param.force_rate].freeit
::stopped == ::opts[::param.talk_icy-1].value
::stopped == ::pl.list[::param.talk_icy].freeit
::stopped == ::pl.list[::param.talk_icy-1].freeit
::stopped == ::term_help[::param.talk_icy].key2
::stopped == ::opts[::param.smooth].value
::stopped == ::pl.list[::param.smooth].freeit
::stopped == ::opts[::param.keep_open].value
::stopped == ::pl.list[::param.keep_open].freeit
::stopped == ::opts[::param.force_utf8].value
::stopped == ::pl.list[::param.force_utf8].freeit
::stopped == ::opts[::param.preframes].value
::stopped == ::opts[::param.preframes-1].value
::stopped == ::term_help[::param.preframes].key2
::stopped == ::term_help[::param.preframes-1].key2
::stopped == ::opts[::param.icy_interval].value
::stopped == ::pl.list[::param.icy_interval].freeit
::stopped == ::opts[::global_premium].value
::stopped == ::pl.list[::global_premium].freeit
::stopped == ::opts[::frames_left].value
::stopped == ::pl.list[::frames_left].freeit
::stopped == ::opts[::fresh-1].value
::stopped == ::pl.list[::fresh].freeit
::stopped == ::pl.list[::fresh-1].freeit
::stopped == ::term_help[::fresh].key2
::stopped == ::opts[::deathflag].value
::stopped == ::pl.list[::deathflag].freeit
::stopped == ::opts[::utf8env-1].value
::stopped == ::opts[::pl.loop-1].value
::stopped == ::opts[::seeking].value
::stopped == ::pl.list[::utf8env].freeit
::stopped == ::pl.list[::utf8env-1].freeit
::stopped == ::term_help[::utf8env].key2
::stopped == ::pl.list[::pl.loop].freeit
::stopped == ::pl.list[::pl.loop-1].freeit
::stopped == ::term_help[::pl.loop].key2
::stopped == ::pl.list[::seeking].freeit
::outstream == ::pl.file
::outstream == ::opts[::loptind].var
::outstream == ::opts[::loptind-1].var
::outstream == ::opts[::param.preframes].var
::outstream == ::opts[::param.preframes-1].var
::loptind == ::param.preframes
::loptind == ::opts[::loptind].flags
::loptind == ::opts[::loptind-1].flags
::loptind == ::opts[::param.output_flags].flags
::loptind == ::opts[::param.output_flags-1].flags
::loptind == ::opts[::param.output_flags].value
::loptind == ::opts[::param.term_ctrl].flags
::loptind == ::opts[::param.loop].flags
::loptind == ::opts[::param.talk_icy].flags
::loptind == ::opts[::param.preframes].flags
::loptind == ::opts[::param.preframes-1].flags
::loptind == ::opts[::fresh].flags
::loptind == ::opts[::utf8env].flags
::loptind == ::opts[::pl.loop].flags
::genre_count == size(::genre_table[])-1
::htd.content_type.size == ::param.appflags
::htd.content_type.fill == ::param.appflags
::htd.icy_name.size == ::param.appflags
::htd.icy_name.fill == ::param.appflags
::htd.icy_url.size == ::param.appflags
::htd.icy_url.fill == ::param.appflags
::htd.proxyhost.size == ::param.appflags
::htd.proxyhost.fill == ::param.appflags
::htd.proxyport.size == ::param.appflags
::htd.proxyport.fill == ::param.appflags
::param.term_ctrl == ::fresh
::param.loop == ::fresh
::param.frame_number == ::param.gain
::param.talk_icy == ::fresh
::param.pitch == ::param.device_buffer
::param.appflags == ::pl.entry
::param.appflags == ::pl.playcount
::param.appflags == ::pl.pos
::param.appflags == ::pl.num
::param.appflags == ::pl.linebuf.size
::param.appflags == ::pl.linebuf.fill
::param.appflags == ::pl.dir.size
::param.appflags == ::pl.dir.fill
::param.appflags == ::pl.list[::stopped].playcount
::param.appflags == ::pl.list[::paused].playcount
::param.appflags == ::pl.list[::control_file].playcount
::param.appflags == ::pl.list[::loptchr].playcount
::param.appflags == ::pl.list[::framenum].playcount
::param.appflags == ::pl.list[::htd.icy_interval].playcount
::param.appflags == ::pl.list[::OutputDescriptor].playcount
::param.appflags == ::pl.list[::intflag].playcount
::param.appflags == ::pl.list[::param.aggressive].playcount
::param.appflags == ::pl.list[::param.shuffle].playcount
::param.appflags == ::pl.list[::param.remote].playcount
::param.appflags == ::pl.list[::param.remote_err].playcount
::param.appflags == ::pl.list[::param.quiet].playcount
::param.appflags == ::pl.list[::param.xterm_title].playcount
::param.appflags == ::pl.list[::param.usebuffer].playcount
::param.appflags == ::pl.list[::param.verbose].playcount
::param.appflags == ::pl.list[::param.term_ctrl].playcount
::param.appflags == ::pl.list[::param.term_ctrl-1].playcount
::param.appflags == ::pl.list[::param.checkrange].playcount
::param.appflags == ::pl.list[::param.force_reopen].playcount
::param.appflags == ::pl.list[::param.test_cpu].playcount
::param.appflags == ::pl.list[::param.realtime].playcount
::param.appflags == ::pl.list[::param.listentry].playcount
::param.appflags == ::pl.list[::param.long_id3].playcount
::param.appflags == ::pl.list[::param.list_cpu].playcount
::param.appflags == ::pl.list[::param.timeout].playcount
::param.appflags == ::pl.list[::param.loop].playcount
::param.appflags == ::pl.list[::param.loop-1].playcount
::param.appflags == ::pl.list[::param.delay].playcount
::param.appflags == ::pl.list[::param.index].playcount
::param.appflags == ::pl.list[::param.down_sample].playcount
::param.appflags == ::pl.list[::param.rva].playcount
::param.appflags == ::pl.list[::param.halfspeed].playcount
::param.appflags == ::pl.list[::param.doublespeed].playcount
::param.appflags == ::pl.list[::param.start_frame].playcount
::param.appflags == ::pl.list[::param.force_rate].playcount
::param.appflags == ::pl.list[::param.talk_icy].playcount
::param.appflags == ::pl.list[::param.talk_icy-1].playcount
::param.appflags == ::pl.list[::param.smooth].playcount
::param.appflags == ::pl.list[::param.keep_open].playcount
::param.appflags == ::pl.list[::param.force_utf8].playcount
::param.appflags == ::pl.list[::param.icy_interval].playcount
::param.appflags == ::pl.list[::global_premium].playcount
::param.appflags == ::pl.list[::frames_left].playcount
::param.appflags == ::pl.list[::fresh].playcount
::param.appflags == ::pl.list[::fresh-1].playcount
::param.appflags == ::pl.list[::deathflag].playcount
::param.appflags == ::pl.list[::utf8env].playcount
::param.appflags == ::pl.list[::utf8env-1].playcount
::param.appflags == ::pl.list[::pl.loop].playcount
::param.appflags == ::pl.list[::pl.loop-1].playcount
::param.appflags == ::pl.list[::seeking].playcount
::fresh == ::utf8env
::fresh == ::pl.loop
::fresh == ::opts[::param.term_ctrl].value
::fresh == ::opts[::param.loop].value
::fresh == ::opts[::param.talk_icy].value
::fresh == ::opts[::fresh].value
::fresh == ::opts[::utf8env].value
::fresh == ::opts[::pl.loop].value
::pl.size == ::pl.alloc_step
size(::rva_name[]) == size(::pl.list[])
size(::rva_name[])-1 == ::opts[::param.output_flags-1].value
::opts[::stopped] == ::opts[::param.term_ctrl-1]
::opts[::stopped] == ::opts[::param.loop-1]
::opts[::stopped] == ::opts[::param.talk_icy-1]
::opts[::stopped] == ::opts[::fresh-1]
::opts[::stopped] == ::opts[::utf8env-1]
::opts[::stopped] == ::opts[::pl.loop-1]
::opts[::stopped].sname == ::opts[::param.term_ctrl-1].sname
::opts[::stopped].sname == ::opts[::param.loop-1].sname
::opts[::stopped].sname == ::opts[::param.talk_icy-1].sname
::opts[::stopped].sname == ::opts[::fresh-1].sname
::opts[::stopped].sname == ::opts[::utf8env-1].sname
::opts[::stopped].sname == ::opts[::pl.loop-1].sname
::opts[::stopped].flags == ::opts[::param.term_ctrl-1].flags
::opts[::stopped].flags == ::opts[::param.loop-1].flags
::opts[::stopped].flags == ::opts[::param.talk_icy-1].flags
::opts[::stopped].flags == ::opts[::fresh-1].flags
::opts[::stopped].flags == ::opts[::utf8env-1].flags
::opts[::stopped].flags == ::opts[::pl.loop-1].flags
::opts[::stopped].func == ::opts[::param.term_ctrl].func
::opts[::stopped].func == ::opts[::param.term_ctrl-1].func
::opts[::stopped].func == ::opts[::param.loop].func
::opts[::stopped].func == ::opts[::param.loop-1].func
::opts[::stopped].func == ::opts[::param.talk_icy].func
::opts[::stopped].func == ::opts[::param.talk_icy-1].func
::opts[::stopped].func == ::opts[::fresh].func
::opts[::stopped].func == ::opts[::fresh-1].func
::opts[::stopped].func == ::opts[::utf8env].func
::opts[::stopped].func == ::opts[::utf8env-1].func
::opts[::stopped].func == ::opts[::pl.loop].func
::opts[::stopped].func == ::opts[::pl.loop-1].func
::opts[::stopped].var == ::opts[::param.term_ctrl-1].var
::opts[::stopped].var == ::opts[::param.loop-1].var
::opts[::stopped].var == ::opts[::param.talk_icy-1].var
::opts[::stopped].var == ::opts[::fresh-1].var
::opts[::stopped].var == ::opts[::utf8env-1].var
::opts[::stopped].var == ::opts[::pl.loop-1].var
::pl.list[::stopped] == ::pl.list[::param.term_ctrl-1]
::pl.list[::stopped] == ::pl.list[::param.loop-1]
::pl.list[::stopped] == ::pl.list[::param.talk_icy-1]
::pl.list[::stopped] == ::pl.list[::fresh-1]
::pl.list[::stopped] == ::pl.list[::utf8env-1]
::pl.list[::stopped] == ::pl.list[::pl.loop-1]
::term_help[::stopped] == ::term_help[::param.term_ctrl-1]
::term_help[::stopped] == ::term_help[::param.loop-1]
::term_help[::stopped] == ::term_help[::param.talk_icy-1]
::term_help[::stopped] == ::term_help[::fresh-1]
::term_help[::stopped] == ::term_help[::utf8env-1]
::term_help[::stopped] == ::term_help[::pl.loop-1]
::term_help[::stopped].key == ::opts[::loptind].sname
::term_help[::stopped].key == ::term_help[::param.term_ctrl-1].key
::term_help[::stopped].key == ::term_help[::param.loop-1].key
::term_help[::stopped].key == ::term_help[::param.talk_icy-1].key
::term_help[::stopped].key == ::opts[::param.preframes].sname
::term_help[::stopped].key == ::term_help[::fresh-1].key
::term_help[::stopped].key == ::term_help[::utf8env-1].key
::term_help[::stopped].key == ::term_help[::pl.loop-1].key
::term_help[::stopped].key2 == ::term_help[::param.term_ctrl-1].key2
::term_help[::stopped].key2 == ::term_help[::param.loop-1].key2
::term_help[::stopped].key2 == ::term_help[::param.talk_icy-1].key2
::term_help[::stopped].key2 == ::term_help[::fresh-1].key2
::term_help[::stopped].key2 == ::term_help[::utf8env-1].key2
::term_help[::stopped].key2 == ::term_help[::pl.loop-1].key2
::opts[::param.output_flags].func == ::opts[::param.output_flags-1].func
::opts[::param.output_flags].var == ::opts[::param.output_flags-1].var
::stopped == 0
::remote_header_help == "S <mpeg-version> <layer> <sampling freq> <mode(stereo/mono/...)> <mode_ext> <framesize> <stereo> <copyright> <error_protected> <emphasis> <bitrate> <extension> <vbr(0/1=yes/no)>"
::rva_name has only one value
::rva_name[] == [off, mix, album]
::rva_name[] elements one of { "album", "mix", "off" }
::outstream == null
::loptind == 4
::genre_table has only one value
::genre_table[] == [Blues, Classic Rock, Country, Dance, Disco, Funk, Grunge, Hip-Hop, Jazz, Metal, New Age, Oldies, Other, Pop, R&B, Rap, Reggae, Rock, Techno, Industrial, Alternative, Ska, Death Metal, Pranks, Soundtrack, Euro-Techno, Ambient, Trip-Hop, Vocal, Jazz+Funk, Fusion, Trance, Classical, Instrumental, Acid, House, Game, Sound Clip, Gospel, Noise, AlternRock, Bass, Soul, Punk, Space, Meditative, Instrumental Pop, Instrumental Rock, Ethnic, Gothic, Darkwave, Techno-Industrial, Electronic, Pop-Folk, Eurodance, Dream, Southern Rock, Comedy, Cult, Gangsta, Top 40, Christian Rap, Pop/Funk, Jungle, Native American, Cabaret, New Wave, Psychedelic, Rave, Showtunes, Trailer, Lo-Fi, Tribal, Acid Punk, Acid Jazz, Polka, Retro, Musical, Rock & Roll, Hard Rock, Folk, Folk/Rock, National folk, Swing, Fast-fusion, Bebob, Latin, Revival, Celtic, Bluegrass, Avantgarde, Gothic Rock, Progressive Rock, Psychedelic Rock, Symphonic Rock, Slow Rock, Big Band, Chorus, Easy Listening, Acoustic, Humour, Speech, Chanson, Opera, Chamber Music, Sonata, Symphony, Booty Bass, Primus, Porn Groove, Satire, Slow Jam, Club, Tango, Samba, Folklore, Ballad, Powder Ballad, Rhythmic Soul, Freestyle, Duet, Punk Rock, Drum Solo, A Capella, Euro-House, Dance Hall, Goa, Drum & Bass, Club House, Hardcore, Terror, Indie, BritPop, NegerPunk, Polsk Punk, Beat, Christian Gangsta, Heavy Metal, Black Metal, Crossover, Contemporary C, Christian Rock, Merengue, Salsa, Thrash Metal, Anime, JPop, SynthPop]
::binpath == "."
::htd has only one value
::htd.content_type has only one value
::htd.icy_name has only one value
::htd.icy_url has only one value
::htd.proxyhost has only one value
::htd.proxyport has only one value
::htd.proxystate == 0
::param has only one value
::param.output_module == "alsa,oss,nas"
::param.output_flags == 16
::param.term_usr1 == "s"
::param.term_usr2 == "f"
::param.frame_number == -1
::param.outscale == 32768
::param.flags == 33088
::param.resync_limit == 1024
::param.pitch == 0.0
::param.appflags == 0
::param.index_size == 1000
::param.preload == 0.2
::mh has only one value
::ao has only one value
::prgName == "mpg123"
::fresh == 1
::aux_out has only one value
::opts has only one value
::opts[] contains no nulls and has only one value, of length 96
::opts[].sname == [107, 50, 52, 116, 115, 83, 79, 99, 118, 113, 121, 0, 48, 0, 49, 0, 109, 0, 0, 0, 0, 103, 114, 0, 0, 0, 0, 0, 111, 0, 97, 102, 110, 67, 0, 0, 0, 98, 0, 0, 82, 0, 100, 104, 112, 64, 122, 90, 69, 0, 0, 0, 0, 117, 84, 0, 119, 0, 0, 0, 0, 0, 63, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 105, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 101, 0, 0, 0, 0, 0, 0, 0, 0]
::opts[].sname elements >= 0
::opts[].flags == [9, 4, 4, 4, 4, 4, 3, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 9, 4, 4, 0, 0, 0, 3, 0, 3, 9, 9, 4, 4, 3, 3, 9, 4, 17, 4, 4, 9, 9, 3, 3, 4, 4, 3, 4, 3, 4, 4, 3, 8, 4, 3, 3, 3, 4, 4, 4, 0, 0, 0, 9, 4, 4, 4, 4, 4, 4, 4, 3, 9, 9, 4, 5, 9, 17, 4, 4, 4, 4, 4, 9, 4, 3, 9, 4, 3, 9, 4, 3, 17, 0]
::opts[].flags elements >= 0
::opts[].func has only one value, of length 96
::opts[].var has only one value, of length 96
::opts[].value == [0, 1, 2, 0, 0, 0, 0, 1, 0, 0, 128, 128, 1, 1, 2, 2, 4, 4, 4, 8, 1, 0, 0, 16, 1024, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 2, 1, 2, 0, 1, 1, 0, 1, 1, 0, 0, 0, 64, 64, 16384, 0, 0, 0, 0, 4, 1, 1, 2, 2, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 2, 1, 1, 512, 0, 256, 0, 0, 8192, 0, 0, 4096, 0, 0, 0]
::opts[].value elements >= 0
::pl has only one value
::pl.size == 10
::pl.fill == 3
::pl.list has only one value
::pl.list[] contains no nulls and has only one value, of length 3
::pl.list[].url == [ImmanuelCasto-Dagrandesaraifrio.mp3, ImmanuelCasto-Dagrandesaraifrio (copy 1).mp3, ImmanuelCasto-Dagrandesaraifrio (copy 2).mp3]
::pl.list[].url elements one of { "ImmanuelCasto-Dagrandesaraifrio (copy 1).mp3", "ImmanuelCasto-Dagrandesaraifrio (copy 2).mp3", "ImmanuelCasto-Dagrandesaraifrio.mp3" }
::pl.list[].freeit == [0, 0, 0]
::pl.list[].freeit elements == 0
::pl.list[].playcount == [0, 0, 0]
::pl.list[].playcount elements == 0
::pl.linebuf has only one value
::pl.dir has only one value
::pl.type == 0
::term_help has only one value
::term_help[] contains no nulls and has only one value, of length 26
::term_help[].key == [115, 102, 100, 93, 91, 98, 112, 46, 44, 58, 59, 62, 60, 43, 45, 114, 118, 108, 116, 109, 104, 113, 99, 120, 119, 107]
::term_help[].key2 == [32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 67, 88, 0, 0]
::term_help[].key2 elements >= 0
::term_help[].desc == [interrupt/restart playback (i.e. '(un)pause'), next track, previous track, next directory (next track until directory part changes), previous directory (previous track until directory part changes), back to beginning of track, loop around current position (don't combine with output buffer), forward, rewind, fast forward, fast rewind, fine forward, fine rewind, volume up, volume down, RVA switch, verbose switch, list current playlist, indicating current track there, display tag info (again), print MPEG header info (again), this help, quit, pitch up (small step, big step), pitch down (small step, big step), reset pitch to zero, print out current position in playlist and track, for the benefit of some external tool to store bookmarks]
size(::rva_name[]) == 3
size(::genre_table[]) == 148
size(::opts[]) == 96
size(::term_help[]) == 26
::opts[::stopped] has only one value
::opts[::stopped].sname == 107
::opts[::stopped].flags == 9
::opts[::stopped].func == null
::opts[::stopped].var has only one value
::pl.list[::stopped] has only one value
::term_help[::stopped] has only one value
::term_help[::stopped].key == 115
::term_help[::stopped].key2 == 32
::opts[::loptind] has only one value
::opts[::loptind-1] has only one value
::opts[::loptind-1].sname == 116
::opts[::loptind].func has only one value
::opts[::loptind-1].func has only one value
::term_help[::loptind] has only one value
::term_help[::loptind-1] has only one value
::term_help[::loptind].key == 91
::term_help[::loptind-1].key == 93
::opts[::param.output_flags] has only one value
::opts[::param.output_flags-1] has only one value
::opts[::param.output_flags].sname == 109
::opts[::param.output_flags].func has only one value
::opts[::param.output_flags].var has only one value
::term_help[::param.output_flags] has only one value
::term_help[::param.output_flags-1] has only one value
::term_help[::param.output_flags].key == 118
::term_help[::param.output_flags-1].key == 114
::opts[::fresh] has only one value
::opts[::fresh].sname == 50
::opts[::fresh].var has only one value
::pl.list[::fresh] has only one value
::term_help[::fresh] has only one value
::term_help[::fresh].key == 102
::stopped in ::opts[].flags
::pl.list[].freeit elements == ::stopped
::binpath == ::fullprogname
::param.output_flags in ::opts[].value
::param.resync_limit in ::opts[].value
::pl.list[].playcount elements == ::param.appflags
::param.name == ::prgName
::term_help[::param.output_flags].key in ::opts[].sname
::term_help[::param.output_flags-1].key in ::opts[].sname
::term_help[::fresh].key in ::opts[].sname
size(::rva_name[]) in ::opts[].flags
::opts[::stopped].sname in ::term_help[].key
::opts[::loptind-1].sname in ::term_help[].key
::opts[::param.output_flags].sname in ::term_help[].key
===========================================================================
..get_next_file():::EXIT
::stopped == ::paused
::stopped == ::control_file
::stopped == ::loptchr
::stopped == ::framenum
::stopped == ::htd.icy_interval
::stopped == ::OutputDescriptor
::stopped == ::intflag
::stopped == ::param.aggressive
::stopped == ::param.shuffle
::stopped == ::param.remote
::stopped == ::param.remote_err
::stopped == ::param.quiet
::stopped == ::param.xterm_title
::stopped == ::param.usebuffer
::stopped == ::param.verbose
::stopped == ::param.checkrange
::stopped == ::param.force_reopen
::stopped == ::param.test_cpu
::stopped == ::param.realtime
::stopped == ::param.listentry
::stopped == ::param.long_id3
::stopped == ::param.list_cpu
::stopped == ::param.timeout
::stopped == ::param.delay
::stopped == ::param.index
::stopped == ::param.down_sample
::stopped == ::param.rva
::stopped == ::param.halfspeed
::stopped == ::param.doublespeed
::stopped == ::param.start_frame
::stopped == ::param.force_rate
::stopped == ::param.smooth
::stopped == ::param.keep_open
::stopped == ::param.force_utf8
::stopped == ::param.icy_interval
::stopped == ::global_premium
::stopped == ::frames_left
::stopped == ::deathflag
::stopped == ::seeking
::stopped == orig(::stopped)
::stopped == orig(::paused)
::stopped == orig(::control_file)
::stopped == orig(::loptchr)
::stopped == orig(::framenum)
::stopped == orig(::htd.icy_interval)
::stopped == orig(::OutputDescriptor)
::stopped == orig(::intflag)
::stopped == orig(::param.aggressive)
::stopped == orig(::param.shuffle)
::stopped == orig(::param.remote)
::stopped == orig(::param.remote_err)
::stopped == orig(::param.quiet)
::stopped == orig(::param.xterm_title)
::stopped == orig(::param.usebuffer)
::stopped == orig(::param.verbose)
::stopped == orig(::param.checkrange)
::stopped == orig(::param.force_reopen)
::stopped == orig(::param.test_cpu)
::stopped == orig(::param.realtime)
::stopped == orig(::param.listentry)
::stopped == orig(::param.long_id3)
::stopped == orig(::param.list_cpu)
::stopped == orig(::param.timeout)
::stopped == orig(::param.delay)
::stopped == orig(::param.index)
::stopped == orig(::param.down_sample)
::stopped == orig(::param.rva)
::stopped == orig(::param.halfspeed)
::stopped == orig(::param.doublespeed)
::stopped == orig(::param.start_frame)
::stopped == orig(::param.force_rate)
::stopped == orig(::param.smooth)
::stopped == orig(::param.keep_open)
::stopped == orig(::param.force_utf8)
::stopped == orig(::param.icy_interval)
::stopped == orig(::global_premium)
::stopped == orig(::frames_left)
::stopped == orig(::deathflag)
::stopped == orig(::seeking)
::stopped == ::opts[::stopped].value
::stopped == ::pl.list[::stopped].freeit
::stopped == orig(::opts[post(::stopped)].value)
::stopped == orig(::pl.list[post(::stopped)].freeit)
::stopped == ::opts[::paused].value
::stopped == ::pl.list[::paused].freeit
::stopped == orig(::opts[post(::paused)].value)
::stopped == orig(::pl.list[post(::paused)].freeit)
::stopped == ::opts[::control_file].value
::stopped == ::pl.list[::control_file].freeit
::stopped == orig(::opts[post(::control_file)].value)
::stopped == orig(::pl.list[post(::control_file)].freeit)
::stopped == ::opts[::loptind].value
::stopped == ::opts[::loptind-1].value
::stopped == ::term_help[::loptind].key2
::stopped == ::term_help[::loptind-1].key2
::stopped == orig(::opts[post(::loptind)].value)
::stopped == orig(::opts[post(::loptind)-1].value)
::stopped == orig(::term_help[post(::loptind)].key2)
::stopped == orig(::term_help[post(::loptind)-1].key2)
::stopped == ::opts[::loptchr].value
::stopped == ::pl.list[::loptchr].freeit
::stopped == orig(::opts[post(::loptchr)].value)
::stopped == orig(::pl.list[post(::loptchr)].freeit)
::stopped == ::opts[::framenum].value
::stopped == ::pl.list[::framenum].freeit
::stopped == orig(::opts[post(::framenum)].value)
::stopped == orig(::pl.list[post(::framenum)].freeit)
::stopped == ::opts[::htd.icy_interval].value
::stopped == ::pl.list[::htd.icy_interval].freeit
::stopped == orig(::opts[post(::htd.icy_interval)].value)
::stopped == orig(::pl.list[post(::htd.icy_interval)].freeit)
::stopped == ::opts[::OutputDescriptor].value
::stopped == ::pl.list[::OutputDescriptor].freeit
::stopped == orig(::opts[post(::OutputDescriptor)].value)
::stopped == orig(::pl.list[post(::OutputDescriptor)].freeit)
::stopped == ::opts[::intflag].value
::stopped == ::pl.list[::intflag].freeit
::stopped == orig(::opts[post(::intflag)].value)
::stopped == orig(::pl.list[post(::intflag)].freeit)
::stopped == ::opts[::param.aggressive].value
::stopped == ::pl.list[::param.aggressive].freeit
::stopped == orig(::opts[post(::param.aggressive)].value)
::stopped == orig(::pl.list[post(::param.aggressive)].freeit)
::stopped == ::opts[::param.shuffle].value
::stopped == ::pl.list[::param.shuffle].freeit
::stopped == orig(::opts[post(::param.shuffle)].value)
::stopped == orig(::pl.list[post(::param.shuffle)].freeit)
::stopped == ::opts[::param.remote].value
::stopped == ::pl.list[::param.remote].freeit
::stopped == orig(::opts[post(::param.remote)].value)
::stopped == orig(::pl.list[post(::param.remote)].freeit)
::stopped == ::opts[::param.remote_err].value
::stopped == ::pl.list[::param.remote_err].freeit
::stopped == orig(::opts[post(::param.remote_err)].value)
::stopped == orig(::pl.list[post(::param.remote_err)].freeit)
::stopped == ::opts[::param.quiet].value
::stopped == ::pl.list[::param.quiet].freeit
::stopped == orig(::opts[post(::param.quiet)].value)
::stopped == orig(::pl.list[post(::param.quiet)].freeit)
::stopped == ::opts[::param.xterm_title].value
::stopped == ::pl.list[::param.xterm_title].freeit
::stopped == orig(::opts[post(::param.xterm_title)].value)
::stopped == orig(::pl.list[post(::param.xterm_title)].freeit)
::stopped == ::opts[::param.usebuffer].value
::stopped == ::pl.list[::param.usebuffer].freeit
::stopped == orig(::opts[post(::param.usebuffer)].value)
::stopped == orig(::pl.list[post(::param.usebuffer)].freeit)
::stopped == ::opts[::param.verbose].value
::stopped == ::pl.list[::param.verbose].freeit
::stopped == orig(::opts[post(::param.verbose)].value)
::stopped == orig(::pl.list[post(::param.verbose)].freeit)
::stopped == ::opts[::param.output_flags-1].sname
::stopped == ::term_help[::param.output_flags].key2
::stopped == ::term_help[::param.output_flags-1].key2
::stopped == orig(::opts[post(::param.output_flags)-1].sname)
::stopped == orig(::term_help[post(::param.output_flags)].key2)
::stopped == orig(::term_help[post(::param.output_flags)-1].key2)
::stopped == ::opts[::param.term_ctrl-1].value
::stopped == ::pl.list[::param.term_ctrl].freeit
::stopped == ::pl.list[::param.term_ctrl-1].freeit
::stopped == ::term_help[::param.term_ctrl].key2
::stopped == orig(::opts[post(::param.term_ctrl)-1].value)
::stopped == orig(::pl.list[post(::param.term_ctrl)].freeit)
::stopped == orig(::pl.list[post(::param.term_ctrl)-1].freeit)
::stopped == orig(::term_help[post(::param.term_ctrl)].key2)
::stopped == ::opts[::param.checkrange].value
::stopped == ::pl.list[::param.checkrange].freeit
::stopped == orig(::opts[post(::param.checkrange)].value)
::stopped == orig(::pl.list[post(::param.checkrange)].freeit)
::stopped == ::opts[::param.force_reopen].value
::stopped == ::pl.list[::param.force_reopen].freeit
::stopped == orig(::opts[post(::param.force_reopen)].value)
::stopped == orig(::pl.list[post(::param.force_reopen)].freeit)
::stopped == ::opts[::param.test_cpu].value
::stopped == ::pl.list[::param.test_cpu].freeit
::stopped == orig(::opts[post(::param.test_cpu)].value)
::stopped == orig(::pl.list[post(::param.test_cpu)].freeit)
::stopped == ::opts[::param.realtime].value
::stopped == ::pl.list[::param.realtime].freeit
::stopped == orig(::opts[post(::param.realtime)].value)
::stopped == orig(::pl.list[post(::param.realtime)].freeit)
::stopped == ::opts[::param.listentry].value
::stopped == ::pl.list[::param.listentry].freeit
::stopped == orig(::opts[post(::param.listentry)].value)
::stopped == orig(::pl.list[post(::param.listentry)].freeit)
::stopped == ::opts[::param.long_id3].value
::stopped == ::pl.list[::param.long_id3].freeit
::stopped == orig(::opts[post(::param.long_id3)].value)
::stopped == orig(::pl.list[post(::param.long_id3)].freeit)
::stopped == ::opts[::param.list_cpu].value
::stopped == ::pl.list[::param.list_cpu].freeit
::stopped == orig(::opts[post(::param.list_cpu)].value)
::stopped == orig(::pl.list[post(::param.list_cpu)].freeit)
::stopped == ::opts[::param.timeout].value
::stopped == ::pl.list[::param.timeout].freeit
::stopped == orig(::opts[post(::param.timeout)].value)
::stopped == orig(::pl.list[post(::param.timeout)].freeit)
::stopped == ::opts[::param.loop-1].value
::stopped == ::pl.list[::param.loop].freeit
::stopped == ::pl.list[::param.loop-1].freeit
::stopped == ::term_help[::param.loop].key2
::stopped == orig(::opts[post(::param.loop)-1].value)
::stopped == orig(::pl.list[post(::param.loop)].freeit)
::stopped == orig(::pl.list[post(::param.loop)-1].freeit)
::stopped == orig(::term_help[post(::param.loop)].key2)
::stopped == ::opts[::param.delay].value
::stopped == ::pl.list[::param.delay].freeit
::stopped == orig(::opts[post(::param.delay)].value)
::stopped == orig(::pl.list[post(::param.delay)].freeit)
::stopped == ::opts[::param.index].value
::stopped == ::pl.list[::param.index].freeit
::stopped == orig(::opts[post(::param.index)].value)
::stopped == orig(::pl.list[post(::param.index)].freeit)
::stopped == ::opts[::param.down_sample].value
::stopped == ::pl.list[::param.down_sample].freeit
::stopped == orig(::opts[post(::param.down_sample)].value)
::stopped == orig(::pl.list[post(::param.down_sample)].freeit)
::stopped == ::opts[::param.rva].value
::stopped == ::pl.list[::param.rva].freeit
::stopped == orig(::opts[post(::param.rva)].value)
::stopped == orig(::pl.list[post(::param.rva)].freeit)
::stopped == ::opts[::param.halfspeed].value
::stopped == ::pl.list[::param.halfspeed].freeit
::stopped == orig(::opts[post(::param.halfspeed)].value)
::stopped == orig(::pl.list[post(::param.halfspeed)].freeit)
::stopped == ::opts[::param.doublespeed].value
::stopped == ::pl.list[::param.doublespeed].freeit
::stopped == orig(::opts[post(::param.doublespeed)].value)
::stopped == orig(::pl.list[post(::param.doublespeed)].freeit)
::stopped == ::opts[::param.start_frame].value
::stopped == ::pl.list[::param.start_frame].freeit
::stopped == orig(::opts[post(::param.start_frame)].value)
::stopped == orig(::pl.list[post(::param.start_frame)].freeit)
::stopped == ::opts[::param.force_rate].value
::stopped == ::pl.list[::param.force_rate].freeit
::stopped == orig(::opts[post(::param.force_rate)].value)
::stopped == orig(::pl.list[post(::param.force_rate)].freeit)
::stopped == ::opts[::param.talk_icy-1].value
::stopped == ::pl.list[::param.talk_icy].freeit
::stopped == ::pl.list[::param.talk_icy-1].freeit
::stopped == ::term_help[::param.talk_icy].key2
::stopped == orig(::opts[post(::param.talk_icy)-1].value)
::stopped == orig(::pl.list[post(::param.talk_icy)].freeit)
::stopped == orig(::pl.list[post(::param.talk_icy)-1].freeit)
::stopped == orig(::term_help[post(::param.talk_icy)].key2)
::stopped == ::opts[::param.smooth].value
::stopped == ::pl.list[::param.smooth].freeit
::stopped == orig(::opts[post(::param.smooth)].value)
::stopped == orig(::pl.list[post(::param.smooth)].freeit)
::stopped == ::opts[::param.keep_open].value
::stopped == ::pl.list[::param.keep_open].freeit
::stopped == orig(::opts[post(::param.keep_open)].value)
::stopped == orig(::pl.list[post(::param.keep_open)].freeit)
::stopped == ::opts[::param.force_utf8].value
::stopped == ::pl.list[::param.force_utf8].freeit
::stopped == orig(::opts[post(::param.force_utf8)].value)
::stopped == orig(::pl.list[post(::param.force_utf8)].freeit)
::stopped == ::opts[::param.preframes].value
::stopped == ::opts[::param.preframes-1].value
::stopped == ::term_help[::param.preframes].key2
::stopped == ::term_help[::param.preframes-1].key2
::stopped == orig(::opts[post(::param.preframes)].value)
::stopped == orig(::opts[post(::param.preframes)-1].value)
::stopped == orig(::term_help[post(::param.preframes)].key2)
::stopped == orig(::term_help[post(::param.preframes)-1].key2)
::stopped == ::opts[::param.icy_interval].value
::stopped == ::pl.list[::param.icy_interval].freeit
::stopped == orig(::opts[post(::param.icy_interval)].value)
::stopped == orig(::pl.list[post(::param.icy_interval)].freeit)
::stopped == ::opts[::global_premium].value
::stopped == ::pl.list[::global_premium].freeit
::stopped == orig(::opts[post(::global_premium)].value)
::stopped == orig(::pl.list[post(::global_premium)].freeit)
::stopped == ::opts[::frames_left].value
::stopped == ::pl.list[::frames_left].freeit
::stopped == orig(::opts[post(::frames_left)].value)
::stopped == orig(::pl.list[post(::frames_left)].freeit)
::stopped == ::opts[::fresh-1].value
::stopped == ::pl.list[::fresh].freeit
::stopped == ::pl.list[::fresh-1].freeit
::stopped == ::term_help[::fresh].key2
::stopped == orig(::opts[post(::fresh)-1].value)
::stopped == orig(::pl.list[post(::fresh)].freeit)
::stopped == orig(::pl.list[post(::fresh)-1].freeit)
::stopped == orig(::term_help[post(::fresh)].key2)
::stopped == ::opts[::deathflag].value
::stopped == ::pl.list[::deathflag].freeit
::stopped == orig(::opts[post(::deathflag)].value)
::stopped == orig(::pl.list[post(::deathflag)].freeit)
::stopped == ::opts[orig(::param.output_flags)-1].sname
::stopped == ::opts[::utf8env-1].value
::stopped == ::opts[::pl.loop-1].value
::stopped == ::opts[::seeking].value
::stopped == ::opts[orig(::stopped)].value
::stopped == ::opts[orig(::paused)].value
::stopped == ::opts[orig(::control_file)].value
::stopped == ::opts[orig(::loptind)].value
::stopped == ::opts[orig(::loptind)-1].value
::stopped == ::opts[orig(::loptchr)].value
::stopped == ::opts[orig(::framenum)].value
::stopped == ::opts[orig(::htd.icy_interval)].value
::stopped == ::opts[orig(::OutputDescriptor)].value
::stopped == ::opts[orig(::intflag)].value
::stopped == ::opts[orig(::param.aggressive)].value
::stopped == ::opts[orig(::param.shuffle)].value
::stopped == ::opts[orig(::param.remote)].value
::stopped == ::opts[orig(::param.remote_err)].value
::stopped == ::opts[orig(::param.quiet)].value
::stopped == ::opts[orig(::param.xterm_title)].value
::stopped == ::opts[orig(::param.usebuffer)].value
::stopped == ::opts[orig(::param.verbose)].value
::stopped == ::opts[orig(::param.term_ctrl)-1].value
::stopped == ::opts[orig(::param.checkrange)].value
::stopped == ::opts[orig(::param.force_reopen)].value
::stopped == ::opts[orig(::param.test_cpu)].value
::stopped == ::opts[orig(::param.realtime)].value
::stopped == ::opts[orig(::param.listentry)].value
::stopped == ::opts[orig(::param.long_id3)].value
::stopped == ::opts[orig(::param.list_cpu)].value
::stopped == ::opts[orig(::param.timeout)].value
::stopped == ::opts[orig(::param.loop)-1].value
::stopped == ::opts[orig(::param.delay)].value
::stopped == ::opts[orig(::param.index)].value
::stopped == ::opts[orig(::param.down_sample)].value
::stopped == ::opts[orig(::param.rva)].value
::stopped == ::opts[orig(::param.halfspeed)].value
::stopped == ::opts[orig(::param.doublespeed)].value
::stopped == ::opts[orig(::param.start_frame)].value
::stopped == ::opts[orig(::param.force_rate)].value
::stopped == ::opts[orig(::param.talk_icy)-1].value
::stopped == ::opts[orig(::param.smooth)].value
::stopped == ::opts[orig(::param.keep_open)].value
::stopped == ::opts[orig(::param.force_utf8)].value
::stopped == ::opts[orig(::param.preframes)].value
::stopped == ::opts[orig(::param.preframes)-1].value
::stopped == ::opts[orig(::param.icy_interval)].value
::stopped == ::opts[orig(::global_premium)].value
::stopped == ::opts[orig(::frames_left)].value
::stopped == ::opts[orig(::fresh)-1].value
::stopped == ::opts[orig(::deathflag)].value
::stopped == ::opts[orig(::utf8env)-1].value
::stopped == ::opts[orig(::pl.loop)-1].value
::stopped == ::opts[orig(::seeking)].value
::stopped == ::pl.list[::utf8env].freeit
::stopped == ::pl.list[::utf8env-1].freeit
::stopped == ::term_help[::utf8env].key2
::stopped == orig(::opts[post(::utf8env)-1].value)
::stopped == orig(::pl.list[post(::utf8env)].freeit)
::stopped == orig(::pl.list[post(::utf8env)-1].freeit)
::stopped == orig(::term_help[post(::utf8env)].key2)
::stopped == ::pl.list[::pl.loop].freeit
::stopped == ::pl.list[::pl.loop-1].freeit
::stopped == ::term_help[::pl.loop].key2
::stopped == orig(::opts[post(::pl.loop)-1].value)
::stopped == orig(::pl.list[post(::pl.loop)].freeit)
::stopped == orig(::pl.list[post(::pl.loop)-1].freeit)
::stopped == orig(::term_help[post(::pl.loop)].key2)
::stopped == ::pl.list[::seeking].freeit
::stopped == ::pl.list[orig(::stopped)].freeit
::stopped == ::pl.list[orig(::paused)].freeit
::stopped == ::pl.list[orig(::control_file)].freeit
::stopped == ::pl.list[orig(::loptchr)].freeit
::stopped == ::pl.list[orig(::framenum)].freeit
::stopped == ::pl.list[orig(::htd.icy_interval)].freeit
::stopped == ::pl.list[orig(::OutputDescriptor)].freeit
::stopped == ::pl.list[orig(::intflag)].freeit
::stopped == ::pl.list[orig(::param.aggressive)].freeit
::stopped == ::pl.list[orig(::param.shuffle)].freeit
::stopped == ::pl.list[orig(::param.remote)].freeit
::stopped == ::pl.list[orig(::param.remote_err)].freeit
::stopped == ::pl.list[orig(::param.quiet)].freeit
::stopped == ::pl.list[orig(::param.xterm_title)].freeit
::stopped == ::pl.list[orig(::param.usebuffer)].freeit
::stopped == ::pl.list[orig(::param.verbose)].freeit
::stopped == ::pl.list[orig(::param.term_ctrl)].freeit
::stopped == ::pl.list[orig(::param.term_ctrl)-1].freeit
::stopped == ::pl.list[orig(::param.checkrange)].freeit
::stopped == ::pl.list[orig(::param.force_reopen)].freeit
::stopped == ::pl.list[orig(::param.test_cpu)].freeit
::stopped == ::pl.list[orig(::param.realtime)].freeit
::stopped == ::pl.list[orig(::param.listentry)].freeit
::stopped == ::pl.list[orig(::param.long_id3)].freeit
::stopped == ::pl.list[orig(::param.list_cpu)].freeit
::stopped == ::pl.list[orig(::param.timeout)].freeit
::stopped == ::pl.list[orig(::param.loop)].freeit
::stopped == ::pl.list[orig(::param.loop)-1].freeit
::stopped == ::pl.list[orig(::param.delay)].freeit
::stopped == ::pl.list[orig(::param.index)].freeit
::stopped == ::pl.list[orig(::param.down_sample)].freeit
::stopped == ::pl.list[orig(::param.rva)].freeit
::stopped == ::pl.list[orig(::param.halfspeed)].freeit
::stopped == ::pl.list[orig(::param.doublespeed)].freeit
::stopped == ::pl.list[orig(::param.start_frame)].freeit
::stopped == ::pl.list[orig(::param.force_rate)].freeit
::stopped == ::pl.list[orig(::param.talk_icy)].freeit
::stopped == ::pl.list[orig(::param.talk_icy)-1].freeit
::stopped == ::pl.list[orig(::param.smooth)].freeit
::stopped == ::pl.list[orig(::param.keep_open)].freeit
::stopped == ::pl.list[orig(::param.force_utf8)].freeit
::stopped == ::pl.list[orig(::param.icy_interval)].freeit
::stopped == ::pl.list[orig(::global_premium)].freeit
::stopped == ::pl.list[orig(::frames_left)].freeit
::stopped == ::pl.list[orig(::fresh)].freeit
::stopped == ::pl.list[orig(::fresh)-1].freeit
::stopped == ::pl.list[orig(::deathflag)].freeit
::stopped == ::pl.list[orig(::utf8env)].freeit
::stopped == ::pl.list[orig(::utf8env)-1].freeit
::stopped == ::pl.list[orig(::pl.loop)].freeit
::stopped == ::pl.list[orig(::pl.loop)-1].freeit
::stopped == ::pl.list[orig(::seeking)].freeit
::stopped == orig(::opts[post(::seeking)].value)
::stopped == orig(::pl.list[post(::seeking)].freeit)
::stopped == ::term_help[orig(::loptind)].key2
::stopped == ::term_help[orig(::loptind)-1].key2
::stopped == ::term_help[orig(::param.output_flags)].key2
::stopped == ::term_help[orig(::param.output_flags)-1].key2
::stopped == ::term_help[orig(::param.term_ctrl)].key2
::stopped == ::term_help[orig(::param.loop)].key2
::stopped == ::term_help[orig(::param.talk_icy)].key2
::stopped == ::term_help[orig(::param.preframes)].key2
::stopped == ::term_help[orig(::param.preframes)-1].key2
::stopped == ::term_help[orig(::fresh)].key2
::stopped == ::term_help[orig(::utf8env)].key2
::stopped == ::term_help[orig(::pl.loop)].key2
::stopped == orig(::opts[::stopped].value)
::stopped == orig(::pl.list[::stopped].freeit)
::stopped == orig(::opts[::paused].value)
::stopped == orig(::pl.list[::paused].freeit)
::stopped == orig(::opts[::control_file].value)
::stopped == orig(::pl.list[::control_file].freeit)
::stopped == orig(::opts[::loptind].value)
::stopped == orig(::opts[::loptind-1].value)
::stopped == orig(::term_help[::loptind].key2)
::stopped == orig(::term_help[::loptind-1].key2)
::stopped == orig(::opts[::loptchr].value)
::stopped == orig(::pl.list[::loptchr].freeit)
::stopped == orig(::opts[::framenum].value)
::stopped == orig(::pl.list[::framenum].freeit)
::stopped == orig(::opts[::htd.icy_interval].value)
::stopped == orig(::pl.list[::htd.icy_interval].freeit)
::stopped == orig(::opts[::OutputDescriptor].value)
::stopped == orig(::pl.list[::OutputDescriptor].freeit)
::stopped == orig(::opts[::intflag].value)
::stopped == orig(::pl.list[::intflag].freeit)
::stopped == orig(::opts[::param.aggressive].value)
::stopped == orig(::pl.list[::param.aggressive].freeit)
::stopped == orig(::opts[::param.shuffle].value)
::stopped == orig(::pl.list[::param.shuffle].freeit)
::stopped == orig(::opts[::param.remote].value)
::stopped == orig(::pl.list[::param.remote].freeit)
::stopped == orig(::opts[::param.remote_err].value)
::stopped == orig(::pl.list[::param.remote_err].freeit)
::stopped == orig(::opts[::param.quiet].value)
::stopped == orig(::pl.list[::param.quiet].freeit)
::stopped == orig(::opts[::param.xterm_title].value)
::stopped == orig(::pl.list[::param.xterm_title].freeit)
::stopped == orig(::opts[::param.usebuffer].value)
::stopped == orig(::pl.list[::param.usebuffer].freeit)
::stopped == orig(::opts[::param.verbose].value)
::stopped == orig(::pl.list[::param.verbose].freeit)
::stopped == orig(::opts[::param.output_flags-1].sname)
::stopped == orig(::term_help[::param.output_flags].key2)
::stopped == orig(::term_help[::param.output_flags-1].key2)
::stopped == orig(::opts[::param.term_ctrl-1].value)
::stopped == orig(::pl.list[::param.term_ctrl].freeit)
::stopped == orig(::pl.list[::param.term_ctrl-1].freeit)
::stopped == orig(::term_help[::param.term_ctrl].key2)
::stopped == orig(::opts[::param.checkrange].value)
::stopped == orig(::pl.list[::param.checkrange].freeit)
::stopped == orig(::opts[::param.force_reopen].value)
::stopped == orig(::pl.list[::param.force_reopen].freeit)
::stopped == orig(::opts[::param.test_cpu].value)
::stopped == orig(::pl.list[::param.test_cpu].freeit)
::stopped == orig(::opts[::param.realtime].value)
::stopped == orig(::pl.list[::param.realtime].freeit)
::stopped == orig(::opts[::param.listentry].value)
::stopped == orig(::pl.list[::param.listentry].freeit)
::stopped == orig(::opts[::param.long_id3].value)
::stopped == orig(::pl.list[::param.long_id3].freeit)
::stopped == orig(::opts[::param.list_cpu].value)
::stopped == orig(::pl.list[::param.list_cpu].freeit)
::stopped == orig(::opts[::param.timeout].value)
::stopped == orig(::pl.list[::param.timeout].freeit)
::stopped == orig(::opts[::param.loop-1].value)
::stopped == orig(::pl.list[::param.loop].freeit)
::stopped == orig(::pl.list[::param.loop-1].freeit)
::stopped == orig(::term_help[::param.loop].key2)
::stopped == orig(::opts[::param.delay].value)
::stopped == orig(::pl.list[::param.delay].freeit)
::stopped == orig(::opts[::param.index].value)
::stopped == orig(::pl.list[::param.index].freeit)
::stopped == orig(::opts[::param.down_sample].value)
::stopped == orig(::pl.list[::param.down_sample].freeit)
::stopped == orig(::opts[::param.rva].value)
::stopped == orig(::pl.list[::param.rva].freeit)
::stopped == orig(::opts[::param.halfspeed].value)
::stopped == orig(::pl.list[::param.halfspeed].freeit)
::stopped == orig(::opts[::param.doublespeed].value)
::stopped == orig(::pl.list[::param.doublespeed].freeit)
::stopped == orig(::opts[::param.start_frame].value)
::stopped == orig(::pl.list[::param.start_frame].freeit)
::stopped == orig(::opts[::param.force_rate].value)
::stopped == orig(::pl.list[::param.force_rate].freeit)
::stopped == orig(::opts[::param.talk_icy-1].value)
::stopped == orig(::pl.list[::param.talk_icy].freeit)
::stopped == orig(::pl.list[::param.talk_icy-1].freeit)
::stopped == orig(::term_help[::param.talk_icy].key2)
::stopped == orig(::opts[::param.smooth].value)
::stopped == orig(::pl.list[::param.smooth].freeit)
::stopped == orig(::opts[::param.keep_open].value)
::stopped == orig(::pl.list[::param.keep_open].freeit)
::stopped == orig(::opts[::param.force_utf8].value)
::stopped == orig(::pl.list[::param.force_utf8].freeit)
::stopped == orig(::opts[::param.preframes].value)
::stopped == orig(::opts[::param.preframes-1].value)
::stopped == orig(::term_help[::param.preframes].key2)
::stopped == orig(::term_help[::param.preframes-1].key2)
::stopped == orig(::opts[::param.icy_interval].value)
::stopped == orig(::pl.list[::param.icy_interval].freeit)
::stopped == orig(::opts[::global_premium].value)
::stopped == orig(::pl.list[::global_premium].freeit)
::stopped == orig(::opts[::frames_left].value)
::stopped == orig(::pl.list[::frames_left].freeit)
::stopped == orig(::opts[::fresh-1].value)
::stopped == orig(::pl.list[::fresh].freeit)
::stopped == orig(::pl.list[::fresh-1].freeit)
::stopped == orig(::term_help[::fresh].key2)
::stopped == orig(::opts[::deathflag].value)
::stopped == orig(::pl.list[::deathflag].freeit)
::stopped == orig(::opts[::utf8env-1].value)
::stopped == orig(::opts[::pl.loop-1].value)
::stopped == orig(::opts[::seeking].value)
::stopped == orig(::pl.list[::utf8env].freeit)
::stopped == orig(::pl.list[::utf8env-1].freeit)
::stopped == orig(::term_help[::utf8env].key2)
::stopped == orig(::pl.list[::pl.loop].freeit)
::stopped == orig(::pl.list[::pl.loop-1].freeit)
::stopped == orig(::term_help[::pl.loop].key2)
::stopped == orig(::pl.list[::seeking].freeit)
::rva_name == orig(::rva_name)
::outstream == ::pl.file
::outstream == orig(::outstream)
::outstream == orig(::pl.file)
::outstream == ::opts[::loptind].var
::outstream == ::opts[::loptind-1].var
::outstream == orig(::opts[post(::loptind)].var)
::outstream == orig(::opts[post(::loptind)-1].var)
::outstream == ::opts[::param.preframes].var
::outstream == ::opts[::param.preframes-1].var
::outstream == orig(::opts[post(::param.preframes)].var)
::outstream == orig(::opts[post(::param.preframes)-1].var)
::outstream == ::opts[orig(::loptind)].var
::outstream == ::opts[orig(::loptind)-1].var
::outstream == ::opts[orig(::param.preframes)].var
::outstream == ::opts[orig(::param.preframes)-1].var
::outstream == orig(::opts[::loptind].var)
::outstream == orig(::opts[::loptind-1].var)
::outstream == orig(::opts[::param.preframes].var)
::outstream == orig(::opts[::param.preframes-1].var)
::loptind == ::param.preframes
::loptind == orig(::loptind)
::loptind == orig(::param.preframes)
::loptind == ::opts[::loptind].flags
::loptind == ::opts[::loptind-1].flags
::loptind == orig(::opts[post(::loptind)].flags)
::loptind == orig(::opts[post(::loptind)-1].flags)
::loptind == ::opts[::param.output_flags].flags
::loptind == ::opts[::param.output_flags-1].flags
::loptind == ::opts[::param.output_flags].value
::loptind == orig(::opts[post(::param.output_flags)].flags)
::loptind == orig(::opts[post(::param.output_flags)-1].flags)
::loptind == orig(::opts[post(::param.output_flags)].value)
::loptind == ::opts[::param.term_ctrl].flags
::loptind == orig(::opts[post(::param.term_ctrl)].flags)
::loptind == ::opts[::param.loop].flags
::loptind == orig(::opts[post(::param.loop)].flags)
::loptind == ::opts[::param.talk_icy].flags
::loptind == orig(::opts[post(::param.talk_icy)].flags)
::loptind == ::opts[::param.preframes].flags
::loptind == ::opts[::param.preframes-1].flags
::loptind == orig(::opts[post(::param.preframes)].flags)
::loptind == orig(::opts[post(::param.preframes)-1].flags)
::loptind == ::opts[::fresh].flags
::loptind == orig(::opts[post(::fresh)].flags)
::loptind == ::opts[::utf8env].flags
::loptind == ::opts[::pl.loop].flags
::loptind == ::opts[orig(::loptind)].flags
::loptind == ::opts[orig(::loptind)-1].flags
::loptind == ::opts[orig(::param.output_flags)].flags
::loptind == ::opts[orig(::param.output_flags)-1].flags
::loptind == ::opts[orig(::param.term_ctrl)].flags
::loptind == ::opts[orig(::param.loop)].flags
::loptind == ::opts[orig(::param.talk_icy)].flags
::loptind == ::opts[orig(::param.preframes)].flags
::loptind == ::opts[orig(::param.preframes)-1].flags
::loptind == ::opts[orig(::fresh)].flags
::loptind == ::opts[orig(::utf8env)].flags
::loptind == ::opts[orig(::pl.loop)].flags
::loptind == ::opts[orig(::param.output_flags)].value
::loptind == orig(::opts[post(::utf8env)].flags)
::loptind == orig(::opts[post(::pl.loop)].flags)
::loptind == orig(::opts[::loptind].flags)
::loptind == orig(::opts[::loptind-1].flags)
::loptind == orig(::opts[::param.output_flags].flags)
::loptind == orig(::opts[::param.output_flags-1].flags)
::loptind == orig(::opts[::param.output_flags].value)
::loptind == orig(::opts[::param.term_ctrl].flags)
::loptind == orig(::opts[::param.loop].flags)
::loptind == orig(::opts[::param.talk_icy].flags)
::loptind == orig(::opts[::param.preframes].flags)
::loptind == orig(::opts[::param.preframes-1].flags)
::loptind == orig(::opts[::fresh].flags)
::loptind == orig(::opts[::utf8env].flags)
::loptind == orig(::opts[::pl.loop].flags)
::genre_table == orig(::genre_table)
::genre_count == orig(::genre_count)
::genre_count == size(::genre_table[])-1
::genre_count == orig(size(::genre_table[]))-1
::htd == orig(::htd)
::htd.content_type == orig(::htd.content_type)
::htd.content_type.size == ::param.appflags
::htd.content_type.fill == ::param.appflags
::htd.icy_name == orig(::htd.icy_name)
::htd.icy_name.size == ::param.appflags
::htd.icy_name.fill == ::param.appflags
::htd.icy_url == orig(::htd.icy_url)
::htd.icy_url.size == ::param.appflags
::htd.icy_url.fill == ::param.appflags
::htd.proxyhost == orig(::htd.proxyhost)
::htd.proxyhost.size == ::param.appflags
::htd.proxyhost.fill == ::param.appflags
::htd.proxyport == orig(::htd.proxyport)
::htd.proxyport.size == ::param.appflags
::htd.proxyport.fill == ::param.appflags
::htd.proxystate == orig(::htd.proxystate)
::param == orig(::param)
::param.output_flags == orig(::param.output_flags)
::param.term_ctrl == ::fresh
::param.loop == ::fresh
::param.frame_number == ::param.gain
::param.frame_number == orig(::param.frame_number)
::param.frame_number == orig(::param.gain)
::param.outscale == orig(::param.outscale)
::param.flags == orig(::param.flags)
::param.talk_icy == ::fresh
::param.resync_limit == orig(::param.resync_limit)
::param.pitch == ::param.device_buffer
::param.pitch == orig(::param.pitch)
::param.pitch == orig(::param.device_buffer)
::param.appflags == ::pl.entry
::param.appflags == ::pl.linebuf.size
::param.appflags == ::pl.linebuf.fill
::param.appflags == ::pl.dir.size
::param.appflags == ::pl.dir.fill
::param.appflags == orig(::htd.content_type.size)
::param.appflags == orig(::htd.content_type.fill)
::param.appflags == orig(::htd.icy_name.size)
::param.appflags == orig(::htd.icy_name.fill)
::param.appflags == orig(::htd.icy_url.size)
::param.appflags == orig(::htd.icy_url.fill)
::param.appflags == orig(::htd.proxyhost.size)
::param.appflags == orig(::htd.proxyhost.fill)
::param.appflags == orig(::htd.proxyport.size)
::param.appflags == orig(::htd.proxyport.fill)
::param.appflags == orig(::param.appflags)
::param.appflags == orig(::pl.entry)
::param.appflags == orig(::pl.playcount)
::param.appflags == orig(::pl.pos)
::param.appflags == orig(::pl.num)
::param.appflags == orig(::pl.linebuf.size)
::param.appflags == orig(::pl.linebuf.fill)
::param.appflags == orig(::pl.dir.size)
::param.appflags == orig(::pl.dir.fill)
::param.appflags == ::pl.list[::stopped].playcount
::param.appflags == orig(::pl.list[post(::stopped)].playcount)
::param.appflags == ::pl.list[::paused].playcount
::param.appflags == orig(::pl.list[post(::paused)].playcount)
::param.appflags == ::pl.list[::control_file].playcount
::param.appflags == orig(::pl.list[post(::control_file)].playcount)
::param.appflags == ::pl.list[::loptchr].playcount
::param.appflags == orig(::pl.list[post(::loptchr)].playcount)
::param.appflags == ::pl.list[::framenum].playcount
::param.appflags == orig(::pl.list[post(::framenum)].playcount)
::param.appflags == ::pl.list[::htd.icy_interval].playcount
::param.appflags == orig(::pl.list[post(::htd.icy_interval)].playcount)
::param.appflags == ::pl.list[::OutputDescriptor].playcount
::param.appflags == orig(::pl.list[post(::OutputDescriptor)].playcount)
::param.appflags == ::pl.list[::intflag].playcount
::param.appflags == orig(::pl.list[post(::intflag)].playcount)
::param.appflags == ::pl.list[::param.aggressive].playcount
::param.appflags == orig(::pl.list[post(::param.aggressive)].playcount)
::param.appflags == ::pl.list[::param.shuffle].playcount
::param.appflags == orig(::pl.list[post(::param.shuffle)].playcount)
::param.appflags == ::pl.list[::param.remote].playcount
::param.appflags == orig(::pl.list[post(::param.remote)].playcount)
::param.appflags == ::pl.list[::param.remote_err].playcount
::param.appflags == orig(::pl.list[post(::param.remote_err)].playcount)
::param.appflags == ::pl.list[::param.quiet].playcount
::param.appflags == orig(::pl.list[post(::param.quiet)].playcount)
::param.appflags == ::pl.list[::param.xterm_title].playcount
::param.appflags == orig(::pl.list[post(::param.xterm_title)].playcount)
::param.appflags == ::pl.list[::param.usebuffer].playcount
::param.appflags == orig(::pl.list[post(::param.usebuffer)].playcount)
::param.appflags == ::pl.list[::param.verbose].playcount
::param.appflags == orig(::pl.list[post(::param.verbose)].playcount)
::param.appflags == ::pl.list[::param.term_ctrl-1].playcount
::param.appflags == orig(::pl.list[post(::param.term_ctrl)].playcount)
::param.appflags == orig(::pl.list[post(::param.term_ctrl)-1].playcount)
::param.appflags == ::pl.list[::param.checkrange].playcount
::param.appflags == orig(::pl.list[post(::param.checkrange)].playcount)
::param.appflags == ::pl.list[::param.force_reopen].playcount
::param.appflags == orig(::pl.list[post(::param.force_reopen)].playcount)
::param.appflags == ::pl.list[::param.test_cpu].playcount
::param.appflags == orig(::pl.list[post(::param.test_cpu)].playcount)
::param.appflags == ::pl.list[::param.realtime].playcount
::param.appflags == orig(::pl.list[post(::param.realtime)].playcount)
::param.appflags == ::pl.list[::param.listentry].playcount
::param.appflags == orig(::pl.list[post(::param.listentry)].playcount)
::param.appflags == ::pl.list[::param.long_id3].playcount
::param.appflags == orig(::pl.list[post(::param.long_id3)].playcount)
::param.appflags == ::pl.list[::param.list_cpu].playcount
::param.appflags == orig(::pl.list[post(::param.list_cpu)].playcount)
::param.appflags == ::pl.list[::param.timeout].playcount
::param.appflags == orig(::pl.list[post(::param.timeout)].playcount)
::param.appflags == ::pl.list[::param.loop-1].playcount
::param.appflags == orig(::pl.list[post(::param.loop)].playcount)
::param.appflags == orig(::pl.list[post(::param.loop)-1].playcount)
::param.appflags == ::pl.list[::param.delay].playcount
::param.appflags == orig(::pl.list[post(::param.delay)].playcount)
::param.appflags == ::pl.list[::param.index].playcount
::param.appflags == orig(::pl.list[post(::param.index)].playcount)
::param.appflags == ::pl.list[::param.down_sample].playcount
::param.appflags == orig(::pl.list[post(::param.down_sample)].playcount)
::param.appflags == ::pl.list[::param.rva].playcount
::param.appflags == orig(::pl.list[post(::param.rva)].playcount)
::param.appflags == ::pl.list[::param.halfspeed].playcount
::param.appflags == orig(::pl.list[post(::param.halfspeed)].playcount)
::param.appflags == ::pl.list[::param.doublespeed].playcount
::param.appflags == orig(::pl.list[post(::param.doublespeed)].playcount)
::param.appflags == ::pl.list[::param.start_frame].playcount
::param.appflags == orig(::pl.list[post(::param.start_frame)].playcount)
::param.appflags == ::pl.list[::param.force_rate].playcount
::param.appflags == orig(::pl.list[post(::param.force_rate)].playcount)
::param.appflags == ::pl.list[::param.talk_icy-1].playcount
::param.appflags == orig(::pl.list[post(::param.talk_icy)].playcount)
::param.appflags == orig(::pl.list[post(::param.talk_icy)-1].playcount)
::param.appflags == ::pl.list[::param.smooth].playcount
::param.appflags == orig(::pl.list[post(::param.smooth)].playcount)
::param.appflags == ::pl.list[::param.keep_open].playcount
::param.appflags == orig(::pl.list[post(::param.keep_open)].playcount)
::param.appflags == ::pl.list[::param.force_utf8].playcount
::param.appflags == orig(::pl.list[post(::param.force_utf8)].playcount)
::param.appflags == ::pl.list[::param.icy_interval].playcount
::param.appflags == orig(::pl.list[post(::param.icy_interval)].playcount)
::param.appflags == ::pl.list[::global_premium].playcount
::param.appflags == orig(::pl.list[post(::global_premium)].playcount)
::param.appflags == ::pl.list[::frames_left].playcount
::param.appflags == orig(::pl.list[post(::frames_left)].playcount)
::param.appflags == ::pl.list[::fresh-1].playcount
::param.appflags == orig(::pl.list[post(::fresh)].playcount)
::param.appflags == orig(::pl.list[post(::fresh)-1].playcount)
::param.appflags == ::pl.list[::deathflag].playcount
::param.appflags == orig(::pl.list[post(::deathflag)].playcount)
::param.appflags == ::pl.list[::utf8env-1].playcount
::param.appflags == orig(::pl.list[post(::utf8env)].playcount)
::param.appflags == orig(::pl.list[post(::utf8env)-1].playcount)
::param.appflags == ::pl.list[::pl.loop-1].playcount
::param.appflags == orig(::pl.list[post(::pl.loop)].playcount)
::param.appflags == orig(::pl.list[post(::pl.loop)-1].playcount)
::param.appflags == ::pl.list[::seeking].playcount
::param.appflags == ::pl.list[orig(::stopped)].playcount
::param.appflags == ::pl.list[orig(::paused)].playcount
::param.appflags == ::pl.list[orig(::control_file)].playcount
::param.appflags == ::pl.list[orig(::loptchr)].playcount
::param.appflags == ::pl.list[orig(::framenum)].playcount
::param.appflags == ::pl.list[orig(::htd.icy_interval)].playcount
::param.appflags == ::pl.list[orig(::OutputDescriptor)].playcount
::param.appflags == ::pl.list[orig(::intflag)].playcount
::param.appflags == ::pl.list[orig(::param.aggressive)].playcount
::param.appflags == ::pl.list[orig(::param.shuffle)].playcount
::param.appflags == ::pl.list[orig(::param.remote)].playcount
::param.appflags == ::pl.list[orig(::param.remote_err)].playcount
::param.appflags == ::pl.list[orig(::param.quiet)].playcount
::param.appflags == ::pl.list[orig(::param.xterm_title)].playcount
::param.appflags == ::pl.list[orig(::param.usebuffer)].playcount
::param.appflags == ::pl.list[orig(::param.verbose)].playcount
::param.appflags == ::pl.list[orig(::param.term_ctrl)-1].playcount
::param.appflags == ::pl.list[orig(::param.checkrange)].playcount
::param.appflags == ::pl.list[orig(::param.force_reopen)].playcount
::param.appflags == ::pl.list[orig(::param.test_cpu)].playcount
::param.appflags == ::pl.list[orig(::param.realtime)].playcount
::param.appflags == ::pl.list[orig(::param.listentry)].playcount
::param.appflags == ::pl.list[orig(::param.long_id3)].playcount
::param.appflags == ::pl.list[orig(::param.list_cpu)].playcount
::param.appflags == ::pl.list[orig(::param.timeout)].playcount
::param.appflags == ::pl.list[orig(::param.loop)-1].playcount
::param.appflags == ::pl.list[orig(::param.delay)].playcount
::param.appflags == ::pl.list[orig(::param.index)].playcount
::param.appflags == ::pl.list[orig(::param.down_sample)].playcount
::param.appflags == ::pl.list[orig(::param.rva)].playcount
::param.appflags == ::pl.list[orig(::param.halfspeed)].playcount
::param.appflags == ::pl.list[orig(::param.doublespeed)].playcount
::param.appflags == ::pl.list[orig(::param.start_frame)].playcount
::param.appflags == ::pl.list[orig(::param.force_rate)].playcount
::param.appflags == ::pl.list[orig(::param.talk_icy)-1].playcount
::param.appflags == ::pl.list[orig(::param.smooth)].playcount
::param.appflags == ::pl.list[orig(::param.keep_open)].playcount
::param.appflags == ::pl.list[orig(::param.force_utf8)].playcount
::param.appflags == ::pl.list[orig(::param.icy_interval)].playcount
::param.appflags == ::pl.list[orig(::global_premium)].playcount
::param.appflags == ::pl.list[orig(::frames_left)].playcount
::param.appflags == ::pl.list[orig(::fresh)-1].playcount
::param.appflags == ::pl.list[orig(::deathflag)].playcount
::param.appflags == ::pl.list[orig(::utf8env)-1].playcount
::param.appflags == ::pl.list[orig(::pl.loop)-1].playcount
::param.appflags == ::pl.list[orig(::seeking)].playcount
::param.appflags == orig(::pl.list[post(::seeking)].playcount)
::param.appflags == orig(::pl.list[::stopped].playcount)
::param.appflags == orig(::pl.list[::paused].playcount)
::param.appflags == orig(::pl.list[::control_file].playcount)
::param.appflags == orig(::pl.list[::loptchr].playcount)
::param.appflags == orig(::pl.list[::framenum].playcount)
::param.appflags == orig(::pl.list[::htd.icy_interval].playcount)
::param.appflags == orig(::pl.list[::OutputDescriptor].playcount)
::param.appflags == orig(::pl.list[::intflag].playcount)
::param.appflags == orig(::pl.list[::param.aggressive].playcount)
::param.appflags == orig(::pl.list[::param.shuffle].playcount)
::param.appflags == orig(::pl.list[::param.remote].playcount)
::param.appflags == orig(::pl.list[::param.remote_err].playcount)
::param.appflags == orig(::pl.list[::param.quiet].playcount)
::param.appflags == orig(::pl.list[::param.xterm_title].playcount)
::param.appflags == orig(::pl.list[::param.usebuffer].playcount)
::param.appflags == orig(::pl.list[::param.verbose].playcount)
::param.appflags == orig(::pl.list[::param.term_ctrl].playcount)
::param.appflags == orig(::pl.list[::param.term_ctrl-1].playcount)
::param.appflags == orig(::pl.list[::param.checkrange].playcount)
::param.appflags == orig(::pl.list[::param.force_reopen].playcount)
::param.appflags == orig(::pl.list[::param.test_cpu].playcount)
::param.appflags == orig(::pl.list[::param.realtime].playcount)
::param.appflags == orig(::pl.list[::param.listentry].playcount)
::param.appflags == orig(::pl.list[::param.long_id3].playcount)
::param.appflags == orig(::pl.list[::param.list_cpu].playcount)
::param.appflags == orig(::pl.list[::param.timeout].playcount)
::param.appflags == orig(::pl.list[::param.loop].playcount)
::param.appflags == orig(::pl.list[::param.loop-1].playcount)
::param.appflags == orig(::pl.list[::param.delay].playcount)
::param.appflags == orig(::pl.list[::param.index].playcount)
::param.appflags == orig(::pl.list[::param.down_sample].playcount)
::param.appflags == orig(::pl.list[::param.rva].playcount)
::param.appflags == orig(::pl.list[::param.halfspeed].playcount)
::param.appflags == orig(::pl.list[::param.doublespeed].playcount)
::param.appflags == orig(::pl.list[::param.start_frame].playcount)
::param.appflags == orig(::pl.list[::param.force_rate].playcount)
::param.appflags == orig(::pl.list[::param.talk_icy].playcount)
::param.appflags == orig(::pl.list[::param.talk_icy-1].playcount)
::param.appflags == orig(::pl.list[::param.smooth].playcount)
::param.appflags == orig(::pl.list[::param.keep_open].playcount)
::param.appflags == orig(::pl.list[::param.force_utf8].playcount)
::param.appflags == orig(::pl.list[::param.icy_interval].playcount)
::param.appflags == orig(::pl.list[::global_premium].playcount)
::param.appflags == orig(::pl.list[::frames_left].playcount)
::param.appflags == orig(::pl.list[::fresh].playcount)
::param.appflags == orig(::pl.list[::fresh-1].playcount)
::param.appflags == orig(::pl.list[::deathflag].playcount)
::param.appflags == orig(::pl.list[::utf8env].playcount)
::param.appflags == orig(::pl.list[::utf8env-1].playcount)
::param.appflags == orig(::pl.list[::pl.loop].playcount)
::param.appflags == orig(::pl.list[::pl.loop-1].playcount)
::param.appflags == orig(::pl.list[::seeking].playcount)
::param.index_size == orig(::param.index_size)
::param.preload == orig(::param.preload)
::mh == orig(::mh)
::ao == orig(::ao)
::fresh == ::utf8env
::fresh == ::pl.loop
::fresh == orig(::param.term_ctrl)
::fresh == orig(::param.loop)
::fresh == orig(::param.talk_icy)
::fresh == orig(::fresh)
::fresh == orig(::utf8env)
::fresh == orig(::pl.loop)
::fresh == ::opts[::param.term_ctrl].value
::fresh == orig(::opts[post(::param.term_ctrl)].value)
::fresh == ::opts[::param.loop].value
::fresh == orig(::opts[post(::param.loop)].value)
::fresh == ::opts[::param.talk_icy].value
::fresh == orig(::opts[post(::param.talk_icy)].value)
::fresh == ::opts[::fresh].value
::fresh == orig(::opts[post(::fresh)].value)
::fresh == ::opts[::utf8env].value
::fresh == ::opts[::pl.loop].value
::fresh == ::opts[orig(::param.term_ctrl)].value
::fresh == ::opts[orig(::param.loop)].value
::fresh == ::opts[orig(::param.talk_icy)].value
::fresh == ::opts[orig(::fresh)].value
::fresh == ::opts[orig(::utf8env)].value
::fresh == ::opts[orig(::pl.loop)].value
::fresh == orig(::opts[post(::utf8env)].value)
::fresh == orig(::opts[post(::pl.loop)].value)
::fresh == orig(::opts[::param.term_ctrl].value)
::fresh == orig(::opts[::param.loop].value)
::fresh == orig(::opts[::param.talk_icy].value)
::fresh == orig(::opts[::fresh].value)
::fresh == orig(::opts[::utf8env].value)
::fresh == orig(::opts[::pl.loop].value)
::aux_out == orig(::aux_out)
::opts == orig(::opts)
::opts[] == orig(::opts[])
::opts[].sname == orig(::opts[].sname)
::opts[].flags == orig(::opts[].flags)
::opts[].func == orig(::opts[].func)
::opts[].var == orig(::opts[].var)
::opts[].value == orig(::opts[].value)
::pl == orig(::pl)
::pl.playcount == ::pl.pos
::pl.playcount == ::pl.list[::param.term_ctrl].playcount
::pl.playcount == ::pl.list[::param.loop].playcount
::pl.playcount == ::pl.list[::param.talk_icy].playcount
::pl.playcount == ::pl.list[::fresh].playcount
::pl.playcount == ::pl.list[::utf8env].playcount
::pl.playcount == ::pl.list[::pl.loop].playcount
::pl.playcount == ::pl.list[orig(::param.term_ctrl)].playcount
::pl.playcount == ::pl.list[orig(::param.loop)].playcount
::pl.playcount == ::pl.list[orig(::param.talk_icy)].playcount
::pl.playcount == ::pl.list[orig(::fresh)].playcount
::pl.playcount == ::pl.list[orig(::utf8env)].playcount
::pl.playcount == ::pl.list[orig(::pl.loop)].playcount
::pl.size == ::pl.alloc_step
::pl.size == orig(::pl.size)
::pl.size == orig(::pl.alloc_step)
::pl.fill == orig(::pl.fill)
::pl.list == orig(::pl.list)
::pl.list[] == orig(::pl.list[])
::pl.list[].freeit == orig(::pl.list[].freeit)
::pl.linebuf == orig(::pl.linebuf)
::pl.dir == orig(::pl.dir)
::pl.type == orig(::pl.type)
::term_help == orig(::term_help)
::term_help[] == orig(::term_help[])
::term_help[].key == orig(::term_help[].key)
::term_help[].key2 == orig(::term_help[].key2)
size(::rva_name[]) == size(::pl.list[])
size(::rva_name[]) == orig(size(::pl.list[]))
size(::rva_name[])-1 == ::opts[::param.output_flags-1].value
size(::rva_name[])-1 == orig(::opts[post(::param.output_flags)-1].value)
size(::rva_name[])-1 == ::opts[orig(::param.output_flags)-1].value
size(::rva_name[])-1 == orig(::opts[::param.output_flags-1].value)
::opts[::stopped] == ::opts[::param.term_ctrl-1]
::opts[::stopped] == orig(::opts[post(::param.term_ctrl)-1])
::opts[::stopped] == ::opts[::param.loop-1]
::opts[::stopped] == orig(::opts[post(::param.loop)-1])
::opts[::stopped] == ::opts[::param.talk_icy-1]
::opts[::stopped] == orig(::opts[post(::param.talk_icy)-1])
::opts[::stopped] == ::opts[::fresh-1]
::opts[::stopped] == orig(::opts[post(::fresh)-1])
::opts[::stopped] == ::opts[::utf8env-1]
::opts[::stopped] == ::opts[::pl.loop-1]
::opts[::stopped] == ::opts[orig(::param.term_ctrl)-1]
::opts[::stopped] == ::opts[orig(::param.loop)-1]
::opts[::stopped] == ::opts[orig(::param.talk_icy)-1]
::opts[::stopped] == ::opts[orig(::fresh)-1]
::opts[::stopped] == ::opts[orig(::utf8env)-1]
::opts[::stopped] == ::opts[orig(::pl.loop)-1]
::opts[::stopped] == orig(::opts[post(::utf8env)-1])
::opts[::stopped] == orig(::opts[post(::pl.loop)-1])
::opts[::stopped] == orig(::opts[::param.term_ctrl-1])
::opts[::stopped] == orig(::opts[::param.loop-1])
::opts[::stopped] == orig(::opts[::param.talk_icy-1])
::opts[::stopped] == orig(::opts[::fresh-1])
::opts[::stopped] == orig(::opts[::utf8env-1])
::opts[::stopped] == orig(::opts[::pl.loop-1])
::opts[::stopped].sname == ::opts[::param.term_ctrl-1].sname
::opts[::stopped].sname == orig(::opts[post(::param.term_ctrl)-1].sname)
::opts[::stopped].sname == ::opts[::param.loop-1].sname
::opts[::stopped].sname == orig(::opts[post(::param.loop)-1].sname)
::opts[::stopped].sname == ::opts[::param.talk_icy-1].sname
::opts[::stopped].sname == orig(::opts[post(::param.talk_icy)-1].sname)
::opts[::stopped].sname == ::opts[::fresh-1].sname
::opts[::stopped].sname == orig(::opts[post(::fresh)-1].sname)
::opts[::stopped].sname == ::opts[::utf8env-1].sname
::opts[::stopped].sname == ::opts[::pl.loop-1].sname
::opts[::stopped].sname == ::opts[orig(::param.term_ctrl)-1].sname
::opts[::stopped].sname == ::opts[orig(::param.loop)-1].sname
::opts[::stopped].sname == ::opts[orig(::param.talk_icy)-1].sname
::opts[::stopped].sname == ::opts[orig(::fresh)-1].sname
::opts[::stopped].sname == ::opts[orig(::utf8env)-1].sname
::opts[::stopped].sname == ::opts[orig(::pl.loop)-1].sname
::opts[::stopped].sname == orig(::opts[post(::utf8env)-1].sname)
::opts[::stopped].sname == orig(::opts[post(::pl.loop)-1].sname)
::opts[::stopped].sname == orig(::opts[::param.term_ctrl-1].sname)
::opts[::stopped].sname == orig(::opts[::param.loop-1].sname)
::opts[::stopped].sname == orig(::opts[::param.talk_icy-1].sname)
::opts[::stopped].sname == orig(::opts[::fresh-1].sname)
::opts[::stopped].sname == orig(::opts[::utf8env-1].sname)
::opts[::stopped].sname == orig(::opts[::pl.loop-1].sname)
::opts[::stopped].flags == ::opts[::param.term_ctrl-1].flags
::opts[::stopped].flags == orig(::opts[post(::param.term_ctrl)-1].flags)
::opts[::stopped].flags == ::opts[::param.loop-1].flags
::opts[::stopped].flags == orig(::opts[post(::param.loop)-1].flags)
::opts[::stopped].flags == ::opts[::param.talk_icy-1].flags
::opts[::stopped].flags == orig(::opts[post(::param.talk_icy)-1].flags)
::opts[::stopped].flags == ::opts[::fresh-1].flags
::opts[::stopped].flags == orig(::opts[post(::fresh)-1].flags)
::opts[::stopped].flags == ::opts[::utf8env-1].flags
::opts[::stopped].flags == ::opts[::pl.loop-1].flags
::opts[::stopped].flags == ::opts[orig(::param.term_ctrl)-1].flags
::opts[::stopped].flags == ::opts[orig(::param.loop)-1].flags
::opts[::stopped].flags == ::opts[orig(::param.talk_icy)-1].flags
::opts[::stopped].flags == ::opts[orig(::fresh)-1].flags
::opts[::stopped].flags == ::opts[orig(::utf8env)-1].flags
::opts[::stopped].flags == ::opts[orig(::pl.loop)-1].flags
::opts[::stopped].flags == orig(::opts[post(::utf8env)-1].flags)
::opts[::stopped].flags == orig(::opts[post(::pl.loop)-1].flags)
::opts[::stopped].flags == orig(::opts[::param.term_ctrl-1].flags)
::opts[::stopped].flags == orig(::opts[::param.loop-1].flags)
::opts[::stopped].flags == orig(::opts[::param.talk_icy-1].flags)
::opts[::stopped].flags == orig(::opts[::fresh-1].flags)
::opts[::stopped].flags == orig(::opts[::utf8env-1].flags)
::opts[::stopped].flags == orig(::opts[::pl.loop-1].flags)
::opts[::stopped].func == ::opts[::param.term_ctrl].func
::opts[::stopped].func == ::opts[::param.term_ctrl-1].func
::opts[::stopped].func == orig(::opts[post(::param.term_ctrl)].func)
::opts[::stopped].func == orig(::opts[post(::param.term_ctrl)-1].func)
::opts[::stopped].func == ::opts[::param.loop].func
::opts[::stopped].func == ::opts[::param.loop-1].func
::opts[::stopped].func == orig(::opts[post(::param.loop)].func)
::opts[::stopped].func == orig(::opts[post(::param.loop)-1].func)
::opts[::stopped].func == ::opts[::param.talk_icy].func
::opts[::stopped].func == ::opts[::param.talk_icy-1].func
::opts[::stopped].func == orig(::opts[post(::param.talk_icy)].func)
::opts[::stopped].func == orig(::opts[post(::param.talk_icy)-1].func)
::opts[::stopped].func == ::opts[::fresh].func
::opts[::stopped].func == ::opts[::fresh-1].func
::opts[::stopped].func == orig(::opts[post(::fresh)].func)
::opts[::stopped].func == orig(::opts[post(::fresh)-1].func)
::opts[::stopped].func == ::opts[::utf8env].func
::opts[::stopped].func == ::opts[::utf8env-1].func
::opts[::stopped].func == ::opts[::pl.loop].func
::opts[::stopped].func == ::opts[::pl.loop-1].func
::opts[::stopped].func == ::opts[orig(::param.term_ctrl)].func
::opts[::stopped].func == ::opts[orig(::param.term_ctrl)-1].func
::opts[::stopped].func == ::opts[orig(::param.loop)].func
::opts[::stopped].func == ::opts[orig(::param.loop)-1].func
::opts[::stopped].func == ::opts[orig(::param.talk_icy)].func
::opts[::stopped].func == ::opts[orig(::param.talk_icy)-1].func
::opts[::stopped].func == ::opts[orig(::fresh)].func
::opts[::stopped].func == ::opts[orig(::fresh)-1].func
::opts[::stopped].func == ::opts[orig(::utf8env)].func
::opts[::stopped].func == ::opts[orig(::utf8env)-1].func
::opts[::stopped].func == ::opts[orig(::pl.loop)].func
::opts[::stopped].func == ::opts[orig(::pl.loop)-1].func
::opts[::stopped].func == orig(::opts[post(::utf8env)].func)
::opts[::stopped].func == orig(::opts[post(::utf8env)-1].func)
::opts[::stopped].func == orig(::opts[post(::pl.loop)].func)
::opts[::stopped].func == orig(::opts[post(::pl.loop)-1].func)
::opts[::stopped].func == orig(::opts[::param.term_ctrl].func)
::opts[::stopped].func == orig(::opts[::param.term_ctrl-1].func)
::opts[::stopped].func == orig(::opts[::param.loop].func)
::opts[::stopped].func == orig(::opts[::param.loop-1].func)
::opts[::stopped].func == orig(::opts[::param.talk_icy].func)
::opts[::stopped].func == orig(::opts[::param.talk_icy-1].func)
::opts[::stopped].func == orig(::opts[::fresh].func)
::opts[::stopped].func == orig(::opts[::fresh-1].func)
::opts[::stopped].func == orig(::opts[::utf8env].func)
::opts[::stopped].func == orig(::opts[::utf8env-1].func)
::opts[::stopped].func == orig(::opts[::pl.loop].func)
::opts[::stopped].func == orig(::opts[::pl.loop-1].func)
::opts[::stopped].var == ::opts[::param.term_ctrl-1].var
::opts[::stopped].var == orig(::opts[post(::param.term_ctrl)-1].var)
::opts[::stopped].var == ::opts[::param.loop-1].var
::opts[::stopped].var == orig(::opts[post(::param.loop)-1].var)
::opts[::stopped].var == ::opts[::param.talk_icy-1].var
::opts[::stopped].var == orig(::opts[post(::param.talk_icy)-1].var)
::opts[::stopped].var == ::opts[::fresh-1].var
::opts[::stopped].var == orig(::opts[post(::fresh)-1].var)
::opts[::stopped].var == ::opts[::utf8env-1].var
::opts[::stopped].var == ::opts[::pl.loop-1].var
::opts[::stopped].var == ::opts[orig(::param.term_ctrl)-1].var
::opts[::stopped].var == ::opts[orig(::param.loop)-1].var
::opts[::stopped].var == ::opts[orig(::param.talk_icy)-1].var
::opts[::stopped].var == ::opts[orig(::fresh)-1].var
::opts[::stopped].var == ::opts[orig(::utf8env)-1].var
::opts[::stopped].var == ::opts[orig(::pl.loop)-1].var
::opts[::stopped].var == orig(::opts[post(::utf8env)-1].var)
::opts[::stopped].var == orig(::opts[post(::pl.loop)-1].var)
::opts[::stopped].var == orig(::opts[::param.term_ctrl-1].var)
::opts[::stopped].var == orig(::opts[::param.loop-1].var)
::opts[::stopped].var == orig(::opts[::param.talk_icy-1].var)
::opts[::stopped].var == orig(::opts[::fresh-1].var)
::opts[::stopped].var == orig(::opts[::utf8env-1].var)
::opts[::stopped].var == orig(::opts[::pl.loop-1].var)
::pl.list[::stopped] == ::pl.list[::param.term_ctrl-1]
::pl.list[::stopped] == orig(::pl.list[post(::param.term_ctrl)-1])
::pl.list[::stopped] == ::pl.list[::param.loop-1]
::pl.list[::stopped] == orig(::pl.list[post(::param.loop)-1])
::pl.list[::stopped] == ::pl.list[::param.talk_icy-1]
::pl.list[::stopped] == orig(::pl.list[post(::param.talk_icy)-1])
::pl.list[::stopped] == ::pl.list[::fresh-1]
::pl.list[::stopped] == orig(::pl.list[post(::fresh)-1])
::pl.list[::stopped] == ::pl.list[::utf8env-1]
::pl.list[::stopped] == orig(::pl.list[post(::utf8env)-1])
::pl.list[::stopped] == ::pl.list[::pl.loop-1]
::pl.list[::stopped] == orig(::pl.list[post(::pl.loop)-1])
::pl.list[::stopped] == ::pl.list[orig(::param.term_ctrl)-1]
::pl.list[::stopped] == ::pl.list[orig(::param.loop)-1]
::pl.list[::stopped] == ::pl.list[orig(::param.talk_icy)-1]
::pl.list[::stopped] == ::pl.list[orig(::fresh)-1]
::pl.list[::stopped] == ::pl.list[orig(::utf8env)-1]
::pl.list[::stopped] == ::pl.list[orig(::pl.loop)-1]
::pl.list[::stopped] == orig(::pl.list[::param.term_ctrl-1])
::pl.list[::stopped] == orig(::pl.list[::param.loop-1])
::pl.list[::stopped] == orig(::pl.list[::param.talk_icy-1])
::pl.list[::stopped] == orig(::pl.list[::fresh-1])
::pl.list[::stopped] == orig(::pl.list[::utf8env-1])
::pl.list[::stopped] == orig(::pl.list[::pl.loop-1])
::term_help[::stopped] == ::term_help[::param.term_ctrl-1]
::term_help[::stopped] == orig(::term_help[post(::param.term_ctrl)-1])
::term_help[::stopped] == ::term_help[::param.loop-1]
::term_help[::stopped] == orig(::term_help[post(::param.loop)-1])
::term_help[::stopped] == ::term_help[::param.talk_icy-1]
::term_help[::stopped] == orig(::term_help[post(::param.talk_icy)-1])
::term_help[::stopped] == ::term_help[::fresh-1]
::term_help[::stopped] == orig(::term_help[post(::fresh)-1])
::term_help[::stopped] == ::term_help[::utf8env-1]
::term_help[::stopped] == orig(::term_help[post(::utf8env)-1])
::term_help[::stopped] == ::term_help[::pl.loop-1]
::term_help[::stopped] == orig(::term_help[post(::pl.loop)-1])
::term_help[::stopped] == ::term_help[orig(::param.term_ctrl)-1]
::term_help[::stopped] == ::term_help[orig(::param.loop)-1]
::term_help[::stopped] == ::term_help[orig(::param.talk_icy)-1]
::term_help[::stopped] == ::term_help[orig(::fresh)-1]
::term_help[::stopped] == ::term_help[orig(::utf8env)-1]
::term_help[::stopped] == ::term_help[orig(::pl.loop)-1]
::term_help[::stopped] == orig(::term_help[::param.term_ctrl-1])
::term_help[::stopped] == orig(::term_help[::param.loop-1])
::term_help[::stopped] == orig(::term_help[::param.talk_icy-1])
::term_help[::stopped] == orig(::term_help[::fresh-1])
::term_help[::stopped] == orig(::term_help[::utf8env-1])
::term_help[::stopped] == orig(::term_help[::pl.loop-1])
::term_help[::stopped].key == ::opts[::loptind].sname
::term_help[::stopped].key == orig(::opts[post(::loptind)].sname)
::term_help[::stopped].key == ::term_help[::param.term_ctrl-1].key
::term_help[::stopped].key == orig(::term_help[post(::param.term_ctrl)-1].key)
::term_help[::stopped].key == ::term_help[::param.loop-1].key
::term_help[::stopped].key == orig(::term_help[post(::param.loop)-1].key)
::term_help[::stopped].key == ::term_help[::param.talk_icy-1].key
::term_help[::stopped].key == orig(::term_help[post(::param.talk_icy)-1].key)
::term_help[::stopped].key == ::opts[::param.preframes].sname
::term_help[::stopped].key == orig(::opts[post(::param.preframes)].sname)
::term_help[::stopped].key == ::term_help[::fresh-1].key
::term_help[::stopped].key == orig(::term_help[post(::fresh)-1].key)
::term_help[::stopped].key == ::opts[orig(::loptind)].sname
::term_help[::stopped].key == ::opts[orig(::param.preframes)].sname
::term_help[::stopped].key == ::term_help[::utf8env-1].key
::term_help[::stopped].key == orig(::term_help[post(::utf8env)-1].key)
::term_help[::stopped].key == ::term_help[::pl.loop-1].key
::term_help[::stopped].key == orig(::term_help[post(::pl.loop)-1].key)
::term_help[::stopped].key == ::term_help[orig(::param.term_ctrl)-1].key
::term_help[::stopped].key == ::term_help[orig(::param.loop)-1].key
::term_help[::stopped].key == ::term_help[orig(::param.talk_icy)-1].key
::term_help[::stopped].key == ::term_help[orig(::fresh)-1].key
::term_help[::stopped].key == ::term_help[orig(::utf8env)-1].key
::term_help[::stopped].key == ::term_help[orig(::pl.loop)-1].key
::term_help[::stopped].key == orig(::opts[::loptind].sname)
::term_help[::stopped].key == orig(::term_help[::param.term_ctrl-1].key)
::term_help[::stopped].key == orig(::term_help[::param.loop-1].key)
::term_help[::stopped].key == orig(::term_help[::param.talk_icy-1].key)
::term_help[::stopped].key == orig(::opts[::param.preframes].sname)
::term_help[::stopped].key == orig(::term_help[::fresh-1].key)
::term_help[::stopped].key == orig(::term_help[::utf8env-1].key)
::term_help[::stopped].key == orig(::term_help[::pl.loop-1].key)
::term_help[::stopped].key2 == ::term_help[::param.term_ctrl-1].key2
::term_help[::stopped].key2 == orig(::term_help[post(::param.term_ctrl)-1].key2)
::term_help[::stopped].key2 == ::term_help[::param.loop-1].key2
::term_help[::stopped].key2 == orig(::term_help[post(::param.loop)-1].key2)
::term_help[::stopped].key2 == ::term_help[::param.talk_icy-1].key2
::term_help[::stopped].key2 == orig(::term_help[post(::param.talk_icy)-1].key2)
::term_help[::stopped].key2 == ::term_help[::fresh-1].key2
::term_help[::stopped].key2 == orig(::term_help[post(::fresh)-1].key2)
::term_help[::stopped].key2 == ::term_help[::utf8env-1].key2
::term_help[::stopped].key2 == orig(::term_help[post(::utf8env)-1].key2)
::term_help[::stopped].key2 == ::term_help[::pl.loop-1].key2
::term_help[::stopped].key2 == orig(::term_help[post(::pl.loop)-1].key2)
::term_help[::stopped].key2 == ::term_help[orig(::param.term_ctrl)-1].key2
::term_help[::stopped].key2 == ::term_help[orig(::param.loop)-1].key2
::term_help[::stopped].key2 == ::term_help[orig(::param.talk_icy)-1].key2
::term_help[::stopped].key2 == ::term_help[orig(::fresh)-1].key2
::term_help[::stopped].key2 == ::term_help[orig(::utf8env)-1].key2
::term_help[::stopped].key2 == ::term_help[orig(::pl.loop)-1].key2
::term_help[::stopped].key2 == orig(::term_help[::param.term_ctrl-1].key2)
::term_help[::stopped].key2 == orig(::term_help[::param.loop-1].key2)
::term_help[::stopped].key2 == orig(::term_help[::param.talk_icy-1].key2)
::term_help[::stopped].key2 == orig(::term_help[::fresh-1].key2)
::term_help[::stopped].key2 == orig(::term_help[::utf8env-1].key2)
::term_help[::stopped].key2 == orig(::term_help[::pl.loop-1].key2)
::opts[::param.output_flags].func == ::opts[::param.output_flags-1].func
::opts[::param.output_flags].func == orig(::opts[post(::param.output_flags)-1].func)
::opts[::param.output_flags].func == ::opts[orig(::param.output_flags)-1].func
::opts[::param.output_flags].func == orig(::opts[::param.output_flags-1].func)
::opts[::param.output_flags].var == ::opts[::param.output_flags-1].var
::opts[::param.output_flags].var == orig(::opts[post(::param.output_flags)-1].var)
::opts[::param.output_flags].var == ::opts[orig(::param.output_flags)-1].var
::opts[::param.output_flags].var == orig(::opts[::param.output_flags-1].var)
::stopped == 0
::remote_header_help == "S <mpeg-version> <layer> <sampling freq> <mode(stereo/mono/...)> <mode_ext> <framesize> <stereo> <copyright> <error_protected> <emphasis> <bitrate> <extension> <vbr(0/1=yes/no)>"
::rva_name has only one value
::rva_name[] == [off, mix, album]
::rva_name[] elements one of { "album", "mix", "off" }
::outstream == null
::loptind == 4
::genre_table has only one value
::genre_table[] == [Blues, Classic Rock, Country, Dance, Disco, Funk, Grunge, Hip-Hop, Jazz, Metal, New Age, Oldies, Other, Pop, R&B, Rap, Reggae, Rock, Techno, Industrial, Alternative, Ska, Death Metal, Pranks, Soundtrack, Euro-Techno, Ambient, Trip-Hop, Vocal, Jazz+Funk, Fusion, Trance, Classical, Instrumental, Acid, House, Game, Sound Clip, Gospel, Noise, AlternRock, Bass, Soul, Punk, Space, Meditative, Instrumental Pop, Instrumental Rock, Ethnic, Gothic, Darkwave, Techno-Industrial, Electronic, Pop-Folk, Eurodance, Dream, Southern Rock, Comedy, Cult, Gangsta, Top 40, Christian Rap, Pop/Funk, Jungle, Native American, Cabaret, New Wave, Psychedelic, Rave, Showtunes, Trailer, Lo-Fi, Tribal, Acid Punk, Acid Jazz, Polka, Retro, Musical, Rock & Roll, Hard Rock, Folk, Folk/Rock, National folk, Swing, Fast-fusion, Bebob, Latin, Revival, Celtic, Bluegrass, Avantgarde, Gothic Rock, Progressive Rock, Psychedelic Rock, Symphonic Rock, Slow Rock, Big Band, Chorus, Easy Listening, Acoustic, Humour, Speech, Chanson, Opera, Chamber Music, Sonata, Symphony, Booty Bass, Primus, Porn Groove, Satire, Slow Jam, Club, Tango, Samba, Folklore, Ballad, Powder Ballad, Rhythmic Soul, Freestyle, Duet, Punk Rock, Drum Solo, A Capella, Euro-House, Dance Hall, Goa, Drum & Bass, Club House, Hardcore, Terror, Indie, BritPop, NegerPunk, Polsk Punk, Beat, Christian Gangsta, Heavy Metal, Black Metal, Crossover, Contemporary C, Christian Rock, Merengue, Salsa, Thrash Metal, Anime, JPop, SynthPop]
::binpath == "."
::htd has only one value
::htd.content_type has only one value
::htd.icy_name has only one value
::htd.icy_url has only one value
::htd.proxyhost has only one value
::htd.proxyport has only one value
::htd.proxystate == 0
::param has only one value
::param.output_module == "alsa,oss,nas"
::param.output_flags == 16
::param.term_usr1 == "s"
::param.term_usr2 == "f"
::param.frame_number == -1
::param.outscale == 32768
::param.flags == 33088
::param.resync_limit == 1024
::param.pitch == 0.0
::param.appflags == 0
::param.index_size == 1000
::param.preload == 0.2
::mh has only one value
::ao has only one value
::prgName == "mpg123"
::fresh == 1
::aux_out has only one value
::opts has only one value
::opts[] contains no nulls and has only one value, of length 96
::opts[].sname == [107, 50, 52, 116, 115, 83, 79, 99, 118, 113, 121, 0, 48, 0, 49, 0, 109, 0, 0, 0, 0, 103, 114, 0, 0, 0, 0, 0, 111, 0, 97, 102, 110, 67, 0, 0, 0, 98, 0, 0, 82, 0, 100, 104, 112, 64, 122, 90, 69, 0, 0, 0, 0, 117, 84, 0, 119, 0, 0, 0, 0, 0, 63, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 105, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 101, 0, 0, 0, 0, 0, 0, 0, 0]
::opts[].sname elements >= 0
::opts[].flags == [9, 4, 4, 4, 4, 4, 3, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 9, 4, 4, 0, 0, 0, 3, 0, 3, 9, 9, 4, 4, 3, 3, 9, 4, 17, 4, 4, 9, 9, 3, 3, 4, 4, 3, 4, 3, 4, 4, 3, 8, 4, 3, 3, 3, 4, 4, 4, 0, 0, 0, 9, 4, 4, 4, 4, 4, 4, 4, 3, 9, 9, 4, 5, 9, 17, 4, 4, 4, 4, 4, 9, 4, 3, 9, 4, 3, 9, 4, 3, 17, 0]
::opts[].flags elements >= 0
::opts[].func has only one value, of length 96
::opts[].var has only one value, of length 96
::opts[].value == [0, 1, 2, 0, 0, 0, 0, 1, 0, 0, 128, 128, 1, 1, 2, 2, 4, 4, 4, 8, 1, 0, 0, 16, 1024, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 2, 1, 2, 0, 1, 1, 0, 1, 1, 0, 0, 0, 64, 64, 16384, 0, 0, 0, 0, 4, 1, 1, 2, 2, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 2, 1, 1, 512, 0, 256, 0, 0, 8192, 0, 0, 4096, 0, 0, 0]
::opts[].value elements >= 0
::pl has only one value
::pl.playcount == 1
::pl.size == 10
::pl.fill == 3
::pl.num == 2
::pl.list has only one value
::pl.list[] contains no nulls and has only one value, of length 3
::pl.list[].url == [ImmanuelCasto-Dagrandesaraifrio.mp3, ImmanuelCasto-Dagrandesaraifrio (copy 1).mp3, ImmanuelCasto-Dagrandesaraifrio (copy 2).mp3]
::pl.list[].url elements one of { "ImmanuelCasto-Dagrandesaraifrio (copy 1).mp3", "ImmanuelCasto-Dagrandesaraifrio (copy 2).mp3", "ImmanuelCasto-Dagrandesaraifrio.mp3" }
::pl.list[].freeit == [0, 0, 0]
::pl.list[].freeit elements == 0
::pl.list[].playcount == [0, 1, 0]
::pl.list[].playcount elements one of { 0, 1 }
::pl.linebuf has only one value
::pl.dir has only one value
::pl.type == 0
::term_help has only one value
::term_help[] contains no nulls and has only one value, of length 26
::term_help[].key == [115, 102, 100, 93, 91, 98, 112, 46, 44, 58, 59, 62, 60, 43, 45, 114, 118, 108, 116, 109, 104, 113, 99, 120, 119, 107]
::term_help[].key2 == [32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 67, 88, 0, 0]
::term_help[].key2 elements >= 0
::term_help[].desc == [interrupt/restart playback (i.e. '(un)pause'), next track, previous track, next directory (next track until directory part changes), previous directory (previous track until directory part changes), back to beginning of track, loop around current position (don't combine with output buffer), forward, rewind, fast forward, fast rewind, fine forward, fine rewind, volume up, volume down, RVA switch, verbose switch, list current playlist, indicating current track there, display tag info (again), print MPEG header info (again), this help, quit, pitch up (small step, big step), pitch down (small step, big step), reset pitch to zero, print out current position in playlist and track, for the benefit of some external tool to store bookmarks]
return == "ImmanuelCasto-Dagrandesaraifrio (copy 1).mp3"
size(::rva_name[]) == 3
size(::genre_table[]) == 148
size(::opts[]) == 96
size(::term_help[]) == 26
::opts[::stopped] has only one value
::opts[::stopped].sname == 107
::opts[::stopped].flags == 9
::opts[::stopped].func == null
::opts[::stopped].var has only one value
::pl.list[::stopped] has only one value
::term_help[::stopped] has only one value
::term_help[::stopped].key == 115
::term_help[::stopped].key2 == 32
::opts[::loptind] has only one value
::opts[::loptind-1] has only one value
::opts[::loptind-1].sname == 116
::opts[::loptind].func has only one value
::opts[::loptind-1].func has only one value
::term_help[::loptind] has only one value
::term_help[::loptind-1] has only one value
::term_help[::loptind].key == 91
::term_help[::loptind-1].key == 93
::opts[::param.output_flags] has only one value
::opts[::param.output_flags-1] has only one value
::opts[::param.output_flags].sname == 109
::opts[::param.output_flags].func has only one value
::opts[::param.output_flags].var has only one value
::term_help[::param.output_flags] has only one value
::term_help[::param.output_flags-1] has only one value
::term_help[::param.output_flags].key == 118
::term_help[::param.output_flags-1].key == 114
::opts[::fresh] has only one value
::opts[::fresh].sname == 50
::opts[::fresh].var has only one value
::pl.list[::fresh] has only one value
::term_help[::fresh] has only one value
::term_help[::fresh].key == 102
::stopped in ::opts[].flags
::pl.list[].freeit elements == ::stopped
::remote_header_help == orig(::remote_header_help)
::binpath == ::fullprogname
::binpath == orig(::binpath)
::binpath == orig(::fullprogname)
::param.output_module == orig(::param.output_module)
::param.output_flags in ::opts[].value
::param.term_usr1 == orig(::param.term_usr1)
::param.term_usr2 == orig(::param.term_usr2)
::param.resync_limit in ::opts[].value
orig(::pl.list[].playcount) elements == ::param.appflags
::param.name == ::prgName
::prgName == orig(::param.name)
::prgName == orig(::prgName)
::term_help[::param.output_flags].key in ::opts[].sname
::term_help[::param.output_flags-1].key in ::opts[].sname
::term_help[::fresh].key in ::opts[].sname
size(::rva_name[]) in ::opts[].flags
return in ::pl.list[].url
::opts[::stopped].sname in ::term_help[].key
::opts[::loptind-1].sname in ::term_help[].key
::opts[::param.output_flags].sname in ::term_help[].key
===========================================================================
..next_track():::ENTER
::stopped == ::paused
::stopped == ::control_file
::stopped == ::loptchr
::stopped == ::skip_tracks
::stopped == ::network_sockets_used
::stopped == ::new_header
::stopped == ::frameflag
::stopped == ::appflag
::stopped == ::htd.icy_interval
::stopped == ::OutputDescriptor
::stopped == ::intflag
::stopped == ::param.aggressive
::stopped == ::param.shuffle
::stopped == ::param.remote
::stopped == ::param.remote_err
::stopped == ::param.quiet
::stopped == ::param.xterm_title
::stopped == ::param.usebuffer
::stopped == ::param.verbose
::stopped == ::param.checkrange
::stopped == ::param.force_reopen
::stopped == ::param.test_cpu
::stopped == ::param.realtime
::stopped == ::param.listentry
::stopped == ::param.long_id3
::stopped == ::param.list_cpu
::stopped == ::param.timeout
::stopped == ::param.delay
::stopped == ::param.index
::stopped == ::param.down_sample
::stopped == ::param.rva
::stopped == ::param.halfspeed
::stopped == ::param.doublespeed
::stopped == ::param.start_frame
::stopped == ::param.force_rate
::stopped == ::param.smooth
::stopped == ::param.keep_open
::stopped == ::param.force_utf8
::stopped == ::param.icy_interval
::stopped == ::global_premium
::stopped == ::fresh
::stopped == ::deathflag
::stopped == ::seeking
::stopped == size(::argv[])-1
::stopped == ::opts[::stopped].value
::stopped == ::opts[::paused].value
::stopped == ::opts[::control_file].value
::stopped == ::opts[::loptind].value
::stopped == ::opts[::loptind-1].value
::stopped == ::term_help[::loptind].key2
::stopped == ::term_help[::loptind-1].key2
::stopped == ::opts[::loptchr].value
::stopped == ::opts[::output_propflags-1].value
::stopped == ::term_help[::output_propflags].key2
::stopped == ::opts[::skip_tracks].value
::stopped == ::opts[::network_sockets_used].value
::stopped == ::opts[::argc].value
::stopped == ::opts[::argc-1].value
::stopped == ::term_help[::argc].key2
::stopped == ::term_help[::argc-1].key2
::stopped == ::opts[::cleanup_mpg123-1].value
::stopped == ::term_help[::cleanup_mpg123].key2
::stopped == ::opts[::new_header].value
::stopped == ::opts[::frameflag].value
::stopped == ::opts[::appflag].value
::stopped == ::opts[::htd.icy_interval].value
::stopped == ::opts[::OutputDescriptor].value
::stopped == ::opts[::intflag].value
::stopped == ::opts[::param.aggressive].value
::stopped == ::opts[::param.shuffle].value
::stopped == ::opts[::param.remote].value
::stopped == ::opts[::param.remote_err].value
::stopped == ::opts[::param.quiet].value
::stopped == ::opts[::param.xterm_title].value
::stopped == ::opts[::param.usebuffer].value
::stopped == ::opts[::param.verbose].value
::stopped == ::opts[::param.output_flags-1].sname
::stopped == ::term_help[::param.output_flags].key2
::stopped == ::term_help[::param.output_flags-1].key2
::stopped == ::opts[::param.term_ctrl-1].value
::stopped == ::term_help[::param.term_ctrl].key2
::stopped == ::opts[::param.checkrange].value
::stopped == ::opts[::param.force_reopen].value
::stopped == ::opts[::param.test_cpu].value
::stopped == ::opts[::param.realtime].value
::stopped == ::opts[::param.listentry].value
::stopped == ::opts[::param.long_id3].value
::stopped == ::opts[::param.list_cpu].value
::stopped == ::opts[::param.timeout].value
::stopped == ::opts[::param.loop-1].value
::stopped == ::term_help[::param.loop].key2
::stopped == ::opts[::param.delay].value
::stopped == ::opts[::param.index].value
::stopped == ::opts[::param.down_sample].value
::stopped == ::opts[::param.rva].value
::stopped == ::opts[::param.halfspeed].value
::stopped == ::opts[::param.doublespeed].value
::stopped == ::opts[::param.start_frame].value
::stopped == ::opts[::param.force_rate].value
::stopped == ::opts[::param.talk_icy-1].value
::stopped == ::term_help[::param.talk_icy].key2
::stopped == ::opts[::param.smooth].value
::stopped == ::opts[::param.keep_open].value
::stopped == ::opts[::param.force_utf8].value
::stopped == ::opts[::param.preframes].value
::stopped == ::opts[::param.preframes-1].value
::stopped == ::term_help[::param.preframes].key2
::stopped == ::term_help[::param.preframes-1].key2
::stopped == ::opts[::param.icy_interval].value
::stopped == ::opts[::global_premium].value
::stopped == ::opts[::fresh].value
::stopped == ::opts[::deathflag].value
::stopped == ::opts[::utf8env-1].value
::stopped == ::opts[::seeking].value
::stopped == ::term_help[::utf8env].key2
::outstream == ::opts[::loptind].var
::outstream == ::opts[::loptind-1].var
::outstream == ::opts[::argc].var
::outstream == ::opts[::argc-1].var
::outstream == ::opts[::param.preframes].var
::outstream == ::opts[::param.preframes-1].var
::loptind == ::argc
::loptind == ::param.preframes
::loptind == ::opts[::loptind].flags
::loptind == ::opts[::loptind-1].flags
::loptind == ::opts[::output_propflags].flags
::loptind == ::opts[::argc].flags
::loptind == ::opts[::argc-1].flags
::loptind == ::opts[::cleanup_mpg123].flags
::loptind == ::opts[::param.output_flags].flags
::loptind == ::opts[::param.output_flags-1].flags
::loptind == ::opts[::param.output_flags].value
::loptind == ::opts[::param.term_ctrl].flags
::loptind == ::opts[::param.loop].flags
::loptind == ::opts[::param.talk_icy].flags
::loptind == ::opts[::param.preframes].flags
::loptind == ::opts[::param.preframes-1].flags
::loptind == ::opts[::utf8env].flags
::genre_count == size(::genre_table[])-1
::output_propflags == ::cleanup_mpg123
::output_propflags == ::param.term_ctrl
::output_propflags == ::param.loop
::output_propflags == ::param.talk_icy
::output_propflags == ::utf8env
::output_propflags == size(::argv[])
::output_propflags == ::opts[::output_propflags].value
::output_propflags == ::opts[::cleanup_mpg123].value
::output_propflags == ::opts[::param.term_ctrl].value
::output_propflags == ::opts[::param.loop].value
::output_propflags == ::opts[::param.talk_icy].value
::output_propflags == ::opts[::utf8env].value
::filept == ::param.frame_number
::filept == ::param.gain
::filept == ::frames_left
::prebuffer_size == ::prebuffer_fill
::prebuffer_size == ::htd.content_type.size
::prebuffer_size == ::htd.content_type.fill
::prebuffer_size == ::htd.icy_name.size
::prebuffer_size == ::htd.icy_name.fill
::prebuffer_size == ::htd.icy_url.size
::prebuffer_size == ::htd.icy_url.fill
::prebuffer_size == ::htd.proxyhost.size
::prebuffer_size == ::htd.proxyhost.fill
::prebuffer_size == ::htd.proxyport.size
::prebuffer_size == ::htd.proxyport.fill
::prebuffer_size == ::param.appflags
::param.pitch == ::param.device_buffer
size(::rva_name[])-1 == ::opts[::param.output_flags-1].value
::opts[::stopped] == ::opts[::output_propflags-1]
::opts[::stopped] == ::opts[::cleanup_mpg123-1]
::opts[::stopped] == ::opts[::param.term_ctrl-1]
::opts[::stopped] == ::opts[::param.loop-1]
::opts[::stopped] == ::opts[::param.talk_icy-1]
::opts[::stopped] == ::opts[::utf8env-1]
::opts[::stopped].sname == ::opts[::output_propflags-1].sname
::opts[::stopped].sname == ::opts[::cleanup_mpg123-1].sname
::opts[::stopped].sname == ::opts[::param.term_ctrl-1].sname
::opts[::stopped].sname == ::opts[::param.loop-1].sname
::opts[::stopped].sname == ::opts[::param.talk_icy-1].sname
::opts[::stopped].sname == ::opts[::utf8env-1].sname
::opts[::stopped].flags == ::opts[::output_propflags-1].flags
::opts[::stopped].flags == ::opts[::cleanup_mpg123-1].flags
::opts[::stopped].flags == ::opts[::param.term_ctrl-1].flags
::opts[::stopped].flags == ::opts[::param.loop-1].flags
::opts[::stopped].flags == ::opts[::param.talk_icy-1].flags
::opts[::stopped].flags == ::opts[::utf8env-1].flags
::opts[::stopped].func == ::opts[::output_propflags].func
::opts[::stopped].func == ::opts[::output_propflags-1].func
::opts[::stopped].func == ::opts[::cleanup_mpg123].func
::opts[::stopped].func == ::opts[::cleanup_mpg123-1].func
::opts[::stopped].func == ::opts[::param.term_ctrl].func
::opts[::stopped].func == ::opts[::param.term_ctrl-1].func
::opts[::stopped].func == ::opts[::param.loop].func
::opts[::stopped].func == ::opts[::param.loop-1].func
::opts[::stopped].func == ::opts[::param.talk_icy].func
::opts[::stopped].func == ::opts[::param.talk_icy-1].func
::opts[::stopped].func == ::opts[::utf8env].func
::opts[::stopped].func == ::opts[::utf8env-1].func
::opts[::stopped].var == ::opts[::output_propflags-1].var
::opts[::stopped].var == ::opts[::cleanup_mpg123-1].var
::opts[::stopped].var == ::opts[::param.term_ctrl-1].var
::opts[::stopped].var == ::opts[::param.loop-1].var
::opts[::stopped].var == ::opts[::param.talk_icy-1].var
::opts[::stopped].var == ::opts[::utf8env-1].var
::term_help[::stopped] == ::term_help[::output_propflags-1]
::term_help[::stopped] == ::term_help[::cleanup_mpg123-1]
::term_help[::stopped] == ::term_help[::param.term_ctrl-1]
::term_help[::stopped] == ::term_help[::param.loop-1]
::term_help[::stopped] == ::term_help[::param.talk_icy-1]
::term_help[::stopped] == ::term_help[::utf8env-1]
::term_help[::stopped].key == ::opts[::loptind].sname
::term_help[::stopped].key == ::term_help[::output_propflags-1].key
::term_help[::stopped].key == ::opts[::argc].sname
::term_help[::stopped].key == ::term_help[::cleanup_mpg123-1].key
::term_help[::stopped].key == ::term_help[::param.term_ctrl-1].key
::term_help[::stopped].key == ::term_help[::param.loop-1].key
::term_help[::stopped].key == ::term_help[::param.talk_icy-1].key
::term_help[::stopped].key == ::opts[::param.preframes].sname
::term_help[::stopped].key == ::term_help[::utf8env-1].key
::term_help[::stopped].key2 == ::term_help[::output_propflags-1].key2
::term_help[::stopped].key2 == ::term_help[::cleanup_mpg123-1].key2
::term_help[::stopped].key2 == ::term_help[::param.term_ctrl-1].key2
::term_help[::stopped].key2 == ::term_help[::param.loop-1].key2
::term_help[::stopped].key2 == ::term_help[::param.talk_icy-1].key2
::term_help[::stopped].key2 == ::term_help[::utf8env-1].key2
::opts[::param.output_flags].func == ::opts[::param.output_flags-1].func
::opts[::param.output_flags].var == ::opts[::param.output_flags-1].var
::remote_header_help == "S <mpeg-version> <layer> <sampling freq> <mode(stereo/mono/...)> <mode_ext> <framesize> <stereo> <copyright> <error_protected> <emphasis> <bitrate> <extension> <vbr(0/1=yes/no)>"
::rva_name has only one value
::rva_name[] == [off, mix, album]
::rva_name[] elements one of { "album", "mix", "off" }
::outstream == null
::loptind == 4
::genre_table has only one value
::genre_table[] == [Blues, Classic Rock, Country, Dance, Disco, Funk, Grunge, Hip-Hop, Jazz, Metal, New Age, Oldies, Other, Pop, R&B, Rap, Reggae, Rock, Techno, Industrial, Alternative, Ska, Death Metal, Pranks, Soundtrack, Euro-Techno, Ambient, Trip-Hop, Vocal, Jazz+Funk, Fusion, Trance, Classical, Instrumental, Acid, House, Game, Sound Clip, Gospel, Noise, AlternRock, Bass, Soul, Punk, Space, Meditative, Instrumental Pop, Instrumental Rock, Ethnic, Gothic, Darkwave, Techno-Industrial, Electronic, Pop-Folk, Eurodance, Dream, Southern Rock, Comedy, Cult, Gangsta, Top 40, Christian Rap, Pop/Funk, Jungle, Native American, Cabaret, New Wave, Psychedelic, Rave, Showtunes, Trailer, Lo-Fi, Tribal, Acid Punk, Acid Jazz, Polka, Retro, Musical, Rock & Roll, Hard Rock, Folk, Folk/Rock, National folk, Swing, Fast-fusion, Bebob, Latin, Revival, Celtic, Bluegrass, Avantgarde, Gothic Rock, Progressive Rock, Psychedelic Rock, Symphonic Rock, Slow Rock, Big Band, Chorus, Easy Listening, Acoustic, Humour, Speech, Chanson, Opera, Chamber Music, Sonata, Symphony, Booty Bass, Primus, Porn Groove, Satire, Slow Jam, Club, Tango, Samba, Folklore, Ballad, Powder Ballad, Rhythmic Soul, Freestyle, Duet, Punk Rock, Drum Solo, A Capella, Euro-House, Dance Hall, Goa, Drum & Bass, Club House, Hardcore, Terror, Indie, BritPop, NegerPunk, Polsk Punk, Beat, Christian Gangsta, Heavy Metal, Black Metal, Crossover, Contemporary C, Christian Rock, Merengue, Salsa, Thrash Metal, Anime, JPop, SynthPop]
::output_propflags == 1
::filept == -1
::argv has only one value
::argv[] == [./mpg123]
::argv[] elements == "./mpg123"
::prebuffer_size == 0
::minbytes == 1536
::binpath == "."
::framenum one of { 8, 24, 40 }
::htd has only one value
::htd.content_type has only one value
::htd.icy_name has only one value
::htd.icy_url has only one value
::htd.proxyhost has only one value
::htd.proxyport has only one value
::htd.proxystate == 0
::param has only one value
::param.output_module == "alsa,oss,nas"
::param.output_flags == 16
::param.term_usr1 == "s"
::param.term_usr2 == "f"
::param.outscale == 32768
::param.flags == 33088
::param.resync_limit == 1024
::param.pitch == 0.0
::param.index_size == 1000
::param.preload == 0.2
::mh has only one value
::ao has only one value
::prgName == "mpg123"
::aux_out has only one value
::opts has only one value
::opts[] contains no nulls and has only one value, of length 96
::opts[].sname == [107, 50, 52, 116, 115, 83, 79, 99, 118, 113, 121, 0, 48, 0, 49, 0, 109, 0, 0, 0, 0, 103, 114, 0, 0, 0, 0, 0, 111, 0, 97, 102, 110, 67, 0, 0, 0, 98, 0, 0, 82, 0, 100, 104, 112, 64, 122, 90, 69, 0, 0, 0, 0, 117, 84, 0, 119, 0, 0, 0, 0, 0, 63, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 105, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 101, 0, 0, 0, 0, 0, 0, 0, 0]
::opts[].sname elements >= 0
::opts[].flags == [9, 4, 4, 4, 4, 4, 3, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 9, 4, 4, 0, 0, 0, 3, 0, 3, 9, 9, 4, 4, 3, 3, 9, 4, 17, 4, 4, 9, 9, 3, 3, 4, 4, 3, 4, 3, 4, 4, 3, 8, 4, 3, 3, 3, 4, 4, 4, 0, 0, 0, 9, 4, 4, 4, 4, 4, 4, 4, 3, 9, 9, 4, 5, 9, 17, 4, 4, 4, 4, 4, 9, 4, 3, 9, 4, 3, 9, 4, 3, 17, 0]
::opts[].flags elements >= 0
::opts[].func has only one value, of length 96
::opts[].var has only one value, of length 96
::opts[].value == [0, 1, 2, 0, 0, 0, 0, 1, 0, 0, 128, 128, 1, 1, 2, 2, 4, 4, 4, 8, 1, 0, 0, 16, 1024, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 2, 1, 2, 0, 1, 1, 0, 1, 1, 0, 0, 0, 64, 64, 16384, 0, 0, 0, 0, 4, 1, 1, 2, 2, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 2, 1, 1, 512, 0, 256, 0, 0, 8192, 0, 0, 4096, 0, 0, 0]
::opts[].value elements >= 0
::term_help has only one value
::term_help[] contains no nulls and has only one value, of length 26
::term_help[].key == [115, 102, 100, 93, 91, 98, 112, 46, 44, 58, 59, 62, 60, 43, 45, 114, 118, 108, 116, 109, 104, 113, 99, 120, 119, 107]
::term_help[].key2 == [32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 67, 88, 0, 0]
::term_help[].key2 elements >= 0
::term_help[].desc == [interrupt/restart playback (i.e. '(un)pause'), next track, previous track, next directory (next track until directory part changes), previous directory (previous track until directory part changes), back to beginning of track, loop around current position (don't combine with output buffer), forward, rewind, fast forward, fast rewind, fine forward, fine rewind, volume up, volume down, RVA switch, verbose switch, list current playlist, indicating current track there, display tag info (again), print MPEG header info (again), this help, quit, pitch up (small step, big step), pitch down (small step, big step), reset pitch to zero, print out current position in playlist and track, for the benefit of some external tool to store bookmarks]
size(::rva_name[]) == 3
size(::genre_table[]) == 148
size(::opts[]) == 96
size(::term_help[]) == 26
::opts[::stopped] has only one value
::opts[::stopped].sname == 107
::opts[::stopped].flags == 9
::opts[::stopped].func == null
::opts[::stopped].var has only one value
::term_help[::stopped] has only one value
::term_help[::stopped].key == 115
::term_help[::stopped].key2 == 32
::opts[::loptind] has only one value
::opts[::loptind-1] has only one value
::opts[::loptind-1].sname == 116
::opts[::loptind].func has only one value
::opts[::loptind-1].func has only one value
::term_help[::loptind] has only one value
::term_help[::loptind-1] has only one value
::term_help[::loptind].key == 91
::term_help[::loptind-1].key == 93
::opts[::output_propflags] has only one value
::opts[::output_propflags].sname == 50
::opts[::output_propflags].var has only one value
::term_help[::output_propflags] has only one value
::term_help[::output_propflags].key == 102
::opts[::framenum].sname one of { 0, 82, 118 }
::opts[::framenum-1].sname one of { 0, 99 }
::opts[::framenum].flags one of { 0, 4 }
::opts[::framenum-1].flags one of { 4, 17 }
::opts[::framenum].value one of { 0, 1, 1024 }
::opts[::framenum-1].value one of { 0, 1, 16 }
::opts[::param.output_flags] has only one value
::opts[::param.output_flags-1] has only one value
::opts[::param.output_flags].sname == 109
::opts[::param.output_flags].func has only one value
::opts[::param.output_flags].var has only one value
::term_help[::param.output_flags] has only one value
::term_help[::param.output_flags-1] has only one value
::term_help[::param.output_flags].key == 118
::term_help[::param.output_flags-1].key == 114
::stopped in ::opts[].flags
::binpath == ::fullprogname
::param.output_flags in ::opts[].value
::param.resync_limit in ::opts[].value
::param.name == ::prgName
::term_help[::output_propflags].key in ::opts[].sname
::term_help[::param.output_flags].key in ::opts[].sname
::term_help[::param.output_flags-1].key in ::opts[].sname
size(::rva_name[]) in ::opts[].flags
::opts[::framenum].flags in ::opts[].value
::opts[::stopped].sname in ::term_help[].key
::opts[::loptind-1].sname in ::term_help[].key
::opts[::param.output_flags].sname in ::term_help[].key
===========================================================================
..next_track():::EXIT
::stopped == ::paused
::stopped == ::control_file
::stopped == ::loptchr
::stopped == ::skip_tracks
::stopped == ::network_sockets_used
::stopped == ::new_header
::stopped == ::frameflag
::stopped == ::appflag
::stopped == ::htd.icy_interval
::stopped == ::OutputDescriptor
::stopped == ::intflag
::stopped == ::param.aggressive
::stopped == ::param.shuffle
::stopped == ::param.remote
::stopped == ::param.remote_err
::stopped == ::param.quiet
::stopped == ::param.xterm_title
::stopped == ::param.usebuffer
::stopped == ::param.verbose
::stopped == ::param.checkrange
::stopped == ::param.force_reopen
::stopped == ::param.test_cpu
::stopped == ::param.realtime
::stopped == ::param.listentry
::stopped == ::param.long_id3
::stopped == ::param.list_cpu
::stopped == ::param.timeout
::stopped == ::param.delay
::stopped == ::param.index
::stopped == ::param.down_sample
::stopped == ::param.rva
::stopped == ::param.halfspeed
::stopped == ::param.doublespeed
::stopped == ::param.start_frame
::stopped == ::param.force_rate
::stopped == ::param.smooth
::stopped == ::param.keep_open
::stopped == ::param.force_utf8
::stopped == ::param.icy_interval
::stopped == ::global_premium
::stopped == ::fresh
::stopped == ::deathflag
::stopped == ::seeking
::stopped == orig(::stopped)
::stopped == orig(::paused)
::stopped == orig(::control_file)
::stopped == orig(::loptchr)
::stopped == orig(::skip_tracks)
::stopped == orig(::network_sockets_used)
::stopped == orig(::new_header)
::stopped == orig(::frameflag)
::stopped == orig(::appflag)
::stopped == orig(::htd.icy_interval)
::stopped == orig(::OutputDescriptor)
::stopped == orig(::intflag)
::stopped == orig(::param.aggressive)
::stopped == orig(::param.shuffle)
::stopped == orig(::param.remote)
::stopped == orig(::param.remote_err)
::stopped == orig(::param.quiet)
::stopped == orig(::param.xterm_title)
::stopped == orig(::param.usebuffer)
::stopped == orig(::param.verbose)
::stopped == orig(::param.checkrange)
::stopped == orig(::param.force_reopen)
::stopped == orig(::param.test_cpu)
::stopped == orig(::param.realtime)
::stopped == orig(::param.listentry)
::stopped == orig(::param.long_id3)
::stopped == orig(::param.list_cpu)
::stopped == orig(::param.timeout)
::stopped == orig(::param.delay)
::stopped == orig(::param.index)
::stopped == orig(::param.down_sample)
::stopped == orig(::param.rva)
::stopped == orig(::param.halfspeed)
::stopped == orig(::param.doublespeed)
::stopped == orig(::param.start_frame)
::stopped == orig(::param.force_rate)
::stopped == orig(::param.smooth)
::stopped == orig(::param.keep_open)
::stopped == orig(::param.force_utf8)
::stopped == orig(::param.icy_interval)
::stopped == orig(::global_premium)
::stopped == orig(::fresh)
::stopped == orig(::deathflag)
::stopped == orig(::seeking)
::stopped == size(::argv[])-1
::stopped == orig(size(::argv[]))-1
::stopped == ::opts[::stopped].value
::stopped == orig(::opts[post(::stopped)].value)
::stopped == ::opts[::paused].value
::stopped == orig(::opts[post(::paused)].value)
::stopped == ::opts[::control_file].value
::stopped == orig(::opts[post(::control_file)].value)
::stopped == ::opts[::loptind].value
::stopped == ::opts[::loptind-1].value
::stopped == ::term_help[::loptind].key2
::stopped == ::term_help[::loptind-1].key2
::stopped == orig(::opts[post(::loptind)].value)
::stopped == orig(::opts[post(::loptind)-1].value)
::stopped == orig(::term_help[post(::loptind)].key2)
::stopped == orig(::term_help[post(::loptind)-1].key2)
::stopped == ::opts[::loptchr].value
::stopped == orig(::opts[post(::loptchr)].value)
::stopped == ::opts[::output_propflags-1].value
::stopped == ::term_help[::output_propflags].key2
::stopped == orig(::opts[post(::output_propflags)-1].value)
::stopped == orig(::term_help[post(::output_propflags)].key2)
::stopped == ::opts[::skip_tracks].value
::stopped == orig(::opts[post(::skip_tracks)].value)
::stopped == ::opts[::network_sockets_used].value
::stopped == orig(::opts[post(::network_sockets_used)].value)
::stopped == ::opts[::argc].value
::stopped == ::opts[::argc-1].value
::stopped == ::term_help[::argc].key2
::stopped == ::term_help[::argc-1].key2
::stopped == orig(::opts[post(::argc)].value)
::stopped == orig(::opts[post(::argc)-1].value)
::stopped == orig(::term_help[post(::argc)].key2)
::stopped == orig(::term_help[post(::argc)-1].key2)
::stopped == ::opts[::cleanup_mpg123-1].value
::stopped == ::term_help[::cleanup_mpg123].key2
::stopped == orig(::opts[post(::cleanup_mpg123)-1].value)
::stopped == orig(::term_help[post(::cleanup_mpg123)].key2)
::stopped == ::opts[::new_header].value
::stopped == orig(::opts[post(::new_header)].value)
::stopped == ::opts[::frameflag].value
::stopped == orig(::opts[post(::frameflag)].value)
::stopped == ::opts[::appflag].value
::stopped == orig(::opts[post(::appflag)].value)
::stopped == ::opts[::htd.icy_interval].value
::stopped == orig(::opts[post(::htd.icy_interval)].value)
::stopped == ::opts[::OutputDescriptor].value
::stopped == orig(::opts[post(::OutputDescriptor)].value)
::stopped == ::opts[::intflag].value
::stopped == orig(::opts[post(::intflag)].value)
::stopped == ::opts[::param.aggressive].value
::stopped == orig(::opts[post(::param.aggressive)].value)
::stopped == ::opts[::param.shuffle].value
::stopped == orig(::opts[post(::param.shuffle)].value)
::stopped == ::opts[::param.remote].value
::stopped == orig(::opts[post(::param.remote)].value)
::stopped == ::opts[::param.remote_err].value
::stopped == orig(::opts[post(::param.remote_err)].value)
::stopped == ::opts[::param.quiet].value
::stopped == orig(::opts[post(::param.quiet)].value)
::stopped == ::opts[::param.xterm_title].value
::stopped == orig(::opts[post(::param.xterm_title)].value)
::stopped == ::opts[::param.usebuffer].value
::stopped == orig(::opts[post(::param.usebuffer)].value)
::stopped == ::opts[::param.verbose].value
::stopped == orig(::opts[post(::param.verbose)].value)
::stopped == ::opts[::param.output_flags-1].sname
::stopped == ::term_help[::param.output_flags].key2
::stopped == ::term_help[::param.output_flags-1].key2
::stopped == orig(::opts[post(::param.output_flags)-1].sname)
::stopped == orig(::term_help[post(::param.output_flags)].key2)
::stopped == orig(::term_help[post(::param.output_flags)-1].key2)
::stopped == ::opts[::param.term_ctrl-1].value
::stopped == ::term_help[::param.term_ctrl].key2
::stopped == orig(::opts[post(::param.term_ctrl)-1].value)
::stopped == orig(::term_help[post(::param.term_ctrl)].key2)
::stopped == ::opts[::param.checkrange].value
::stopped == orig(::opts[post(::param.checkrange)].value)
::stopped == ::opts[::param.force_reopen].value
::stopped == orig(::opts[post(::param.force_reopen)].value)
::stopped == ::opts[::param.test_cpu].value
::stopped == orig(::opts[post(::param.test_cpu)].value)
::stopped == ::opts[::param.realtime].value
::stopped == orig(::opts[post(::param.realtime)].value)
::stopped == ::opts[::param.listentry].value
::stopped == orig(::opts[post(::param.listentry)].value)
::stopped == ::opts[::param.long_id3].value
::stopped == orig(::opts[post(::param.long_id3)].value)
::stopped == ::opts[::param.list_cpu].value
::stopped == orig(::opts[post(::param.list_cpu)].value)
::stopped == ::opts[::param.timeout].value
::stopped == orig(::opts[post(::param.timeout)].value)
::stopped == ::opts[::param.loop-1].value
::stopped == ::term_help[::param.loop].key2
::stopped == orig(::opts[post(::param.loop)-1].value)
::stopped == orig(::term_help[post(::param.loop)].key2)
::stopped == ::opts[::param.delay].value
::stopped == orig(::opts[post(::param.delay)].value)
::stopped == ::opts[::param.index].value
::stopped == orig(::opts[post(::param.index)].value)
::stopped == ::opts[::param.down_sample].value
::stopped == orig(::opts[post(::param.down_sample)].value)
::stopped == ::opts[::param.rva].value
::stopped == orig(::opts[post(::param.rva)].value)
::stopped == ::opts[::param.halfspeed].value
::stopped == orig(::opts[post(::param.halfspeed)].value)
::stopped == ::opts[::param.doublespeed].value
::stopped == orig(::opts[post(::param.doublespeed)].value)
::stopped == ::opts[::param.start_frame].value
::stopped == orig(::opts[post(::param.start_frame)].value)
::stopped == ::opts[::param.force_rate].value
::stopped == orig(::opts[post(::param.force_rate)].value)
::stopped == ::opts[::param.talk_icy-1].value
::stopped == ::term_help[::param.talk_icy].key2
::stopped == orig(::opts[post(::param.talk_icy)-1].value)
::stopped == orig(::term_help[post(::param.talk_icy)].key2)
::stopped == ::opts[::param.smooth].value
::stopped == orig(::opts[post(::param.smooth)].value)
::stopped == ::opts[::param.keep_open].value
::stopped == orig(::opts[post(::param.keep_open)].value)
::stopped == ::opts[::param.force_utf8].value
::stopped == orig(::opts[post(::param.force_utf8)].value)
::stopped == ::opts[::param.preframes].value
::stopped == ::opts[::param.preframes-1].value
::stopped == ::term_help[::param.preframes].key2
::stopped == ::term_help[::param.preframes-1].key2
::stopped == orig(::opts[post(::param.preframes)].value)
::stopped == orig(::opts[post(::param.preframes)-1].value)
::stopped == orig(::term_help[post(::param.preframes)].key2)
::stopped == orig(::term_help[post(::param.preframes)-1].key2)
::stopped == ::opts[::param.icy_interval].value
::stopped == orig(::opts[post(::param.icy_interval)].value)
::stopped == ::opts[::global_premium].value
::stopped == orig(::opts[post(::global_premium)].value)
::stopped == ::opts[::fresh].value
::stopped == orig(::opts[post(::fresh)].value)
::stopped == ::opts[::deathflag].value
::stopped == orig(::opts[post(::deathflag)].value)
::stopped == ::opts[orig(::param.output_flags)-1].sname
::stopped == ::opts[::utf8env-1].value
::stopped == ::opts[::seeking].value
::stopped == ::opts[orig(::stopped)].value
::stopped == ::opts[orig(::paused)].value
::stopped == ::opts[orig(::control_file)].value
::stopped == ::opts[orig(::loptind)].value
::stopped == ::opts[orig(::loptind)-1].value
::stopped == ::opts[orig(::loptchr)].value
::stopped == ::opts[orig(::output_propflags)-1].value
::stopped == ::opts[orig(::skip_tracks)].value
::stopped == ::opts[orig(::network_sockets_used)].value
::stopped == ::opts[orig(::argc)].value
::stopped == ::opts[orig(::argc)-1].value
::stopped == ::opts[orig(::cleanup_mpg123)-1].value
::stopped == ::opts[orig(::new_header)].value
::stopped == ::opts[orig(::frameflag)].value
::stopped == ::opts[orig(::appflag)].value
::stopped == ::opts[orig(::htd.icy_interval)].value
::stopped == ::opts[orig(::OutputDescriptor)].value
::stopped == ::opts[orig(::intflag)].value
::stopped == ::opts[orig(::param.aggressive)].value
::stopped == ::opts[orig(::param.shuffle)].value
::stopped == ::opts[orig(::param.remote)].value
::stopped == ::opts[orig(::param.remote_err)].value
::stopped == ::opts[orig(::param.quiet)].value
::stopped == ::opts[orig(::param.xterm_title)].value
::stopped == ::opts[orig(::param.usebuffer)].value
::stopped == ::opts[orig(::param.verbose)].value
::stopped == ::opts[orig(::param.term_ctrl)-1].value
::stopped == ::opts[orig(::param.checkrange)].value
::stopped == ::opts[orig(::param.force_reopen)].value
::stopped == ::opts[orig(::param.test_cpu)].value
::stopped == ::opts[orig(::param.realtime)].value
::stopped == ::opts[orig(::param.listentry)].value
::stopped == ::opts[orig(::param.long_id3)].value
::stopped == ::opts[orig(::param.list_cpu)].value
::stopped == ::opts[orig(::param.timeout)].value
::stopped == ::opts[orig(::param.loop)-1].value
::stopped == ::opts[orig(::param.delay)].value
::stopped == ::opts[orig(::param.index)].value
::stopped == ::opts[orig(::param.down_sample)].value
::stopped == ::opts[orig(::param.rva)].value
::stopped == ::opts[orig(::param.halfspeed)].value
::stopped == ::opts[orig(::param.doublespeed)].value
::stopped == ::opts[orig(::param.start_frame)].value
::stopped == ::opts[orig(::param.force_rate)].value
::stopped == ::opts[orig(::param.talk_icy)-1].value
::stopped == ::opts[orig(::param.smooth)].value
::stopped == ::opts[orig(::param.keep_open)].value
::stopped == ::opts[orig(::param.force_utf8)].value
::stopped == ::opts[orig(::param.preframes)].value
::stopped == ::opts[orig(::param.preframes)-1].value
::stopped == ::opts[orig(::param.icy_interval)].value
::stopped == ::opts[orig(::global_premium)].value
::stopped == ::opts[orig(::fresh)].value
::stopped == ::opts[orig(::deathflag)].value
::stopped == ::opts[orig(::utf8env)-1].value
::stopped == ::opts[orig(::seeking)].value
::stopped == ::term_help[::utf8env].key2
::stopped == orig(::opts[post(::utf8env)-1].value)
::stopped == orig(::term_help[post(::utf8env)].key2)
::stopped == orig(::opts[post(::seeking)].value)
::stopped == ::term_help[orig(::loptind)].key2
::stopped == ::term_help[orig(::loptind)-1].key2
::stopped == ::term_help[orig(::output_propflags)].key2
::stopped == ::term_help[orig(::argc)].key2
::stopped == ::term_help[orig(::argc)-1].key2
::stopped == ::term_help[orig(::cleanup_mpg123)].key2
::stopped == ::term_help[orig(::param.output_flags)].key2
::stopped == ::term_help[orig(::param.output_flags)-1].key2
::stopped == ::term_help[orig(::param.term_ctrl)].key2
::stopped == ::term_help[orig(::param.loop)].key2
::stopped == ::term_help[orig(::param.talk_icy)].key2
::stopped == ::term_help[orig(::param.preframes)].key2
::stopped == ::term_help[orig(::param.preframes)-1].key2
::stopped == ::term_help[orig(::utf8env)].key2
::stopped == orig(::opts[::stopped].value)
::stopped == orig(::opts[::paused].value)
::stopped == orig(::opts[::control_file].value)
::stopped == orig(::opts[::loptind].value)
::stopped == orig(::opts[::loptind-1].value)
::stopped == orig(::term_help[::loptind].key2)
::stopped == orig(::term_help[::loptind-1].key2)
::stopped == orig(::opts[::loptchr].value)
::stopped == orig(::opts[::output_propflags-1].value)
::stopped == orig(::term_help[::output_propflags].key2)
::stopped == orig(::opts[::skip_tracks].value)
::stopped == orig(::opts[::network_sockets_used].value)
::stopped == orig(::opts[::argc].value)
::stopped == orig(::opts[::argc-1].value)
::stopped == orig(::term_help[::argc].key2)
::stopped == orig(::term_help[::argc-1].key2)
::stopped == orig(::opts[::cleanup_mpg123-1].value)
::stopped == orig(::term_help[::cleanup_mpg123].key2)
::stopped == orig(::opts[::new_header].value)
::stopped == orig(::opts[::frameflag].value)
::stopped == orig(::opts[::appflag].value)
::stopped == orig(::opts[::htd.icy_interval].value)
::stopped == orig(::opts[::OutputDescriptor].value)
::stopped == orig(::opts[::intflag].value)
::stopped == orig(::opts[::param.aggressive].value)
::stopped == orig(::opts[::param.shuffle].value)
::stopped == orig(::opts[::param.remote].value)
::stopped == orig(::opts[::param.remote_err].value)
::stopped == orig(::opts[::param.quiet].value)
::stopped == orig(::opts[::param.xterm_title].value)
::stopped == orig(::opts[::param.usebuffer].value)
::stopped == orig(::opts[::param.verbose].value)
::stopped == orig(::opts[::param.output_flags-1].sname)
::stopped == orig(::term_help[::param.output_flags].key2)
::stopped == orig(::term_help[::param.output_flags-1].key2)
::stopped == orig(::opts[::param.term_ctrl-1].value)
::stopped == orig(::term_help[::param.term_ctrl].key2)
::stopped == orig(::opts[::param.checkrange].value)
::stopped == orig(::opts[::param.force_reopen].value)
::stopped == orig(::opts[::param.test_cpu].value)
::stopped == orig(::opts[::param.realtime].value)
::stopped == orig(::opts[::param.listentry].value)
::stopped == orig(::opts[::param.long_id3].value)
::stopped == orig(::opts[::param.list_cpu].value)
::stopped == orig(::opts[::param.timeout].value)
::stopped == orig(::opts[::param.loop-1].value)
::stopped == orig(::term_help[::param.loop].key2)
::stopped == orig(::opts[::param.delay].value)
::stopped == orig(::opts[::param.index].value)
::stopped == orig(::opts[::param.down_sample].value)
::stopped == orig(::opts[::param.rva].value)
::stopped == orig(::opts[::param.halfspeed].value)
::stopped == orig(::opts[::param.doublespeed].value)
::stopped == orig(::opts[::param.start_frame].value)
::stopped == orig(::opts[::param.force_rate].value)
::stopped == orig(::opts[::param.talk_icy-1].value)
::stopped == orig(::term_help[::param.talk_icy].key2)
::stopped == orig(::opts[::param.smooth].value)
::stopped == orig(::opts[::param.keep_open].value)
::stopped == orig(::opts[::param.force_utf8].value)
::stopped == orig(::opts[::param.preframes].value)
::stopped == orig(::opts[::param.preframes-1].value)
::stopped == orig(::term_help[::param.preframes].key2)
::stopped == orig(::term_help[::param.preframes-1].key2)
::stopped == orig(::opts[::param.icy_interval].value)
::stopped == orig(::opts[::global_premium].value)
::stopped == orig(::opts[::fresh].value)
::stopped == orig(::opts[::deathflag].value)
::stopped == orig(::opts[::utf8env-1].value)
::stopped == orig(::opts[::seeking].value)
::stopped == orig(::term_help[::utf8env].key2)
::rva_name == orig(::rva_name)
::outstream == orig(::outstream)
::outstream == ::opts[::loptind].var
::outstream == ::opts[::loptind-1].var
::outstream == orig(::opts[post(::loptind)].var)
::outstream == orig(::opts[post(::loptind)-1].var)
::outstream == ::opts[::argc].var
::outstream == ::opts[::argc-1].var
::outstream == orig(::opts[post(::argc)].var)
::outstream == orig(::opts[post(::argc)-1].var)
::outstream == ::opts[::param.preframes].var
::outstream == ::opts[::param.preframes-1].var
::outstream == orig(::opts[post(::param.preframes)].var)
::outstream == orig(::opts[post(::param.preframes)-1].var)
::outstream == ::opts[orig(::loptind)].var
::outstream == ::opts[orig(::loptind)-1].var
::outstream == ::opts[orig(::argc)].var
::outstream == ::opts[orig(::argc)-1].var
::outstream == ::opts[orig(::param.preframes)].var
::outstream == ::opts[orig(::param.preframes)-1].var
::outstream == orig(::opts[::loptind].var)
::outstream == orig(::opts[::loptind-1].var)
::outstream == orig(::opts[::argc].var)
::outstream == orig(::opts[::argc-1].var)
::outstream == orig(::opts[::param.preframes].var)
::outstream == orig(::opts[::param.preframes-1].var)
::loptind == ::argc
::loptind == ::param.preframes
::loptind == orig(::loptind)
::loptind == orig(::argc)
::loptind == orig(::param.preframes)
::loptind == ::opts[::loptind].flags
::loptind == ::opts[::loptind-1].flags
::loptind == orig(::opts[post(::loptind)].flags)
::loptind == orig(::opts[post(::loptind)-1].flags)
::loptind == ::opts[::output_propflags].flags
::loptind == orig(::opts[post(::output_propflags)].flags)
::loptind == ::opts[::argc].flags
::loptind == ::opts[::argc-1].flags
::loptind == orig(::opts[post(::argc)].flags)
::loptind == orig(::opts[post(::argc)-1].flags)
::loptind == ::opts[::cleanup_mpg123].flags
::loptind == orig(::opts[post(::cleanup_mpg123)].flags)
::loptind == ::opts[::param.output_flags].flags
::loptind == ::opts[::param.output_flags-1].flags
::loptind == ::opts[::param.output_flags].value
::loptind == orig(::opts[post(::param.output_flags)].flags)
::loptind == orig(::opts[post(::param.output_flags)-1].flags)
::loptind == orig(::opts[post(::param.output_flags)].value)
::loptind == ::opts[::param.term_ctrl].flags
::loptind == orig(::opts[post(::param.term_ctrl)].flags)
::loptind == ::opts[::param.loop].flags
::loptind == orig(::opts[post(::param.loop)].flags)
::loptind == ::opts[::param.talk_icy].flags
::loptind == orig(::opts[post(::param.talk_icy)].flags)
::loptind == ::opts[::param.preframes].flags
::loptind == ::opts[::param.preframes-1].flags
::loptind == orig(::opts[post(::param.preframes)].flags)
::loptind == orig(::opts[post(::param.preframes)-1].flags)
::loptind == ::opts[::utf8env].flags
::loptind == ::opts[orig(::loptind)].flags
::loptind == ::opts[orig(::loptind)-1].flags
::loptind == ::opts[orig(::output_propflags)].flags
::loptind == ::opts[orig(::argc)].flags
::loptind == ::opts[orig(::argc)-1].flags
::loptind == ::opts[orig(::cleanup_mpg123)].flags
::loptind == ::opts[orig(::param.output_flags)].flags
::loptind == ::opts[orig(::param.output_flags)-1].flags
::loptind == ::opts[orig(::param.term_ctrl)].flags
::loptind == ::opts[orig(::param.loop)].flags
::loptind == ::opts[orig(::param.talk_icy)].flags
::loptind == ::opts[orig(::param.preframes)].flags
::loptind == ::opts[orig(::param.preframes)-1].flags
::loptind == ::opts[orig(::utf8env)].flags
::loptind == ::opts[orig(::param.output_flags)].value
::loptind == orig(::opts[post(::utf8env)].flags)
::loptind == orig(::opts[::loptind].flags)
::loptind == orig(::opts[::loptind-1].flags)
::loptind == orig(::opts[::output_propflags].flags)
::loptind == orig(::opts[::argc].flags)
::loptind == orig(::opts[::argc-1].flags)
::loptind == orig(::opts[::cleanup_mpg123].flags)
::loptind == orig(::opts[::param.output_flags].flags)
::loptind == orig(::opts[::param.output_flags-1].flags)
::loptind == orig(::opts[::param.output_flags].value)
::loptind == orig(::opts[::param.term_ctrl].flags)
::loptind == orig(::opts[::param.loop].flags)
::loptind == orig(::opts[::param.talk_icy].flags)
::loptind == orig(::opts[::param.preframes].flags)
::loptind == orig(::opts[::param.preframes-1].flags)
::loptind == orig(::opts[::utf8env].flags)
::genre_table == orig(::genre_table)
::genre_count == orig(::genre_count)
::genre_count == size(::genre_table[])-1
::genre_count == orig(size(::genre_table[]))-1
::output_propflags == ::cleanup_mpg123
::output_propflags == ::param.term_ctrl
::output_propflags == ::param.loop
::output_propflags == ::param.talk_icy
::output_propflags == ::utf8env
::output_propflags == orig(::output_propflags)
::output_propflags == orig(::cleanup_mpg123)
::output_propflags == orig(::param.term_ctrl)
::output_propflags == orig(::param.loop)
::output_propflags == orig(::param.talk_icy)
::output_propflags == orig(::utf8env)
::output_propflags == size(::argv[])
::output_propflags == orig(size(::argv[]))
::output_propflags == ::opts[::output_propflags].value
::output_propflags == orig(::opts[post(::output_propflags)].value)
::output_propflags == ::opts[::cleanup_mpg123].value
::output_propflags == orig(::opts[post(::cleanup_mpg123)].value)
::output_propflags == ::opts[::param.term_ctrl].value
::output_propflags == orig(::opts[post(::param.term_ctrl)].value)
::output_propflags == ::opts[::param.loop].value
::output_propflags == orig(::opts[post(::param.loop)].value)
::output_propflags == ::opts[::param.talk_icy].value
::output_propflags == orig(::opts[post(::param.talk_icy)].value)
::output_propflags == ::opts[::utf8env].value
::output_propflags == ::opts[orig(::output_propflags)].value
::output_propflags == ::opts[orig(::cleanup_mpg123)].value
::output_propflags == ::opts[orig(::param.term_ctrl)].value
::output_propflags == ::opts[orig(::param.loop)].value
::output_propflags == ::opts[orig(::param.talk_icy)].value
::output_propflags == ::opts[orig(::utf8env)].value
::output_propflags == orig(::opts[post(::utf8env)].value)
::output_propflags == orig(::opts[::output_propflags].value)
::output_propflags == orig(::opts[::cleanup_mpg123].value)
::output_propflags == orig(::opts[::param.term_ctrl].value)
::output_propflags == orig(::opts[::param.loop].value)
::output_propflags == orig(::opts[::param.talk_icy].value)
::output_propflags == orig(::opts[::utf8env].value)
::filept == ::param.frame_number
::filept == ::param.gain
::filept == ::frames_left
::filept == orig(::filept)
::filept == orig(::param.frame_number)
::filept == orig(::param.gain)
::filept == orig(::frames_left)
::argv == orig(::argv)
::prebuffer_size == ::prebuffer_fill
::prebuffer_size == ::htd.content_type.size
::prebuffer_size == ::htd.content_type.fill
::prebuffer_size == ::htd.icy_name.size
::prebuffer_size == ::htd.icy_name.fill
::prebuffer_size == ::htd.icy_url.size
::prebuffer_size == ::htd.icy_url.fill
::prebuffer_size == ::htd.proxyhost.size
::prebuffer_size == ::htd.proxyhost.fill
::prebuffer_size == ::htd.proxyport.size
::prebuffer_size == ::htd.proxyport.fill
::prebuffer_size == ::param.appflags
::prebuffer_size == orig(::prebuffer_size)
::prebuffer_size == orig(::prebuffer_fill)
::prebuffer_size == orig(::htd.content_type.size)
::prebuffer_size == orig(::htd.content_type.fill)
::prebuffer_size == orig(::htd.icy_name.size)
::prebuffer_size == orig(::htd.icy_name.fill)
::prebuffer_size == orig(::htd.icy_url.size)
::prebuffer_size == orig(::htd.icy_url.fill)
::prebuffer_size == orig(::htd.proxyhost.size)
::prebuffer_size == orig(::htd.proxyhost.fill)
::prebuffer_size == orig(::htd.proxyport.size)
::prebuffer_size == orig(::htd.proxyport.fill)
::prebuffer_size == orig(::param.appflags)
::minbytes == orig(::minbytes)
::framenum == orig(::framenum)
::htd == orig(::htd)
::htd.content_type == orig(::htd.content_type)
::htd.icy_name == orig(::htd.icy_name)
::htd.icy_url == orig(::htd.icy_url)
::htd.proxyhost == orig(::htd.proxyhost)
::htd.proxyport == orig(::htd.proxyport)
::htd.proxystate == orig(::htd.proxystate)
::param == orig(::param)
::param.output_flags == orig(::param.output_flags)
::param.outscale == orig(::param.outscale)
::param.flags == orig(::param.flags)
::param.resync_limit == orig(::param.resync_limit)
::param.pitch == ::param.device_buffer
::param.pitch == orig(::param.pitch)
::param.pitch == orig(::param.device_buffer)
::param.index_size == orig(::param.index_size)
::param.preload == orig(::param.preload)
::mh == orig(::mh)
::ao == orig(::ao)
::aux_out == orig(::aux_out)
::opts == orig(::opts)
::opts[] == orig(::opts[])
::opts[].sname == orig(::opts[].sname)
::opts[].flags == orig(::opts[].flags)
::opts[].func == orig(::opts[].func)
::opts[].var == orig(::opts[].var)
::opts[].value == orig(::opts[].value)
::term_help == orig(::term_help)
::term_help[] == orig(::term_help[])
::term_help[].key == orig(::term_help[].key)
::term_help[].key2 == orig(::term_help[].key2)
size(::rva_name[])-1 == ::opts[::param.output_flags-1].value
size(::rva_name[])-1 == orig(::opts[post(::param.output_flags)-1].value)
size(::rva_name[])-1 == ::opts[orig(::param.output_flags)-1].value
size(::rva_name[])-1 == orig(::opts[::param.output_flags-1].value)
::opts[::stopped] == ::opts[::output_propflags-1]
::opts[::stopped] == orig(::opts[post(::output_propflags)-1])
::opts[::stopped] == ::opts[::cleanup_mpg123-1]
::opts[::stopped] == orig(::opts[post(::cleanup_mpg123)-1])
::opts[::stopped] == ::opts[::param.term_ctrl-1]
::opts[::stopped] == orig(::opts[post(::param.term_ctrl)-1])
::opts[::stopped] == ::opts[::param.loop-1]
::opts[::stopped] == orig(::opts[post(::param.loop)-1])
::opts[::stopped] == ::opts[::param.talk_icy-1]
::opts[::stopped] == orig(::opts[post(::param.talk_icy)-1])
::opts[::stopped] == ::opts[::utf8env-1]
::opts[::stopped] == ::opts[orig(::output_propflags)-1]
::opts[::stopped] == ::opts[orig(::cleanup_mpg123)-1]
::opts[::stopped] == ::opts[orig(::param.term_ctrl)-1]
::opts[::stopped] == ::opts[orig(::param.loop)-1]
::opts[::stopped] == ::opts[orig(::param.talk_icy)-1]
::opts[::stopped] == ::opts[orig(::utf8env)-1]
::opts[::stopped] == orig(::opts[post(::utf8env)-1])
::opts[::stopped] == orig(::opts[::output_propflags-1])
::opts[::stopped] == orig(::opts[::cleanup_mpg123-1])
::opts[::stopped] == orig(::opts[::param.term_ctrl-1])
::opts[::stopped] == orig(::opts[::param.loop-1])
::opts[::stopped] == orig(::opts[::param.talk_icy-1])
::opts[::stopped] == orig(::opts[::utf8env-1])
::opts[::stopped].sname == ::opts[::output_propflags-1].sname
::opts[::stopped].sname == orig(::opts[post(::output_propflags)-1].sname)
::opts[::stopped].sname == ::opts[::cleanup_mpg123-1].sname
::opts[::stopped].sname == orig(::opts[post(::cleanup_mpg123)-1].sname)
::opts[::stopped].sname == ::opts[::param.term_ctrl-1].sname
::opts[::stopped].sname == orig(::opts[post(::param.term_ctrl)-1].sname)
::opts[::stopped].sname == ::opts[::param.loop-1].sname
::opts[::stopped].sname == orig(::opts[post(::param.loop)-1].sname)
::opts[::stopped].sname == ::opts[::param.talk_icy-1].sname
::opts[::stopped].sname == orig(::opts[post(::param.talk_icy)-1].sname)
::opts[::stopped].sname == ::opts[::utf8env-1].sname
::opts[::stopped].sname == ::opts[orig(::output_propflags)-1].sname
::opts[::stopped].sname == ::opts[orig(::cleanup_mpg123)-1].sname
::opts[::stopped].sname == ::opts[orig(::param.term_ctrl)-1].sname
::opts[::stopped].sname == ::opts[orig(::param.loop)-1].sname
::opts[::stopped].sname == ::opts[orig(::param.talk_icy)-1].sname
::opts[::stopped].sname == ::opts[orig(::utf8env)-1].sname
::opts[::stopped].sname == orig(::opts[post(::utf8env)-1].sname)
::opts[::stopped].sname == orig(::opts[::output_propflags-1].sname)
::opts[::stopped].sname == orig(::opts[::cleanup_mpg123-1].sname)
::opts[::stopped].sname == orig(::opts[::param.term_ctrl-1].sname)
::opts[::stopped].sname == orig(::opts[::param.loop-1].sname)
::opts[::stopped].sname == orig(::opts[::param.talk_icy-1].sname)
::opts[::stopped].sname == orig(::opts[::utf8env-1].sname)
::opts[::stopped].flags == ::opts[::output_propflags-1].flags
::opts[::stopped].flags == orig(::opts[post(::output_propflags)-1].flags)
::opts[::stopped].flags == ::opts[::cleanup_mpg123-1].flags
::opts[::stopped].flags == orig(::opts[post(::cleanup_mpg123)-1].flags)
::opts[::stopped].flags == ::opts[::param.term_ctrl-1].flags
::opts[::stopped].flags == orig(::opts[post(::param.term_ctrl)-1].flags)
::opts[::stopped].flags == ::opts[::param.loop-1].flags
::opts[::stopped].flags == orig(::opts[post(::param.loop)-1].flags)
::opts[::stopped].flags == ::opts[::param.talk_icy-1].flags
::opts[::stopped].flags == orig(::opts[post(::param.talk_icy)-1].flags)
::opts[::stopped].flags == ::opts[::utf8env-1].flags
::opts[::stopped].flags == ::opts[orig(::output_propflags)-1].flags
::opts[::stopped].flags == ::opts[orig(::cleanup_mpg123)-1].flags
::opts[::stopped].flags == ::opts[orig(::param.term_ctrl)-1].flags
::opts[::stopped].flags == ::opts[orig(::param.loop)-1].flags
::opts[::stopped].flags == ::opts[orig(::param.talk_icy)-1].flags
::opts[::stopped].flags == ::opts[orig(::utf8env)-1].flags
::opts[::stopped].flags == orig(::opts[post(::utf8env)-1].flags)
::opts[::stopped].flags == orig(::opts[::output_propflags-1].flags)
::opts[::stopped].flags == orig(::opts[::cleanup_mpg123-1].flags)
::opts[::stopped].flags == orig(::opts[::param.term_ctrl-1].flags)
::opts[::stopped].flags == orig(::opts[::param.loop-1].flags)
::opts[::stopped].flags == orig(::opts[::param.talk_icy-1].flags)
::opts[::stopped].flags == orig(::opts[::utf8env-1].flags)
::opts[::stopped].func == ::opts[::output_propflags].func
::opts[::stopped].func == ::opts[::output_propflags-1].func
::opts[::stopped].func == orig(::opts[post(::output_propflags)].func)
::opts[::stopped].func == orig(::opts[post(::output_propflags)-1].func)
::opts[::stopped].func == ::opts[::cleanup_mpg123].func
::opts[::stopped].func == ::opts[::cleanup_mpg123-1].func
::opts[::stopped].func == orig(::opts[post(::cleanup_mpg123)].func)
::opts[::stopped].func == orig(::opts[post(::cleanup_mpg123)-1].func)
::opts[::stopped].func == ::opts[::param.term_ctrl].func
::opts[::stopped].func == ::opts[::param.term_ctrl-1].func
::opts[::stopped].func == orig(::opts[post(::param.term_ctrl)].func)
::opts[::stopped].func == orig(::opts[post(::param.term_ctrl)-1].func)
::opts[::stopped].func == ::opts[::param.loop].func
::opts[::stopped].func == ::opts[::param.loop-1].func
::opts[::stopped].func == orig(::opts[post(::param.loop)].func)
::opts[::stopped].func == orig(::opts[post(::param.loop)-1].func)
::opts[::stopped].func == ::opts[::param.talk_icy].func
::opts[::stopped].func == ::opts[::param.talk_icy-1].func
::opts[::stopped].func == orig(::opts[post(::param.talk_icy)].func)
::opts[::stopped].func == orig(::opts[post(::param.talk_icy)-1].func)
::opts[::stopped].func == ::opts[::utf8env].func
::opts[::stopped].func == ::opts[::utf8env-1].func
::opts[::stopped].func == ::opts[orig(::output_propflags)].func
::opts[::stopped].func == ::opts[orig(::output_propflags)-1].func
::opts[::stopped].func == ::opts[orig(::cleanup_mpg123)].func
::opts[::stopped].func == ::opts[orig(::cleanup_mpg123)-1].func
::opts[::stopped].func == ::opts[orig(::param.term_ctrl)].func
::opts[::stopped].func == ::opts[orig(::param.term_ctrl)-1].func
::opts[::stopped].func == ::opts[orig(::param.loop)].func
::opts[::stopped].func == ::opts[orig(::param.loop)-1].func
::opts[::stopped].func == ::opts[orig(::param.talk_icy)].func
::opts[::stopped].func == ::opts[orig(::param.talk_icy)-1].func
::opts[::stopped].func == ::opts[orig(::utf8env)].func
::opts[::stopped].func == ::opts[orig(::utf8env)-1].func
::opts[::stopped].func == orig(::opts[post(::utf8env)].func)
::opts[::stopped].func == orig(::opts[post(::utf8env)-1].func)
::opts[::stopped].func == orig(::opts[::output_propflags].func)
::opts[::stopped].func == orig(::opts[::output_propflags-1].func)
::opts[::stopped].func == orig(::opts[::cleanup_mpg123].func)
::opts[::stopped].func == orig(::opts[::cleanup_mpg123-1].func)
::opts[::stopped].func == orig(::opts[::param.term_ctrl].func)
::opts[::stopped].func == orig(::opts[::param.term_ctrl-1].func)
::opts[::stopped].func == orig(::opts[::param.loop].func)
::opts[::stopped].func == orig(::opts[::param.loop-1].func)
::opts[::stopped].func == orig(::opts[::param.talk_icy].func)
::opts[::stopped].func == orig(::opts[::param.talk_icy-1].func)
::opts[::stopped].func == orig(::opts[::utf8env].func)
::opts[::stopped].func == orig(::opts[::utf8env-1].func)
::opts[::stopped].var == ::opts[::output_propflags-1].var
::opts[::stopped].var == orig(::opts[post(::output_propflags)-1].var)
::opts[::stopped].var == ::opts[::cleanup_mpg123-1].var
::opts[::stopped].var == orig(::opts[post(::cleanup_mpg123)-1].var)
::opts[::stopped].var == ::opts[::param.term_ctrl-1].var
::opts[::stopped].var == orig(::opts[post(::param.term_ctrl)-1].var)
::opts[::stopped].var == ::opts[::param.loop-1].var
::opts[::stopped].var == orig(::opts[post(::param.loop)-1].var)
::opts[::stopped].var == ::opts[::param.talk_icy-1].var
::opts[::stopped].var == orig(::opts[post(::param.talk_icy)-1].var)
::opts[::stopped].var == ::opts[::utf8env-1].var
::opts[::stopped].var == ::opts[orig(::output_propflags)-1].var
::opts[::stopped].var == ::opts[orig(::cleanup_mpg123)-1].var
::opts[::stopped].var == ::opts[orig(::param.term_ctrl)-1].var
::opts[::stopped].var == ::opts[orig(::param.loop)-1].var
::opts[::stopped].var == ::opts[orig(::param.talk_icy)-1].var
::opts[::stopped].var == ::opts[orig(::utf8env)-1].var
::opts[::stopped].var == orig(::opts[post(::utf8env)-1].var)
::opts[::stopped].var == orig(::opts[::output_propflags-1].var)
::opts[::stopped].var == orig(::opts[::cleanup_mpg123-1].var)
::opts[::stopped].var == orig(::opts[::param.term_ctrl-1].var)
::opts[::stopped].var == orig(::opts[::param.loop-1].var)
::opts[::stopped].var == orig(::opts[::param.talk_icy-1].var)
::opts[::stopped].var == orig(::opts[::utf8env-1].var)
::term_help[::stopped] == ::term_help[::output_propflags-1]
::term_help[::stopped] == orig(::term_help[post(::output_propflags)-1])
::term_help[::stopped] == ::term_help[::cleanup_mpg123-1]
::term_help[::stopped] == orig(::term_help[post(::cleanup_mpg123)-1])
::term_help[::stopped] == ::term_help[::param.term_ctrl-1]
::term_help[::stopped] == orig(::term_help[post(::param.term_ctrl)-1])
::term_help[::stopped] == ::term_help[::param.loop-1]
::term_help[::stopped] == orig(::term_help[post(::param.loop)-1])
::term_help[::stopped] == ::term_help[::param.talk_icy-1]
::term_help[::stopped] == orig(::term_help[post(::param.talk_icy)-1])
::term_help[::stopped] == ::term_help[::utf8env-1]
::term_help[::stopped] == orig(::term_help[post(::utf8env)-1])
::term_help[::stopped] == ::term_help[orig(::output_propflags)-1]
::term_help[::stopped] == ::term_help[orig(::cleanup_mpg123)-1]
::term_help[::stopped] == ::term_help[orig(::param.term_ctrl)-1]
::term_help[::stopped] == ::term_help[orig(::param.loop)-1]
::term_help[::stopped] == ::term_help[orig(::param.talk_icy)-1]
::term_help[::stopped] == ::term_help[orig(::utf8env)-1]
::term_help[::stopped] == orig(::term_help[::output_propflags-1])
::term_help[::stopped] == orig(::term_help[::cleanup_mpg123-1])
::term_help[::stopped] == orig(::term_help[::param.term_ctrl-1])
::term_help[::stopped] == orig(::term_help[::param.loop-1])
::term_help[::stopped] == orig(::term_help[::param.talk_icy-1])
::term_help[::stopped] == orig(::term_help[::utf8env-1])
::term_help[::stopped].key == ::opts[::loptind].sname
::term_help[::stopped].key == orig(::opts[post(::loptind)].sname)
::term_help[::stopped].key == ::term_help[::output_propflags-1].key
::term_help[::stopped].key == orig(::term_help[post(::output_propflags)-1].key)
::term_help[::stopped].key == ::opts[::argc].sname
::term_help[::stopped].key == orig(::opts[post(::argc)].sname)
::term_help[::stopped].key == ::term_help[::cleanup_mpg123-1].key
::term_help[::stopped].key == orig(::term_help[post(::cleanup_mpg123)-1].key)
::term_help[::stopped].key == ::term_help[::param.term_ctrl-1].key
::term_help[::stopped].key == orig(::term_help[post(::param.term_ctrl)-1].key)
::term_help[::stopped].key == ::term_help[::param.loop-1].key
::term_help[::stopped].key == orig(::term_help[post(::param.loop)-1].key)
::term_help[::stopped].key == ::term_help[::param.talk_icy-1].key
::term_help[::stopped].key == orig(::term_help[post(::param.talk_icy)-1].key)
::term_help[::stopped].key == ::opts[::param.preframes].sname
::term_help[::stopped].key == orig(::opts[post(::param.preframes)].sname)
::term_help[::stopped].key == ::opts[orig(::loptind)].sname
::term_help[::stopped].key == ::opts[orig(::argc)].sname
::term_help[::stopped].key == ::opts[orig(::param.preframes)].sname
::term_help[::stopped].key == ::term_help[::utf8env-1].key
::term_help[::stopped].key == orig(::term_help[post(::utf8env)-1].key)
::term_help[::stopped].key == ::term_help[orig(::output_propflags)-1].key
::term_help[::stopped].key == ::term_help[orig(::cleanup_mpg123)-1].key
::term_help[::stopped].key == ::term_help[orig(::param.term_ctrl)-1].key
::term_help[::stopped].key == ::term_help[orig(::param.loop)-1].key
::term_help[::stopped].key == ::term_help[orig(::param.talk_icy)-1].key
::term_help[::stopped].key == ::term_help[orig(::utf8env)-1].key
::term_help[::stopped].key == orig(::opts[::loptind].sname)
::term_help[::stopped].key == orig(::term_help[::output_propflags-1].key)
::term_help[::stopped].key == orig(::opts[::argc].sname)
::term_help[::stopped].key == orig(::term_help[::cleanup_mpg123-1].key)
::term_help[::stopped].key == orig(::term_help[::param.term_ctrl-1].key)
::term_help[::stopped].key == orig(::term_help[::param.loop-1].key)
::term_help[::stopped].key == orig(::term_help[::param.talk_icy-1].key)
::term_help[::stopped].key == orig(::opts[::param.preframes].sname)
::term_help[::stopped].key == orig(::term_help[::utf8env-1].key)
::term_help[::stopped].key2 == ::term_help[::output_propflags-1].key2
::term_help[::stopped].key2 == orig(::term_help[post(::output_propflags)-1].key2)
::term_help[::stopped].key2 == ::term_help[::cleanup_mpg123-1].key2
::term_help[::stopped].key2 == orig(::term_help[post(::cleanup_mpg123)-1].key2)
::term_help[::stopped].key2 == ::term_help[::param.term_ctrl-1].key2
::term_help[::stopped].key2 == orig(::term_help[post(::param.term_ctrl)-1].key2)
::term_help[::stopped].key2 == ::term_help[::param.loop-1].key2
::term_help[::stopped].key2 == orig(::term_help[post(::param.loop)-1].key2)
::term_help[::stopped].key2 == ::term_help[::param.talk_icy-1].key2
::term_help[::stopped].key2 == orig(::term_help[post(::param.talk_icy)-1].key2)
::term_help[::stopped].key2 == ::term_help[::utf8env-1].key2
::term_help[::stopped].key2 == orig(::term_help[post(::utf8env)-1].key2)
::term_help[::stopped].key2 == ::term_help[orig(::output_propflags)-1].key2
::term_help[::stopped].key2 == ::term_help[orig(::cleanup_mpg123)-1].key2
::term_help[::stopped].key2 == ::term_help[orig(::param.term_ctrl)-1].key2
::term_help[::stopped].key2 == ::term_help[orig(::param.loop)-1].key2
::term_help[::stopped].key2 == ::term_help[orig(::param.talk_icy)-1].key2
::term_help[::stopped].key2 == ::term_help[orig(::utf8env)-1].key2
::term_help[::stopped].key2 == orig(::term_help[::output_propflags-1].key2)
::term_help[::stopped].key2 == orig(::term_help[::cleanup_mpg123-1].key2)
::term_help[::stopped].key2 == orig(::term_help[::param.term_ctrl-1].key2)
::term_help[::stopped].key2 == orig(::term_help[::param.loop-1].key2)
::term_help[::stopped].key2 == orig(::term_help[::param.talk_icy-1].key2)
::term_help[::stopped].key2 == orig(::term_help[::utf8env-1].key2)
::opts[::param.output_flags].func == ::opts[::param.output_flags-1].func
::opts[::param.output_flags].func == orig(::opts[post(::param.output_flags)-1].func)
::opts[::param.output_flags].func == ::opts[orig(::param.output_flags)-1].func
::opts[::param.output_flags].func == orig(::opts[::param.output_flags-1].func)
::opts[::param.output_flags].var == ::opts[::param.output_flags-1].var
::opts[::param.output_flags].var == orig(::opts[post(::param.output_flags)-1].var)
::opts[::param.output_flags].var == ::opts[orig(::param.output_flags)-1].var
::opts[::param.output_flags].var == orig(::opts[::param.output_flags-1].var)
::remote_header_help == "S <mpeg-version> <layer> <sampling freq> <mode(stereo/mono/...)> <mode_ext> <framesize> <stereo> <copyright> <error_protected> <emphasis> <bitrate> <extension> <vbr(0/1=yes/no)>"
::rva_name has only one value
::rva_name[] == [off, mix, album]
::rva_name[] elements one of { "album", "mix", "off" }
::outstream == null
::loptind == 4
::genre_table has only one value
::genre_table[] == [Blues, Classic Rock, Country, Dance, Disco, Funk, Grunge, Hip-Hop, Jazz, Metal, New Age, Oldies, Other, Pop, R&B, Rap, Reggae, Rock, Techno, Industrial, Alternative, Ska, Death Metal, Pranks, Soundtrack, Euro-Techno, Ambient, Trip-Hop, Vocal, Jazz+Funk, Fusion, Trance, Classical, Instrumental, Acid, House, Game, Sound Clip, Gospel, Noise, AlternRock, Bass, Soul, Punk, Space, Meditative, Instrumental Pop, Instrumental Rock, Ethnic, Gothic, Darkwave, Techno-Industrial, Electronic, Pop-Folk, Eurodance, Dream, Southern Rock, Comedy, Cult, Gangsta, Top 40, Christian Rap, Pop/Funk, Jungle, Native American, Cabaret, New Wave, Psychedelic, Rave, Showtunes, Trailer, Lo-Fi, Tribal, Acid Punk, Acid Jazz, Polka, Retro, Musical, Rock & Roll, Hard Rock, Folk, Folk/Rock, National folk, Swing, Fast-fusion, Bebob, Latin, Revival, Celtic, Bluegrass, Avantgarde, Gothic Rock, Progressive Rock, Psychedelic Rock, Symphonic Rock, Slow Rock, Big Band, Chorus, Easy Listening, Acoustic, Humour, Speech, Chanson, Opera, Chamber Music, Sonata, Symphony, Booty Bass, Primus, Porn Groove, Satire, Slow Jam, Club, Tango, Samba, Folklore, Ballad, Powder Ballad, Rhythmic Soul, Freestyle, Duet, Punk Rock, Drum Solo, A Capella, Euro-House, Dance Hall, Goa, Drum & Bass, Club House, Hardcore, Terror, Indie, BritPop, NegerPunk, Polsk Punk, Beat, Christian Gangsta, Heavy Metal, Black Metal, Crossover, Contemporary C, Christian Rock, Merengue, Salsa, Thrash Metal, Anime, JPop, SynthPop]
::output_propflags == 1
::filept == -1
::argv has only one value
::argv[] == [./mpg123]
::argv[] elements == "./mpg123"
::prebuffer_size == 0
::minbytes == 1536
::binpath == "."
::framenum one of { 8, 24, 40 }
::htd has only one value
::htd.content_type has only one value
::htd.icy_name has only one value
::htd.icy_url has only one value
::htd.proxyhost has only one value
::htd.proxyport has only one value
::htd.proxystate == 0
::param has only one value
::param.output_module == "alsa,oss,nas"
::param.output_flags == 16
::param.term_usr1 == "s"
::param.term_usr2 == "f"
::param.outscale == 32768
::param.flags == 33088
::param.resync_limit == 1024
::param.pitch == 0.0
::param.index_size == 1000
::param.preload == 0.2
::mh has only one value
::ao has only one value
::prgName == "mpg123"
::aux_out has only one value
::opts has only one value
::opts[] contains no nulls and has only one value, of length 96
::opts[].sname == [107, 50, 52, 116, 115, 83, 79, 99, 118, 113, 121, 0, 48, 0, 49, 0, 109, 0, 0, 0, 0, 103, 114, 0, 0, 0, 0, 0, 111, 0, 97, 102, 110, 67, 0, 0, 0, 98, 0, 0, 82, 0, 100, 104, 112, 64, 122, 90, 69, 0, 0, 0, 0, 117, 84, 0, 119, 0, 0, 0, 0, 0, 63, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 105, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 101, 0, 0, 0, 0, 0, 0, 0, 0]
::opts[].sname elements >= 0
::opts[].flags == [9, 4, 4, 4, 4, 4, 3, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 9, 4, 4, 0, 0, 0, 3, 0, 3, 9, 9, 4, 4, 3, 3, 9, 4, 17, 4, 4, 9, 9, 3, 3, 4, 4, 3, 4, 3, 4, 4, 3, 8, 4, 3, 3, 3, 4, 4, 4, 0, 0, 0, 9, 4, 4, 4, 4, 4, 4, 4, 3, 9, 9, 4, 5, 9, 17, 4, 4, 4, 4, 4, 9, 4, 3, 9, 4, 3, 9, 4, 3, 17, 0]
::opts[].flags elements >= 0
::opts[].func has only one value, of length 96
::opts[].var has only one value, of length 96
::opts[].value == [0, 1, 2, 0, 0, 0, 0, 1, 0, 0, 128, 128, 1, 1, 2, 2, 4, 4, 4, 8, 1, 0, 0, 16, 1024, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 2, 1, 2, 0, 1, 1, 0, 1, 1, 0, 0, 0, 64, 64, 16384, 0, 0, 0, 0, 4, 1, 1, 2, 2, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 2, 1, 1, 512, 0, 256, 0, 0, 8192, 0, 0, 4096, 0, 0, 0]
::opts[].value elements >= 0
::term_help has only one value
::term_help[] contains no nulls and has only one value, of length 26
::term_help[].key == [115, 102, 100, 93, 91, 98, 112, 46, 44, 58, 59, 62, 60, 43, 45, 114, 118, 108, 116, 109, 104, 113, 99, 120, 119, 107]
::term_help[].key2 == [32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 67, 88, 0, 0]
::term_help[].key2 elements >= 0
::term_help[].desc == [interrupt/restart playback (i.e. '(un)pause'), next track, previous track, next directory (next track until directory part changes), previous directory (previous track until directory part changes), back to beginning of track, loop around current position (don't combine with output buffer), forward, rewind, fast forward, fast rewind, fine forward, fine rewind, volume up, volume down, RVA switch, verbose switch, list current playlist, indicating current track there, display tag info (again), print MPEG header info (again), this help, quit, pitch up (small step, big step), pitch down (small step, big step), reset pitch to zero, print out current position in playlist and track, for the benefit of some external tool to store bookmarks]
size(::rva_name[]) == 3
size(::genre_table[]) == 148
size(::opts[]) == 96
size(::term_help[]) == 26
::opts[::stopped] has only one value
::opts[::stopped].sname == 107
::opts[::stopped].flags == 9
::opts[::stopped].func == null
::opts[::stopped].var has only one value
::term_help[::stopped] has only one value
::term_help[::stopped].key == 115
::term_help[::stopped].key2 == 32
::opts[::loptind] has only one value
::opts[::loptind-1] has only one value
::opts[::loptind-1].sname == 116
::opts[::loptind].func has only one value
::opts[::loptind-1].func has only one value
::term_help[::loptind] has only one value
::term_help[::loptind-1] has only one value
::term_help[::loptind].key == 91
::term_help[::loptind-1].key == 93
::opts[::output_propflags] has only one value
::opts[::output_propflags].sname == 50
::opts[::output_propflags].var has only one value
::term_help[::output_propflags] has only one value
::term_help[::output_propflags].key == 102
::opts[::framenum].sname one of { 0, 82, 118 }
::opts[::framenum-1].sname one of { 0, 99 }
::opts[::framenum].flags one of { 0, 4 }
::opts[::framenum-1].flags one of { 4, 17 }
::opts[::framenum].value one of { 0, 1, 1024 }
::opts[::framenum-1].value one of { 0, 1, 16 }
::opts[::param.output_flags] has only one value
::opts[::param.output_flags-1] has only one value
::opts[::param.output_flags].sname == 109
::opts[::param.output_flags].func has only one value
::opts[::param.output_flags].var has only one value
::term_help[::param.output_flags] has only one value
::term_help[::param.output_flags-1] has only one value
::term_help[::param.output_flags].key == 118
::term_help[::param.output_flags-1].key == 114
::stopped in ::opts[].flags
::remote_header_help == orig(::remote_header_help)
::binpath == ::fullprogname
::binpath == orig(::binpath)
::binpath == orig(::fullprogname)
::param.output_module == orig(::param.output_module)
::param.output_flags in ::opts[].value
::param.term_usr1 == orig(::param.term_usr1)
::param.term_usr2 == orig(::param.term_usr2)
::param.resync_limit in ::opts[].value
::param.name == ::prgName
::prgName == orig(::param.name)
::prgName == orig(::prgName)
::term_help[::output_propflags].key in ::opts[].sname
::term_help[::param.output_flags].key in ::opts[].sname
::term_help[::param.output_flags-1].key in ::opts[].sname
size(::rva_name[]) in ::opts[].flags
::opts[::framenum].flags in ::opts[].value
::opts[::stopped].sname in ::term_help[].key
::opts[::loptind-1].sname in ::term_help[].key
::opts[::param.output_flags].sname in ::term_help[].key
===========================================================================
..prepare_playlist():::ENTER
::stopped == ::paused
::stopped == ::control_file
::stopped == ::loptchr
::stopped == ::framenum
::stopped == ::htd.icy_interval
::stopped == ::OutputDescriptor
::stopped == ::intflag
::stopped == ::param.aggressive
::stopped == ::param.shuffle
::stopped == ::param.remote
::stopped == ::param.remote_err
::stopped == ::param.quiet
::stopped == ::param.xterm_title
::stopped == ::param.usebuffer
::stopped == ::param.verbose
::stopped == ::param.checkrange
::stopped == ::param.force_reopen
::stopped == ::param.test_cpu
::stopped == ::param.realtime
::stopped == ::param.listentry
::stopped == ::param.long_id3
::stopped == ::param.list_cpu
::stopped == ::param.timeout
::stopped == ::param.delay
::stopped == ::param.index
::stopped == ::param.down_sample
::stopped == ::param.rva
::stopped == ::param.halfspeed
::stopped == ::param.doublespeed
::stopped == ::param.start_frame
::stopped == ::param.force_rate
::stopped == ::param.smooth
::stopped == ::param.keep_open
::stopped == ::param.force_utf8
::stopped == ::param.icy_interval
::stopped == ::global_premium
::stopped == ::frames_left
::stopped == ::deathflag
::stopped == ::pl.loop
::stopped == ::seeking
::stopped == size(argv[])-1
::stopped == ::opts[::stopped].value
::stopped == ::opts[::paused].value
::stopped == ::opts[::control_file].value
::stopped == ::opts[::loptind-1].value
::stopped == ::term_help[::loptind].key2
::stopped == ::opts[::loptchr].value
::stopped == ::opts[::framenum].value
::stopped == ::opts[::htd.icy_interval].value
::stopped == ::opts[::OutputDescriptor].value
::stopped == ::opts[::intflag].value
::stopped == ::opts[::param.aggressive].value
::stopped == ::opts[::param.shuffle].value
::stopped == ::opts[::param.remote].value
::stopped == ::opts[::param.remote_err].value
::stopped == ::opts[::param.quiet].value
::stopped == ::opts[::param.xterm_title].value
::stopped == ::opts[::param.usebuffer].value
::stopped == ::opts[::param.verbose].value
::stopped == ::opts[::param.output_flags-1].sname
::stopped == ::term_help[::param.output_flags].key2
::stopped == ::term_help[::param.output_flags-1].key2
::stopped == ::opts[::param.term_ctrl-1].value
::stopped == ::term_help[::param.term_ctrl].key2
::stopped == ::opts[::param.checkrange].value
::stopped == ::opts[::param.force_reopen].value
::stopped == ::opts[::param.test_cpu].value
::stopped == ::opts[::param.realtime].value
::stopped == ::opts[::param.listentry].value
::stopped == ::opts[::param.long_id3].value
::stopped == ::opts[::param.list_cpu].value
::stopped == ::opts[::param.timeout].value
::stopped == ::opts[::param.loop-1].value
::stopped == ::term_help[::param.loop].key2
::stopped == ::opts[::param.delay].value
::stopped == ::opts[::param.index].value
::stopped == ::opts[::param.down_sample].value
::stopped == ::opts[::param.rva].value
::stopped == ::opts[::param.halfspeed].value
::stopped == ::opts[::param.doublespeed].value
::stopped == ::opts[::param.start_frame].value
::stopped == ::opts[::param.force_rate].value
::stopped == ::opts[::param.talk_icy-1].value
::stopped == ::term_help[::param.talk_icy].key2
::stopped == ::opts[::param.smooth].value
::stopped == ::opts[::param.keep_open].value
::stopped == ::opts[::param.force_utf8].value
::stopped == ::opts[::param.preframes].value
::stopped == ::opts[::param.preframes-1].value
::stopped == ::term_help[::param.preframes].key2
::stopped == ::term_help[::param.preframes-1].key2
::stopped == ::opts[::param.icy_interval].value
::stopped == ::opts[::global_premium].value
::stopped == ::opts[::frames_left].value
::stopped == ::opts[::fresh-1].value
::stopped == ::term_help[::fresh].key2
::stopped == ::opts[::deathflag].value
::stopped == ::opts[::utf8env-1].value
::stopped == ::opts[::pl.loop].value
::stopped == ::opts[::seeking].value
::stopped == ::opts[argc].value
::stopped == ::opts[argc-1].value
::stopped == ::term_help[::utf8env].key2
::stopped == ::term_help[argc].key2
::stopped == ::term_help[argc-1].key2
::outstream == ::pl.file
::outstream == ::opts[::param.preframes].var
::outstream == ::opts[::param.preframes-1].var
::outstream == ::opts[argc].var
::outstream == ::opts[argc-1].var
::loptind == ::param.term_ctrl
::loptind == ::param.loop
::loptind == ::param.talk_icy
::loptind == ::fresh
::loptind == ::utf8env
::loptind == size(argv[])
::loptind == ::opts[::loptind].value
::loptind == ::opts[::param.term_ctrl].value
::loptind == ::opts[::param.loop].value
::loptind == ::opts[::param.talk_icy].value
::loptind == ::opts[::fresh].value
::loptind == ::opts[::utf8env].value
::genre_count == size(::genre_table[])-1
::htd.content_type.size == ::param.appflags
::htd.content_type.fill == ::param.appflags
::htd.icy_name.size == ::param.appflags
::htd.icy_name.fill == ::param.appflags
::htd.icy_url.size == ::param.appflags
::htd.icy_url.fill == ::param.appflags
::htd.proxyhost.size == ::param.appflags
::htd.proxyhost.fill == ::param.appflags
::htd.proxyport.size == ::param.appflags
::htd.proxyport.fill == ::param.appflags
::param.frame_number == ::param.gain
::param.pitch == ::param.device_buffer
::param.appflags == ::pl.entry
::param.appflags == ::pl.playcount
::param.appflags == ::pl.size
::param.appflags == ::pl.fill
::param.appflags == ::pl.pos
::param.appflags == ::pl.num
::param.appflags == ::pl.alloc_step
::param.appflags == ::pl.linebuf.size
::param.appflags == ::pl.linebuf.fill
::param.appflags == ::pl.dir.size
::param.appflags == ::pl.dir.fill
::param.preframes == argc
::param.preframes == ::opts[::loptind].flags
::param.preframes == ::opts[::param.output_flags].flags
::param.preframes == ::opts[::param.output_flags-1].flags
::param.preframes == ::opts[::param.output_flags].value
::param.preframes == ::opts[::param.term_ctrl].flags
::param.preframes == ::opts[::param.loop].flags
::param.preframes == ::opts[::param.talk_icy].flags
::param.preframes == ::opts[::param.preframes].flags
::param.preframes == ::opts[::param.preframes-1].flags
::param.preframes == ::opts[::fresh].flags
::param.preframes == ::opts[::utf8env].flags
::param.preframes == ::opts[argc].flags
::param.preframes == ::opts[argc-1].flags
size(::rva_name[])-1 == ::opts[::param.output_flags-1].value
::opts[::stopped] == ::opts[::loptind-1]
::opts[::stopped] == ::opts[::param.term_ctrl-1]
::opts[::stopped] == ::opts[::param.loop-1]
::opts[::stopped] == ::opts[::param.talk_icy-1]
::opts[::stopped] == ::opts[::fresh-1]
::opts[::stopped] == ::opts[::utf8env-1]
::opts[::stopped].sname == ::opts[::loptind-1].sname
::opts[::stopped].sname == ::opts[::param.term_ctrl-1].sname
::opts[::stopped].sname == ::opts[::param.loop-1].sname
::opts[::stopped].sname == ::opts[::param.talk_icy-1].sname
::opts[::stopped].sname == ::opts[::fresh-1].sname
::opts[::stopped].sname == ::opts[::utf8env-1].sname
::opts[::stopped].flags == ::opts[::loptind-1].flags
::opts[::stopped].flags == ::opts[::param.term_ctrl-1].flags
::opts[::stopped].flags == ::opts[::param.loop-1].flags
::opts[::stopped].flags == ::opts[::param.talk_icy-1].flags
::opts[::stopped].flags == ::opts[::fresh-1].flags
::opts[::stopped].flags == ::opts[::utf8env-1].flags
::opts[::stopped].func == ::opts[::loptind].func
::opts[::stopped].func == ::opts[::loptind-1].func
::opts[::stopped].func == ::opts[::param.term_ctrl].func
::opts[::stopped].func == ::opts[::param.term_ctrl-1].func
::opts[::stopped].func == ::opts[::param.loop].func
::opts[::stopped].func == ::opts[::param.loop-1].func
::opts[::stopped].func == ::opts[::param.talk_icy].func
::opts[::stopped].func == ::opts[::param.talk_icy-1].func
::opts[::stopped].func == ::opts[::fresh].func
::opts[::stopped].func == ::opts[::fresh-1].func
::opts[::stopped].func == ::opts[::utf8env].func
::opts[::stopped].func == ::opts[::utf8env-1].func
::opts[::stopped].var == ::opts[::loptind-1].var
::opts[::stopped].var == ::opts[::param.term_ctrl-1].var
::opts[::stopped].var == ::opts[::param.loop-1].var
::opts[::stopped].var == ::opts[::param.talk_icy-1].var
::opts[::stopped].var == ::opts[::fresh-1].var
::opts[::stopped].var == ::opts[::utf8env-1].var
::term_help[::stopped] == ::term_help[::loptind-1]
::term_help[::stopped] == ::term_help[::param.term_ctrl-1]
::term_help[::stopped] == ::term_help[::param.loop-1]
::term_help[::stopped] == ::term_help[::param.talk_icy-1]
::term_help[::stopped] == ::term_help[::fresh-1]
::term_help[::stopped] == ::term_help[::utf8env-1]
::term_help[::stopped].key == ::term_help[::loptind-1].key
::term_help[::stopped].key == ::term_help[::param.term_ctrl-1].key
::term_help[::stopped].key == ::term_help[::param.loop-1].key
::term_help[::stopped].key == ::term_help[::param.talk_icy-1].key
::term_help[::stopped].key == ::opts[::param.preframes].sname
::term_help[::stopped].key == ::term_help[::fresh-1].key
::term_help[::stopped].key == ::opts[argc].sname
::term_help[::stopped].key == ::term_help[::utf8env-1].key
::term_help[::stopped].key2 == ::term_help[::loptind-1].key2
::term_help[::stopped].key2 == ::term_help[::param.term_ctrl-1].key2
::term_help[::stopped].key2 == ::term_help[::param.loop-1].key2
::term_help[::stopped].key2 == ::term_help[::param.talk_icy-1].key2
::term_help[::stopped].key2 == ::term_help[::fresh-1].key2
::term_help[::stopped].key2 == ::term_help[::utf8env-1].key2
::opts[::param.output_flags].func == ::opts[::param.output_flags-1].func
::opts[::param.output_flags].var == ::opts[::param.output_flags-1].var
::remote_header_help == "S <mpeg-version> <layer> <sampling freq> <mode(stereo/mono/...)> <mode_ext> <framesize> <stereo> <copyright> <error_protected> <emphasis> <bitrate> <extension> <vbr(0/1=yes/no)>"
::rva_name has only one value
::rva_name[] == [off, mix, album]
::rva_name[] elements one of { "album", "mix", "off" }
::outstream == null
::loptind == 1
::genre_table has only one value
::genre_table[] == [Blues, Classic Rock, Country, Dance, Disco, Funk, Grunge, Hip-Hop, Jazz, Metal, New Age, Oldies, Other, Pop, R&B, Rap, Reggae, Rock, Techno, Industrial, Alternative, Ska, Death Metal, Pranks, Soundtrack, Euro-Techno, Ambient, Trip-Hop, Vocal, Jazz+Funk, Fusion, Trance, Classical, Instrumental, Acid, House, Game, Sound Clip, Gospel, Noise, AlternRock, Bass, Soul, Punk, Space, Meditative, Instrumental Pop, Instrumental Rock, Ethnic, Gothic, Darkwave, Techno-Industrial, Electronic, Pop-Folk, Eurodance, Dream, Southern Rock, Comedy, Cult, Gangsta, Top 40, Christian Rap, Pop/Funk, Jungle, Native American, Cabaret, New Wave, Psychedelic, Rave, Showtunes, Trailer, Lo-Fi, Tribal, Acid Punk, Acid Jazz, Polka, Retro, Musical, Rock & Roll, Hard Rock, Folk, Folk/Rock, National folk, Swing, Fast-fusion, Bebob, Latin, Revival, Celtic, Bluegrass, Avantgarde, Gothic Rock, Progressive Rock, Psychedelic Rock, Symphonic Rock, Slow Rock, Big Band, Chorus, Easy Listening, Acoustic, Humour, Speech, Chanson, Opera, Chamber Music, Sonata, Symphony, Booty Bass, Primus, Porn Groove, Satire, Slow Jam, Club, Tango, Samba, Folklore, Ballad, Powder Ballad, Rhythmic Soul, Freestyle, Duet, Punk Rock, Drum Solo, A Capella, Euro-House, Dance Hall, Goa, Drum & Bass, Club House, Hardcore, Terror, Indie, BritPop, NegerPunk, Polsk Punk, Beat, Christian Gangsta, Heavy Metal, Black Metal, Crossover, Contemporary C, Christian Rock, Merengue, Salsa, Thrash Metal, Anime, JPop, SynthPop]
::binpath == "."
::htd has only one value
::htd.content_type has only one value
::htd.icy_name has only one value
::htd.icy_url has only one value
::htd.proxyhost has only one value
::htd.proxyport has only one value
::htd.proxystate == 0
::param has only one value
::param.output_module == "alsa,oss,nas"
::param.output_flags == 16
::param.term_usr1 == "s"
::param.term_usr2 == "f"
::param.frame_number == -1
::param.outscale == 32768
::param.flags == 33088
::param.resync_limit == 1024
::param.pitch == 0.0
::param.appflags == 0
::param.index_size == 1000
::param.preload == 0.2
::param.preframes == 4
::mh has only one value
::ao has only one value
::prgName == "mpg123"
::aux_out has only one value
::opts has only one value
::opts[] contains no nulls and has only one value, of length 96
::opts[].sname == [107, 50, 52, 116, 115, 83, 79, 99, 118, 113, 121, 0, 48, 0, 49, 0, 109, 0, 0, 0, 0, 103, 114, 0, 0, 0, 0, 0, 111, 0, 97, 102, 110, 67, 0, 0, 0, 98, 0, 0, 82, 0, 100, 104, 112, 64, 122, 90, 69, 0, 0, 0, 0, 117, 84, 0, 119, 0, 0, 0, 0, 0, 63, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 105, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 101, 0, 0, 0, 0, 0, 0, 0, 0]
::opts[].sname elements >= 0
::opts[].flags == [9, 4, 4, 4, 4, 4, 3, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 9, 4, 4, 0, 0, 0, 3, 0, 3, 9, 9, 4, 4, 3, 3, 9, 4, 17, 4, 4, 9, 9, 3, 3, 4, 4, 3, 4, 3, 4, 4, 3, 8, 4, 3, 3, 3, 4, 4, 4, 0, 0, 0, 9, 4, 4, 4, 4, 4, 4, 4, 3, 9, 9, 4, 5, 9, 17, 4, 4, 4, 4, 4, 9, 4, 3, 9, 4, 3, 9, 4, 3, 17, 0]
::opts[].flags elements >= 0
::opts[].func has only one value, of length 96
::opts[].var has only one value, of length 96
::opts[].value == [0, 1, 2, 0, 0, 0, 0, 1, 0, 0, 128, 128, 1, 1, 2, 2, 4, 4, 4, 8, 1, 0, 0, 16, 1024, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 2, 1, 2, 0, 1, 1, 0, 1, 1, 0, 0, 0, 64, 64, 16384, 0, 0, 0, 0, 4, 1, 1, 2, 2, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 2, 1, 1, 512, 0, 256, 0, 0, 8192, 0, 0, 4096, 0, 0, 0]
::opts[].value elements >= 0
::pl has only one value
::pl.list == null
::pl.linebuf has only one value
::pl.dir has only one value
::pl.type == 0
::term_help has only one value
::term_help[] contains no nulls and has only one value, of length 26
::term_help[].key == [115, 102, 100, 93, 91, 98, 112, 46, 44, 58, 59, 62, 60, 43, 45, 114, 118, 108, 116, 109, 104, 113, 99, 120, 119, 107]
::term_help[].key2 == [32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 67, 88, 0, 0]
::term_help[].key2 elements >= 0
::term_help[].desc == [interrupt/restart playback (i.e. '(un)pause'), next track, previous track, next directory (next track until directory part changes), previous directory (previous track until directory part changes), back to beginning of track, loop around current position (don't combine with output buffer), forward, rewind, fast forward, fast rewind, fine forward, fine rewind, volume up, volume down, RVA switch, verbose switch, list current playlist, indicating current track there, display tag info (again), print MPEG header info (again), this help, quit, pitch up (small step, big step), pitch down (small step, big step), reset pitch to zero, print out current position in playlist and track, for the benefit of some external tool to store bookmarks]
argv has only one value
argv[] == [./mpg123]
argv[] elements == "./mpg123"
size(::rva_name[]) == 3
size(::genre_table[]) == 148
size(::opts[]) == 96
size(::term_help[]) == 26
::opts[::stopped] has only one value
::opts[::stopped].sname == 107
::opts[::stopped].flags == 9
::opts[::stopped].func == null
::opts[::stopped].var has only one value
::term_help[::stopped] has only one value
::term_help[::stopped].key == 115
::term_help[::stopped].key2 == 32
::opts[::loptind] has only one value
::opts[::loptind].sname == 50
::opts[::loptind].var has only one value
::term_help[::loptind] has only one value
::term_help[::loptind].key == 102
::opts[::param.output_flags] has only one value
::opts[::param.output_flags-1] has only one value
::opts[::param.output_flags].sname == 109
::opts[::param.output_flags].func has only one value
::opts[::param.output_flags].var has only one value
::term_help[::param.output_flags] has only one value
::term_help[::param.output_flags-1] has only one value
::term_help[::param.output_flags].key == 118
::term_help[::param.output_flags-1].key == 114
::opts[::param.preframes] has only one value
::opts[::param.preframes-1] has only one value
::opts[::param.preframes-1].sname == 116
::opts[::param.preframes].func has only one value
::opts[::param.preframes-1].func has only one value
::term_help[::param.preframes] has only one value
::term_help[::param.preframes-1] has only one value
::term_help[::param.preframes].key == 91
::term_help[::param.preframes-1].key == 93
::stopped in ::opts[].flags
::binpath == ::fullprogname
::param.output_flags in ::opts[].value
::param.resync_limit in ::opts[].value
::param.name == ::prgName
::term_help[::loptind].key in ::opts[].sname
::term_help[::param.output_flags].key in ::opts[].sname
::term_help[::param.output_flags-1].key in ::opts[].sname
size(::rva_name[]) in ::opts[].flags
::opts[::stopped].sname in ::term_help[].key
::opts[::param.output_flags].sname in ::term_help[].key
::opts[::param.preframes-1].sname in ::term_help[].key
===========================================================================
..prepare_playlist():::EXIT
::stopped == ::paused
::stopped == ::control_file
::stopped == ::loptchr
::stopped == ::framenum
::stopped == ::htd.icy_interval
::stopped == ::OutputDescriptor
::stopped == ::intflag
::stopped == ::param.aggressive
::stopped == ::param.shuffle
::stopped == ::param.remote
::stopped == ::param.remote_err
::stopped == ::param.quiet
::stopped == ::param.xterm_title
::stopped == ::param.usebuffer
::stopped == ::param.verbose
::stopped == ::param.checkrange
::stopped == ::param.force_reopen
::stopped == ::param.test_cpu
::stopped == ::param.realtime
::stopped == ::param.listentry
::stopped == ::param.long_id3
::stopped == ::param.list_cpu
::stopped == ::param.timeout
::stopped == ::param.delay
::stopped == ::param.index
::stopped == ::param.down_sample
::stopped == ::param.rva
::stopped == ::param.halfspeed
::stopped == ::param.doublespeed
::stopped == ::param.start_frame
::stopped == ::param.force_rate
::stopped == ::param.smooth
::stopped == ::param.keep_open
::stopped == ::param.force_utf8
::stopped == ::param.icy_interval
::stopped == ::global_premium
::stopped == ::frames_left
::stopped == ::deathflag
::stopped == ::seeking
::stopped == orig(::stopped)
::stopped == orig(::paused)
::stopped == orig(::control_file)
::stopped == orig(::loptchr)
::stopped == orig(::framenum)
::stopped == orig(::htd.icy_interval)
::stopped == orig(::OutputDescriptor)
::stopped == orig(::intflag)
::stopped == orig(::param.aggressive)
::stopped == orig(::param.shuffle)
::stopped == orig(::param.remote)
::stopped == orig(::param.remote_err)
::stopped == orig(::param.quiet)
::stopped == orig(::param.xterm_title)
::stopped == orig(::param.usebuffer)
::stopped == orig(::param.verbose)
::stopped == orig(::param.checkrange)
::stopped == orig(::param.force_reopen)
::stopped == orig(::param.test_cpu)
::stopped == orig(::param.realtime)
::stopped == orig(::param.listentry)
::stopped == orig(::param.long_id3)
::stopped == orig(::param.list_cpu)
::stopped == orig(::param.timeout)
::stopped == orig(::param.delay)
::stopped == orig(::param.index)
::stopped == orig(::param.down_sample)
::stopped == orig(::param.rva)
::stopped == orig(::param.halfspeed)
::stopped == orig(::param.doublespeed)
::stopped == orig(::param.start_frame)
::stopped == orig(::param.force_rate)
::stopped == orig(::param.smooth)
::stopped == orig(::param.keep_open)
::stopped == orig(::param.force_utf8)
::stopped == orig(::param.icy_interval)
::stopped == orig(::global_premium)
::stopped == orig(::frames_left)
::stopped == orig(::deathflag)
::stopped == orig(::pl.loop)
::stopped == orig(::seeking)
::stopped == size(argv[])-1
::stopped == orig(size(argv[]))-1
::stopped == ::opts[::stopped].value
::stopped == ::pl.list[::stopped].freeit
::stopped == orig(::opts[post(::stopped)].value)
::stopped == ::opts[::paused].value
::stopped == ::pl.list[::paused].freeit
::stopped == orig(::opts[post(::paused)].value)
::stopped == ::opts[::control_file].value
::stopped == ::pl.list[::control_file].freeit
::stopped == orig(::opts[post(::control_file)].value)
::stopped == ::opts[::loptind].value
::stopped == ::opts[::loptind-1].value
::stopped == ::term_help[::loptind].key2
::stopped == ::term_help[::loptind-1].key2
::stopped == orig(::opts[post(::loptind)].value)
::stopped == orig(::opts[post(::loptind)-1].value)
::stopped == orig(::term_help[post(::loptind)].key2)
::stopped == orig(::term_help[post(::loptind)-1].key2)
::stopped == ::opts[::loptchr].value
::stopped == ::pl.list[::loptchr].freeit
::stopped == orig(::opts[post(::loptchr)].value)
::stopped == ::opts[::framenum].value
::stopped == ::pl.list[::framenum].freeit
::stopped == orig(::opts[post(::framenum)].value)
::stopped == ::opts[::htd.icy_interval].value
::stopped == ::pl.list[::htd.icy_interval].freeit
::stopped == orig(::opts[post(::htd.icy_interval)].value)
::stopped == ::opts[::OutputDescriptor].value
::stopped == ::pl.list[::OutputDescriptor].freeit
::stopped == orig(::opts[post(::OutputDescriptor)].value)
::stopped == ::opts[::intflag].value
::stopped == ::pl.list[::intflag].freeit
::stopped == orig(::opts[post(::intflag)].value)
::stopped == ::opts[::param.aggressive].value
::stopped == ::pl.list[::param.aggressive].freeit
::stopped == orig(::opts[post(::param.aggressive)].value)
::stopped == ::opts[::param.shuffle].value
::stopped == ::pl.list[::param.shuffle].freeit
::stopped == orig(::opts[post(::param.shuffle)].value)
::stopped == ::opts[::param.remote].value
::stopped == ::pl.list[::param.remote].freeit
::stopped == orig(::opts[post(::param.remote)].value)
::stopped == ::opts[::param.remote_err].value
::stopped == ::pl.list[::param.remote_err].freeit
::stopped == orig(::opts[post(::param.remote_err)].value)
::stopped == ::opts[::param.quiet].value
::stopped == ::pl.list[::param.quiet].freeit
::stopped == orig(::opts[post(::param.quiet)].value)
::stopped == ::opts[::param.xterm_title].value
::stopped == ::pl.list[::param.xterm_title].freeit
::stopped == orig(::opts[post(::param.xterm_title)].value)
::stopped == ::opts[::param.usebuffer].value
::stopped == ::pl.list[::param.usebuffer].freeit
::stopped == orig(::opts[post(::param.usebuffer)].value)
::stopped == ::opts[::param.verbose].value
::stopped == ::pl.list[::param.verbose].freeit
::stopped == orig(::opts[post(::param.verbose)].value)
::stopped == ::opts[::param.output_flags-1].sname
::stopped == ::term_help[::param.output_flags].key2
::stopped == ::term_help[::param.output_flags-1].key2
::stopped == orig(::opts[post(::param.output_flags)-1].sname)
::stopped == orig(::term_help[post(::param.output_flags)].key2)
::stopped == orig(::term_help[post(::param.output_flags)-1].key2)
::stopped == ::opts[::param.term_ctrl-1].value
::stopped == ::pl.list[::param.term_ctrl].freeit
::stopped == ::pl.list[::param.term_ctrl-1].freeit
::stopped == ::term_help[::param.term_ctrl].key2
::stopped == orig(::opts[post(::param.term_ctrl)-1].value)
::stopped == orig(::term_help[post(::param.term_ctrl)].key2)
::stopped == ::opts[::param.checkrange].value
::stopped == ::pl.list[::param.checkrange].freeit
::stopped == orig(::opts[post(::param.checkrange)].value)
::stopped == ::opts[::param.force_reopen].value
::stopped == ::pl.list[::param.force_reopen].freeit
::stopped == orig(::opts[post(::param.force_reopen)].value)
::stopped == ::opts[::param.test_cpu].value
::stopped == ::pl.list[::param.test_cpu].freeit
::stopped == orig(::opts[post(::param.test_cpu)].value)
::stopped == ::opts[::param.realtime].value
::stopped == ::pl.list[::param.realtime].freeit
::stopped == orig(::opts[post(::param.realtime)].value)
::stopped == ::opts[::param.listentry].value
::stopped == ::pl.list[::param.listentry].freeit
::stopped == orig(::opts[post(::param.listentry)].value)
::stopped == ::opts[::param.long_id3].value
::stopped == ::pl.list[::param.long_id3].freeit
::stopped == orig(::opts[post(::param.long_id3)].value)
::stopped == ::opts[::param.list_cpu].value
::stopped == ::pl.list[::param.list_cpu].freeit
::stopped == orig(::opts[post(::param.list_cpu)].value)
::stopped == ::opts[::param.timeout].value
::stopped == ::pl.list[::param.timeout].freeit
::stopped == orig(::opts[post(::param.timeout)].value)
::stopped == ::opts[::param.loop-1].value
::stopped == ::pl.list[::param.loop].freeit
::stopped == ::pl.list[::param.loop-1].freeit
::stopped == ::term_help[::param.loop].key2
::stopped == orig(::opts[post(::param.loop)-1].value)
::stopped == orig(::term_help[post(::param.loop)].key2)
::stopped == ::opts[::param.delay].value
::stopped == ::pl.list[::param.delay].freeit
::stopped == orig(::opts[post(::param.delay)].value)
::stopped == ::opts[::param.index].value
::stopped == ::pl.list[::param.index].freeit
::stopped == orig(::opts[post(::param.index)].value)
::stopped == ::opts[::param.down_sample].value
::stopped == ::pl.list[::param.down_sample].freeit
::stopped == orig(::opts[post(::param.down_sample)].value)
::stopped == ::opts[::param.rva].value
::stopped == ::pl.list[::param.rva].freeit
::stopped == orig(::opts[post(::param.rva)].value)
::stopped == ::opts[::param.halfspeed].value
::stopped == ::pl.list[::param.halfspeed].freeit
::stopped == orig(::opts[post(::param.halfspeed)].value)
::stopped == ::opts[::param.doublespeed].value
::stopped == ::pl.list[::param.doublespeed].freeit
::stopped == orig(::opts[post(::param.doublespeed)].value)
::stopped == ::opts[::param.start_frame].value
::stopped == ::pl.list[::param.start_frame].freeit
::stopped == orig(::opts[post(::param.start_frame)].value)
::stopped == ::opts[::param.force_rate].value
::stopped == ::pl.list[::param.force_rate].freeit
::stopped == orig(::opts[post(::param.force_rate)].value)
::stopped == ::opts[::param.talk_icy-1].value
::stopped == ::pl.list[::param.talk_icy].freeit
::stopped == ::pl.list[::param.talk_icy-1].freeit
::stopped == ::term_help[::param.talk_icy].key2
::stopped == orig(::opts[post(::param.talk_icy)-1].value)
::stopped == orig(::term_help[post(::param.talk_icy)].key2)
::stopped == ::opts[::param.smooth].value
::stopped == ::pl.list[::param.smooth].freeit
::stopped == orig(::opts[post(::param.smooth)].value)
::stopped == ::opts[::param.keep_open].value
::stopped == ::pl.list[::param.keep_open].freeit
::stopped == orig(::opts[post(::param.keep_open)].value)
::stopped == ::opts[::param.force_utf8].value
::stopped == ::pl.list[::param.force_utf8].freeit
::stopped == orig(::opts[post(::param.force_utf8)].value)
::stopped == ::opts[::param.preframes].value
::stopped == ::opts[::param.preframes-1].value
::stopped == ::term_help[::param.preframes].key2
::stopped == ::term_help[::param.preframes-1].key2
::stopped == orig(::opts[post(::param.preframes)].value)
::stopped == orig(::opts[post(::param.preframes)-1].value)
::stopped == orig(::term_help[post(::param.preframes)].key2)
::stopped == orig(::term_help[post(::param.preframes)-1].key2)
::stopped == ::opts[::param.icy_interval].value
::stopped == ::pl.list[::param.icy_interval].freeit
::stopped == orig(::opts[post(::param.icy_interval)].value)
::stopped == ::opts[::global_premium].value
::stopped == ::pl.list[::global_premium].freeit
::stopped == orig(::opts[post(::global_premium)].value)
::stopped == ::opts[::frames_left].value
::stopped == ::pl.list[::frames_left].freeit
::stopped == orig(::opts[post(::frames_left)].value)
::stopped == ::opts[::fresh-1].value
::stopped == ::pl.list[::fresh].freeit
::stopped == ::pl.list[::fresh-1].freeit
::stopped == ::term_help[::fresh].key2
::stopped == orig(::opts[post(::fresh)-1].value)
::stopped == orig(::term_help[post(::fresh)].key2)
::stopped == ::opts[::deathflag].value
::stopped == ::pl.list[::deathflag].freeit
::stopped == orig(::opts[post(::deathflag)].value)
::stopped == ::opts[orig(::param.output_flags)-1].sname
::stopped == ::opts[::utf8env-1].value
::stopped == ::opts[::pl.loop-1].value
::stopped == ::opts[::seeking].value
::stopped == ::opts[orig(::stopped)].value
::stopped == ::opts[orig(::paused)].value
::stopped == ::opts[orig(::control_file)].value
::stopped == ::opts[orig(::loptind)-1].value
::stopped == ::opts[orig(::loptchr)].value
::stopped == ::opts[orig(::framenum)].value
::stopped == ::opts[orig(::htd.icy_interval)].value
::stopped == ::opts[orig(::OutputDescriptor)].value
::stopped == ::opts[orig(::intflag)].value
::stopped == ::opts[orig(::param.aggressive)].value
::stopped == ::opts[orig(::param.shuffle)].value
::stopped == ::opts[orig(::param.remote)].value
::stopped == ::opts[orig(::param.remote_err)].value
::stopped == ::opts[orig(::param.quiet)].value
::stopped == ::opts[orig(::param.xterm_title)].value
::stopped == ::opts[orig(::param.usebuffer)].value
::stopped == ::opts[orig(::param.verbose)].value
::stopped == ::opts[orig(::param.term_ctrl)-1].value
::stopped == ::opts[orig(::param.checkrange)].value
::stopped == ::opts[orig(::param.force_reopen)].value
::stopped == ::opts[orig(::param.test_cpu)].value
::stopped == ::opts[orig(::param.realtime)].value
::stopped == ::opts[orig(::param.listentry)].value
::stopped == ::opts[orig(::param.long_id3)].value
::stopped == ::opts[orig(::param.list_cpu)].value
::stopped == ::opts[orig(::param.timeout)].value
::stopped == ::opts[orig(::param.loop)-1].value
::stopped == ::opts[orig(::param.delay)].value
::stopped == ::opts[orig(::param.index)].value
::stopped == ::opts[orig(::param.down_sample)].value
::stopped == ::opts[orig(::param.rva)].value
::stopped == ::opts[orig(::param.halfspeed)].value
::stopped == ::opts[orig(::param.doublespeed)].value
::stopped == ::opts[orig(::param.start_frame)].value
::stopped == ::opts[orig(::param.force_rate)].value
::stopped == ::opts[orig(::param.talk_icy)-1].value
::stopped == ::opts[orig(::param.smooth)].value
::stopped == ::opts[orig(::param.keep_open)].value
::stopped == ::opts[orig(::param.force_utf8)].value
::stopped == ::opts[orig(::param.preframes)].value
::stopped == ::opts[orig(::param.preframes)-1].value
::stopped == ::opts[orig(::param.icy_interval)].value
::stopped == ::opts[orig(::global_premium)].value
::stopped == ::opts[orig(::frames_left)].value
::stopped == ::opts[orig(::fresh)-1].value
::stopped == ::opts[orig(::deathflag)].value
::stopped == ::opts[orig(::utf8env)-1].value
::stopped == ::opts[orig(::pl.loop)].value
::stopped == ::opts[orig(::seeking)].value
::stopped == ::opts[orig(argc)].value
::stopped == ::opts[orig(argc)-1].value
::stopped == ::pl.list[::utf8env].freeit
::stopped == ::pl.list[::utf8env-1].freeit
::stopped == ::term_help[::utf8env].key2
::stopped == orig(::opts[post(::utf8env)-1].value)
::stopped == orig(::term_help[post(::utf8env)].key2)
::stopped == ::pl.list[::pl.loop].freeit
::stopped == ::pl.list[::pl.loop-1].freeit
::stopped == ::term_help[::pl.loop].key2
::stopped == orig(::opts[post(::pl.loop)-1].value)
::stopped == orig(::term_help[post(::pl.loop)].key2)
::stopped == ::pl.list[::seeking].freeit
::stopped == ::pl.list[orig(::stopped)].freeit
::stopped == ::pl.list[orig(::paused)].freeit
::stopped == ::pl.list[orig(::control_file)].freeit
::stopped == ::pl.list[orig(::loptind)].freeit
::stopped == ::pl.list[orig(::loptind)-1].freeit
::stopped == ::pl.list[orig(::loptchr)].freeit
::stopped == ::pl.list[orig(::framenum)].freeit
::stopped == ::pl.list[orig(::htd.icy_interval)].freeit
::stopped == ::pl.list[orig(::OutputDescriptor)].freeit
::stopped == ::pl.list[orig(::intflag)].freeit
::stopped == ::pl.list[orig(::param.aggressive)].freeit
::stopped == ::pl.list[orig(::param.shuffle)].freeit
::stopped == ::pl.list[orig(::param.remote)].freeit
::stopped == ::pl.list[orig(::param.remote_err)].freeit
::stopped == ::pl.list[orig(::param.quiet)].freeit
::stopped == ::pl.list[orig(::param.xterm_title)].freeit
::stopped == ::pl.list[orig(::param.usebuffer)].freeit
::stopped == ::pl.list[orig(::param.verbose)].freeit
::stopped == ::pl.list[orig(::param.term_ctrl)].freeit
::stopped == ::pl.list[orig(::param.term_ctrl)-1].freeit
::stopped == ::pl.list[orig(::param.checkrange)].freeit
::stopped == ::pl.list[orig(::param.force_reopen)].freeit
::stopped == ::pl.list[orig(::param.test_cpu)].freeit
::stopped == ::pl.list[orig(::param.realtime)].freeit
::stopped == ::pl.list[orig(::param.listentry)].freeit
::stopped == ::pl.list[orig(::param.long_id3)].freeit
::stopped == ::pl.list[orig(::param.list_cpu)].freeit
::stopped == ::pl.list[orig(::param.timeout)].freeit
::stopped == ::pl.list[orig(::param.loop)].freeit
::stopped == ::pl.list[orig(::param.loop)-1].freeit
::stopped == ::pl.list[orig(::param.delay)].freeit
::stopped == ::pl.list[orig(::param.index)].freeit
::stopped == ::pl.list[orig(::param.down_sample)].freeit
::stopped == ::pl.list[orig(::param.rva)].freeit
::stopped == ::pl.list[orig(::param.halfspeed)].freeit
::stopped == ::pl.list[orig(::param.doublespeed)].freeit
::stopped == ::pl.list[orig(::param.start_frame)].freeit
::stopped == ::pl.list[orig(::param.force_rate)].freeit
::stopped == ::pl.list[orig(::param.talk_icy)].freeit
::stopped == ::pl.list[orig(::param.talk_icy)-1].freeit
::stopped == ::pl.list[orig(::param.smooth)].freeit
::stopped == ::pl.list[orig(::param.keep_open)].freeit
::stopped == ::pl.list[orig(::param.force_utf8)].freeit
::stopped == ::pl.list[orig(::param.icy_interval)].freeit
::stopped == ::pl.list[orig(::global_premium)].freeit
::stopped == ::pl.list[orig(::frames_left)].freeit
::stopped == ::pl.list[orig(::fresh)].freeit
::stopped == ::pl.list[orig(::fresh)-1].freeit
::stopped == ::pl.list[orig(::deathflag)].freeit
::stopped == ::pl.list[orig(::utf8env)].freeit
::stopped == ::pl.list[orig(::utf8env)-1].freeit
::stopped == ::pl.list[orig(::pl.loop)].freeit
::stopped == ::pl.list[orig(::seeking)].freeit
::stopped == orig(::opts[post(::seeking)].value)
::stopped == ::term_help[orig(::loptind)].key2
::stopped == ::term_help[orig(::param.output_flags)].key2
::stopped == ::term_help[orig(::param.output_flags)-1].key2
::stopped == ::term_help[orig(::param.term_ctrl)].key2
::stopped == ::term_help[orig(::param.loop)].key2
::stopped == ::term_help[orig(::param.talk_icy)].key2
::stopped == ::term_help[orig(::param.preframes)].key2
::stopped == ::term_help[orig(::param.preframes)-1].key2
::stopped == ::term_help[orig(::fresh)].key2
::stopped == ::term_help[orig(::utf8env)].key2
::stopped == ::term_help[orig(argc)].key2
::stopped == ::term_help[orig(argc)-1].key2
::stopped == orig(::opts[post(argc)].value)
::stopped == orig(::opts[post(argc)-1].value)
::stopped == orig(::term_help[post(argc)].key2)
::stopped == orig(::term_help[post(argc)-1].key2)
::stopped == orig(::opts[::stopped].value)
::stopped == orig(::opts[::paused].value)
::stopped == orig(::opts[::control_file].value)
::stopped == orig(::opts[::loptind-1].value)
::stopped == orig(::term_help[::loptind].key2)
::stopped == orig(::opts[::loptchr].value)
::stopped == orig(::opts[::framenum].value)
::stopped == orig(::opts[::htd.icy_interval].value)
::stopped == orig(::opts[::OutputDescriptor].value)
::stopped == orig(::opts[::intflag].value)
::stopped == orig(::opts[::param.aggressive].value)
::stopped == orig(::opts[::param.shuffle].value)
::stopped == orig(::opts[::param.remote].value)
::stopped == orig(::opts[::param.remote_err].value)
::stopped == orig(::opts[::param.quiet].value)
::stopped == orig(::opts[::param.xterm_title].value)
::stopped == orig(::opts[::param.usebuffer].value)
::stopped == orig(::opts[::param.verbose].value)
::stopped == orig(::opts[::param.output_flags-1].sname)
::stopped == orig(::term_help[::param.output_flags].key2)
::stopped == orig(::term_help[::param.output_flags-1].key2)
::stopped == orig(::opts[::param.term_ctrl-1].value)
::stopped == orig(::term_help[::param.term_ctrl].key2)
::stopped == orig(::opts[::param.checkrange].value)
::stopped == orig(::opts[::param.force_reopen].value)
::stopped == orig(::opts[::param.test_cpu].value)
::stopped == orig(::opts[::param.realtime].value)
::stopped == orig(::opts[::param.listentry].value)
::stopped == orig(::opts[::param.long_id3].value)
::stopped == orig(::opts[::param.list_cpu].value)
::stopped == orig(::opts[::param.timeout].value)
::stopped == orig(::opts[::param.loop-1].value)
::stopped == orig(::term_help[::param.loop].key2)
::stopped == orig(::opts[::param.delay].value)
::stopped == orig(::opts[::param.index].value)
::stopped == orig(::opts[::param.down_sample].value)
::stopped == orig(::opts[::param.rva].value)
::stopped == orig(::opts[::param.halfspeed].value)
::stopped == orig(::opts[::param.doublespeed].value)
::stopped == orig(::opts[::param.start_frame].value)
::stopped == orig(::opts[::param.force_rate].value)
::stopped == orig(::opts[::param.talk_icy-1].value)
::stopped == orig(::term_help[::param.talk_icy].key2)
::stopped == orig(::opts[::param.smooth].value)
::stopped == orig(::opts[::param.keep_open].value)
::stopped == orig(::opts[::param.force_utf8].value)
::stopped == orig(::opts[::param.preframes].value)
::stopped == orig(::opts[::param.preframes-1].value)
::stopped == orig(::term_help[::param.preframes].key2)
::stopped == orig(::term_help[::param.preframes-1].key2)
::stopped == orig(::opts[::param.icy_interval].value)
::stopped == orig(::opts[::global_premium].value)
::stopped == orig(::opts[::frames_left].value)
::stopped == orig(::opts[::fresh-1].value)
::stopped == orig(::term_help[::fresh].key2)
::stopped == orig(::opts[::deathflag].value)
::stopped == orig(::opts[::utf8env-1].value)
::stopped == orig(::opts[::pl.loop].value)
::stopped == orig(::opts[::seeking].value)
::stopped == orig(::opts[argc].value)
::stopped == orig(::opts[argc-1].value)
::stopped == orig(::term_help[::utf8env].key2)
::stopped == orig(::term_help[argc].key2)
::stopped == orig(::term_help[argc-1].key2)
::rva_name == orig(::rva_name)
::outstream == ::pl.file
::outstream == orig(::outstream)
::outstream == orig(::pl.file)
::outstream == ::opts[::loptind].var
::outstream == ::opts[::loptind-1].var
::outstream == orig(::opts[post(::loptind)].var)
::outstream == orig(::opts[post(::loptind)-1].var)
::outstream == ::opts[::param.preframes].var
::outstream == ::opts[::param.preframes-1].var
::outstream == orig(::opts[post(::param.preframes)].var)
::outstream == orig(::opts[post(::param.preframes)-1].var)
::outstream == ::opts[orig(::param.preframes)].var
::outstream == ::opts[orig(::param.preframes)-1].var
::outstream == ::opts[orig(argc)].var
::outstream == ::opts[orig(argc)-1].var
::outstream == orig(::opts[post(argc)].var)
::outstream == orig(::opts[post(argc)-1].var)
::outstream == orig(::opts[::param.preframes].var)
::outstream == orig(::opts[::param.preframes-1].var)
::outstream == orig(::opts[argc].var)
::outstream == orig(::opts[argc-1].var)
::loptind == ::param.preframes
::loptind == orig(::param.preframes)
::loptind == orig(argc)
::loptind == ::opts[::loptind].flags
::loptind == ::opts[::loptind-1].flags
::loptind == orig(::opts[post(::loptind)].flags)
::loptind == orig(::opts[post(::loptind)-1].flags)
::loptind == ::opts[::param.output_flags].flags
::loptind == ::opts[::param.output_flags-1].flags
::loptind == ::opts[::param.output_flags].value
::loptind == orig(::opts[post(::param.output_flags)].flags)
::loptind == orig(::opts[post(::param.output_flags)-1].flags)
::loptind == orig(::opts[post(::param.output_flags)].value)
::loptind == ::opts[::param.term_ctrl].flags
::loptind == orig(::opts[post(::param.term_ctrl)].flags)
::loptind == ::opts[::param.loop].flags
::loptind == orig(::opts[post(::param.loop)].flags)
::loptind == ::opts[::param.talk_icy].flags
::loptind == orig(::opts[post(::param.talk_icy)].flags)
::loptind == ::opts[::param.preframes].flags
::loptind == ::opts[::param.preframes-1].flags
::loptind == orig(::opts[post(::param.preframes)].flags)
::loptind == orig(::opts[post(::param.preframes)-1].flags)
::loptind == ::opts[::fresh].flags
::loptind == orig(::opts[post(::fresh)].flags)
::loptind == ::opts[::utf8env].flags
::loptind == ::opts[::pl.loop].flags
::loptind == ::opts[orig(::loptind)].flags
::loptind == ::opts[orig(::param.output_flags)].flags
::loptind == ::opts[orig(::param.output_flags)-1].flags
::loptind == ::opts[orig(::param.term_ctrl)].flags
::loptind == ::opts[orig(::param.loop)].flags
::loptind == ::opts[orig(::param.talk_icy)].flags
::loptind == ::opts[orig(::param.preframes)].flags
::loptind == ::opts[orig(::param.preframes)-1].flags
::loptind == ::opts[orig(::fresh)].flags
::loptind == ::opts[orig(::utf8env)].flags
::loptind == ::opts[orig(argc)].flags
::loptind == ::opts[orig(argc)-1].flags
::loptind == ::opts[orig(::param.output_flags)].value
::loptind == orig(::opts[post(::utf8env)].flags)
::loptind == orig(::opts[post(::pl.loop)].flags)
::loptind == orig(::opts[post(argc)].flags)
::loptind == orig(::opts[post(argc)-1].flags)
::loptind == orig(::opts[::loptind].flags)
::loptind == orig(::opts[::param.output_flags].flags)
::loptind == orig(::opts[::param.output_flags-1].flags)
::loptind == orig(::opts[::param.output_flags].value)
::loptind == orig(::opts[::param.term_ctrl].flags)
::loptind == orig(::opts[::param.loop].flags)
::loptind == orig(::opts[::param.talk_icy].flags)
::loptind == orig(::opts[::param.preframes].flags)
::loptind == orig(::opts[::param.preframes-1].flags)
::loptind == orig(::opts[::fresh].flags)
::loptind == orig(::opts[::utf8env].flags)
::loptind == orig(::opts[argc].flags)
::loptind == orig(::opts[argc-1].flags)
::genre_table == orig(::genre_table)
::genre_count == orig(::genre_count)
::genre_count == size(::genre_table[])-1
::genre_count == orig(size(::genre_table[]))-1
::htd == orig(::htd)
::htd.content_type == orig(::htd.content_type)
::htd.content_type.size == ::param.appflags
::htd.content_type.fill == ::param.appflags
::htd.icy_name == orig(::htd.icy_name)
::htd.icy_name.size == ::param.appflags
::htd.icy_name.fill == ::param.appflags
::htd.icy_url == orig(::htd.icy_url)
::htd.icy_url.size == ::param.appflags
::htd.icy_url.fill == ::param.appflags
::htd.proxyhost == orig(::htd.proxyhost)
::htd.proxyhost.size == ::param.appflags
::htd.proxyhost.fill == ::param.appflags
::htd.proxyport == orig(::htd.proxyport)
::htd.proxyport.size == ::param.appflags
::htd.proxyport.fill == ::param.appflags
::htd.proxystate == orig(::htd.proxystate)
::param == orig(::param)
::param.output_flags == orig(::param.output_flags)
::param.term_ctrl == ::fresh
::param.loop == ::fresh
::param.frame_number == ::param.gain
::param.frame_number == orig(::param.frame_number)
::param.frame_number == orig(::param.gain)
::param.outscale == orig(::param.outscale)
::param.flags == orig(::param.flags)
::param.talk_icy == ::fresh
::param.resync_limit == orig(::param.resync_limit)
::param.pitch == ::param.device_buffer
::param.pitch == orig(::param.pitch)
::param.pitch == orig(::param.device_buffer)
::param.appflags == ::pl.entry
::param.appflags == ::pl.playcount
::param.appflags == ::pl.pos
::param.appflags == ::pl.num
::param.appflags == ::pl.linebuf.size
::param.appflags == ::pl.linebuf.fill
::param.appflags == ::pl.dir.size
::param.appflags == ::pl.dir.fill
::param.appflags == orig(::htd.content_type.size)
::param.appflags == orig(::htd.content_type.fill)
::param.appflags == orig(::htd.icy_name.size)
::param.appflags == orig(::htd.icy_name.fill)
::param.appflags == orig(::htd.icy_url.size)
::param.appflags == orig(::htd.icy_url.fill)
::param.appflags == orig(::htd.proxyhost.size)
::param.appflags == orig(::htd.proxyhost.fill)
::param.appflags == orig(::htd.proxyport.size)
::param.appflags == orig(::htd.proxyport.fill)
::param.appflags == orig(::param.appflags)
::param.appflags == orig(::pl.entry)
::param.appflags == orig(::pl.playcount)
::param.appflags == orig(::pl.size)
::param.appflags == orig(::pl.fill)
::param.appflags == orig(::pl.pos)
::param.appflags == orig(::pl.num)
::param.appflags == orig(::pl.alloc_step)
::param.appflags == orig(::pl.linebuf.size)
::param.appflags == orig(::pl.linebuf.fill)
::param.appflags == orig(::pl.dir.size)
::param.appflags == orig(::pl.dir.fill)
::param.appflags == ::pl.list[::stopped].playcount
::param.appflags == ::pl.list[::paused].playcount
::param.appflags == ::pl.list[::control_file].playcount
::param.appflags == ::pl.list[::loptchr].playcount
::param.appflags == ::pl.list[::framenum].playcount
::param.appflags == ::pl.list[::htd.icy_interval].playcount
::param.appflags == ::pl.list[::OutputDescriptor].playcount
::param.appflags == ::pl.list[::intflag].playcount
::param.appflags == ::pl.list[::param.aggressive].playcount
::param.appflags == ::pl.list[::param.shuffle].playcount
::param.appflags == ::pl.list[::param.remote].playcount
::param.appflags == ::pl.list[::param.remote_err].playcount
::param.appflags == ::pl.list[::param.quiet].playcount
::param.appflags == ::pl.list[::param.xterm_title].playcount
::param.appflags == ::pl.list[::param.usebuffer].playcount
::param.appflags == ::pl.list[::param.verbose].playcount
::param.appflags == ::pl.list[::param.term_ctrl].playcount
::param.appflags == ::pl.list[::param.term_ctrl-1].playcount
::param.appflags == ::pl.list[::param.checkrange].playcount
::param.appflags == ::pl.list[::param.force_reopen].playcount
::param.appflags == ::pl.list[::param.test_cpu].playcount
::param.appflags == ::pl.list[::param.realtime].playcount
::param.appflags == ::pl.list[::param.listentry].playcount
::param.appflags == ::pl.list[::param.long_id3].playcount
::param.appflags == ::pl.list[::param.list_cpu].playcount
::param.appflags == ::pl.list[::param.timeout].playcount
::param.appflags == ::pl.list[::param.loop].playcount
::param.appflags == ::pl.list[::param.loop-1].playcount
::param.appflags == ::pl.list[::param.delay].playcount
::param.appflags == ::pl.list[::param.index].playcount
::param.appflags == ::pl.list[::param.down_sample].playcount
::param.appflags == ::pl.list[::param.rva].playcount
::param.appflags == ::pl.list[::param.halfspeed].playcount
::param.appflags == ::pl.list[::param.doublespeed].playcount
::param.appflags == ::pl.list[::param.start_frame].playcount
::param.appflags == ::pl.list[::param.force_rate].playcount
::param.appflags == ::pl.list[::param.talk_icy].playcount
::param.appflags == ::pl.list[::param.talk_icy-1].playcount
::param.appflags == ::pl.list[::param.smooth].playcount
::param.appflags == ::pl.list[::param.keep_open].playcount
::param.appflags == ::pl.list[::param.force_utf8].playcount
::param.appflags == ::pl.list[::param.icy_interval].playcount
::param.appflags == ::pl.list[::global_premium].playcount
::param.appflags == ::pl.list[::frames_left].playcount
::param.appflags == ::pl.list[::fresh].playcount
::param.appflags == ::pl.list[::fresh-1].playcount
::param.appflags == ::pl.list[::deathflag].playcount
::param.appflags == ::pl.list[::utf8env].playcount
::param.appflags == ::pl.list[::utf8env-1].playcount
::param.appflags == ::pl.list[::pl.loop].playcount
::param.appflags == ::pl.list[::pl.loop-1].playcount
::param.appflags == ::pl.list[::seeking].playcount
::param.appflags == ::pl.list[orig(::stopped)].playcount
::param.appflags == ::pl.list[orig(::paused)].playcount
::param.appflags == ::pl.list[orig(::control_file)].playcount
::param.appflags == ::pl.list[orig(::loptind)].playcount
::param.appflags == ::pl.list[orig(::loptind)-1].playcount
::param.appflags == ::pl.list[orig(::loptchr)].playcount
::param.appflags == ::pl.list[orig(::framenum)].playcount
::param.appflags == ::pl.list[orig(::htd.icy_interval)].playcount
::param.appflags == ::pl.list[orig(::OutputDescriptor)].playcount
::param.appflags == ::pl.list[orig(::intflag)].playcount
::param.appflags == ::pl.list[orig(::param.aggressive)].playcount
::param.appflags == ::pl.list[orig(::param.shuffle)].playcount
::param.appflags == ::pl.list[orig(::param.remote)].playcount
::param.appflags == ::pl.list[orig(::param.remote_err)].playcount
::param.appflags == ::pl.list[orig(::param.quiet)].playcount
::param.appflags == ::pl.list[orig(::param.xterm_title)].playcount
::param.appflags == ::pl.list[orig(::param.usebuffer)].playcount
::param.appflags == ::pl.list[orig(::param.verbose)].playcount
::param.appflags == ::pl.list[orig(::param.term_ctrl)].playcount
::param.appflags == ::pl.list[orig(::param.term_ctrl)-1].playcount
::param.appflags == ::pl.list[orig(::param.checkrange)].playcount
::param.appflags == ::pl.list[orig(::param.force_reopen)].playcount
::param.appflags == ::pl.list[orig(::param.test_cpu)].playcount
::param.appflags == ::pl.list[orig(::param.realtime)].playcount
::param.appflags == ::pl.list[orig(::param.listentry)].playcount
::param.appflags == ::pl.list[orig(::param.long_id3)].playcount
::param.appflags == ::pl.list[orig(::param.list_cpu)].playcount
::param.appflags == ::pl.list[orig(::param.timeout)].playcount
::param.appflags == ::pl.list[orig(::param.loop)].playcount
::param.appflags == ::pl.list[orig(::param.loop)-1].playcount
::param.appflags == ::pl.list[orig(::param.delay)].playcount
::param.appflags == ::pl.list[orig(::param.index)].playcount
::param.appflags == ::pl.list[orig(::param.down_sample)].playcount
::param.appflags == ::pl.list[orig(::param.rva)].playcount
::param.appflags == ::pl.list[orig(::param.halfspeed)].playcount
::param.appflags == ::pl.list[orig(::param.doublespeed)].playcount
::param.appflags == ::pl.list[orig(::param.start_frame)].playcount
::param.appflags == ::pl.list[orig(::param.force_rate)].playcount
::param.appflags == ::pl.list[orig(::param.talk_icy)].playcount
::param.appflags == ::pl.list[orig(::param.talk_icy)-1].playcount
::param.appflags == ::pl.list[orig(::param.smooth)].playcount
::param.appflags == ::pl.list[orig(::param.keep_open)].playcount
::param.appflags == ::pl.list[orig(::param.force_utf8)].playcount
::param.appflags == ::pl.list[orig(::param.icy_interval)].playcount
::param.appflags == ::pl.list[orig(::global_premium)].playcount
::param.appflags == ::pl.list[orig(::frames_left)].playcount
::param.appflags == ::pl.list[orig(::fresh)].playcount
::param.appflags == ::pl.list[orig(::fresh)-1].playcount
::param.appflags == ::pl.list[orig(::deathflag)].playcount
::param.appflags == ::pl.list[orig(::utf8env)].playcount
::param.appflags == ::pl.list[orig(::utf8env)-1].playcount
::param.appflags == ::pl.list[orig(::pl.loop)].playcount
::param.appflags == ::pl.list[orig(::seeking)].playcount
::param.index_size == orig(::param.index_size)
::param.preload == orig(::param.preload)
::mh == orig(::mh)
::ao == orig(::ao)
::fresh == ::utf8env
::fresh == ::pl.loop
::fresh == orig(::loptind)
::fresh == orig(::param.term_ctrl)
::fresh == orig(::param.loop)
::fresh == orig(::param.talk_icy)
::fresh == orig(::fresh)
::fresh == orig(::utf8env)
::fresh == orig(size(argv[]))
::fresh == ::opts[::param.term_ctrl].value
::fresh == orig(::opts[post(::param.term_ctrl)].value)
::fresh == ::opts[::param.loop].value
::fresh == orig(::opts[post(::param.loop)].value)
::fresh == ::opts[::param.talk_icy].value
::fresh == orig(::opts[post(::param.talk_icy)].value)
::fresh == ::opts[::fresh].value
::fresh == orig(::opts[post(::fresh)].value)
::fresh == ::opts[::utf8env].value
::fresh == ::opts[::pl.loop].value
::fresh == ::opts[orig(::loptind)].value
::fresh == ::opts[orig(::param.term_ctrl)].value
::fresh == ::opts[orig(::param.loop)].value
::fresh == ::opts[orig(::param.talk_icy)].value
::fresh == ::opts[orig(::fresh)].value
::fresh == ::opts[orig(::utf8env)].value
::fresh == orig(::opts[post(::utf8env)].value)
::fresh == orig(::opts[post(::pl.loop)].value)
::fresh == orig(::opts[::loptind].value)
::fresh == orig(::opts[::param.term_ctrl].value)
::fresh == orig(::opts[::param.loop].value)
::fresh == orig(::opts[::param.talk_icy].value)
::fresh == orig(::opts[::fresh].value)
::fresh == orig(::opts[::utf8env].value)
::aux_out == orig(::aux_out)
::opts == orig(::opts)
::opts[] == orig(::opts[])
::opts[].sname == orig(::opts[].sname)
::opts[].flags == orig(::opts[].flags)
::opts[].func == orig(::opts[].func)
::opts[].var == orig(::opts[].var)
::opts[].value == orig(::opts[].value)
::pl == orig(::pl)
::pl.size == ::pl.alloc_step
::pl.linebuf == orig(::pl.linebuf)
::pl.dir == orig(::pl.dir)
::pl.type == orig(::pl.type)
::term_help == orig(::term_help)
::term_help[] == orig(::term_help[])
::term_help[].key == orig(::term_help[].key)
::term_help[].key2 == orig(::term_help[].key2)
size(::rva_name[]) == size(::pl.list[])
size(::rva_name[])-1 == ::opts[::param.output_flags-1].value
size(::rva_name[])-1 == orig(::opts[post(::param.output_flags)-1].value)
size(::rva_name[])-1 == ::opts[orig(::param.output_flags)-1].value
size(::rva_name[])-1 == orig(::opts[::param.output_flags-1].value)
::opts[::stopped] == ::opts[::param.term_ctrl-1]
::opts[::stopped] == orig(::opts[post(::param.term_ctrl)-1])
::opts[::stopped] == ::opts[::param.loop-1]
::opts[::stopped] == orig(::opts[post(::param.loop)-1])
::opts[::stopped] == ::opts[::param.talk_icy-1]
::opts[::stopped] == orig(::opts[post(::param.talk_icy)-1])
::opts[::stopped] == ::opts[::fresh-1]
::opts[::stopped] == orig(::opts[post(::fresh)-1])
::opts[::stopped] == ::opts[::utf8env-1]
::opts[::stopped] == ::opts[::pl.loop-1]
::opts[::stopped] == ::opts[orig(::loptind)-1]
::opts[::stopped] == ::opts[orig(::param.term_ctrl)-1]
::opts[::stopped] == ::opts[orig(::param.loop)-1]
::opts[::stopped] == ::opts[orig(::param.talk_icy)-1]
::opts[::stopped] == ::opts[orig(::fresh)-1]
::opts[::stopped] == ::opts[orig(::utf8env)-1]
::opts[::stopped] == orig(::opts[post(::utf8env)-1])
::opts[::stopped] == orig(::opts[post(::pl.loop)-1])
::opts[::stopped] == orig(::opts[::loptind-1])
::opts[::stopped] == orig(::opts[::param.term_ctrl-1])
::opts[::stopped] == orig(::opts[::param.loop-1])
::opts[::stopped] == orig(::opts[::param.talk_icy-1])
::opts[::stopped] == orig(::opts[::fresh-1])
::opts[::stopped] == orig(::opts[::utf8env-1])
::opts[::stopped].sname == ::opts[::param.term_ctrl-1].sname
::opts[::stopped].sname == orig(::opts[post(::param.term_ctrl)-1].sname)
::opts[::stopped].sname == ::opts[::param.loop-1].sname
::opts[::stopped].sname == orig(::opts[post(::param.loop)-1].sname)
::opts[::stopped].sname == ::opts[::param.talk_icy-1].sname
::opts[::stopped].sname == orig(::opts[post(::param.talk_icy)-1].sname)
::opts[::stopped].sname == ::opts[::fresh-1].sname
::opts[::stopped].sname == orig(::opts[post(::fresh)-1].sname)
::opts[::stopped].sname == ::opts[::utf8env-1].sname
::opts[::stopped].sname == ::opts[::pl.loop-1].sname
::opts[::stopped].sname == ::opts[orig(::loptind)-1].sname
::opts[::stopped].sname == ::opts[orig(::param.term_ctrl)-1].sname
::opts[::stopped].sname == ::opts[orig(::param.loop)-1].sname
::opts[::stopped].sname == ::opts[orig(::param.talk_icy)-1].sname
::opts[::stopped].sname == ::opts[orig(::fresh)-1].sname
::opts[::stopped].sname == ::opts[orig(::utf8env)-1].sname
::opts[::stopped].sname == orig(::opts[post(::utf8env)-1].sname)
::opts[::stopped].sname == orig(::opts[post(::pl.loop)-1].sname)
::opts[::stopped].sname == orig(::opts[::loptind-1].sname)
::opts[::stopped].sname == orig(::opts[::param.term_ctrl-1].sname)
::opts[::stopped].sname == orig(::opts[::param.loop-1].sname)
::opts[::stopped].sname == orig(::opts[::param.talk_icy-1].sname)
::opts[::stopped].sname == orig(::opts[::fresh-1].sname)
::opts[::stopped].sname == orig(::opts[::utf8env-1].sname)
::opts[::stopped].flags == ::opts[::param.term_ctrl-1].flags
::opts[::stopped].flags == orig(::opts[post(::param.term_ctrl)-1].flags)
::opts[::stopped].flags == ::opts[::param.loop-1].flags
::opts[::stopped].flags == orig(::opts[post(::param.loop)-1].flags)
::opts[::stopped].flags == ::opts[::param.talk_icy-1].flags
::opts[::stopped].flags == orig(::opts[post(::param.talk_icy)-1].flags)
::opts[::stopped].flags == ::opts[::fresh-1].flags
::opts[::stopped].flags == orig(::opts[post(::fresh)-1].flags)
::opts[::stopped].flags == ::opts[::utf8env-1].flags
::opts[::stopped].flags == ::opts[::pl.loop-1].flags
::opts[::stopped].flags == ::opts[orig(::loptind)-1].flags
::opts[::stopped].flags == ::opts[orig(::param.term_ctrl)-1].flags
::opts[::stopped].flags == ::opts[orig(::param.loop)-1].flags
::opts[::stopped].flags == ::opts[orig(::param.talk_icy)-1].flags
::opts[::stopped].flags == ::opts[orig(::fresh)-1].flags
::opts[::stopped].flags == ::opts[orig(::utf8env)-1].flags
::opts[::stopped].flags == orig(::opts[post(::utf8env)-1].flags)
::opts[::stopped].flags == orig(::opts[post(::pl.loop)-1].flags)
::opts[::stopped].flags == orig(::opts[::loptind-1].flags)
::opts[::stopped].flags == orig(::opts[::param.term_ctrl-1].flags)
::opts[::stopped].flags == orig(::opts[::param.loop-1].flags)
::opts[::stopped].flags == orig(::opts[::param.talk_icy-1].flags)
::opts[::stopped].flags == orig(::opts[::fresh-1].flags)
::opts[::stopped].flags == orig(::opts[::utf8env-1].flags)
::opts[::stopped].func == ::opts[::param.term_ctrl].func
::opts[::stopped].func == ::opts[::param.term_ctrl-1].func
::opts[::stopped].func == orig(::opts[post(::param.term_ctrl)].func)
::opts[::stopped].func == orig(::opts[post(::param.term_ctrl)-1].func)
::opts[::stopped].func == ::opts[::param.loop].func
::opts[::stopped].func == ::opts[::param.loop-1].func
::opts[::stopped].func == orig(::opts[post(::param.loop)].func)
::opts[::stopped].func == orig(::opts[post(::param.loop)-1].func)
::opts[::stopped].func == ::opts[::param.talk_icy].func
::opts[::stopped].func == ::opts[::param.talk_icy-1].func
::opts[::stopped].func == orig(::opts[post(::param.talk_icy)].func)
::opts[::stopped].func == orig(::opts[post(::param.talk_icy)-1].func)
::opts[::stopped].func == ::opts[::fresh].func
::opts[::stopped].func == ::opts[::fresh-1].func
::opts[::stopped].func == orig(::opts[post(::fresh)].func)
::opts[::stopped].func == orig(::opts[post(::fresh)-1].func)
::opts[::stopped].func == ::opts[::utf8env].func
::opts[::stopped].func == ::opts[::utf8env-1].func
::opts[::stopped].func == ::opts[::pl.loop].func
::opts[::stopped].func == ::opts[::pl.loop-1].func
::opts[::stopped].func == ::opts[orig(::loptind)].func
::opts[::stopped].func == ::opts[orig(::loptind)-1].func
::opts[::stopped].func == ::opts[orig(::param.term_ctrl)].func
::opts[::stopped].func == ::opts[orig(::param.term_ctrl)-1].func
::opts[::stopped].func == ::opts[orig(::param.loop)].func
::opts[::stopped].func == ::opts[orig(::param.loop)-1].func
::opts[::stopped].func == ::opts[orig(::param.talk_icy)].func
::opts[::stopped].func == ::opts[orig(::param.talk_icy)-1].func
::opts[::stopped].func == ::opts[orig(::fresh)].func
::opts[::stopped].func == ::opts[orig(::fresh)-1].func
::opts[::stopped].func == ::opts[orig(::utf8env)].func
::opts[::stopped].func == ::opts[orig(::utf8env)-1].func
::opts[::stopped].func == orig(::opts[post(::utf8env)].func)
::opts[::stopped].func == orig(::opts[post(::utf8env)-1].func)
::opts[::stopped].func == orig(::opts[post(::pl.loop)].func)
::opts[::stopped].func == orig(::opts[post(::pl.loop)-1].func)
::opts[::stopped].func == orig(::opts[::loptind].func)
::opts[::stopped].func == orig(::opts[::loptind-1].func)
::opts[::stopped].func == orig(::opts[::param.term_ctrl].func)
::opts[::stopped].func == orig(::opts[::param.term_ctrl-1].func)
::opts[::stopped].func == orig(::opts[::param.loop].func)
::opts[::stopped].func == orig(::opts[::param.loop-1].func)
::opts[::stopped].func == orig(::opts[::param.talk_icy].func)
::opts[::stopped].func == orig(::opts[::param.talk_icy-1].func)
::opts[::stopped].func == orig(::opts[::fresh].func)
::opts[::stopped].func == orig(::opts[::fresh-1].func)
::opts[::stopped].func == orig(::opts[::utf8env].func)
::opts[::stopped].func == orig(::opts[::utf8env-1].func)
::opts[::stopped].var == ::opts[::param.term_ctrl-1].var
::opts[::stopped].var == orig(::opts[post(::param.term_ctrl)-1].var)
::opts[::stopped].var == ::opts[::param.loop-1].var
::opts[::stopped].var == orig(::opts[post(::param.loop)-1].var)
::opts[::stopped].var == ::opts[::param.talk_icy-1].var
::opts[::stopped].var == orig(::opts[post(::param.talk_icy)-1].var)
::opts[::stopped].var == ::opts[::fresh-1].var
::opts[::stopped].var == orig(::opts[post(::fresh)-1].var)
::opts[::stopped].var == ::opts[::utf8env-1].var
::opts[::stopped].var == ::opts[::pl.loop-1].var
::opts[::stopped].var == ::opts[orig(::loptind)-1].var
::opts[::stopped].var == ::opts[orig(::param.term_ctrl)-1].var
::opts[::stopped].var == ::opts[orig(::param.loop)-1].var
::opts[::stopped].var == ::opts[orig(::param.talk_icy)-1].var
::opts[::stopped].var == ::opts[orig(::fresh)-1].var
::opts[::stopped].var == ::opts[orig(::utf8env)-1].var
::opts[::stopped].var == orig(::opts[post(::utf8env)-1].var)
::opts[::stopped].var == orig(::opts[post(::pl.loop)-1].var)
::opts[::stopped].var == orig(::opts[::loptind-1].var)
::opts[::stopped].var == orig(::opts[::param.term_ctrl-1].var)
::opts[::stopped].var == orig(::opts[::param.loop-1].var)
::opts[::stopped].var == orig(::opts[::param.talk_icy-1].var)
::opts[::stopped].var == orig(::opts[::fresh-1].var)
::opts[::stopped].var == orig(::opts[::utf8env-1].var)
::pl.list[::stopped] == ::pl.list[::param.term_ctrl-1]
::pl.list[::stopped] == ::pl.list[::param.loop-1]
::pl.list[::stopped] == ::pl.list[::param.talk_icy-1]
::pl.list[::stopped] == ::pl.list[::fresh-1]
::pl.list[::stopped] == ::pl.list[::utf8env-1]
::pl.list[::stopped] == ::pl.list[::pl.loop-1]
::pl.list[::stopped] == ::pl.list[orig(::loptind)-1]
::pl.list[::stopped] == ::pl.list[orig(::param.term_ctrl)-1]
::pl.list[::stopped] == ::pl.list[orig(::param.loop)-1]
::pl.list[::stopped] == ::pl.list[orig(::param.talk_icy)-1]
::pl.list[::stopped] == ::pl.list[orig(::fresh)-1]
::pl.list[::stopped] == ::pl.list[orig(::utf8env)-1]
::term_help[::stopped] == ::term_help[::param.term_ctrl-1]
::term_help[::stopped] == orig(::term_help[post(::param.term_ctrl)-1])
::term_help[::stopped] == ::term_help[::param.loop-1]
::term_help[::stopped] == orig(::term_help[post(::param.loop)-1])
::term_help[::stopped] == ::term_help[::param.talk_icy-1]
::term_help[::stopped] == orig(::term_help[post(::param.talk_icy)-1])
::term_help[::stopped] == ::term_help[::fresh-1]
::term_help[::stopped] == orig(::term_help[post(::fresh)-1])
::term_help[::stopped] == ::term_help[::utf8env-1]
::term_help[::stopped] == orig(::term_help[post(::utf8env)-1])
::term_help[::stopped] == ::term_help[::pl.loop-1]
::term_help[::stopped] == orig(::term_help[post(::pl.loop)-1])
::term_help[::stopped] == ::term_help[orig(::loptind)-1]
::term_help[::stopped] == ::term_help[orig(::param.term_ctrl)-1]
::term_help[::stopped] == ::term_help[orig(::param.loop)-1]
::term_help[::stopped] == ::term_help[orig(::param.talk_icy)-1]
::term_help[::stopped] == ::term_help[orig(::fresh)-1]
::term_help[::stopped] == ::term_help[orig(::utf8env)-1]
::term_help[::stopped] == orig(::term_help[::loptind-1])
::term_help[::stopped] == orig(::term_help[::param.term_ctrl-1])
::term_help[::stopped] == orig(::term_help[::param.loop-1])
::term_help[::stopped] == orig(::term_help[::param.talk_icy-1])
::term_help[::stopped] == orig(::term_help[::fresh-1])
::term_help[::stopped] == orig(::term_help[::utf8env-1])
::term_help[::stopped].key == ::opts[::loptind].sname
::term_help[::stopped].key == orig(::opts[post(::loptind)].sname)
::term_help[::stopped].key == ::term_help[::param.term_ctrl-1].key
::term_help[::stopped].key == orig(::term_help[post(::param.term_ctrl)-1].key)
::term_help[::stopped].key == ::term_help[::param.loop-1].key
::term_help[::stopped].key == orig(::term_help[post(::param.loop)-1].key)
::term_help[::stopped].key == ::term_help[::param.talk_icy-1].key
::term_help[::stopped].key == orig(::term_help[post(::param.talk_icy)-1].key)
::term_help[::stopped].key == ::opts[::param.preframes].sname
::term_help[::stopped].key == orig(::opts[post(::param.preframes)].sname)
::term_help[::stopped].key == ::term_help[::fresh-1].key
::term_help[::stopped].key == orig(::term_help[post(::fresh)-1].key)
::term_help[::stopped].key == ::opts[orig(::param.preframes)].sname
::term_help[::stopped].key == ::opts[orig(argc)].sname
::term_help[::stopped].key == ::term_help[::utf8env-1].key
::term_help[::stopped].key == orig(::term_help[post(::utf8env)-1].key)
::term_help[::stopped].key == ::term_help[::pl.loop-1].key
::term_help[::stopped].key == orig(::term_help[post(::pl.loop)-1].key)
::term_help[::stopped].key == ::term_help[orig(::loptind)-1].key
::term_help[::stopped].key == ::term_help[orig(::param.term_ctrl)-1].key
::term_help[::stopped].key == ::term_help[orig(::param.loop)-1].key
::term_help[::stopped].key == ::term_help[orig(::param.talk_icy)-1].key
::term_help[::stopped].key == ::term_help[orig(::fresh)-1].key
::term_help[::stopped].key == ::term_help[orig(::utf8env)-1].key
::term_help[::stopped].key == orig(::opts[post(argc)].sname)
::term_help[::stopped].key == orig(::term_help[::loptind-1].key)
::term_help[::stopped].key == orig(::term_help[::param.term_ctrl-1].key)
::term_help[::stopped].key == orig(::term_help[::param.loop-1].key)
::term_help[::stopped].key == orig(::term_help[::param.talk_icy-1].key)
::term_help[::stopped].key == orig(::opts[::param.preframes].sname)
::term_help[::stopped].key == orig(::term_help[::fresh-1].key)
::term_help[::stopped].key == orig(::opts[argc].sname)
::term_help[::stopped].key == orig(::term_help[::utf8env-1].key)
::term_help[::stopped].key2 == ::term_help[::param.term_ctrl-1].key2
::term_help[::stopped].key2 == orig(::term_help[post(::param.term_ctrl)-1].key2)
::term_help[::stopped].key2 == ::term_help[::param.loop-1].key2
::term_help[::stopped].key2 == orig(::term_help[post(::param.loop)-1].key2)
::term_help[::stopped].key2 == ::term_help[::param.talk_icy-1].key2
::term_help[::stopped].key2 == orig(::term_help[post(::param.talk_icy)-1].key2)
::term_help[::stopped].key2 == ::term_help[::fresh-1].key2
::term_help[::stopped].key2 == orig(::term_help[post(::fresh)-1].key2)
::term_help[::stopped].key2 == ::term_help[::utf8env-1].key2
::term_help[::stopped].key2 == orig(::term_help[post(::utf8env)-1].key2)
::term_help[::stopped].key2 == ::term_help[::pl.loop-1].key2
::term_help[::stopped].key2 == orig(::term_help[post(::pl.loop)-1].key2)
::term_help[::stopped].key2 == ::term_help[orig(::loptind)-1].key2
::term_help[::stopped].key2 == ::term_help[orig(::param.term_ctrl)-1].key2
::term_help[::stopped].key2 == ::term_help[orig(::param.loop)-1].key2
::term_help[::stopped].key2 == ::term_help[orig(::param.talk_icy)-1].key2
::term_help[::stopped].key2 == ::term_help[orig(::fresh)-1].key2
::term_help[::stopped].key2 == ::term_help[orig(::utf8env)-1].key2
::term_help[::stopped].key2 == orig(::term_help[::loptind-1].key2)
::term_help[::stopped].key2 == orig(::term_help[::param.term_ctrl-1].key2)
::term_help[::stopped].key2 == orig(::term_help[::param.loop-1].key2)
::term_help[::stopped].key2 == orig(::term_help[::param.talk_icy-1].key2)
::term_help[::stopped].key2 == orig(::term_help[::fresh-1].key2)
::term_help[::stopped].key2 == orig(::term_help[::utf8env-1].key2)
::opts[::param.output_flags].func == ::opts[::param.output_flags-1].func
::opts[::param.output_flags].func == orig(::opts[post(::param.output_flags)-1].func)
::opts[::param.output_flags].func == ::opts[orig(::param.output_flags)-1].func
::opts[::param.output_flags].func == orig(::opts[::param.output_flags-1].func)
::opts[::param.output_flags].var == ::opts[::param.output_flags-1].var
::opts[::param.output_flags].var == orig(::opts[post(::param.output_flags)-1].var)
::opts[::param.output_flags].var == ::opts[orig(::param.output_flags)-1].var
::opts[::param.output_flags].var == orig(::opts[::param.output_flags-1].var)
::remote_header_help == "S <mpeg-version> <layer> <sampling freq> <mode(stereo/mono/...)> <mode_ext> <framesize> <stereo> <copyright> <error_protected> <emphasis> <bitrate> <extension> <vbr(0/1=yes/no)>"
::rva_name has only one value
::rva_name[] == [off, mix, album]
::rva_name[] elements one of { "album", "mix", "off" }
::outstream == null
::loptind == 4
::genre_table has only one value
::genre_table[] == [Blues, Classic Rock, Country, Dance, Disco, Funk, Grunge, Hip-Hop, Jazz, Metal, New Age, Oldies, Other, Pop, R&B, Rap, Reggae, Rock, Techno, Industrial, Alternative, Ska, Death Metal, Pranks, Soundtrack, Euro-Techno, Ambient, Trip-Hop, Vocal, Jazz+Funk, Fusion, Trance, Classical, Instrumental, Acid, House, Game, Sound Clip, Gospel, Noise, AlternRock, Bass, Soul, Punk, Space, Meditative, Instrumental Pop, Instrumental Rock, Ethnic, Gothic, Darkwave, Techno-Industrial, Electronic, Pop-Folk, Eurodance, Dream, Southern Rock, Comedy, Cult, Gangsta, Top 40, Christian Rap, Pop/Funk, Jungle, Native American, Cabaret, New Wave, Psychedelic, Rave, Showtunes, Trailer, Lo-Fi, Tribal, Acid Punk, Acid Jazz, Polka, Retro, Musical, Rock & Roll, Hard Rock, Folk, Folk/Rock, National folk, Swing, Fast-fusion, Bebob, Latin, Revival, Celtic, Bluegrass, Avantgarde, Gothic Rock, Progressive Rock, Psychedelic Rock, Symphonic Rock, Slow Rock, Big Band, Chorus, Easy Listening, Acoustic, Humour, Speech, Chanson, Opera, Chamber Music, Sonata, Symphony, Booty Bass, Primus, Porn Groove, Satire, Slow Jam, Club, Tango, Samba, Folklore, Ballad, Powder Ballad, Rhythmic Soul, Freestyle, Duet, Punk Rock, Drum Solo, A Capella, Euro-House, Dance Hall, Goa, Drum & Bass, Club House, Hardcore, Terror, Indie, BritPop, NegerPunk, Polsk Punk, Beat, Christian Gangsta, Heavy Metal, Black Metal, Crossover, Contemporary C, Christian Rock, Merengue, Salsa, Thrash Metal, Anime, JPop, SynthPop]
::binpath == "."
::htd has only one value
::htd.content_type has only one value
::htd.icy_name has only one value
::htd.icy_url has only one value
::htd.proxyhost has only one value
::htd.proxyport has only one value
::htd.proxystate == 0
::param has only one value
::param.output_module == "alsa,oss,nas"
::param.output_flags == 16
::param.term_usr1 == "s"
::param.term_usr2 == "f"
::param.frame_number == -1
::param.outscale == 32768
::param.flags == 33088
::param.resync_limit == 1024
::param.pitch == 0.0
::param.appflags == 0
::param.index_size == 1000
::param.preload == 0.2
::mh has only one value
::ao has only one value
::prgName == "mpg123"
::fresh == 1
::aux_out has only one value
::opts has only one value
::opts[] contains no nulls and has only one value, of length 96
::opts[].sname == [107, 50, 52, 116, 115, 83, 79, 99, 118, 113, 121, 0, 48, 0, 49, 0, 109, 0, 0, 0, 0, 103, 114, 0, 0, 0, 0, 0, 111, 0, 97, 102, 110, 67, 0, 0, 0, 98, 0, 0, 82, 0, 100, 104, 112, 64, 122, 90, 69, 0, 0, 0, 0, 117, 84, 0, 119, 0, 0, 0, 0, 0, 63, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 105, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 101, 0, 0, 0, 0, 0, 0, 0, 0]
::opts[].sname elements >= 0
::opts[].flags == [9, 4, 4, 4, 4, 4, 3, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 9, 4, 4, 0, 0, 0, 3, 0, 3, 9, 9, 4, 4, 3, 3, 9, 4, 17, 4, 4, 9, 9, 3, 3, 4, 4, 3, 4, 3, 4, 4, 3, 8, 4, 3, 3, 3, 4, 4, 4, 0, 0, 0, 9, 4, 4, 4, 4, 4, 4, 4, 3, 9, 9, 4, 5, 9, 17, 4, 4, 4, 4, 4, 9, 4, 3, 9, 4, 3, 9, 4, 3, 17, 0]
::opts[].flags elements >= 0
::opts[].func has only one value, of length 96
::opts[].var has only one value, of length 96
::opts[].value == [0, 1, 2, 0, 0, 0, 0, 1, 0, 0, 128, 128, 1, 1, 2, 2, 4, 4, 4, 8, 1, 0, 0, 16, 1024, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 2, 1, 2, 0, 1, 1, 0, 1, 1, 0, 0, 0, 64, 64, 16384, 0, 0, 0, 0, 4, 1, 1, 2, 2, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 2, 1, 1, 512, 0, 256, 0, 0, 8192, 0, 0, 4096, 0, 0, 0]
::opts[].value elements >= 0
::pl has only one value
::pl.size == 10
::pl.fill == 3
::pl.list has only one value
::pl.list[] contains no nulls and has only one value, of length 3
::pl.list[].url == [ImmanuelCasto-Dagrandesaraifrio.mp3, ImmanuelCasto-Dagrandesaraifrio (copy 1).mp3, ImmanuelCasto-Dagrandesaraifrio (copy 2).mp3]
::pl.list[].url elements one of { "ImmanuelCasto-Dagrandesaraifrio (copy 1).mp3", "ImmanuelCasto-Dagrandesaraifrio (copy 2).mp3", "ImmanuelCasto-Dagrandesaraifrio.mp3" }
::pl.list[].freeit == [0, 0, 0]
::pl.list[].freeit elements == 0
::pl.list[].playcount == [0, 0, 0]
::pl.list[].playcount elements == 0
::pl.linebuf has only one value
::pl.dir has only one value
::pl.type == 0
::term_help has only one value
::term_help[] contains no nulls and has only one value, of length 26
::term_help[].key == [115, 102, 100, 93, 91, 98, 112, 46, 44, 58, 59, 62, 60, 43, 45, 114, 118, 108, 116, 109, 104, 113, 99, 120, 119, 107]
::term_help[].key2 == [32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 67, 88, 0, 0]
::term_help[].key2 elements >= 0
::term_help[].desc == [interrupt/restart playback (i.e. '(un)pause'), next track, previous track, next directory (next track until directory part changes), previous directory (previous track until directory part changes), back to beginning of track, loop around current position (don't combine with output buffer), forward, rewind, fast forward, fast rewind, fine forward, fine rewind, volume up, volume down, RVA switch, verbose switch, list current playlist, indicating current track there, display tag info (again), print MPEG header info (again), this help, quit, pitch up (small step, big step), pitch down (small step, big step), reset pitch to zero, print out current position in playlist and track, for the benefit of some external tool to store bookmarks]
argv[] == [./mpg123]
argv[] elements == "./mpg123"
size(::rva_name[]) == 3
size(::genre_table[]) == 148
size(::opts[]) == 96
size(::term_help[]) == 26
::opts[::stopped] has only one value
::opts[::stopped].sname == 107
::opts[::stopped].flags == 9
::opts[::stopped].func == null
::opts[::stopped].var has only one value
::pl.list[::stopped] has only one value
::term_help[::stopped] has only one value
::term_help[::stopped].key == 115
::term_help[::stopped].key2 == 32
::opts[::loptind] has only one value
::opts[::loptind-1] has only one value
::opts[::loptind-1].sname == 116
::opts[::loptind].func has only one value
::opts[::loptind-1].func has only one value
::term_help[::loptind] has only one value
::term_help[::loptind-1] has only one value
::term_help[::loptind].key == 91
::term_help[::loptind-1].key == 93
::opts[::param.output_flags] has only one value
::opts[::param.output_flags-1] has only one value
::opts[::param.output_flags].sname == 109
::opts[::param.output_flags].func has only one value
::opts[::param.output_flags].var has only one value
::term_help[::param.output_flags] has only one value
::term_help[::param.output_flags-1] has only one value
::term_help[::param.output_flags].key == 118
::term_help[::param.output_flags-1].key == 114
::opts[::fresh] has only one value
::opts[::fresh].sname == 50
::opts[::fresh].var has only one value
::pl.list[::fresh] has only one value
::term_help[::fresh] has only one value
::term_help[::fresh].key == 102
::stopped in ::opts[].flags
::pl.list[].freeit elements == ::stopped
::remote_header_help == orig(::remote_header_help)
::binpath == ::fullprogname
::binpath == orig(::binpath)
::binpath == orig(::fullprogname)
::param.output_module == orig(::param.output_module)
::param.output_flags in ::opts[].value
::param.term_usr1 == orig(::param.term_usr1)
::param.term_usr2 == orig(::param.term_usr2)
::param.resync_limit in ::opts[].value
::pl.list[].playcount elements == ::param.appflags
::param.name == ::prgName
::prgName == orig(::param.name)
::prgName == orig(::prgName)
::term_help[::param.output_flags].key in ::opts[].sname
::term_help[::param.output_flags-1].key in ::opts[].sname
::term_help[::fresh].key in ::opts[].sname
size(::rva_name[]) in ::opts[].flags
::opts[::stopped].sname in ::term_help[].key
::opts[::loptind-1].sname in ::term_help[].key
::opts[::param.output_flags].sname in ::term_help[].key
===========================================================================
..prev_track():::ENTER
::stopped == ::paused
::stopped == ::control_file
::stopped == ::loptchr
::stopped == ::skip_tracks
::stopped == ::network_sockets_used
::stopped == ::new_header
::stopped == ::frameflag
::stopped == ::appflag
::stopped == ::htd.icy_interval
::stopped == ::OutputDescriptor
::stopped == ::intflag
::stopped == ::param.aggressive
::stopped == ::param.shuffle
::stopped == ::param.remote
::stopped == ::param.remote_err
::stopped == ::param.quiet
::stopped == ::param.xterm_title
::stopped == ::param.usebuffer
::stopped == ::param.verbose
::stopped == ::param.checkrange
::stopped == ::param.force_reopen
::stopped == ::param.test_cpu
::stopped == ::param.realtime
::stopped == ::param.listentry
::stopped == ::param.long_id3
::stopped == ::param.list_cpu
::stopped == ::param.timeout
::stopped == ::param.delay
::stopped == ::param.index
::stopped == ::param.down_sample
::stopped == ::param.rva
::stopped == ::param.halfspeed
::stopped == ::param.doublespeed
::stopped == ::param.start_frame
::stopped == ::param.force_rate
::stopped == ::param.smooth
::stopped == ::param.keep_open
::stopped == ::param.force_utf8
::stopped == ::param.icy_interval
::stopped == ::global_premium
::stopped == ::fresh
::stopped == ::deathflag
::stopped == ::seeking
::stopped == size(::argv[])-1
::stopped == ::opts[::stopped].value
::stopped == ::opts[::paused].value
::stopped == ::opts[::control_file].value
::stopped == ::opts[::loptind].value
::stopped == ::opts[::loptind-1].value
::stopped == ::term_help[::loptind].key2
::stopped == ::term_help[::loptind-1].key2
::stopped == ::opts[::loptchr].value
::stopped == ::opts[::output_propflags-1].value
::stopped == ::term_help[::output_propflags].key2
::stopped == ::opts[::skip_tracks].value
::stopped == ::opts[::network_sockets_used].value
::stopped == ::opts[::argc].value
::stopped == ::opts[::argc-1].value
::stopped == ::term_help[::argc].key2
::stopped == ::term_help[::argc-1].key2
::stopped == ::opts[::cleanup_mpg123-1].value
::stopped == ::term_help[::cleanup_mpg123].key2
::stopped == ::opts[::new_header].value
::stopped == ::opts[::frameflag].value
::stopped == ::opts[::appflag].value
::stopped == ::opts[::htd.icy_interval].value
::stopped == ::opts[::OutputDescriptor].value
::stopped == ::opts[::intflag].value
::stopped == ::opts[::param.aggressive].value
::stopped == ::opts[::param.shuffle].value
::stopped == ::opts[::param.remote].value
::stopped == ::opts[::param.remote_err].value
::stopped == ::opts[::param.quiet].value
::stopped == ::opts[::param.xterm_title].value
::stopped == ::opts[::param.usebuffer].value
::stopped == ::opts[::param.verbose].value
::stopped == ::opts[::param.output_flags-1].sname
::stopped == ::term_help[::param.output_flags].key2
::stopped == ::term_help[::param.output_flags-1].key2
::stopped == ::opts[::param.term_ctrl-1].value
::stopped == ::term_help[::param.term_ctrl].key2
::stopped == ::opts[::param.checkrange].value
::stopped == ::opts[::param.force_reopen].value
::stopped == ::opts[::param.test_cpu].value
::stopped == ::opts[::param.realtime].value
::stopped == ::opts[::param.listentry].value
::stopped == ::opts[::param.long_id3].value
::stopped == ::opts[::param.list_cpu].value
::stopped == ::opts[::param.timeout].value
::stopped == ::opts[::param.loop-1].value
::stopped == ::term_help[::param.loop].key2
::stopped == ::opts[::param.delay].value
::stopped == ::opts[::param.index].value
::stopped == ::opts[::param.down_sample].value
::stopped == ::opts[::param.rva].value
::stopped == ::opts[::param.halfspeed].value
::stopped == ::opts[::param.doublespeed].value
::stopped == ::opts[::param.start_frame].value
::stopped == ::opts[::param.force_rate].value
::stopped == ::opts[::param.talk_icy-1].value
::stopped == ::term_help[::param.talk_icy].key2
::stopped == ::opts[::param.smooth].value
::stopped == ::opts[::param.keep_open].value
::stopped == ::opts[::param.force_utf8].value
::stopped == ::opts[::param.preframes].value
::stopped == ::opts[::param.preframes-1].value
::stopped == ::term_help[::param.preframes].key2
::stopped == ::term_help[::param.preframes-1].key2
::stopped == ::opts[::param.icy_interval].value
::stopped == ::opts[::global_premium].value
::stopped == ::opts[::fresh].value
::stopped == ::opts[::deathflag].value
::stopped == ::opts[::utf8env-1].value
::stopped == ::opts[::seeking].value
::stopped == ::term_help[::utf8env].key2
::outstream == ::opts[::loptind].var
::outstream == ::opts[::loptind-1].var
::outstream == ::opts[::argc].var
::outstream == ::opts[::argc-1].var
::outstream == ::opts[::param.preframes].var
::outstream == ::opts[::param.preframes-1].var
::loptind == ::argc
::loptind == ::param.preframes
::loptind == ::opts[::loptind].flags
::loptind == ::opts[::loptind-1].flags
::loptind == ::opts[::output_propflags].flags
::loptind == ::opts[::argc].flags
::loptind == ::opts[::argc-1].flags
::loptind == ::opts[::cleanup_mpg123].flags
::loptind == ::opts[::param.output_flags].flags
::loptind == ::opts[::param.output_flags-1].flags
::loptind == ::opts[::param.output_flags].value
::loptind == ::opts[::param.term_ctrl].flags
::loptind == ::opts[::param.loop].flags
::loptind == ::opts[::param.talk_icy].flags
::loptind == ::opts[::param.preframes].flags
::loptind == ::opts[::param.preframes-1].flags
::loptind == ::opts[::utf8env].flags
::genre_count == size(::genre_table[])-1
::output_propflags == ::cleanup_mpg123
::output_propflags == ::param.term_ctrl
::output_propflags == ::param.loop
::output_propflags == ::param.talk_icy
::output_propflags == ::utf8env
::output_propflags == size(::argv[])
::output_propflags == ::opts[::output_propflags].value
::output_propflags == ::opts[::cleanup_mpg123].value
::output_propflags == ::opts[::param.term_ctrl].value
::output_propflags == ::opts[::param.loop].value
::output_propflags == ::opts[::param.talk_icy].value
::output_propflags == ::opts[::utf8env].value
::filept == ::param.frame_number
::filept == ::param.gain
::filept == ::frames_left
::prebuffer_size == ::prebuffer_fill
::prebuffer_size == ::htd.content_type.size
::prebuffer_size == ::htd.content_type.fill
::prebuffer_size == ::htd.icy_name.size
::prebuffer_size == ::htd.icy_name.fill
::prebuffer_size == ::htd.icy_url.size
::prebuffer_size == ::htd.icy_url.fill
::prebuffer_size == ::htd.proxyhost.size
::prebuffer_size == ::htd.proxyhost.fill
::prebuffer_size == ::htd.proxyport.size
::prebuffer_size == ::htd.proxyport.fill
::prebuffer_size == ::param.appflags
::param.pitch == ::param.device_buffer
size(::rva_name[])-1 == ::opts[::param.output_flags-1].value
::opts[::stopped] == ::opts[::output_propflags-1]
::opts[::stopped] == ::opts[::cleanup_mpg123-1]
::opts[::stopped] == ::opts[::param.term_ctrl-1]
::opts[::stopped] == ::opts[::param.loop-1]
::opts[::stopped] == ::opts[::param.talk_icy-1]
::opts[::stopped] == ::opts[::utf8env-1]
::opts[::stopped].sname == ::opts[::output_propflags-1].sname
::opts[::stopped].sname == ::opts[::cleanup_mpg123-1].sname
::opts[::stopped].sname == ::opts[::param.term_ctrl-1].sname
::opts[::stopped].sname == ::opts[::param.loop-1].sname
::opts[::stopped].sname == ::opts[::param.talk_icy-1].sname
::opts[::stopped].sname == ::opts[::utf8env-1].sname
::opts[::stopped].flags == ::opts[::output_propflags-1].flags
::opts[::stopped].flags == ::opts[::cleanup_mpg123-1].flags
::opts[::stopped].flags == ::opts[::param.term_ctrl-1].flags
::opts[::stopped].flags == ::opts[::param.loop-1].flags
::opts[::stopped].flags == ::opts[::param.talk_icy-1].flags
::opts[::stopped].flags == ::opts[::utf8env-1].flags
::opts[::stopped].func == ::opts[::output_propflags].func
::opts[::stopped].func == ::opts[::output_propflags-1].func
::opts[::stopped].func == ::opts[::cleanup_mpg123].func
::opts[::stopped].func == ::opts[::cleanup_mpg123-1].func
::opts[::stopped].func == ::opts[::param.term_ctrl].func
::opts[::stopped].func == ::opts[::param.term_ctrl-1].func
::opts[::stopped].func == ::opts[::param.loop].func
::opts[::stopped].func == ::opts[::param.loop-1].func
::opts[::stopped].func == ::opts[::param.talk_icy].func
::opts[::stopped].func == ::opts[::param.talk_icy-1].func
::opts[::stopped].func == ::opts[::utf8env].func
::opts[::stopped].func == ::opts[::utf8env-1].func
::opts[::stopped].var == ::opts[::output_propflags-1].var
::opts[::stopped].var == ::opts[::cleanup_mpg123-1].var
::opts[::stopped].var == ::opts[::param.term_ctrl-1].var
::opts[::stopped].var == ::opts[::param.loop-1].var
::opts[::stopped].var == ::opts[::param.talk_icy-1].var
::opts[::stopped].var == ::opts[::utf8env-1].var
::term_help[::stopped] == ::term_help[::output_propflags-1]
::term_help[::stopped] == ::term_help[::cleanup_mpg123-1]
::term_help[::stopped] == ::term_help[::param.term_ctrl-1]
::term_help[::stopped] == ::term_help[::param.loop-1]
::term_help[::stopped] == ::term_help[::param.talk_icy-1]
::term_help[::stopped] == ::term_help[::utf8env-1]
::term_help[::stopped].key == ::opts[::loptind].sname
::term_help[::stopped].key == ::term_help[::output_propflags-1].key
::term_help[::stopped].key == ::opts[::argc].sname
::term_help[::stopped].key == ::term_help[::cleanup_mpg123-1].key
::term_help[::stopped].key == ::term_help[::param.term_ctrl-1].key
::term_help[::stopped].key == ::term_help[::param.loop-1].key
::term_help[::stopped].key == ::term_help[::param.talk_icy-1].key
::term_help[::stopped].key == ::opts[::param.preframes].sname
::term_help[::stopped].key == ::term_help[::utf8env-1].key
::term_help[::stopped].key2 == ::term_help[::output_propflags-1].key2
::term_help[::stopped].key2 == ::term_help[::cleanup_mpg123-1].key2
::term_help[::stopped].key2 == ::term_help[::param.term_ctrl-1].key2
::term_help[::stopped].key2 == ::term_help[::param.loop-1].key2
::term_help[::stopped].key2 == ::term_help[::param.talk_icy-1].key2
::term_help[::stopped].key2 == ::term_help[::utf8env-1].key2
::opts[::framenum].func == ::opts[::framenum-1].func
::opts[::param.output_flags].func == ::opts[::param.output_flags-1].func
::opts[::param.output_flags].var == ::opts[::param.output_flags-1].var
::remote_header_help == "S <mpeg-version> <layer> <sampling freq> <mode(stereo/mono/...)> <mode_ext> <framesize> <stereo> <copyright> <error_protected> <emphasis> <bitrate> <extension> <vbr(0/1=yes/no)>"
::rva_name has only one value
::rva_name[] == [off, mix, album]
::rva_name[] elements one of { "album", "mix", "off" }
::outstream == null
::loptind == 4
::genre_table has only one value
::genre_table[] == [Blues, Classic Rock, Country, Dance, Disco, Funk, Grunge, Hip-Hop, Jazz, Metal, New Age, Oldies, Other, Pop, R&B, Rap, Reggae, Rock, Techno, Industrial, Alternative, Ska, Death Metal, Pranks, Soundtrack, Euro-Techno, Ambient, Trip-Hop, Vocal, Jazz+Funk, Fusion, Trance, Classical, Instrumental, Acid, House, Game, Sound Clip, Gospel, Noise, AlternRock, Bass, Soul, Punk, Space, Meditative, Instrumental Pop, Instrumental Rock, Ethnic, Gothic, Darkwave, Techno-Industrial, Electronic, Pop-Folk, Eurodance, Dream, Southern Rock, Comedy, Cult, Gangsta, Top 40, Christian Rap, Pop/Funk, Jungle, Native American, Cabaret, New Wave, Psychedelic, Rave, Showtunes, Trailer, Lo-Fi, Tribal, Acid Punk, Acid Jazz, Polka, Retro, Musical, Rock & Roll, Hard Rock, Folk, Folk/Rock, National folk, Swing, Fast-fusion, Bebob, Latin, Revival, Celtic, Bluegrass, Avantgarde, Gothic Rock, Progressive Rock, Psychedelic Rock, Symphonic Rock, Slow Rock, Big Band, Chorus, Easy Listening, Acoustic, Humour, Speech, Chanson, Opera, Chamber Music, Sonata, Symphony, Booty Bass, Primus, Porn Groove, Satire, Slow Jam, Club, Tango, Samba, Folklore, Ballad, Powder Ballad, Rhythmic Soul, Freestyle, Duet, Punk Rock, Drum Solo, A Capella, Euro-House, Dance Hall, Goa, Drum & Bass, Club House, Hardcore, Terror, Indie, BritPop, NegerPunk, Polsk Punk, Beat, Christian Gangsta, Heavy Metal, Black Metal, Crossover, Contemporary C, Christian Rock, Merengue, Salsa, Thrash Metal, Anime, JPop, SynthPop]
::output_propflags == 1
::filept == -1
::argv has only one value
::argv[] == [./mpg123]
::argv[] elements == "./mpg123"
::prebuffer_size == 0
::minbytes == 1536
::binpath == "."
::framenum one of { 16, 32, 48 }
::htd has only one value
::htd.content_type has only one value
::htd.icy_name has only one value
::htd.icy_url has only one value
::htd.proxyhost has only one value
::htd.proxyport has only one value
::htd.proxystate == 0
::param has only one value
::param.output_module == "alsa,oss,nas"
::param.output_flags == 16
::param.term_usr1 == "s"
::param.term_usr2 == "f"
::param.outscale == 32768
::param.flags == 33088
::param.resync_limit == 1024
::param.pitch == 0.0
::param.index_size == 1000
::param.preload == 0.2
::mh has only one value
::ao has only one value
::prgName == "mpg123"
::aux_out has only one value
::opts has only one value
::opts[] contains no nulls and has only one value, of length 96
::opts[].sname == [107, 50, 52, 116, 115, 83, 79, 99, 118, 113, 121, 0, 48, 0, 49, 0, 109, 0, 0, 0, 0, 103, 114, 0, 0, 0, 0, 0, 111, 0, 97, 102, 110, 67, 0, 0, 0, 98, 0, 0, 82, 0, 100, 104, 112, 64, 122, 90, 69, 0, 0, 0, 0, 117, 84, 0, 119, 0, 0, 0, 0, 0, 63, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 105, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 101, 0, 0, 0, 0, 0, 0, 0, 0]
::opts[].sname elements >= 0
::opts[].flags == [9, 4, 4, 4, 4, 4, 3, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 9, 4, 4, 0, 0, 0, 3, 0, 3, 9, 9, 4, 4, 3, 3, 9, 4, 17, 4, 4, 9, 9, 3, 3, 4, 4, 3, 4, 3, 4, 4, 3, 8, 4, 3, 3, 3, 4, 4, 4, 0, 0, 0, 9, 4, 4, 4, 4, 4, 4, 4, 3, 9, 9, 4, 5, 9, 17, 4, 4, 4, 4, 4, 9, 4, 3, 9, 4, 3, 9, 4, 3, 17, 0]
::opts[].flags elements >= 0
::opts[].func has only one value, of length 96
::opts[].var has only one value, of length 96
::opts[].value == [0, 1, 2, 0, 0, 0, 0, 1, 0, 0, 128, 128, 1, 1, 2, 2, 4, 4, 4, 8, 1, 0, 0, 16, 1024, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 2, 1, 2, 0, 1, 1, 0, 1, 1, 0, 0, 0, 64, 64, 16384, 0, 0, 0, 0, 4, 1, 1, 2, 2, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 2, 1, 1, 512, 0, 256, 0, 0, 8192, 0, 0, 4096, 0, 0, 0]
::opts[].value elements >= 0
::term_help has only one value
::term_help[] contains no nulls and has only one value, of length 26
::term_help[].key == [115, 102, 100, 93, 91, 98, 112, 46, 44, 58, 59, 62, 60, 43, 45, 114, 118, 108, 116, 109, 104, 113, 99, 120, 119, 107]
::term_help[].key2 == [32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 67, 88, 0, 0]
::term_help[].key2 elements >= 0
::term_help[].desc == [interrupt/restart playback (i.e. '(un)pause'), next track, previous track, next directory (next track until directory part changes), previous directory (previous track until directory part changes), back to beginning of track, loop around current position (don't combine with output buffer), forward, rewind, fast forward, fast rewind, fine forward, fine rewind, volume up, volume down, RVA switch, verbose switch, list current playlist, indicating current track there, display tag info (again), print MPEG header info (again), this help, quit, pitch up (small step, big step), pitch down (small step, big step), reset pitch to zero, print out current position in playlist and track, for the benefit of some external tool to store bookmarks]
size(::rva_name[]) == 3
size(::genre_table[]) == 148
size(::opts[]) == 96
size(::term_help[]) == 26
::opts[::stopped] has only one value
::opts[::stopped].sname == 107
::opts[::stopped].flags == 9
::opts[::stopped].func == null
::opts[::stopped].var has only one value
::term_help[::stopped] has only one value
::term_help[::stopped].key == 115
::term_help[::stopped].key2 == 32
::opts[::loptind] has only one value
::opts[::loptind-1] has only one value
::opts[::loptind-1].sname == 116
::opts[::loptind].func has only one value
::opts[::loptind-1].func has only one value
::term_help[::loptind] has only one value
::term_help[::loptind-1] has only one value
::term_help[::loptind].key == 91
::term_help[::loptind-1].key == 93
::opts[::output_propflags] has only one value
::opts[::output_propflags].sname == 50
::opts[::output_propflags].var has only one value
::term_help[::output_propflags] has only one value
::term_help[::output_propflags].key == 102
::opts[::framenum].sname one of { 69, 109, 110 }
::opts[::framenum-1].sname one of { 0, 90, 102 }
::opts[::framenum].flags one of { 3, 4, 9 }
::opts[::framenum-1].flags one of { 4, 9 }
::opts[::framenum].value one of { 0, 1, 4 }
::opts[::framenum-1].value one of { 0, 2 }
::opts[::param.output_flags] has only one value
::opts[::param.output_flags-1] has only one value
::opts[::param.output_flags].sname == 109
::opts[::param.output_flags].func has only one value
::opts[::param.output_flags].var has only one value
::term_help[::param.output_flags] has only one value
::term_help[::param.output_flags-1] has only one value
::term_help[::param.output_flags].key == 118
::term_help[::param.output_flags-1].key == 114
::stopped in ::opts[].flags
::binpath == ::fullprogname
::param.output_flags in ::opts[].value
::param.resync_limit in ::opts[].value
::param.name == ::prgName
::term_help[::output_propflags].key in ::opts[].sname
::term_help[::param.output_flags].key in ::opts[].sname
::term_help[::param.output_flags-1].key in ::opts[].sname
size(::rva_name[]) in ::opts[].flags
::opts[::stopped].sname in ::term_help[].key
::opts[::loptind-1].sname in ::term_help[].key
::opts[::param.output_flags].sname in ::term_help[].key
===========================================================================
..prev_track():::EXIT
::stopped == ::paused
::stopped == ::control_file
::stopped == ::loptchr
::stopped == ::skip_tracks
::stopped == ::network_sockets_used
::stopped == ::new_header
::stopped == ::frameflag
::stopped == ::appflag
::stopped == ::htd.icy_interval
::stopped == ::OutputDescriptor
::stopped == ::intflag
::stopped == ::param.aggressive
::stopped == ::param.shuffle
::stopped == ::param.remote
::stopped == ::param.remote_err
::stopped == ::param.quiet
::stopped == ::param.xterm_title
::stopped == ::param.usebuffer
::stopped == ::param.verbose
::stopped == ::param.checkrange
::stopped == ::param.force_reopen
::stopped == ::param.test_cpu
::stopped == ::param.realtime
::stopped == ::param.listentry
::stopped == ::param.long_id3
::stopped == ::param.list_cpu
::stopped == ::param.timeout
::stopped == ::param.delay
::stopped == ::param.index
::stopped == ::param.down_sample
::stopped == ::param.rva
::stopped == ::param.halfspeed
::stopped == ::param.doublespeed
::stopped == ::param.start_frame
::stopped == ::param.force_rate
::stopped == ::param.smooth
::stopped == ::param.keep_open
::stopped == ::param.force_utf8
::stopped == ::param.icy_interval
::stopped == ::global_premium
::stopped == ::fresh
::stopped == ::deathflag
::stopped == ::seeking
::stopped == orig(::stopped)
::stopped == orig(::paused)
::stopped == orig(::control_file)
::stopped == orig(::loptchr)
::stopped == orig(::skip_tracks)
::stopped == orig(::network_sockets_used)
::stopped == orig(::new_header)
::stopped == orig(::frameflag)
::stopped == orig(::appflag)
::stopped == orig(::htd.icy_interval)
::stopped == orig(::OutputDescriptor)
::stopped == orig(::intflag)
::stopped == orig(::param.aggressive)
::stopped == orig(::param.shuffle)
::stopped == orig(::param.remote)
::stopped == orig(::param.remote_err)
::stopped == orig(::param.quiet)
::stopped == orig(::param.xterm_title)
::stopped == orig(::param.usebuffer)
::stopped == orig(::param.verbose)
::stopped == orig(::param.checkrange)
::stopped == orig(::param.force_reopen)
::stopped == orig(::param.test_cpu)
::stopped == orig(::param.realtime)
::stopped == orig(::param.listentry)
::stopped == orig(::param.long_id3)
::stopped == orig(::param.list_cpu)
::stopped == orig(::param.timeout)
::stopped == orig(::param.delay)
::stopped == orig(::param.index)
::stopped == orig(::param.down_sample)
::stopped == orig(::param.rva)
::stopped == orig(::param.halfspeed)
::stopped == orig(::param.doublespeed)
::stopped == orig(::param.start_frame)
::stopped == orig(::param.force_rate)
::stopped == orig(::param.smooth)
::stopped == orig(::param.keep_open)
::stopped == orig(::param.force_utf8)
::stopped == orig(::param.icy_interval)
::stopped == orig(::global_premium)
::stopped == orig(::fresh)
::stopped == orig(::deathflag)
::stopped == orig(::seeking)
::stopped == size(::argv[])-1
::stopped == orig(size(::argv[]))-1
::stopped == ::opts[::stopped].value
::stopped == orig(::opts[post(::stopped)].value)
::stopped == ::opts[::paused].value
::stopped == orig(::opts[post(::paused)].value)
::stopped == ::opts[::control_file].value
::stopped == orig(::opts[post(::control_file)].value)
::stopped == ::opts[::loptind].value
::stopped == ::opts[::loptind-1].value
::stopped == ::term_help[::loptind].key2
::stopped == ::term_help[::loptind-1].key2
::stopped == orig(::opts[post(::loptind)].value)
::stopped == orig(::opts[post(::loptind)-1].value)
::stopped == orig(::term_help[post(::loptind)].key2)
::stopped == orig(::term_help[post(::loptind)-1].key2)
::stopped == ::opts[::loptchr].value
::stopped == orig(::opts[post(::loptchr)].value)
::stopped == ::opts[::output_propflags-1].value
::stopped == ::term_help[::output_propflags].key2
::stopped == orig(::opts[post(::output_propflags)-1].value)
::stopped == orig(::term_help[post(::output_propflags)].key2)
::stopped == ::opts[::skip_tracks].value
::stopped == orig(::opts[post(::skip_tracks)].value)
::stopped == ::opts[::network_sockets_used].value
::stopped == orig(::opts[post(::network_sockets_used)].value)
::stopped == ::opts[::argc].value
::stopped == ::opts[::argc-1].value
::stopped == ::term_help[::argc].key2
::stopped == ::term_help[::argc-1].key2
::stopped == orig(::opts[post(::argc)].value)
::stopped == orig(::opts[post(::argc)-1].value)
::stopped == orig(::term_help[post(::argc)].key2)
::stopped == orig(::term_help[post(::argc)-1].key2)
::stopped == ::opts[::cleanup_mpg123-1].value
::stopped == ::term_help[::cleanup_mpg123].key2
::stopped == orig(::opts[post(::cleanup_mpg123)-1].value)
::stopped == orig(::term_help[post(::cleanup_mpg123)].key2)
::stopped == ::opts[::new_header].value
::stopped == orig(::opts[post(::new_header)].value)
::stopped == ::opts[::frameflag].value
::stopped == orig(::opts[post(::frameflag)].value)
::stopped == ::opts[::appflag].value
::stopped == orig(::opts[post(::appflag)].value)
::stopped == ::opts[::htd.icy_interval].value
::stopped == orig(::opts[post(::htd.icy_interval)].value)
::stopped == ::opts[::OutputDescriptor].value
::stopped == orig(::opts[post(::OutputDescriptor)].value)
::stopped == ::opts[::intflag].value
::stopped == orig(::opts[post(::intflag)].value)
::stopped == ::opts[::param.aggressive].value
::stopped == orig(::opts[post(::param.aggressive)].value)
::stopped == ::opts[::param.shuffle].value
::stopped == orig(::opts[post(::param.shuffle)].value)
::stopped == ::opts[::param.remote].value
::stopped == orig(::opts[post(::param.remote)].value)
::stopped == ::opts[::param.remote_err].value
::stopped == orig(::opts[post(::param.remote_err)].value)
::stopped == ::opts[::param.quiet].value
::stopped == orig(::opts[post(::param.quiet)].value)
::stopped == ::opts[::param.xterm_title].value
::stopped == orig(::opts[post(::param.xterm_title)].value)
::stopped == ::opts[::param.usebuffer].value
::stopped == orig(::opts[post(::param.usebuffer)].value)
::stopped == ::opts[::param.verbose].value
::stopped == orig(::opts[post(::param.verbose)].value)
::stopped == ::opts[::param.output_flags-1].sname
::stopped == ::term_help[::param.output_flags].key2
::stopped == ::term_help[::param.output_flags-1].key2
::stopped == orig(::opts[post(::param.output_flags)-1].sname)
::stopped == orig(::term_help[post(::param.output_flags)].key2)
::stopped == orig(::term_help[post(::param.output_flags)-1].key2)
::stopped == ::opts[::param.term_ctrl-1].value
::stopped == ::term_help[::param.term_ctrl].key2
::stopped == orig(::opts[post(::param.term_ctrl)-1].value)
::stopped == orig(::term_help[post(::param.term_ctrl)].key2)
::stopped == ::opts[::param.checkrange].value
::stopped == orig(::opts[post(::param.checkrange)].value)
::stopped == ::opts[::param.force_reopen].value
::stopped == orig(::opts[post(::param.force_reopen)].value)
::stopped == ::opts[::param.test_cpu].value
::stopped == orig(::opts[post(::param.test_cpu)].value)
::stopped == ::opts[::param.realtime].value
::stopped == orig(::opts[post(::param.realtime)].value)
::stopped == ::opts[::param.listentry].value
::stopped == orig(::opts[post(::param.listentry)].value)
::stopped == ::opts[::param.long_id3].value
::stopped == orig(::opts[post(::param.long_id3)].value)
::stopped == ::opts[::param.list_cpu].value
::stopped == orig(::opts[post(::param.list_cpu)].value)
::stopped == ::opts[::param.timeout].value
::stopped == orig(::opts[post(::param.timeout)].value)
::stopped == ::opts[::param.loop-1].value
::stopped == ::term_help[::param.loop].key2
::stopped == orig(::opts[post(::param.loop)-1].value)
::stopped == orig(::term_help[post(::param.loop)].key2)
::stopped == ::opts[::param.delay].value
::stopped == orig(::opts[post(::param.delay)].value)
::stopped == ::opts[::param.index].value
::stopped == orig(::opts[post(::param.index)].value)
::stopped == ::opts[::param.down_sample].value
::stopped == orig(::opts[post(::param.down_sample)].value)
::stopped == ::opts[::param.rva].value
::stopped == orig(::opts[post(::param.rva)].value)
::stopped == ::opts[::param.halfspeed].value
::stopped == orig(::opts[post(::param.halfspeed)].value)
::stopped == ::opts[::param.doublespeed].value
::stopped == orig(::opts[post(::param.doublespeed)].value)
::stopped == ::opts[::param.start_frame].value
::stopped == orig(::opts[post(::param.start_frame)].value)
::stopped == ::opts[::param.force_rate].value
::stopped == orig(::opts[post(::param.force_rate)].value)
::stopped == ::opts[::param.talk_icy-1].value
::stopped == ::term_help[::param.talk_icy].key2
::stopped == orig(::opts[post(::param.talk_icy)-1].value)
::stopped == orig(::term_help[post(::param.talk_icy)].key2)
::stopped == ::opts[::param.smooth].value
::stopped == orig(::opts[post(::param.smooth)].value)
::stopped == ::opts[::param.keep_open].value
::stopped == orig(::opts[post(::param.keep_open)].value)
::stopped == ::opts[::param.force_utf8].value
::stopped == orig(::opts[post(::param.force_utf8)].value)
::stopped == ::opts[::param.preframes].value
::stopped == ::opts[::param.preframes-1].value
::stopped == ::term_help[::param.preframes].key2
::stopped == ::term_help[::param.preframes-1].key2
::stopped == orig(::opts[post(::param.preframes)].value)
::stopped == orig(::opts[post(::param.preframes)-1].value)
::stopped == orig(::term_help[post(::param.preframes)].key2)
::stopped == orig(::term_help[post(::param.preframes)-1].key2)
::stopped == ::opts[::param.icy_interval].value
::stopped == orig(::opts[post(::param.icy_interval)].value)
::stopped == ::opts[::global_premium].value
::stopped == orig(::opts[post(::global_premium)].value)
::stopped == ::opts[::fresh].value
::stopped == orig(::opts[post(::fresh)].value)
::stopped == ::opts[::deathflag].value
::stopped == orig(::opts[post(::deathflag)].value)
::stopped == ::opts[orig(::param.output_flags)-1].sname
::stopped == ::opts[::utf8env-1].value
::stopped == ::opts[::seeking].value
::stopped == ::opts[orig(::stopped)].value
::stopped == ::opts[orig(::paused)].value
::stopped == ::opts[orig(::control_file)].value
::stopped == ::opts[orig(::loptind)].value
::stopped == ::opts[orig(::loptind)-1].value
::stopped == ::opts[orig(::loptchr)].value
::stopped == ::opts[orig(::output_propflags)-1].value
::stopped == ::opts[orig(::skip_tracks)].value
::stopped == ::opts[orig(::network_sockets_used)].value
::stopped == ::opts[orig(::argc)].value
::stopped == ::opts[orig(::argc)-1].value
::stopped == ::opts[orig(::cleanup_mpg123)-1].value
::stopped == ::opts[orig(::new_header)].value
::stopped == ::opts[orig(::frameflag)].value
::stopped == ::opts[orig(::appflag)].value
::stopped == ::opts[orig(::htd.icy_interval)].value
::stopped == ::opts[orig(::OutputDescriptor)].value
::stopped == ::opts[orig(::intflag)].value
::stopped == ::opts[orig(::param.aggressive)].value
::stopped == ::opts[orig(::param.shuffle)].value
::stopped == ::opts[orig(::param.remote)].value
::stopped == ::opts[orig(::param.remote_err)].value
::stopped == ::opts[orig(::param.quiet)].value
::stopped == ::opts[orig(::param.xterm_title)].value
::stopped == ::opts[orig(::param.usebuffer)].value
::stopped == ::opts[orig(::param.verbose)].value
::stopped == ::opts[orig(::param.term_ctrl)-1].value
::stopped == ::opts[orig(::param.checkrange)].value
::stopped == ::opts[orig(::param.force_reopen)].value
::stopped == ::opts[orig(::param.test_cpu)].value
::stopped == ::opts[orig(::param.realtime)].value
::stopped == ::opts[orig(::param.listentry)].value
::stopped == ::opts[orig(::param.long_id3)].value
::stopped == ::opts[orig(::param.list_cpu)].value
::stopped == ::opts[orig(::param.timeout)].value
::stopped == ::opts[orig(::param.loop)-1].value
::stopped == ::opts[orig(::param.delay)].value
::stopped == ::opts[orig(::param.index)].value
::stopped == ::opts[orig(::param.down_sample)].value
::stopped == ::opts[orig(::param.rva)].value
::stopped == ::opts[orig(::param.halfspeed)].value
::stopped == ::opts[orig(::param.doublespeed)].value
::stopped == ::opts[orig(::param.start_frame)].value
::stopped == ::opts[orig(::param.force_rate)].value
::stopped == ::opts[orig(::param.talk_icy)-1].value
::stopped == ::opts[orig(::param.smooth)].value
::stopped == ::opts[orig(::param.keep_open)].value
::stopped == ::opts[orig(::param.force_utf8)].value
::stopped == ::opts[orig(::param.preframes)].value
::stopped == ::opts[orig(::param.preframes)-1].value
::stopped == ::opts[orig(::param.icy_interval)].value
::stopped == ::opts[orig(::global_premium)].value
::stopped == ::opts[orig(::fresh)].value
::stopped == ::opts[orig(::deathflag)].value
::stopped == ::opts[orig(::utf8env)-1].value
::stopped == ::opts[orig(::seeking)].value
::stopped == ::term_help[::utf8env].key2
::stopped == orig(::opts[post(::utf8env)-1].value)
::stopped == orig(::term_help[post(::utf8env)].key2)
::stopped == orig(::opts[post(::seeking)].value)
::stopped == ::term_help[orig(::loptind)].key2
::stopped == ::term_help[orig(::loptind)-1].key2
::stopped == ::term_help[orig(::output_propflags)].key2
::stopped == ::term_help[orig(::argc)].key2
::stopped == ::term_help[orig(::argc)-1].key2
::stopped == ::term_help[orig(::cleanup_mpg123)].key2
::stopped == ::term_help[orig(::param.output_flags)].key2
::stopped == ::term_help[orig(::param.output_flags)-1].key2
::stopped == ::term_help[orig(::param.term_ctrl)].key2
::stopped == ::term_help[orig(::param.loop)].key2
::stopped == ::term_help[orig(::param.talk_icy)].key2
::stopped == ::term_help[orig(::param.preframes)].key2
::stopped == ::term_help[orig(::param.preframes)-1].key2
::stopped == ::term_help[orig(::utf8env)].key2
::stopped == orig(::opts[::stopped].value)
::stopped == orig(::opts[::paused].value)
::stopped == orig(::opts[::control_file].value)
::stopped == orig(::opts[::loptind].value)
::stopped == orig(::opts[::loptind-1].value)
::stopped == orig(::term_help[::loptind].key2)
::stopped == orig(::term_help[::loptind-1].key2)
::stopped == orig(::opts[::loptchr].value)
::stopped == orig(::opts[::output_propflags-1].value)
::stopped == orig(::term_help[::output_propflags].key2)
::stopped == orig(::opts[::skip_tracks].value)
::stopped == orig(::opts[::network_sockets_used].value)
::stopped == orig(::opts[::argc].value)
::stopped == orig(::opts[::argc-1].value)
::stopped == orig(::term_help[::argc].key2)
::stopped == orig(::term_help[::argc-1].key2)
::stopped == orig(::opts[::cleanup_mpg123-1].value)
::stopped == orig(::term_help[::cleanup_mpg123].key2)
::stopped == orig(::opts[::new_header].value)
::stopped == orig(::opts[::frameflag].value)
::stopped == orig(::opts[::appflag].value)
::stopped == orig(::opts[::htd.icy_interval].value)
::stopped == orig(::opts[::OutputDescriptor].value)
::stopped == orig(::opts[::intflag].value)
::stopped == orig(::opts[::param.aggressive].value)
::stopped == orig(::opts[::param.shuffle].value)
::stopped == orig(::opts[::param.remote].value)
::stopped == orig(::opts[::param.remote_err].value)
::stopped == orig(::opts[::param.quiet].value)
::stopped == orig(::opts[::param.xterm_title].value)
::stopped == orig(::opts[::param.usebuffer].value)
::stopped == orig(::opts[::param.verbose].value)
::stopped == orig(::opts[::param.output_flags-1].sname)
::stopped == orig(::term_help[::param.output_flags].key2)
::stopped == orig(::term_help[::param.output_flags-1].key2)
::stopped == orig(::opts[::param.term_ctrl-1].value)
::stopped == orig(::term_help[::param.term_ctrl].key2)
::stopped == orig(::opts[::param.checkrange].value)
::stopped == orig(::opts[::param.force_reopen].value)
::stopped == orig(::opts[::param.test_cpu].value)
::stopped == orig(::opts[::param.realtime].value)
::stopped == orig(::opts[::param.listentry].value)
::stopped == orig(::opts[::param.long_id3].value)
::stopped == orig(::opts[::param.list_cpu].value)
::stopped == orig(::opts[::param.timeout].value)
::stopped == orig(::opts[::param.loop-1].value)
::stopped == orig(::term_help[::param.loop].key2)
::stopped == orig(::opts[::param.delay].value)
::stopped == orig(::opts[::param.index].value)
::stopped == orig(::opts[::param.down_sample].value)
::stopped == orig(::opts[::param.rva].value)
::stopped == orig(::opts[::param.halfspeed].value)
::stopped == orig(::opts[::param.doublespeed].value)
::stopped == orig(::opts[::param.start_frame].value)
::stopped == orig(::opts[::param.force_rate].value)
::stopped == orig(::opts[::param.talk_icy-1].value)
::stopped == orig(::term_help[::param.talk_icy].key2)
::stopped == orig(::opts[::param.smooth].value)
::stopped == orig(::opts[::param.keep_open].value)
::stopped == orig(::opts[::param.force_utf8].value)
::stopped == orig(::opts[::param.preframes].value)
::stopped == orig(::opts[::param.preframes-1].value)
::stopped == orig(::term_help[::param.preframes].key2)
::stopped == orig(::term_help[::param.preframes-1].key2)
::stopped == orig(::opts[::param.icy_interval].value)
::stopped == orig(::opts[::global_premium].value)
::stopped == orig(::opts[::fresh].value)
::stopped == orig(::opts[::deathflag].value)
::stopped == orig(::opts[::utf8env-1].value)
::stopped == orig(::opts[::seeking].value)
::stopped == orig(::term_help[::utf8env].key2)
::rva_name == orig(::rva_name)
::outstream == orig(::outstream)
::outstream == ::opts[::loptind].var
::outstream == ::opts[::loptind-1].var
::outstream == orig(::opts[post(::loptind)].var)
::outstream == orig(::opts[post(::loptind)-1].var)
::outstream == ::opts[::argc].var
::outstream == ::opts[::argc-1].var
::outstream == orig(::opts[post(::argc)].var)
::outstream == orig(::opts[post(::argc)-1].var)
::outstream == ::opts[::param.preframes].var
::outstream == ::opts[::param.preframes-1].var
::outstream == orig(::opts[post(::param.preframes)].var)
::outstream == orig(::opts[post(::param.preframes)-1].var)
::outstream == ::opts[orig(::loptind)].var
::outstream == ::opts[orig(::loptind)-1].var
::outstream == ::opts[orig(::argc)].var
::outstream == ::opts[orig(::argc)-1].var
::outstream == ::opts[orig(::param.preframes)].var
::outstream == ::opts[orig(::param.preframes)-1].var
::outstream == orig(::opts[::loptind].var)
::outstream == orig(::opts[::loptind-1].var)
::outstream == orig(::opts[::argc].var)
::outstream == orig(::opts[::argc-1].var)
::outstream == orig(::opts[::param.preframes].var)
::outstream == orig(::opts[::param.preframes-1].var)
::loptind == ::argc
::loptind == ::param.preframes
::loptind == orig(::loptind)
::loptind == orig(::argc)
::loptind == orig(::param.preframes)
::loptind == ::opts[::loptind].flags
::loptind == ::opts[::loptind-1].flags
::loptind == orig(::opts[post(::loptind)].flags)
::loptind == orig(::opts[post(::loptind)-1].flags)
::loptind == ::opts[::output_propflags].flags
::loptind == orig(::opts[post(::output_propflags)].flags)
::loptind == ::opts[::argc].flags
::loptind == ::opts[::argc-1].flags
::loptind == orig(::opts[post(::argc)].flags)
::loptind == orig(::opts[post(::argc)-1].flags)
::loptind == ::opts[::cleanup_mpg123].flags
::loptind == orig(::opts[post(::cleanup_mpg123)].flags)
::loptind == ::opts[::param.output_flags].flags
::loptind == ::opts[::param.output_flags-1].flags
::loptind == ::opts[::param.output_flags].value
::loptind == orig(::opts[post(::param.output_flags)].flags)
::loptind == orig(::opts[post(::param.output_flags)-1].flags)
::loptind == orig(::opts[post(::param.output_flags)].value)
::loptind == ::opts[::param.term_ctrl].flags
::loptind == orig(::opts[post(::param.term_ctrl)].flags)
::loptind == ::opts[::param.loop].flags
::loptind == orig(::opts[post(::param.loop)].flags)
::loptind == ::opts[::param.talk_icy].flags
::loptind == orig(::opts[post(::param.talk_icy)].flags)
::loptind == ::opts[::param.preframes].flags
::loptind == ::opts[::param.preframes-1].flags
::loptind == orig(::opts[post(::param.preframes)].flags)
::loptind == orig(::opts[post(::param.preframes)-1].flags)
::loptind == ::opts[::utf8env].flags
::loptind == ::opts[orig(::loptind)].flags
::loptind == ::opts[orig(::loptind)-1].flags
::loptind == ::opts[orig(::output_propflags)].flags
::loptind == ::opts[orig(::argc)].flags
::loptind == ::opts[orig(::argc)-1].flags
::loptind == ::opts[orig(::cleanup_mpg123)].flags
::loptind == ::opts[orig(::param.output_flags)].flags
::loptind == ::opts[orig(::param.output_flags)-1].flags
::loptind == ::opts[orig(::param.term_ctrl)].flags
::loptind == ::opts[orig(::param.loop)].flags
::loptind == ::opts[orig(::param.talk_icy)].flags
::loptind == ::opts[orig(::param.preframes)].flags
::loptind == ::opts[orig(::param.preframes)-1].flags
::loptind == ::opts[orig(::utf8env)].flags
::loptind == ::opts[orig(::param.output_flags)].value
::loptind == orig(::opts[post(::utf8env)].flags)
::loptind == orig(::opts[::loptind].flags)
::loptind == orig(::opts[::loptind-1].flags)
::loptind == orig(::opts[::output_propflags].flags)
::loptind == orig(::opts[::argc].flags)
::loptind == orig(::opts[::argc-1].flags)
::loptind == orig(::opts[::cleanup_mpg123].flags)
::loptind == orig(::opts[::param.output_flags].flags)
::loptind == orig(::opts[::param.output_flags-1].flags)
::loptind == orig(::opts[::param.output_flags].value)
::loptind == orig(::opts[::param.term_ctrl].flags)
::loptind == orig(::opts[::param.loop].flags)
::loptind == orig(::opts[::param.talk_icy].flags)
::loptind == orig(::opts[::param.preframes].flags)
::loptind == orig(::opts[::param.preframes-1].flags)
::loptind == orig(::opts[::utf8env].flags)
::genre_table == orig(::genre_table)
::genre_count == orig(::genre_count)
::genre_count == size(::genre_table[])-1
::genre_count == orig(size(::genre_table[]))-1
::output_propflags == ::cleanup_mpg123
::output_propflags == ::param.term_ctrl
::output_propflags == ::param.loop
::output_propflags == ::param.talk_icy
::output_propflags == ::utf8env
::output_propflags == orig(::output_propflags)
::output_propflags == orig(::cleanup_mpg123)
::output_propflags == orig(::param.term_ctrl)
::output_propflags == orig(::param.loop)
::output_propflags == orig(::param.talk_icy)
::output_propflags == orig(::utf8env)
::output_propflags == size(::argv[])
::output_propflags == orig(size(::argv[]))
::output_propflags == ::opts[::output_propflags].value
::output_propflags == orig(::opts[post(::output_propflags)].value)
::output_propflags == ::opts[::cleanup_mpg123].value
::output_propflags == orig(::opts[post(::cleanup_mpg123)].value)
::output_propflags == ::opts[::param.term_ctrl].value
::output_propflags == orig(::opts[post(::param.term_ctrl)].value)
::output_propflags == ::opts[::param.loop].value
::output_propflags == orig(::opts[post(::param.loop)].value)
::output_propflags == ::opts[::param.talk_icy].value
::output_propflags == orig(::opts[post(::param.talk_icy)].value)
::output_propflags == ::opts[::utf8env].value
::output_propflags == ::opts[orig(::output_propflags)].value
::output_propflags == ::opts[orig(::cleanup_mpg123)].value
::output_propflags == ::opts[orig(::param.term_ctrl)].value
::output_propflags == ::opts[orig(::param.loop)].value
::output_propflags == ::opts[orig(::param.talk_icy)].value
::output_propflags == ::opts[orig(::utf8env)].value
::output_propflags == orig(::opts[post(::utf8env)].value)
::output_propflags == orig(::opts[::output_propflags].value)
::output_propflags == orig(::opts[::cleanup_mpg123].value)
::output_propflags == orig(::opts[::param.term_ctrl].value)
::output_propflags == orig(::opts[::param.loop].value)
::output_propflags == orig(::opts[::param.talk_icy].value)
::output_propflags == orig(::opts[::utf8env].value)
::filept == ::param.frame_number
::filept == ::param.gain
::filept == ::frames_left
::filept == orig(::filept)
::filept == orig(::param.frame_number)
::filept == orig(::param.gain)
::filept == orig(::frames_left)
::argv == orig(::argv)
::prebuffer_size == ::prebuffer_fill
::prebuffer_size == ::htd.content_type.size
::prebuffer_size == ::htd.content_type.fill
::prebuffer_size == ::htd.icy_name.size
::prebuffer_size == ::htd.icy_name.fill
::prebuffer_size == ::htd.icy_url.size
::prebuffer_size == ::htd.icy_url.fill
::prebuffer_size == ::htd.proxyhost.size
::prebuffer_size == ::htd.proxyhost.fill
::prebuffer_size == ::htd.proxyport.size
::prebuffer_size == ::htd.proxyport.fill
::prebuffer_size == ::param.appflags
::prebuffer_size == orig(::prebuffer_size)
::prebuffer_size == orig(::prebuffer_fill)
::prebuffer_size == orig(::htd.content_type.size)
::prebuffer_size == orig(::htd.content_type.fill)
::prebuffer_size == orig(::htd.icy_name.size)
::prebuffer_size == orig(::htd.icy_name.fill)
::prebuffer_size == orig(::htd.icy_url.size)
::prebuffer_size == orig(::htd.icy_url.fill)
::prebuffer_size == orig(::htd.proxyhost.size)
::prebuffer_size == orig(::htd.proxyhost.fill)
::prebuffer_size == orig(::htd.proxyport.size)
::prebuffer_size == orig(::htd.proxyport.fill)
::prebuffer_size == orig(::param.appflags)
::minbytes == orig(::minbytes)
::framenum == orig(::framenum)
::htd == orig(::htd)
::htd.content_type == orig(::htd.content_type)
::htd.icy_name == orig(::htd.icy_name)
::htd.icy_url == orig(::htd.icy_url)
::htd.proxyhost == orig(::htd.proxyhost)
::htd.proxyport == orig(::htd.proxyport)
::htd.proxystate == orig(::htd.proxystate)
::param == orig(::param)
::param.output_flags == orig(::param.output_flags)
::param.outscale == orig(::param.outscale)
::param.flags == orig(::param.flags)
::param.resync_limit == orig(::param.resync_limit)
::param.pitch == ::param.device_buffer
::param.pitch == orig(::param.pitch)
::param.pitch == orig(::param.device_buffer)
::param.index_size == orig(::param.index_size)
::param.preload == orig(::param.preload)
::mh == orig(::mh)
::ao == orig(::ao)
::aux_out == orig(::aux_out)
::opts == orig(::opts)
::opts[] == orig(::opts[])
::opts[].sname == orig(::opts[].sname)
::opts[].flags == orig(::opts[].flags)
::opts[].func == orig(::opts[].func)
::opts[].var == orig(::opts[].var)
::opts[].value == orig(::opts[].value)
::term_help == orig(::term_help)
::term_help[] == orig(::term_help[])
::term_help[].key == orig(::term_help[].key)
::term_help[].key2 == orig(::term_help[].key2)
size(::rva_name[])-1 == ::opts[::param.output_flags-1].value
size(::rva_name[])-1 == orig(::opts[post(::param.output_flags)-1].value)
size(::rva_name[])-1 == ::opts[orig(::param.output_flags)-1].value
size(::rva_name[])-1 == orig(::opts[::param.output_flags-1].value)
::opts[::stopped] == ::opts[::output_propflags-1]
::opts[::stopped] == orig(::opts[post(::output_propflags)-1])
::opts[::stopped] == ::opts[::cleanup_mpg123-1]
::opts[::stopped] == orig(::opts[post(::cleanup_mpg123)-1])
::opts[::stopped] == ::opts[::param.term_ctrl-1]
::opts[::stopped] == orig(::opts[post(::param.term_ctrl)-1])
::opts[::stopped] == ::opts[::param.loop-1]
::opts[::stopped] == orig(::opts[post(::param.loop)-1])
::opts[::stopped] == ::opts[::param.talk_icy-1]
::opts[::stopped] == orig(::opts[post(::param.talk_icy)-1])
::opts[::stopped] == ::opts[::utf8env-1]
::opts[::stopped] == ::opts[orig(::output_propflags)-1]
::opts[::stopped] == ::opts[orig(::cleanup_mpg123)-1]
::opts[::stopped] == ::opts[orig(::param.term_ctrl)-1]
::opts[::stopped] == ::opts[orig(::param.loop)-1]
::opts[::stopped] == ::opts[orig(::param.talk_icy)-1]
::opts[::stopped] == ::opts[orig(::utf8env)-1]
::opts[::stopped] == orig(::opts[post(::utf8env)-1])
::opts[::stopped] == orig(::opts[::output_propflags-1])
::opts[::stopped] == orig(::opts[::cleanup_mpg123-1])
::opts[::stopped] == orig(::opts[::param.term_ctrl-1])
::opts[::stopped] == orig(::opts[::param.loop-1])
::opts[::stopped] == orig(::opts[::param.talk_icy-1])
::opts[::stopped] == orig(::opts[::utf8env-1])
::opts[::stopped].sname == ::opts[::output_propflags-1].sname
::opts[::stopped].sname == orig(::opts[post(::output_propflags)-1].sname)
::opts[::stopped].sname == ::opts[::cleanup_mpg123-1].sname
::opts[::stopped].sname == orig(::opts[post(::cleanup_mpg123)-1].sname)
::opts[::stopped].sname == ::opts[::param.term_ctrl-1].sname
::opts[::stopped].sname == orig(::opts[post(::param.term_ctrl)-1].sname)
::opts[::stopped].sname == ::opts[::param.loop-1].sname
::opts[::stopped].sname == orig(::opts[post(::param.loop)-1].sname)
::opts[::stopped].sname == ::opts[::param.talk_icy-1].sname
::opts[::stopped].sname == orig(::opts[post(::param.talk_icy)-1].sname)
::opts[::stopped].sname == ::opts[::utf8env-1].sname
::opts[::stopped].sname == ::opts[orig(::output_propflags)-1].sname
::opts[::stopped].sname == ::opts[orig(::cleanup_mpg123)-1].sname
::opts[::stopped].sname == ::opts[orig(::param.term_ctrl)-1].sname
::opts[::stopped].sname == ::opts[orig(::param.loop)-1].sname
::opts[::stopped].sname == ::opts[orig(::param.talk_icy)-1].sname
::opts[::stopped].sname == ::opts[orig(::utf8env)-1].sname
::opts[::stopped].sname == orig(::opts[post(::utf8env)-1].sname)
::opts[::stopped].sname == orig(::opts[::output_propflags-1].sname)
::opts[::stopped].sname == orig(::opts[::cleanup_mpg123-1].sname)
::opts[::stopped].sname == orig(::opts[::param.term_ctrl-1].sname)
::opts[::stopped].sname == orig(::opts[::param.loop-1].sname)
::opts[::stopped].sname == orig(::opts[::param.talk_icy-1].sname)
::opts[::stopped].sname == orig(::opts[::utf8env-1].sname)
::opts[::stopped].flags == ::opts[::output_propflags-1].flags
::opts[::stopped].flags == orig(::opts[post(::output_propflags)-1].flags)
::opts[::stopped].flags == ::opts[::cleanup_mpg123-1].flags
::opts[::stopped].flags == orig(::opts[post(::cleanup_mpg123)-1].flags)
::opts[::stopped].flags == ::opts[::param.term_ctrl-1].flags
::opts[::stopped].flags == orig(::opts[post(::param.term_ctrl)-1].flags)
::opts[::stopped].flags == ::opts[::param.loop-1].flags
::opts[::stopped].flags == orig(::opts[post(::param.loop)-1].flags)
::opts[::stopped].flags == ::opts[::param.talk_icy-1].flags
::opts[::stopped].flags == orig(::opts[post(::param.talk_icy)-1].flags)
::opts[::stopped].flags == ::opts[::utf8env-1].flags
::opts[::stopped].flags == ::opts[orig(::output_propflags)-1].flags
::opts[::stopped].flags == ::opts[orig(::cleanup_mpg123)-1].flags
::opts[::stopped].flags == ::opts[orig(::param.term_ctrl)-1].flags
::opts[::stopped].flags == ::opts[orig(::param.loop)-1].flags
::opts[::stopped].flags == ::opts[orig(::param.talk_icy)-1].flags
::opts[::stopped].flags == ::opts[orig(::utf8env)-1].flags
::opts[::stopped].flags == orig(::opts[post(::utf8env)-1].flags)
::opts[::stopped].flags == orig(::opts[::output_propflags-1].flags)
::opts[::stopped].flags == orig(::opts[::cleanup_mpg123-1].flags)
::opts[::stopped].flags == orig(::opts[::param.term_ctrl-1].flags)
::opts[::stopped].flags == orig(::opts[::param.loop-1].flags)
::opts[::stopped].flags == orig(::opts[::param.talk_icy-1].flags)
::opts[::stopped].flags == orig(::opts[::utf8env-1].flags)
::opts[::stopped].func == ::opts[::output_propflags].func
::opts[::stopped].func == ::opts[::output_propflags-1].func
::opts[::stopped].func == orig(::opts[post(::output_propflags)].func)
::opts[::stopped].func == orig(::opts[post(::output_propflags)-1].func)
::opts[::stopped].func == ::opts[::cleanup_mpg123].func
::opts[::stopped].func == ::opts[::cleanup_mpg123-1].func
::opts[::stopped].func == orig(::opts[post(::cleanup_mpg123)].func)
::opts[::stopped].func == orig(::opts[post(::cleanup_mpg123)-1].func)
::opts[::stopped].func == ::opts[::param.term_ctrl].func
::opts[::stopped].func == ::opts[::param.term_ctrl-1].func
::opts[::stopped].func == orig(::opts[post(::param.term_ctrl)].func)
::opts[::stopped].func == orig(::opts[post(::param.term_ctrl)-1].func)
::opts[::stopped].func == ::opts[::param.loop].func
::opts[::stopped].func == ::opts[::param.loop-1].func
::opts[::stopped].func == orig(::opts[post(::param.loop)].func)
::opts[::stopped].func == orig(::opts[post(::param.loop)-1].func)
::opts[::stopped].func == ::opts[::param.talk_icy].func
::opts[::stopped].func == ::opts[::param.talk_icy-1].func
::opts[::stopped].func == orig(::opts[post(::param.talk_icy)].func)
::opts[::stopped].func == orig(::opts[post(::param.talk_icy)-1].func)
::opts[::stopped].func == ::opts[::utf8env].func
::opts[::stopped].func == ::opts[::utf8env-1].func
::opts[::stopped].func == ::opts[orig(::output_propflags)].func
::opts[::stopped].func == ::opts[orig(::output_propflags)-1].func
::opts[::stopped].func == ::opts[orig(::cleanup_mpg123)].func
::opts[::stopped].func == ::opts[orig(::cleanup_mpg123)-1].func
::opts[::stopped].func == ::opts[orig(::param.term_ctrl)].func
::opts[::stopped].func == ::opts[orig(::param.term_ctrl)-1].func
::opts[::stopped].func == ::opts[orig(::param.loop)].func
::opts[::stopped].func == ::opts[orig(::param.loop)-1].func
::opts[::stopped].func == ::opts[orig(::param.talk_icy)].func
::opts[::stopped].func == ::opts[orig(::param.talk_icy)-1].func
::opts[::stopped].func == ::opts[orig(::utf8env)].func
::opts[::stopped].func == ::opts[orig(::utf8env)-1].func
::opts[::stopped].func == orig(::opts[post(::utf8env)].func)
::opts[::stopped].func == orig(::opts[post(::utf8env)-1].func)
::opts[::stopped].func == orig(::opts[::output_propflags].func)
::opts[::stopped].func == orig(::opts[::output_propflags-1].func)
::opts[::stopped].func == orig(::opts[::cleanup_mpg123].func)
::opts[::stopped].func == orig(::opts[::cleanup_mpg123-1].func)
::opts[::stopped].func == orig(::opts[::param.term_ctrl].func)
::opts[::stopped].func == orig(::opts[::param.term_ctrl-1].func)
::opts[::stopped].func == orig(::opts[::param.loop].func)
::opts[::stopped].func == orig(::opts[::param.loop-1].func)
::opts[::stopped].func == orig(::opts[::param.talk_icy].func)
::opts[::stopped].func == orig(::opts[::param.talk_icy-1].func)
::opts[::stopped].func == orig(::opts[::utf8env].func)
::opts[::stopped].func == orig(::opts[::utf8env-1].func)
::opts[::stopped].var == ::opts[::output_propflags-1].var
::opts[::stopped].var == orig(::opts[post(::output_propflags)-1].var)
::opts[::stopped].var == ::opts[::cleanup_mpg123-1].var
::opts[::stopped].var == orig(::opts[post(::cleanup_mpg123)-1].var)
::opts[::stopped].var == ::opts[::param.term_ctrl-1].var
::opts[::stopped].var == orig(::opts[post(::param.term_ctrl)-1].var)
::opts[::stopped].var == ::opts[::param.loop-1].var
::opts[::stopped].var == orig(::opts[post(::param.loop)-1].var)
::opts[::stopped].var == ::opts[::param.talk_icy-1].var
::opts[::stopped].var == orig(::opts[post(::param.talk_icy)-1].var)
::opts[::stopped].var == ::opts[::utf8env-1].var
::opts[::stopped].var == ::opts[orig(::output_propflags)-1].var
::opts[::stopped].var == ::opts[orig(::cleanup_mpg123)-1].var
::opts[::stopped].var == ::opts[orig(::param.term_ctrl)-1].var
::opts[::stopped].var == ::opts[orig(::param.loop)-1].var
::opts[::stopped].var == ::opts[orig(::param.talk_icy)-1].var
::opts[::stopped].var == ::opts[orig(::utf8env)-1].var
::opts[::stopped].var == orig(::opts[post(::utf8env)-1].var)
::opts[::stopped].var == orig(::opts[::output_propflags-1].var)
::opts[::stopped].var == orig(::opts[::cleanup_mpg123-1].var)
::opts[::stopped].var == orig(::opts[::param.term_ctrl-1].var)
::opts[::stopped].var == orig(::opts[::param.loop-1].var)
::opts[::stopped].var == orig(::opts[::param.talk_icy-1].var)
::opts[::stopped].var == orig(::opts[::utf8env-1].var)
::term_help[::stopped] == ::term_help[::output_propflags-1]
::term_help[::stopped] == orig(::term_help[post(::output_propflags)-1])
::term_help[::stopped] == ::term_help[::cleanup_mpg123-1]
::term_help[::stopped] == orig(::term_help[post(::cleanup_mpg123)-1])
::term_help[::stopped] == ::term_help[::param.term_ctrl-1]
::term_help[::stopped] == orig(::term_help[post(::param.term_ctrl)-1])
::term_help[::stopped] == ::term_help[::param.loop-1]
::term_help[::stopped] == orig(::term_help[post(::param.loop)-1])
::term_help[::stopped] == ::term_help[::param.talk_icy-1]
::term_help[::stopped] == orig(::term_help[post(::param.talk_icy)-1])
::term_help[::stopped] == ::term_help[::utf8env-1]
::term_help[::stopped] == orig(::term_help[post(::utf8env)-1])
::term_help[::stopped] == ::term_help[orig(::output_propflags)-1]
::term_help[::stopped] == ::term_help[orig(::cleanup_mpg123)-1]
::term_help[::stopped] == ::term_help[orig(::param.term_ctrl)-1]
::term_help[::stopped] == ::term_help[orig(::param.loop)-1]
::term_help[::stopped] == ::term_help[orig(::param.talk_icy)-1]
::term_help[::stopped] == ::term_help[orig(::utf8env)-1]
::term_help[::stopped] == orig(::term_help[::output_propflags-1])
::term_help[::stopped] == orig(::term_help[::cleanup_mpg123-1])
::term_help[::stopped] == orig(::term_help[::param.term_ctrl-1])
::term_help[::stopped] == orig(::term_help[::param.loop-1])
::term_help[::stopped] == orig(::term_help[::param.talk_icy-1])
::term_help[::stopped] == orig(::term_help[::utf8env-1])
::term_help[::stopped].key == ::opts[::loptind].sname
::term_help[::stopped].key == orig(::opts[post(::loptind)].sname)
::term_help[::stopped].key == ::term_help[::output_propflags-1].key
::term_help[::stopped].key == orig(::term_help[post(::output_propflags)-1].key)
::term_help[::stopped].key == ::opts[::argc].sname
::term_help[::stopped].key == orig(::opts[post(::argc)].sname)
::term_help[::stopped].key == ::term_help[::cleanup_mpg123-1].key
::term_help[::stopped].key == orig(::term_help[post(::cleanup_mpg123)-1].key)
::term_help[::stopped].key == ::term_help[::param.term_ctrl-1].key
::term_help[::stopped].key == orig(::term_help[post(::param.term_ctrl)-1].key)
::term_help[::stopped].key == ::term_help[::param.loop-1].key
::term_help[::stopped].key == orig(::term_help[post(::param.loop)-1].key)
::term_help[::stopped].key == ::term_help[::param.talk_icy-1].key
::term_help[::stopped].key == orig(::term_help[post(::param.talk_icy)-1].key)
::term_help[::stopped].key == ::opts[::param.preframes].sname
::term_help[::stopped].key == orig(::opts[post(::param.preframes)].sname)
::term_help[::stopped].key == ::opts[orig(::loptind)].sname
::term_help[::stopped].key == ::opts[orig(::argc)].sname
::term_help[::stopped].key == ::opts[orig(::param.preframes)].sname
::term_help[::stopped].key == ::term_help[::utf8env-1].key
::term_help[::stopped].key == orig(::term_help[post(::utf8env)-1].key)
::term_help[::stopped].key == ::term_help[orig(::output_propflags)-1].key
::term_help[::stopped].key == ::term_help[orig(::cleanup_mpg123)-1].key
::term_help[::stopped].key == ::term_help[orig(::param.term_ctrl)-1].key
::term_help[::stopped].key == ::term_help[orig(::param.loop)-1].key
::term_help[::stopped].key == ::term_help[orig(::param.talk_icy)-1].key
::term_help[::stopped].key == ::term_help[orig(::utf8env)-1].key
::term_help[::stopped].key == orig(::opts[::loptind].sname)
::term_help[::stopped].key == orig(::term_help[::output_propflags-1].key)
::term_help[::stopped].key == orig(::opts[::argc].sname)
::term_help[::stopped].key == orig(::term_help[::cleanup_mpg123-1].key)
::term_help[::stopped].key == orig(::term_help[::param.term_ctrl-1].key)
::term_help[::stopped].key == orig(::term_help[::param.loop-1].key)
::term_help[::stopped].key == orig(::term_help[::param.talk_icy-1].key)
::term_help[::stopped].key == orig(::opts[::param.preframes].sname)
::term_help[::stopped].key == orig(::term_help[::utf8env-1].key)
::term_help[::stopped].key2 == ::term_help[::output_propflags-1].key2
::term_help[::stopped].key2 == orig(::term_help[post(::output_propflags)-1].key2)
::term_help[::stopped].key2 == ::term_help[::cleanup_mpg123-1].key2
::term_help[::stopped].key2 == orig(::term_help[post(::cleanup_mpg123)-1].key2)
::term_help[::stopped].key2 == ::term_help[::param.term_ctrl-1].key2
::term_help[::stopped].key2 == orig(::term_help[post(::param.term_ctrl)-1].key2)
::term_help[::stopped].key2 == ::term_help[::param.loop-1].key2
::term_help[::stopped].key2 == orig(::term_help[post(::param.loop)-1].key2)
::term_help[::stopped].key2 == ::term_help[::param.talk_icy-1].key2
::term_help[::stopped].key2 == orig(::term_help[post(::param.talk_icy)-1].key2)
::term_help[::stopped].key2 == ::term_help[::utf8env-1].key2
::term_help[::stopped].key2 == orig(::term_help[post(::utf8env)-1].key2)
::term_help[::stopped].key2 == ::term_help[orig(::output_propflags)-1].key2
::term_help[::stopped].key2 == ::term_help[orig(::cleanup_mpg123)-1].key2
::term_help[::stopped].key2 == ::term_help[orig(::param.term_ctrl)-1].key2
::term_help[::stopped].key2 == ::term_help[orig(::param.loop)-1].key2
::term_help[::stopped].key2 == ::term_help[orig(::param.talk_icy)-1].key2
::term_help[::stopped].key2 == ::term_help[orig(::utf8env)-1].key2
::term_help[::stopped].key2 == orig(::term_help[::output_propflags-1].key2)
::term_help[::stopped].key2 == orig(::term_help[::cleanup_mpg123-1].key2)
::term_help[::stopped].key2 == orig(::term_help[::param.term_ctrl-1].key2)
::term_help[::stopped].key2 == orig(::term_help[::param.loop-1].key2)
::term_help[::stopped].key2 == orig(::term_help[::param.talk_icy-1].key2)
::term_help[::stopped].key2 == orig(::term_help[::utf8env-1].key2)
::opts[::framenum].func == ::opts[::framenum-1].func
::opts[::framenum].func == orig(::opts[post(::framenum)-1].func)
::opts[::framenum].func == ::opts[orig(::framenum)-1].func
::opts[::framenum].func == orig(::opts[::framenum-1].func)
::opts[::param.output_flags].func == ::opts[::param.output_flags-1].func
::opts[::param.output_flags].func == orig(::opts[post(::param.output_flags)-1].func)
::opts[::param.output_flags].func == ::opts[orig(::param.output_flags)-1].func
::opts[::param.output_flags].func == orig(::opts[::param.output_flags-1].func)
::opts[::param.output_flags].var == ::opts[::param.output_flags-1].var
::opts[::param.output_flags].var == orig(::opts[post(::param.output_flags)-1].var)
::opts[::param.output_flags].var == ::opts[orig(::param.output_flags)-1].var
::opts[::param.output_flags].var == orig(::opts[::param.output_flags-1].var)
::remote_header_help == "S <mpeg-version> <layer> <sampling freq> <mode(stereo/mono/...)> <mode_ext> <framesize> <stereo> <copyright> <error_protected> <emphasis> <bitrate> <extension> <vbr(0/1=yes/no)>"
::rva_name has only one value
::rva_name[] == [off, mix, album]
::rva_name[] elements one of { "album", "mix", "off" }
::outstream == null
::loptind == 4
::genre_table has only one value
::genre_table[] == [Blues, Classic Rock, Country, Dance, Disco, Funk, Grunge, Hip-Hop, Jazz, Metal, New Age, Oldies, Other, Pop, R&B, Rap, Reggae, Rock, Techno, Industrial, Alternative, Ska, Death Metal, Pranks, Soundtrack, Euro-Techno, Ambient, Trip-Hop, Vocal, Jazz+Funk, Fusion, Trance, Classical, Instrumental, Acid, House, Game, Sound Clip, Gospel, Noise, AlternRock, Bass, Soul, Punk, Space, Meditative, Instrumental Pop, Instrumental Rock, Ethnic, Gothic, Darkwave, Techno-Industrial, Electronic, Pop-Folk, Eurodance, Dream, Southern Rock, Comedy, Cult, Gangsta, Top 40, Christian Rap, Pop/Funk, Jungle, Native American, Cabaret, New Wave, Psychedelic, Rave, Showtunes, Trailer, Lo-Fi, Tribal, Acid Punk, Acid Jazz, Polka, Retro, Musical, Rock & Roll, Hard Rock, Folk, Folk/Rock, National folk, Swing, Fast-fusion, Bebob, Latin, Revival, Celtic, Bluegrass, Avantgarde, Gothic Rock, Progressive Rock, Psychedelic Rock, Symphonic Rock, Slow Rock, Big Band, Chorus, Easy Listening, Acoustic, Humour, Speech, Chanson, Opera, Chamber Music, Sonata, Symphony, Booty Bass, Primus, Porn Groove, Satire, Slow Jam, Club, Tango, Samba, Folklore, Ballad, Powder Ballad, Rhythmic Soul, Freestyle, Duet, Punk Rock, Drum Solo, A Capella, Euro-House, Dance Hall, Goa, Drum & Bass, Club House, Hardcore, Terror, Indie, BritPop, NegerPunk, Polsk Punk, Beat, Christian Gangsta, Heavy Metal, Black Metal, Crossover, Contemporary C, Christian Rock, Merengue, Salsa, Thrash Metal, Anime, JPop, SynthPop]
::output_propflags == 1
::filept == -1
::argv has only one value
::argv[] == [./mpg123]
::argv[] elements == "./mpg123"
::prebuffer_size == 0
::minbytes == 1536
::binpath == "."
::framenum one of { 16, 32, 48 }
::htd has only one value
::htd.content_type has only one value
::htd.icy_name has only one value
::htd.icy_url has only one value
::htd.proxyhost has only one value
::htd.proxyport has only one value
::htd.proxystate == 0
::param has only one value
::param.output_module == "alsa,oss,nas"
::param.output_flags == 16
::param.term_usr1 == "s"
::param.term_usr2 == "f"
::param.outscale == 32768
::param.flags == 33088
::param.resync_limit == 1024
::param.pitch == 0.0
::param.index_size == 1000
::param.preload == 0.2
::mh has only one value
::ao has only one value
::prgName == "mpg123"
::aux_out has only one value
::opts has only one value
::opts[] contains no nulls and has only one value, of length 96
::opts[].sname == [107, 50, 52, 116, 115, 83, 79, 99, 118, 113, 121, 0, 48, 0, 49, 0, 109, 0, 0, 0, 0, 103, 114, 0, 0, 0, 0, 0, 111, 0, 97, 102, 110, 67, 0, 0, 0, 98, 0, 0, 82, 0, 100, 104, 112, 64, 122, 90, 69, 0, 0, 0, 0, 117, 84, 0, 119, 0, 0, 0, 0, 0, 63, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 105, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 101, 0, 0, 0, 0, 0, 0, 0, 0]
::opts[].sname elements >= 0
::opts[].flags == [9, 4, 4, 4, 4, 4, 3, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 9, 4, 4, 0, 0, 0, 3, 0, 3, 9, 9, 4, 4, 3, 3, 9, 4, 17, 4, 4, 9, 9, 3, 3, 4, 4, 3, 4, 3, 4, 4, 3, 8, 4, 3, 3, 3, 4, 4, 4, 0, 0, 0, 9, 4, 4, 4, 4, 4, 4, 4, 3, 9, 9, 4, 5, 9, 17, 4, 4, 4, 4, 4, 9, 4, 3, 9, 4, 3, 9, 4, 3, 17, 0]
::opts[].flags elements >= 0
::opts[].func has only one value, of length 96
::opts[].var has only one value, of length 96
::opts[].value == [0, 1, 2, 0, 0, 0, 0, 1, 0, 0, 128, 128, 1, 1, 2, 2, 4, 4, 4, 8, 1, 0, 0, 16, 1024, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 2, 1, 2, 0, 1, 1, 0, 1, 1, 0, 0, 0, 64, 64, 16384, 0, 0, 0, 0, 4, 1, 1, 2, 2, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 2, 1, 1, 512, 0, 256, 0, 0, 8192, 0, 0, 4096, 0, 0, 0]
::opts[].value elements >= 0
::term_help has only one value
::term_help[] contains no nulls and has only one value, of length 26
::term_help[].key == [115, 102, 100, 93, 91, 98, 112, 46, 44, 58, 59, 62, 60, 43, 45, 114, 118, 108, 116, 109, 104, 113, 99, 120, 119, 107]
::term_help[].key2 == [32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 67, 88, 0, 0]
::term_help[].key2 elements >= 0
::term_help[].desc == [interrupt/restart playback (i.e. '(un)pause'), next track, previous track, next directory (next track until directory part changes), previous directory (previous track until directory part changes), back to beginning of track, loop around current position (don't combine with output buffer), forward, rewind, fast forward, fast rewind, fine forward, fine rewind, volume up, volume down, RVA switch, verbose switch, list current playlist, indicating current track there, display tag info (again), print MPEG header info (again), this help, quit, pitch up (small step, big step), pitch down (small step, big step), reset pitch to zero, print out current position in playlist and track, for the benefit of some external tool to store bookmarks]
size(::rva_name[]) == 3
size(::genre_table[]) == 148
size(::opts[]) == 96
size(::term_help[]) == 26
::opts[::stopped] has only one value
::opts[::stopped].sname == 107
::opts[::stopped].flags == 9
::opts[::stopped].func == null
::opts[::stopped].var has only one value
::term_help[::stopped] has only one value
::term_help[::stopped].key == 115
::term_help[::stopped].key2 == 32
::opts[::loptind] has only one value
::opts[::loptind-1] has only one value
::opts[::loptind-1].sname == 116
::opts[::loptind].func has only one value
::opts[::loptind-1].func has only one value
::term_help[::loptind] has only one value
::term_help[::loptind-1] has only one value
::term_help[::loptind].key == 91
::term_help[::loptind-1].key == 93
::opts[::output_propflags] has only one value
::opts[::output_propflags].sname == 50
::opts[::output_propflags].var has only one value
::term_help[::output_propflags] has only one value
::term_help[::output_propflags].key == 102
::opts[::framenum].sname one of { 69, 109, 110 }
::opts[::framenum-1].sname one of { 0, 90, 102 }
::opts[::framenum].flags one of { 3, 4, 9 }
::opts[::framenum-1].flags one of { 4, 9 }
::opts[::framenum].value one of { 0, 1, 4 }
::opts[::framenum-1].value one of { 0, 2 }
::opts[::param.output_flags] has only one value
::opts[::param.output_flags-1] has only one value
::opts[::param.output_flags].sname == 109
::opts[::param.output_flags].func has only one value
::opts[::param.output_flags].var has only one value
::term_help[::param.output_flags] has only one value
::term_help[::param.output_flags-1] has only one value
::term_help[::param.output_flags].key == 118
::term_help[::param.output_flags-1].key == 114
::stopped in ::opts[].flags
::remote_header_help == orig(::remote_header_help)
::binpath == ::fullprogname
::binpath == orig(::binpath)
::binpath == orig(::fullprogname)
::param.output_module == orig(::param.output_module)
::param.output_flags in ::opts[].value
::param.term_usr1 == orig(::param.term_usr1)
::param.term_usr2 == orig(::param.term_usr2)
::param.resync_limit in ::opts[].value
::param.name == ::prgName
::prgName == orig(::param.name)
::prgName == orig(::prgName)
::term_help[::output_propflags].key in ::opts[].sname
::term_help[::param.output_flags].key in ::opts[].sname
::term_help[::param.output_flags-1].key in ::opts[].sname
size(::rva_name[]) in ::opts[].flags
::opts[::stopped].sname in ::term_help[].key
::opts[::loptind-1].sname in ::term_help[].key
::opts[::param.output_flags].sname in ::term_help[].key
===========================================================================
src/playlist.c.shuffle_playlist():::ENTER
::stopped == ::paused
::stopped == ::control_file
::stopped == ::loptchr
::stopped == ::framenum
::stopped == ::htd.icy_interval
::stopped == ::OutputDescriptor
::stopped == ::intflag
::stopped == ::param.aggressive
::stopped == ::param.shuffle
::stopped == ::param.remote
::stopped == ::param.remote_err
::stopped == ::param.quiet
::stopped == ::param.xterm_title
::stopped == ::param.usebuffer
::stopped == ::param.verbose
::stopped == ::param.checkrange
::stopped == ::param.force_reopen
::stopped == ::param.test_cpu
::stopped == ::param.realtime
::stopped == ::param.listentry
::stopped == ::param.long_id3
::stopped == ::param.list_cpu
::stopped == ::param.timeout
::stopped == ::param.delay
::stopped == ::param.index
::stopped == ::param.down_sample
::stopped == ::param.rva
::stopped == ::param.halfspeed
::stopped == ::param.doublespeed
::stopped == ::param.start_frame
::stopped == ::param.force_rate
::stopped == ::param.smooth
::stopped == ::param.keep_open
::stopped == ::param.force_utf8
::stopped == ::param.icy_interval
::stopped == ::global_premium
::stopped == ::frames_left
::stopped == ::deathflag
::stopped == ::seeking
::stopped == ::opts[::stopped].value
::stopped == ::pl.list[::stopped].freeit
::stopped == ::opts[::paused].value
::stopped == ::pl.list[::paused].freeit
::stopped == ::opts[::control_file].value
::stopped == ::pl.list[::control_file].freeit
::stopped == ::opts[::loptind].value
::stopped == ::opts[::loptind-1].value
::stopped == ::term_help[::loptind].key2
::stopped == ::term_help[::loptind-1].key2
::stopped == ::opts[::loptchr].value
::stopped == ::pl.list[::loptchr].freeit
::stopped == ::opts[::framenum].value
::stopped == ::pl.list[::framenum].freeit
::stopped == ::opts[::htd.icy_interval].value
::stopped == ::pl.list[::htd.icy_interval].freeit
::stopped == ::opts[::OutputDescriptor].value
::stopped == ::pl.list[::OutputDescriptor].freeit
::stopped == ::opts[::intflag].value
::stopped == ::pl.list[::intflag].freeit
::stopped == ::opts[::param.aggressive].value
::stopped == ::pl.list[::param.aggressive].freeit
::stopped == ::opts[::param.shuffle].value
::stopped == ::pl.list[::param.shuffle].freeit
::stopped == ::opts[::param.remote].value
::stopped == ::pl.list[::param.remote].freeit
::stopped == ::opts[::param.remote_err].value
::stopped == ::pl.list[::param.remote_err].freeit
::stopped == ::opts[::param.quiet].value
::stopped == ::pl.list[::param.quiet].freeit
::stopped == ::opts[::param.xterm_title].value
::stopped == ::pl.list[::param.xterm_title].freeit
::stopped == ::opts[::param.usebuffer].value
::stopped == ::pl.list[::param.usebuffer].freeit
::stopped == ::opts[::param.verbose].value
::stopped == ::pl.list[::param.verbose].freeit
::stopped == ::opts[::param.output_flags-1].sname
::stopped == ::term_help[::param.output_flags].key2
::stopped == ::term_help[::param.output_flags-1].key2
::stopped == ::opts[::param.term_ctrl-1].value
::stopped == ::pl.list[::param.term_ctrl].freeit
::stopped == ::pl.list[::param.term_ctrl-1].freeit
::stopped == ::term_help[::param.term_ctrl].key2
::stopped == ::opts[::param.checkrange].value
::stopped == ::pl.list[::param.checkrange].freeit
::stopped == ::opts[::param.force_reopen].value
::stopped == ::pl.list[::param.force_reopen].freeit
::stopped == ::opts[::param.test_cpu].value
::stopped == ::pl.list[::param.test_cpu].freeit
::stopped == ::opts[::param.realtime].value
::stopped == ::pl.list[::param.realtime].freeit
::stopped == ::opts[::param.listentry].value
::stopped == ::pl.list[::param.listentry].freeit
::stopped == ::opts[::param.long_id3].value
::stopped == ::pl.list[::param.long_id3].freeit
::stopped == ::opts[::param.list_cpu].value
::stopped == ::pl.list[::param.list_cpu].freeit
::stopped == ::opts[::param.timeout].value
::stopped == ::pl.list[::param.timeout].freeit
::stopped == ::opts[::param.loop-1].value
::stopped == ::pl.list[::param.loop].freeit
::stopped == ::pl.list[::param.loop-1].freeit
::stopped == ::term_help[::param.loop].key2
::stopped == ::opts[::param.delay].value
::stopped == ::pl.list[::param.delay].freeit
::stopped == ::opts[::param.index].value
::stopped == ::pl.list[::param.index].freeit
::stopped == ::opts[::param.down_sample].value
::stopped == ::pl.list[::param.down_sample].freeit
::stopped == ::opts[::param.rva].value
::stopped == ::pl.list[::param.rva].freeit
::stopped == ::opts[::param.halfspeed].value
::stopped == ::pl.list[::param.halfspeed].freeit
::stopped == ::opts[::param.doublespeed].value
::stopped == ::pl.list[::param.doublespeed].freeit
::stopped == ::opts[::param.start_frame].value
::stopped == ::pl.list[::param.start_frame].freeit
::stopped == ::opts[::param.force_rate].value
::stopped == ::pl.list[::param.force_rate].freeit
::stopped == ::opts[::param.talk_icy-1].value
::stopped == ::pl.list[::param.talk_icy].freeit
::stopped == ::pl.list[::param.talk_icy-1].freeit
::stopped == ::term_help[::param.talk_icy].key2
::stopped == ::opts[::param.smooth].value
::stopped == ::pl.list[::param.smooth].freeit
::stopped == ::opts[::param.keep_open].value
::stopped == ::pl.list[::param.keep_open].freeit
::stopped == ::opts[::param.force_utf8].value
::stopped == ::pl.list[::param.force_utf8].freeit
::stopped == ::opts[::param.preframes].value
::stopped == ::opts[::param.preframes-1].value
::stopped == ::term_help[::param.preframes].key2
::stopped == ::term_help[::param.preframes-1].key2
::stopped == ::opts[::param.icy_interval].value
::stopped == ::pl.list[::param.icy_interval].freeit
::stopped == ::opts[::global_premium].value
::stopped == ::pl.list[::global_premium].freeit
::stopped == ::opts[::frames_left].value
::stopped == ::pl.list[::frames_left].freeit
::stopped == ::opts[::fresh-1].value
::stopped == ::pl.list[::fresh].freeit
::stopped == ::pl.list[::fresh-1].freeit
::stopped == ::term_help[::fresh].key2
::stopped == ::opts[::deathflag].value
::stopped == ::pl.list[::deathflag].freeit
::stopped == ::opts[::utf8env-1].value
::stopped == ::opts[::pl.loop-1].value
::stopped == ::opts[::seeking].value
::stopped == ::pl.list[::utf8env].freeit
::stopped == ::pl.list[::utf8env-1].freeit
::stopped == ::term_help[::utf8env].key2
::stopped == ::pl.list[::pl.loop].freeit
::stopped == ::pl.list[::pl.loop-1].freeit
::stopped == ::term_help[::pl.loop].key2
::stopped == ::pl.list[::seeking].freeit
::outstream == ::pl.file
::outstream == ::opts[::loptind].var
::outstream == ::opts[::loptind-1].var
::outstream == ::opts[::param.preframes].var
::outstream == ::opts[::param.preframes-1].var
::loptind == ::param.preframes
::loptind == ::opts[::loptind].flags
::loptind == ::opts[::loptind-1].flags
::loptind == ::opts[::param.output_flags].flags
::loptind == ::opts[::param.output_flags-1].flags
::loptind == ::opts[::param.output_flags].value
::loptind == ::opts[::param.term_ctrl].flags
::loptind == ::opts[::param.loop].flags
::loptind == ::opts[::param.talk_icy].flags
::loptind == ::opts[::param.preframes].flags
::loptind == ::opts[::param.preframes-1].flags
::loptind == ::opts[::fresh].flags
::loptind == ::opts[::utf8env].flags
::loptind == ::opts[::pl.loop].flags
::genre_count == size(::genre_table[])-1
::htd.content_type.size == ::param.appflags
::htd.content_type.fill == ::param.appflags
::htd.icy_name.size == ::param.appflags
::htd.icy_name.fill == ::param.appflags
::htd.icy_url.size == ::param.appflags
::htd.icy_url.fill == ::param.appflags
::htd.proxyhost.size == ::param.appflags
::htd.proxyhost.fill == ::param.appflags
::htd.proxyport.size == ::param.appflags
::htd.proxyport.fill == ::param.appflags
::param.term_ctrl == ::fresh
::param.loop == ::fresh
::param.frame_number == ::param.gain
::param.talk_icy == ::fresh
::param.pitch == ::param.device_buffer
::param.appflags == ::pl.entry
::param.appflags == ::pl.playcount
::param.appflags == ::pl.pos
::param.appflags == ::pl.num
::param.appflags == ::pl.linebuf.size
::param.appflags == ::pl.linebuf.fill
::param.appflags == ::pl.dir.size
::param.appflags == ::pl.dir.fill
::param.appflags == ::pl.list[::stopped].playcount
::param.appflags == ::pl.list[::paused].playcount
::param.appflags == ::pl.list[::control_file].playcount
::param.appflags == ::pl.list[::loptchr].playcount
::param.appflags == ::pl.list[::framenum].playcount
::param.appflags == ::pl.list[::htd.icy_interval].playcount
::param.appflags == ::pl.list[::OutputDescriptor].playcount
::param.appflags == ::pl.list[::intflag].playcount
::param.appflags == ::pl.list[::param.aggressive].playcount
::param.appflags == ::pl.list[::param.shuffle].playcount
::param.appflags == ::pl.list[::param.remote].playcount
::param.appflags == ::pl.list[::param.remote_err].playcount
::param.appflags == ::pl.list[::param.quiet].playcount
::param.appflags == ::pl.list[::param.xterm_title].playcount
::param.appflags == ::pl.list[::param.usebuffer].playcount
::param.appflags == ::pl.list[::param.verbose].playcount
::param.appflags == ::pl.list[::param.term_ctrl].playcount
::param.appflags == ::pl.list[::param.term_ctrl-1].playcount
::param.appflags == ::pl.list[::param.checkrange].playcount
::param.appflags == ::pl.list[::param.force_reopen].playcount
::param.appflags == ::pl.list[::param.test_cpu].playcount
::param.appflags == ::pl.list[::param.realtime].playcount
::param.appflags == ::pl.list[::param.listentry].playcount
::param.appflags == ::pl.list[::param.long_id3].playcount
::param.appflags == ::pl.list[::param.list_cpu].playcount
::param.appflags == ::pl.list[::param.timeout].playcount
::param.appflags == ::pl.list[::param.loop].playcount
::param.appflags == ::pl.list[::param.loop-1].playcount
::param.appflags == ::pl.list[::param.delay].playcount
::param.appflags == ::pl.list[::param.index].playcount
::param.appflags == ::pl.list[::param.down_sample].playcount
::param.appflags == ::pl.list[::param.rva].playcount
::param.appflags == ::pl.list[::param.halfspeed].playcount
::param.appflags == ::pl.list[::param.doublespeed].playcount
::param.appflags == ::pl.list[::param.start_frame].playcount
::param.appflags == ::pl.list[::param.force_rate].playcount
::param.appflags == ::pl.list[::param.talk_icy].playcount
::param.appflags == ::pl.list[::param.talk_icy-1].playcount
::param.appflags == ::pl.list[::param.smooth].playcount
::param.appflags == ::pl.list[::param.keep_open].playcount
::param.appflags == ::pl.list[::param.force_utf8].playcount
::param.appflags == ::pl.list[::param.icy_interval].playcount
::param.appflags == ::pl.list[::global_premium].playcount
::param.appflags == ::pl.list[::frames_left].playcount
::param.appflags == ::pl.list[::fresh].playcount
::param.appflags == ::pl.list[::fresh-1].playcount
::param.appflags == ::pl.list[::deathflag].playcount
::param.appflags == ::pl.list[::utf8env].playcount
::param.appflags == ::pl.list[::utf8env-1].playcount
::param.appflags == ::pl.list[::pl.loop].playcount
::param.appflags == ::pl.list[::pl.loop-1].playcount
::param.appflags == ::pl.list[::seeking].playcount
::fresh == ::utf8env
::fresh == ::pl.loop
::fresh == ::opts[::param.term_ctrl].value
::fresh == ::opts[::param.loop].value
::fresh == ::opts[::param.talk_icy].value
::fresh == ::opts[::fresh].value
::fresh == ::opts[::utf8env].value
::fresh == ::opts[::pl.loop].value
::pl.size == ::pl.alloc_step
size(::rva_name[]) == size(::pl.list[])
size(::rva_name[])-1 == ::opts[::param.output_flags-1].value
::opts[::stopped] == ::opts[::param.term_ctrl-1]
::opts[::stopped] == ::opts[::param.loop-1]
::opts[::stopped] == ::opts[::param.talk_icy-1]
::opts[::stopped] == ::opts[::fresh-1]
::opts[::stopped] == ::opts[::utf8env-1]
::opts[::stopped] == ::opts[::pl.loop-1]
::opts[::stopped].sname == ::opts[::param.term_ctrl-1].sname
::opts[::stopped].sname == ::opts[::param.loop-1].sname
::opts[::stopped].sname == ::opts[::param.talk_icy-1].sname
::opts[::stopped].sname == ::opts[::fresh-1].sname
::opts[::stopped].sname == ::opts[::utf8env-1].sname
::opts[::stopped].sname == ::opts[::pl.loop-1].sname
::opts[::stopped].flags == ::opts[::param.term_ctrl-1].flags
::opts[::stopped].flags == ::opts[::param.loop-1].flags
::opts[::stopped].flags == ::opts[::param.talk_icy-1].flags
::opts[::stopped].flags == ::opts[::fresh-1].flags
::opts[::stopped].flags == ::opts[::utf8env-1].flags
::opts[::stopped].flags == ::opts[::pl.loop-1].flags
::opts[::stopped].func == ::opts[::param.term_ctrl].func
::opts[::stopped].func == ::opts[::param.term_ctrl-1].func
::opts[::stopped].func == ::opts[::param.loop].func
::opts[::stopped].func == ::opts[::param.loop-1].func
::opts[::stopped].func == ::opts[::param.talk_icy].func
::opts[::stopped].func == ::opts[::param.talk_icy-1].func
::opts[::stopped].func == ::opts[::fresh].func
::opts[::stopped].func == ::opts[::fresh-1].func
::opts[::stopped].func == ::opts[::utf8env].func
::opts[::stopped].func == ::opts[::utf8env-1].func
::opts[::stopped].func == ::opts[::pl.loop].func
::opts[::stopped].func == ::opts[::pl.loop-1].func
::opts[::stopped].var == ::opts[::param.term_ctrl-1].var
::opts[::stopped].var == ::opts[::param.loop-1].var
::opts[::stopped].var == ::opts[::param.talk_icy-1].var
::opts[::stopped].var == ::opts[::fresh-1].var
::opts[::stopped].var == ::opts[::utf8env-1].var
::opts[::stopped].var == ::opts[::pl.loop-1].var
::pl.list[::stopped] == ::pl.list[::param.term_ctrl-1]
::pl.list[::stopped] == ::pl.list[::param.loop-1]
::pl.list[::stopped] == ::pl.list[::param.talk_icy-1]
::pl.list[::stopped] == ::pl.list[::fresh-1]
::pl.list[::stopped] == ::pl.list[::utf8env-1]
::pl.list[::stopped] == ::pl.list[::pl.loop-1]
::term_help[::stopped] == ::term_help[::param.term_ctrl-1]
::term_help[::stopped] == ::term_help[::param.loop-1]
::term_help[::stopped] == ::term_help[::param.talk_icy-1]
::term_help[::stopped] == ::term_help[::fresh-1]
::term_help[::stopped] == ::term_help[::utf8env-1]
::term_help[::stopped] == ::term_help[::pl.loop-1]
::term_help[::stopped].key == ::opts[::loptind].sname
::term_help[::stopped].key == ::term_help[::param.term_ctrl-1].key
::term_help[::stopped].key == ::term_help[::param.loop-1].key
::term_help[::stopped].key == ::term_help[::param.talk_icy-1].key
::term_help[::stopped].key == ::opts[::param.preframes].sname
::term_help[::stopped].key == ::term_help[::fresh-1].key
::term_help[::stopped].key == ::term_help[::utf8env-1].key
::term_help[::stopped].key == ::term_help[::pl.loop-1].key
::term_help[::stopped].key2 == ::term_help[::param.term_ctrl-1].key2
::term_help[::stopped].key2 == ::term_help[::param.loop-1].key2
::term_help[::stopped].key2 == ::term_help[::param.talk_icy-1].key2
::term_help[::stopped].key2 == ::term_help[::fresh-1].key2
::term_help[::stopped].key2 == ::term_help[::utf8env-1].key2
::term_help[::stopped].key2 == ::term_help[::pl.loop-1].key2
::opts[::param.output_flags].func == ::opts[::param.output_flags-1].func
::opts[::param.output_flags].var == ::opts[::param.output_flags-1].var
::stopped == 0
::remote_header_help == "S <mpeg-version> <layer> <sampling freq> <mode(stereo/mono/...)> <mode_ext> <framesize> <stereo> <copyright> <error_protected> <emphasis> <bitrate> <extension> <vbr(0/1=yes/no)>"
::rva_name has only one value
::rva_name[] == [off, mix, album]
::rva_name[] elements one of { "album", "mix", "off" }
::outstream == null
::loptind == 4
::genre_table has only one value
::genre_table[] == [Blues, Classic Rock, Country, Dance, Disco, Funk, Grunge, Hip-Hop, Jazz, Metal, New Age, Oldies, Other, Pop, R&B, Rap, Reggae, Rock, Techno, Industrial, Alternative, Ska, Death Metal, Pranks, Soundtrack, Euro-Techno, Ambient, Trip-Hop, Vocal, Jazz+Funk, Fusion, Trance, Classical, Instrumental, Acid, House, Game, Sound Clip, Gospel, Noise, AlternRock, Bass, Soul, Punk, Space, Meditative, Instrumental Pop, Instrumental Rock, Ethnic, Gothic, Darkwave, Techno-Industrial, Electronic, Pop-Folk, Eurodance, Dream, Southern Rock, Comedy, Cult, Gangsta, Top 40, Christian Rap, Pop/Funk, Jungle, Native American, Cabaret, New Wave, Psychedelic, Rave, Showtunes, Trailer, Lo-Fi, Tribal, Acid Punk, Acid Jazz, Polka, Retro, Musical, Rock & Roll, Hard Rock, Folk, Folk/Rock, National folk, Swing, Fast-fusion, Bebob, Latin, Revival, Celtic, Bluegrass, Avantgarde, Gothic Rock, Progressive Rock, Psychedelic Rock, Symphonic Rock, Slow Rock, Big Band, Chorus, Easy Listening, Acoustic, Humour, Speech, Chanson, Opera, Chamber Music, Sonata, Symphony, Booty Bass, Primus, Porn Groove, Satire, Slow Jam, Club, Tango, Samba, Folklore, Ballad, Powder Ballad, Rhythmic Soul, Freestyle, Duet, Punk Rock, Drum Solo, A Capella, Euro-House, Dance Hall, Goa, Drum & Bass, Club House, Hardcore, Terror, Indie, BritPop, NegerPunk, Polsk Punk, Beat, Christian Gangsta, Heavy Metal, Black Metal, Crossover, Contemporary C, Christian Rock, Merengue, Salsa, Thrash Metal, Anime, JPop, SynthPop]
::binpath == "."
::htd has only one value
::htd.content_type has only one value
::htd.icy_name has only one value
::htd.icy_url has only one value
::htd.proxyhost has only one value
::htd.proxyport has only one value
::htd.proxystate == 0
::param has only one value
::param.output_module == "alsa,oss,nas"
::param.output_flags == 16
::param.term_usr1 == "s"
::param.term_usr2 == "f"
::param.frame_number == -1
::param.outscale == 32768
::param.flags == 33088
::param.resync_limit == 1024
::param.pitch == 0.0
::param.appflags == 0
::param.index_size == 1000
::param.preload == 0.2
::mh has only one value
::ao has only one value
::prgName == "mpg123"
::fresh == 1
::aux_out has only one value
::opts has only one value
::opts[] contains no nulls and has only one value, of length 96
::opts[].sname == [107, 50, 52, 116, 115, 83, 79, 99, 118, 113, 121, 0, 48, 0, 49, 0, 109, 0, 0, 0, 0, 103, 114, 0, 0, 0, 0, 0, 111, 0, 97, 102, 110, 67, 0, 0, 0, 98, 0, 0, 82, 0, 100, 104, 112, 64, 122, 90, 69, 0, 0, 0, 0, 117, 84, 0, 119, 0, 0, 0, 0, 0, 63, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 105, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 101, 0, 0, 0, 0, 0, 0, 0, 0]
::opts[].sname elements >= 0
::opts[].flags == [9, 4, 4, 4, 4, 4, 3, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 9, 4, 4, 0, 0, 0, 3, 0, 3, 9, 9, 4, 4, 3, 3, 9, 4, 17, 4, 4, 9, 9, 3, 3, 4, 4, 3, 4, 3, 4, 4, 3, 8, 4, 3, 3, 3, 4, 4, 4, 0, 0, 0, 9, 4, 4, 4, 4, 4, 4, 4, 3, 9, 9, 4, 5, 9, 17, 4, 4, 4, 4, 4, 9, 4, 3, 9, 4, 3, 9, 4, 3, 17, 0]
::opts[].flags elements >= 0
::opts[].func has only one value, of length 96
::opts[].var has only one value, of length 96
::opts[].value == [0, 1, 2, 0, 0, 0, 0, 1, 0, 0, 128, 128, 1, 1, 2, 2, 4, 4, 4, 8, 1, 0, 0, 16, 1024, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 2, 1, 2, 0, 1, 1, 0, 1, 1, 0, 0, 0, 64, 64, 16384, 0, 0, 0, 0, 4, 1, 1, 2, 2, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 2, 1, 1, 512, 0, 256, 0, 0, 8192, 0, 0, 4096, 0, 0, 0]
::opts[].value elements >= 0
::pl has only one value
::pl.size == 10
::pl.fill == 3
::pl.list has only one value
::pl.list[] contains no nulls and has only one value, of length 3
::pl.list[].url == [ImmanuelCasto-Dagrandesaraifrio (copy 1).mp3, ImmanuelCasto-Dagrandesaraifrio (copy 2).mp3, ImmanuelCasto-Dagrandesaraifrio.mp3]
::pl.list[].url elements one of { "ImmanuelCasto-Dagrandesaraifrio (copy 1).mp3", "ImmanuelCasto-Dagrandesaraifrio (copy 2).mp3", "ImmanuelCasto-Dagrandesaraifrio.mp3" }
::pl.list[].freeit == [0, 0, 0]
::pl.list[].freeit elements == 0
::pl.list[].playcount == [0, 0, 0]
::pl.list[].playcount elements == 0
::pl.linebuf has only one value
::pl.dir has only one value
::pl.type == 0
::term_help has only one value
::term_help[] contains no nulls and has only one value, of length 26
::term_help[].key == [115, 102, 100, 93, 91, 98, 112, 46, 44, 58, 59, 62, 60, 43, 45, 114, 118, 108, 116, 109, 104, 113, 99, 120, 119, 107]
::term_help[].key2 == [32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 67, 88, 0, 0]
::term_help[].key2 elements >= 0
::term_help[].desc == [interrupt/restart playback (i.e. '(un)pause'), next track, previous track, next directory (next track until directory part changes), previous directory (previous track until directory part changes), back to beginning of track, loop around current position (don't combine with output buffer), forward, rewind, fast forward, fast rewind, fine forward, fine rewind, volume up, volume down, RVA switch, verbose switch, list current playlist, indicating current track there, display tag info (again), print MPEG header info (again), this help, quit, pitch up (small step, big step), pitch down (small step, big step), reset pitch to zero, print out current position in playlist and track, for the benefit of some external tool to store bookmarks]
size(::rva_name[]) == 3
size(::genre_table[]) == 148
size(::opts[]) == 96
size(::term_help[]) == 26
::opts[::stopped] has only one value
::opts[::stopped].sname == 107
::opts[::stopped].flags == 9
::opts[::stopped].func == null
::opts[::stopped].var has only one value
::pl.list[::stopped] has only one value
::term_help[::stopped] has only one value
::term_help[::stopped].key == 115
::term_help[::stopped].key2 == 32
::opts[::loptind] has only one value
::opts[::loptind-1] has only one value
::opts[::loptind-1].sname == 116
::opts[::loptind].func has only one value
::opts[::loptind-1].func has only one value
::term_help[::loptind] has only one value
::term_help[::loptind-1] has only one value
::term_help[::loptind].key == 91
::term_help[::loptind-1].key == 93
::opts[::param.output_flags] has only one value
::opts[::param.output_flags-1] has only one value
::opts[::param.output_flags].sname == 109
::opts[::param.output_flags].func has only one value
::opts[::param.output_flags].var has only one value
::term_help[::param.output_flags] has only one value
::term_help[::param.output_flags-1] has only one value
::term_help[::param.output_flags].key == 118
::term_help[::param.output_flags-1].key == 114
::opts[::fresh] has only one value
::opts[::fresh].sname == 50
::opts[::fresh].var has only one value
::pl.list[::fresh] has only one value
::term_help[::fresh] has only one value
::term_help[::fresh].key == 102
::stopped in ::opts[].flags
::pl.list[].freeit elements == ::stopped
::binpath == ::fullprogname
::param.output_flags in ::opts[].value
::param.resync_limit in ::opts[].value
::pl.list[].playcount elements == ::param.appflags
::param.name == ::prgName
::term_help[::param.output_flags].key in ::opts[].sname
::term_help[::param.output_flags-1].key in ::opts[].sname
::term_help[::fresh].key in ::opts[].sname
size(::rva_name[]) in ::opts[].flags
::opts[::stopped].sname in ::term_help[].key
::opts[::loptind-1].sname in ::term_help[].key
::opts[::param.output_flags].sname in ::term_help[].key
===========================================================================
src/playlist.c.shuffle_playlist():::EXIT
::stopped == ::paused
::stopped == ::control_file
::stopped == ::loptchr
::stopped == ::framenum
::stopped == ::htd.icy_interval
::stopped == ::OutputDescriptor
::stopped == ::intflag
::stopped == ::param.aggressive
::stopped == ::param.shuffle
::stopped == ::param.remote
::stopped == ::param.remote_err
::stopped == ::param.quiet
::stopped == ::param.xterm_title
::stopped == ::param.usebuffer
::stopped == ::param.verbose
::stopped == ::param.checkrange
::stopped == ::param.force_reopen
::stopped == ::param.test_cpu
::stopped == ::param.realtime
::stopped == ::param.listentry
::stopped == ::param.long_id3
::stopped == ::param.list_cpu
::stopped == ::param.timeout
::stopped == ::param.delay
::stopped == ::param.index
::stopped == ::param.down_sample
::stopped == ::param.rva
::stopped == ::param.halfspeed
::stopped == ::param.doublespeed
::stopped == ::param.start_frame
::stopped == ::param.force_rate
::stopped == ::param.smooth
::stopped == ::param.keep_open
::stopped == ::param.force_utf8
::stopped == ::param.icy_interval
::stopped == ::global_premium
::stopped == ::frames_left
::stopped == ::deathflag
::stopped == ::seeking
::stopped == orig(::stopped)
::stopped == orig(::paused)
::stopped == orig(::control_file)
::stopped == orig(::loptchr)
::stopped == orig(::framenum)
::stopped == orig(::htd.icy_interval)
::stopped == orig(::OutputDescriptor)
::stopped == orig(::intflag)
::stopped == orig(::param.aggressive)
::stopped == orig(::param.shuffle)
::stopped == orig(::param.remote)
::stopped == orig(::param.remote_err)
::stopped == orig(::param.quiet)
::stopped == orig(::param.xterm_title)
::stopped == orig(::param.usebuffer)
::stopped == orig(::param.verbose)
::stopped == orig(::param.checkrange)
::stopped == orig(::param.force_reopen)
::stopped == orig(::param.test_cpu)
::stopped == orig(::param.realtime)
::stopped == orig(::param.listentry)
::stopped == orig(::param.long_id3)
::stopped == orig(::param.list_cpu)
::stopped == orig(::param.timeout)
::stopped == orig(::param.delay)
::stopped == orig(::param.index)
::stopped == orig(::param.down_sample)
::stopped == orig(::param.rva)
::stopped == orig(::param.halfspeed)
::stopped == orig(::param.doublespeed)
::stopped == orig(::param.start_frame)
::stopped == orig(::param.force_rate)
::stopped == orig(::param.smooth)
::stopped == orig(::param.keep_open)
::stopped == orig(::param.force_utf8)
::stopped == orig(::param.icy_interval)
::stopped == orig(::global_premium)
::stopped == orig(::frames_left)
::stopped == orig(::deathflag)
::stopped == orig(::seeking)
::stopped == ::opts[::stopped].value
::stopped == ::pl.list[::stopped].freeit
::stopped == orig(::opts[post(::stopped)].value)
::stopped == orig(::pl.list[post(::stopped)].freeit)
::stopped == ::opts[::paused].value
::stopped == ::pl.list[::paused].freeit
::stopped == orig(::opts[post(::paused)].value)
::stopped == orig(::pl.list[post(::paused)].freeit)
::stopped == ::opts[::control_file].value
::stopped == ::pl.list[::control_file].freeit
::stopped == orig(::opts[post(::control_file)].value)
::stopped == orig(::pl.list[post(::control_file)].freeit)
::stopped == ::opts[::loptind].value
::stopped == ::opts[::loptind-1].value
::stopped == ::term_help[::loptind].key2
::stopped == ::term_help[::loptind-1].key2
::stopped == orig(::opts[post(::loptind)].value)
::stopped == orig(::opts[post(::loptind)-1].value)
::stopped == orig(::term_help[post(::loptind)].key2)
::stopped == orig(::term_help[post(::loptind)-1].key2)
::stopped == ::opts[::loptchr].value
::stopped == ::pl.list[::loptchr].freeit
::stopped == orig(::opts[post(::loptchr)].value)
::stopped == orig(::pl.list[post(::loptchr)].freeit)
::stopped == ::opts[::framenum].value
::stopped == ::pl.list[::framenum].freeit
::stopped == orig(::opts[post(::framenum)].value)
::stopped == orig(::pl.list[post(::framenum)].freeit)
::stopped == ::opts[::htd.icy_interval].value
::stopped == ::pl.list[::htd.icy_interval].freeit
::stopped == orig(::opts[post(::htd.icy_interval)].value)
::stopped == orig(::pl.list[post(::htd.icy_interval)].freeit)
::stopped == ::opts[::OutputDescriptor].value
::stopped == ::pl.list[::OutputDescriptor].freeit
::stopped == orig(::opts[post(::OutputDescriptor)].value)
::stopped == orig(::pl.list[post(::OutputDescriptor)].freeit)
::stopped == ::opts[::intflag].value
::stopped == ::pl.list[::intflag].freeit
::stopped == orig(::opts[post(::intflag)].value)
::stopped == orig(::pl.list[post(::intflag)].freeit)
::stopped == ::opts[::param.aggressive].value
::stopped == ::pl.list[::param.aggressive].freeit
::stopped == orig(::opts[post(::param.aggressive)].value)
::stopped == orig(::pl.list[post(::param.aggressive)].freeit)
::stopped == ::opts[::param.shuffle].value
::stopped == ::pl.list[::param.shuffle].freeit
::stopped == orig(::opts[post(::param.shuffle)].value)
::stopped == orig(::pl.list[post(::param.shuffle)].freeit)
::stopped == ::opts[::param.remote].value
::stopped == ::pl.list[::param.remote].freeit
::stopped == orig(::opts[post(::param.remote)].value)
::stopped == orig(::pl.list[post(::param.remote)].freeit)
::stopped == ::opts[::param.remote_err].value
::stopped == ::pl.list[::param.remote_err].freeit
::stopped == orig(::opts[post(::param.remote_err)].value)
::stopped == orig(::pl.list[post(::param.remote_err)].freeit)
::stopped == ::opts[::param.quiet].value
::stopped == ::pl.list[::param.quiet].freeit
::stopped == orig(::opts[post(::param.quiet)].value)
::stopped == orig(::pl.list[post(::param.quiet)].freeit)
::stopped == ::opts[::param.xterm_title].value
::stopped == ::pl.list[::param.xterm_title].freeit
::stopped == orig(::opts[post(::param.xterm_title)].value)
::stopped == orig(::pl.list[post(::param.xterm_title)].freeit)
::stopped == ::opts[::param.usebuffer].value
::stopped == ::pl.list[::param.usebuffer].freeit
::stopped == orig(::opts[post(::param.usebuffer)].value)
::stopped == orig(::pl.list[post(::param.usebuffer)].freeit)
::stopped == ::opts[::param.verbose].value
::stopped == ::pl.list[::param.verbose].freeit
::stopped == orig(::opts[post(::param.verbose)].value)
::stopped == orig(::pl.list[post(::param.verbose)].freeit)
::stopped == ::opts[::param.output_flags-1].sname
::stopped == ::term_help[::param.output_flags].key2
::stopped == ::term_help[::param.output_flags-1].key2
::stopped == orig(::opts[post(::param.output_flags)-1].sname)
::stopped == orig(::term_help[post(::param.output_flags)].key2)
::stopped == orig(::term_help[post(::param.output_flags)-1].key2)
::stopped == ::opts[::param.term_ctrl-1].value
::stopped == ::pl.list[::param.term_ctrl].freeit
::stopped == ::pl.list[::param.term_ctrl-1].freeit
::stopped == ::term_help[::param.term_ctrl].key2
::stopped == orig(::opts[post(::param.term_ctrl)-1].value)
::stopped == orig(::pl.list[post(::param.term_ctrl)].freeit)
::stopped == orig(::pl.list[post(::param.term_ctrl)-1].freeit)
::stopped == orig(::term_help[post(::param.term_ctrl)].key2)
::stopped == ::opts[::param.checkrange].value
::stopped == ::pl.list[::param.checkrange].freeit
::stopped == orig(::opts[post(::param.checkrange)].value)
::stopped == orig(::pl.list[post(::param.checkrange)].freeit)
::stopped == ::opts[::param.force_reopen].value
::stopped == ::pl.list[::param.force_reopen].freeit
::stopped == orig(::opts[post(::param.force_reopen)].value)
::stopped == orig(::pl.list[post(::param.force_reopen)].freeit)
::stopped == ::opts[::param.test_cpu].value
::stopped == ::pl.list[::param.test_cpu].freeit
::stopped == orig(::opts[post(::param.test_cpu)].value)
::stopped == orig(::pl.list[post(::param.test_cpu)].freeit)
::stopped == ::opts[::param.realtime].value
::stopped == ::pl.list[::param.realtime].freeit
::stopped == orig(::opts[post(::param.realtime)].value)
::stopped == orig(::pl.list[post(::param.realtime)].freeit)
::stopped == ::opts[::param.listentry].value
::stopped == ::pl.list[::param.listentry].freeit
::stopped == orig(::opts[post(::param.listentry)].value)
::stopped == orig(::pl.list[post(::param.listentry)].freeit)
::stopped == ::opts[::param.long_id3].value
::stopped == ::pl.list[::param.long_id3].freeit
::stopped == orig(::opts[post(::param.long_id3)].value)
::stopped == orig(::pl.list[post(::param.long_id3)].freeit)
::stopped == ::opts[::param.list_cpu].value
::stopped == ::pl.list[::param.list_cpu].freeit
::stopped == orig(::opts[post(::param.list_cpu)].value)
::stopped == orig(::pl.list[post(::param.list_cpu)].freeit)
::stopped == ::opts[::param.timeout].value
::stopped == ::pl.list[::param.timeout].freeit
::stopped == orig(::opts[post(::param.timeout)].value)
::stopped == orig(::pl.list[post(::param.timeout)].freeit)
::stopped == ::opts[::param.loop-1].value
::stopped == ::pl.list[::param.loop].freeit
::stopped == ::pl.list[::param.loop-1].freeit
::stopped == ::term_help[::param.loop].key2
::stopped == orig(::opts[post(::param.loop)-1].value)
::stopped == orig(::pl.list[post(::param.loop)].freeit)
::stopped == orig(::pl.list[post(::param.loop)-1].freeit)
::stopped == orig(::term_help[post(::param.loop)].key2)
::stopped == ::opts[::param.delay].value
::stopped == ::pl.list[::param.delay].freeit
::stopped == orig(::opts[post(::param.delay)].value)
::stopped == orig(::pl.list[post(::param.delay)].freeit)
::stopped == ::opts[::param.index].value
::stopped == ::pl.list[::param.index].freeit
::stopped == orig(::opts[post(::param.index)].value)
::stopped == orig(::pl.list[post(::param.index)].freeit)
::stopped == ::opts[::param.down_sample].value
::stopped == ::pl.list[::param.down_sample].freeit
::stopped == orig(::opts[post(::param.down_sample)].value)
::stopped == orig(::pl.list[post(::param.down_sample)].freeit)
::stopped == ::opts[::param.rva].value
::stopped == ::pl.list[::param.rva].freeit
::stopped == orig(::opts[post(::param.rva)].value)
::stopped == orig(::pl.list[post(::param.rva)].freeit)
::stopped == ::opts[::param.halfspeed].value
::stopped == ::pl.list[::param.halfspeed].freeit
::stopped == orig(::opts[post(::param.halfspeed)].value)
::stopped == orig(::pl.list[post(::param.halfspeed)].freeit)
::stopped == ::opts[::param.doublespeed].value
::stopped == ::pl.list[::param.doublespeed].freeit
::stopped == orig(::opts[post(::param.doublespeed)].value)
::stopped == orig(::pl.list[post(::param.doublespeed)].freeit)
::stopped == ::opts[::param.start_frame].value
::stopped == ::pl.list[::param.start_frame].freeit
::stopped == orig(::opts[post(::param.start_frame)].value)
::stopped == orig(::pl.list[post(::param.start_frame)].freeit)
::stopped == ::opts[::param.force_rate].value
::stopped == ::pl.list[::param.force_rate].freeit
::stopped == orig(::opts[post(::param.force_rate)].value)
::stopped == orig(::pl.list[post(::param.force_rate)].freeit)
::stopped == ::opts[::param.talk_icy-1].value
::stopped == ::pl.list[::param.talk_icy].freeit
::stopped == ::pl.list[::param.talk_icy-1].freeit
::stopped == ::term_help[::param.talk_icy].key2
::stopped == orig(::opts[post(::param.talk_icy)-1].value)
::stopped == orig(::pl.list[post(::param.talk_icy)].freeit)
::stopped == orig(::pl.list[post(::param.talk_icy)-1].freeit)
::stopped == orig(::term_help[post(::param.talk_icy)].key2)
::stopped == ::opts[::param.smooth].value
::stopped == ::pl.list[::param.smooth].freeit
::stopped == orig(::opts[post(::param.smooth)].value)
::stopped == orig(::pl.list[post(::param.smooth)].freeit)
::stopped == ::opts[::param.keep_open].value
::stopped == ::pl.list[::param.keep_open].freeit
::stopped == orig(::opts[post(::param.keep_open)].value)
::stopped == orig(::pl.list[post(::param.keep_open)].freeit)
::stopped == ::opts[::param.force_utf8].value
::stopped == ::pl.list[::param.force_utf8].freeit
::stopped == orig(::opts[post(::param.force_utf8)].value)
::stopped == orig(::pl.list[post(::param.force_utf8)].freeit)
::stopped == ::opts[::param.preframes].value
::stopped == ::opts[::param.preframes-1].value
::stopped == ::term_help[::param.preframes].key2
::stopped == ::term_help[::param.preframes-1].key2
::stopped == orig(::opts[post(::param.preframes)].value)
::stopped == orig(::opts[post(::param.preframes)-1].value)
::stopped == orig(::term_help[post(::param.preframes)].key2)
::stopped == orig(::term_help[post(::param.preframes)-1].key2)
::stopped == ::opts[::param.icy_interval].value
::stopped == ::pl.list[::param.icy_interval].freeit
::stopped == orig(::opts[post(::param.icy_interval)].value)
::stopped == orig(::pl.list[post(::param.icy_interval)].freeit)
::stopped == ::opts[::global_premium].value
::stopped == ::pl.list[::global_premium].freeit
::stopped == orig(::opts[post(::global_premium)].value)
::stopped == orig(::pl.list[post(::global_premium)].freeit)
::stopped == ::opts[::frames_left].value
::stopped == ::pl.list[::frames_left].freeit
::stopped == orig(::opts[post(::frames_left)].value)
::stopped == orig(::pl.list[post(::frames_left)].freeit)
::stopped == ::opts[::fresh-1].value
::stopped == ::pl.list[::fresh].freeit
::stopped == ::pl.list[::fresh-1].freeit
::stopped == ::term_help[::fresh].key2
::stopped == orig(::opts[post(::fresh)-1].value)
::stopped == orig(::pl.list[post(::fresh)].freeit)
::stopped == orig(::pl.list[post(::fresh)-1].freeit)
::stopped == orig(::term_help[post(::fresh)].key2)
::stopped == ::opts[::deathflag].value
::stopped == ::pl.list[::deathflag].freeit
::stopped == orig(::opts[post(::deathflag)].value)
::stopped == orig(::pl.list[post(::deathflag)].freeit)
::stopped == ::opts[orig(::param.output_flags)-1].sname
::stopped == ::opts[::utf8env-1].value
::stopped == ::opts[::pl.loop-1].value
::stopped == ::opts[::seeking].value
::stopped == ::opts[orig(::stopped)].value
::stopped == ::opts[orig(::paused)].value
::stopped == ::opts[orig(::control_file)].value
::stopped == ::opts[orig(::loptind)].value
::stopped == ::opts[orig(::loptind)-1].value
::stopped == ::opts[orig(::loptchr)].value
::stopped == ::opts[orig(::framenum)].value
::stopped == ::opts[orig(::htd.icy_interval)].value
::stopped == ::opts[orig(::OutputDescriptor)].value
::stopped == ::opts[orig(::intflag)].value
::stopped == ::opts[orig(::param.aggressive)].value
::stopped == ::opts[orig(::param.shuffle)].value
::stopped == ::opts[orig(::param.remote)].value
::stopped == ::opts[orig(::param.remote_err)].value
::stopped == ::opts[orig(::param.quiet)].value
::stopped == ::opts[orig(::param.xterm_title)].value
::stopped == ::opts[orig(::param.usebuffer)].value
::stopped == ::opts[orig(::param.verbose)].value
::stopped == ::opts[orig(::param.term_ctrl)-1].value
::stopped == ::opts[orig(::param.checkrange)].value
::stopped == ::opts[orig(::param.force_reopen)].value
::stopped == ::opts[orig(::param.test_cpu)].value
::stopped == ::opts[orig(::param.realtime)].value
::stopped == ::opts[orig(::param.listentry)].value
::stopped == ::opts[orig(::param.long_id3)].value
::stopped == ::opts[orig(::param.list_cpu)].value
::stopped == ::opts[orig(::param.timeout)].value
::stopped == ::opts[orig(::param.loop)-1].value
::stopped == ::opts[orig(::param.delay)].value
::stopped == ::opts[orig(::param.index)].value
::stopped == ::opts[orig(::param.down_sample)].value
::stopped == ::opts[orig(::param.rva)].value
::stopped == ::opts[orig(::param.halfspeed)].value
::stopped == ::opts[orig(::param.doublespeed)].value
::stopped == ::opts[orig(::param.start_frame)].value
::stopped == ::opts[orig(::param.force_rate)].value
::stopped == ::opts[orig(::param.talk_icy)-1].value
::stopped == ::opts[orig(::param.smooth)].value
::stopped == ::opts[orig(::param.keep_open)].value
::stopped == ::opts[orig(::param.force_utf8)].value
::stopped == ::opts[orig(::param.preframes)].value
::stopped == ::opts[orig(::param.preframes)-1].value
::stopped == ::opts[orig(::param.icy_interval)].value
::stopped == ::opts[orig(::global_premium)].value
::stopped == ::opts[orig(::frames_left)].value
::stopped == ::opts[orig(::fresh)-1].value
::stopped == ::opts[orig(::deathflag)].value
::stopped == ::opts[orig(::utf8env)-1].value
::stopped == ::opts[orig(::pl.loop)-1].value
::stopped == ::opts[orig(::seeking)].value
::stopped == ::pl.list[::utf8env].freeit
::stopped == ::pl.list[::utf8env-1].freeit
::stopped == ::term_help[::utf8env].key2
::stopped == orig(::opts[post(::utf8env)-1].value)
::stopped == orig(::pl.list[post(::utf8env)].freeit)
::stopped == orig(::pl.list[post(::utf8env)-1].freeit)
::stopped == orig(::term_help[post(::utf8env)].key2)
::stopped == ::pl.list[::pl.loop].freeit
::stopped == ::pl.list[::pl.loop-1].freeit
::stopped == ::term_help[::pl.loop].key2
::stopped == orig(::opts[post(::pl.loop)-1].value)
::stopped == orig(::pl.list[post(::pl.loop)].freeit)
::stopped == orig(::pl.list[post(::pl.loop)-1].freeit)
::stopped == orig(::term_help[post(::pl.loop)].key2)
::stopped == ::pl.list[::seeking].freeit
::stopped == ::pl.list[orig(::stopped)].freeit
::stopped == ::pl.list[orig(::paused)].freeit
::stopped == ::pl.list[orig(::control_file)].freeit
::stopped == ::pl.list[orig(::loptchr)].freeit
::stopped == ::pl.list[orig(::framenum)].freeit
::stopped == ::pl.list[orig(::htd.icy_interval)].freeit
::stopped == ::pl.list[orig(::OutputDescriptor)].freeit
::stopped == ::pl.list[orig(::intflag)].freeit
::stopped == ::pl.list[orig(::param.aggressive)].freeit
::stopped == ::pl.list[orig(::param.shuffle)].freeit
::stopped == ::pl.list[orig(::param.remote)].freeit
::stopped == ::pl.list[orig(::param.remote_err)].freeit
::stopped == ::pl.list[orig(::param.quiet)].freeit
::stopped == ::pl.list[orig(::param.xterm_title)].freeit
::stopped == ::pl.list[orig(::param.usebuffer)].freeit
::stopped == ::pl.list[orig(::param.verbose)].freeit
::stopped == ::pl.list[orig(::param.term_ctrl)].freeit
::stopped == ::pl.list[orig(::param.term_ctrl)-1].freeit
::stopped == ::pl.list[orig(::param.checkrange)].freeit
::stopped == ::pl.list[orig(::param.force_reopen)].freeit
::stopped == ::pl.list[orig(::param.test_cpu)].freeit
::stopped == ::pl.list[orig(::param.realtime)].freeit
::stopped == ::pl.list[orig(::param.listentry)].freeit
::stopped == ::pl.list[orig(::param.long_id3)].freeit
::stopped == ::pl.list[orig(::param.list_cpu)].freeit
::stopped == ::pl.list[orig(::param.timeout)].freeit
::stopped == ::pl.list[orig(::param.loop)].freeit
::stopped == ::pl.list[orig(::param.loop)-1].freeit
::stopped == ::pl.list[orig(::param.delay)].freeit
::stopped == ::pl.list[orig(::param.index)].freeit
::stopped == ::pl.list[orig(::param.down_sample)].freeit
::stopped == ::pl.list[orig(::param.rva)].freeit
::stopped == ::pl.list[orig(::param.halfspeed)].freeit
::stopped == ::pl.list[orig(::param.doublespeed)].freeit
::stopped == ::pl.list[orig(::param.start_frame)].freeit
::stopped == ::pl.list[orig(::param.force_rate)].freeit
::stopped == ::pl.list[orig(::param.talk_icy)].freeit
::stopped == ::pl.list[orig(::param.talk_icy)-1].freeit
::stopped == ::pl.list[orig(::param.smooth)].freeit
::stopped == ::pl.list[orig(::param.keep_open)].freeit
::stopped == ::pl.list[orig(::param.force_utf8)].freeit
::stopped == ::pl.list[orig(::param.icy_interval)].freeit
::stopped == ::pl.list[orig(::global_premium)].freeit
::stopped == ::pl.list[orig(::frames_left)].freeit
::stopped == ::pl.list[orig(::fresh)].freeit
::stopped == ::pl.list[orig(::fresh)-1].freeit
::stopped == ::pl.list[orig(::deathflag)].freeit
::stopped == ::pl.list[orig(::utf8env)].freeit
::stopped == ::pl.list[orig(::utf8env)-1].freeit
::stopped == ::pl.list[orig(::pl.loop)].freeit
::stopped == ::pl.list[orig(::pl.loop)-1].freeit
::stopped == ::pl.list[orig(::seeking)].freeit
::stopped == orig(::opts[post(::seeking)].value)
::stopped == orig(::pl.list[post(::seeking)].freeit)
::stopped == ::term_help[orig(::loptind)].key2
::stopped == ::term_help[orig(::loptind)-1].key2
::stopped == ::term_help[orig(::param.output_flags)].key2
::stopped == ::term_help[orig(::param.output_flags)-1].key2
::stopped == ::term_help[orig(::param.term_ctrl)].key2
::stopped == ::term_help[orig(::param.loop)].key2
::stopped == ::term_help[orig(::param.talk_icy)].key2
::stopped == ::term_help[orig(::param.preframes)].key2
::stopped == ::term_help[orig(::param.preframes)-1].key2
::stopped == ::term_help[orig(::fresh)].key2
::stopped == ::term_help[orig(::utf8env)].key2
::stopped == ::term_help[orig(::pl.loop)].key2
::stopped == orig(::opts[::stopped].value)
::stopped == orig(::pl.list[::stopped].freeit)
::stopped == orig(::opts[::paused].value)
::stopped == orig(::pl.list[::paused].freeit)
::stopped == orig(::opts[::control_file].value)
::stopped == orig(::pl.list[::control_file].freeit)
::stopped == orig(::opts[::loptind].value)
::stopped == orig(::opts[::loptind-1].value)
::stopped == orig(::term_help[::loptind].key2)
::stopped == orig(::term_help[::loptind-1].key2)
::stopped == orig(::opts[::loptchr].value)
::stopped == orig(::pl.list[::loptchr].freeit)
::stopped == orig(::opts[::framenum].value)
::stopped == orig(::pl.list[::framenum].freeit)
::stopped == orig(::opts[::htd.icy_interval].value)
::stopped == orig(::pl.list[::htd.icy_interval].freeit)
::stopped == orig(::opts[::OutputDescriptor].value)
::stopped == orig(::pl.list[::OutputDescriptor].freeit)
::stopped == orig(::opts[::intflag].value)
::stopped == orig(::pl.list[::intflag].freeit)
::stopped == orig(::opts[::param.aggressive].value)
::stopped == orig(::pl.list[::param.aggressive].freeit)
::stopped == orig(::opts[::param.shuffle].value)
::stopped == orig(::pl.list[::param.shuffle].freeit)
::stopped == orig(::opts[::param.remote].value)
::stopped == orig(::pl.list[::param.remote].freeit)
::stopped == orig(::opts[::param.remote_err].value)
::stopped == orig(::pl.list[::param.remote_err].freeit)
::stopped == orig(::opts[::param.quiet].value)
::stopped == orig(::pl.list[::param.quiet].freeit)
::stopped == orig(::opts[::param.xterm_title].value)
::stopped == orig(::pl.list[::param.xterm_title].freeit)
::stopped == orig(::opts[::param.usebuffer].value)
::stopped == orig(::pl.list[::param.usebuffer].freeit)
::stopped == orig(::opts[::param.verbose].value)
::stopped == orig(::pl.list[::param.verbose].freeit)
::stopped == orig(::opts[::param.output_flags-1].sname)
::stopped == orig(::term_help[::param.output_flags].key2)
::stopped == orig(::term_help[::param.output_flags-1].key2)
::stopped == orig(::opts[::param.term_ctrl-1].value)
::stopped == orig(::pl.list[::param.term_ctrl].freeit)
::stopped == orig(::pl.list[::param.term_ctrl-1].freeit)
::stopped == orig(::term_help[::param.term_ctrl].key2)
::stopped == orig(::opts[::param.checkrange].value)
::stopped == orig(::pl.list[::param.checkrange].freeit)
::stopped == orig(::opts[::param.force_reopen].value)
::stopped == orig(::pl.list[::param.force_reopen].freeit)
::stopped == orig(::opts[::param.test_cpu].value)
::stopped == orig(::pl.list[::param.test_cpu].freeit)
::stopped == orig(::opts[::param.realtime].value)
::stopped == orig(::pl.list[::param.realtime].freeit)
::stopped == orig(::opts[::param.listentry].value)
::stopped == orig(::pl.list[::param.listentry].freeit)
::stopped == orig(::opts[::param.long_id3].value)
::stopped == orig(::pl.list[::param.long_id3].freeit)
::stopped == orig(::opts[::param.list_cpu].value)
::stopped == orig(::pl.list[::param.list_cpu].freeit)
::stopped == orig(::opts[::param.timeout].value)
::stopped == orig(::pl.list[::param.timeout].freeit)
::stopped == orig(::opts[::param.loop-1].value)
::stopped == orig(::pl.list[::param.loop].freeit)
::stopped == orig(::pl.list[::param.loop-1].freeit)
::stopped == orig(::term_help[::param.loop].key2)
::stopped == orig(::opts[::param.delay].value)
::stopped == orig(::pl.list[::param.delay].freeit)
::stopped == orig(::opts[::param.index].value)
::stopped == orig(::pl.list[::param.index].freeit)
::stopped == orig(::opts[::param.down_sample].value)
::stopped == orig(::pl.list[::param.down_sample].freeit)
::stopped == orig(::opts[::param.rva].value)
::stopped == orig(::pl.list[::param.rva].freeit)
::stopped == orig(::opts[::param.halfspeed].value)
::stopped == orig(::pl.list[::param.halfspeed].freeit)
::stopped == orig(::opts[::param.doublespeed].value)
::stopped == orig(::pl.list[::param.doublespeed].freeit)
::stopped == orig(::opts[::param.start_frame].value)
::stopped == orig(::pl.list[::param.start_frame].freeit)
::stopped == orig(::opts[::param.force_rate].value)
::stopped == orig(::pl.list[::param.force_rate].freeit)
::stopped == orig(::opts[::param.talk_icy-1].value)
::stopped == orig(::pl.list[::param.talk_icy].freeit)
::stopped == orig(::pl.list[::param.talk_icy-1].freeit)
::stopped == orig(::term_help[::param.talk_icy].key2)
::stopped == orig(::opts[::param.smooth].value)
::stopped == orig(::pl.list[::param.smooth].freeit)
::stopped == orig(::opts[::param.keep_open].value)
::stopped == orig(::pl.list[::param.keep_open].freeit)
::stopped == orig(::opts[::param.force_utf8].value)
::stopped == orig(::pl.list[::param.force_utf8].freeit)
::stopped == orig(::opts[::param.preframes].value)
::stopped == orig(::opts[::param.preframes-1].value)
::stopped == orig(::term_help[::param.preframes].key2)
::stopped == orig(::term_help[::param.preframes-1].key2)
::stopped == orig(::opts[::param.icy_interval].value)
::stopped == orig(::pl.list[::param.icy_interval].freeit)
::stopped == orig(::opts[::global_premium].value)
::stopped == orig(::pl.list[::global_premium].freeit)
::stopped == orig(::opts[::frames_left].value)
::stopped == orig(::pl.list[::frames_left].freeit)
::stopped == orig(::opts[::fresh-1].value)
::stopped == orig(::pl.list[::fresh].freeit)
::stopped == orig(::pl.list[::fresh-1].freeit)
::stopped == orig(::term_help[::fresh].key2)
::stopped == orig(::opts[::deathflag].value)
::stopped == orig(::pl.list[::deathflag].freeit)
::stopped == orig(::opts[::utf8env-1].value)
::stopped == orig(::opts[::pl.loop-1].value)
::stopped == orig(::opts[::seeking].value)
::stopped == orig(::pl.list[::utf8env].freeit)
::stopped == orig(::pl.list[::utf8env-1].freeit)
::stopped == orig(::term_help[::utf8env].key2)
::stopped == orig(::pl.list[::pl.loop].freeit)
::stopped == orig(::pl.list[::pl.loop-1].freeit)
::stopped == orig(::term_help[::pl.loop].key2)
::stopped == orig(::pl.list[::seeking].freeit)
::rva_name == orig(::rva_name)
::outstream == ::pl.file
::outstream == orig(::outstream)
::outstream == orig(::pl.file)
::outstream == ::opts[::loptind].var
::outstream == ::opts[::loptind-1].var
::outstream == orig(::opts[post(::loptind)].var)
::outstream == orig(::opts[post(::loptind)-1].var)
::outstream == ::opts[::param.preframes].var
::outstream == ::opts[::param.preframes-1].var
::outstream == orig(::opts[post(::param.preframes)].var)
::outstream == orig(::opts[post(::param.preframes)-1].var)
::outstream == ::opts[orig(::loptind)].var
::outstream == ::opts[orig(::loptind)-1].var
::outstream == ::opts[orig(::param.preframes)].var
::outstream == ::opts[orig(::param.preframes)-1].var
::outstream == orig(::opts[::loptind].var)
::outstream == orig(::opts[::loptind-1].var)
::outstream == orig(::opts[::param.preframes].var)
::outstream == orig(::opts[::param.preframes-1].var)
::loptind == ::param.preframes
::loptind == orig(::loptind)
::loptind == orig(::param.preframes)
::loptind == ::opts[::loptind].flags
::loptind == ::opts[::loptind-1].flags
::loptind == orig(::opts[post(::loptind)].flags)
::loptind == orig(::opts[post(::loptind)-1].flags)
::loptind == ::opts[::param.output_flags].flags
::loptind == ::opts[::param.output_flags-1].flags
::loptind == ::opts[::param.output_flags].value
::loptind == orig(::opts[post(::param.output_flags)].flags)
::loptind == orig(::opts[post(::param.output_flags)-1].flags)
::loptind == orig(::opts[post(::param.output_flags)].value)
::loptind == ::opts[::param.term_ctrl].flags
::loptind == orig(::opts[post(::param.term_ctrl)].flags)
::loptind == ::opts[::param.loop].flags
::loptind == orig(::opts[post(::param.loop)].flags)
::loptind == ::opts[::param.talk_icy].flags
::loptind == orig(::opts[post(::param.talk_icy)].flags)
::loptind == ::opts[::param.preframes].flags
::loptind == ::opts[::param.preframes-1].flags
::loptind == orig(::opts[post(::param.preframes)].flags)
::loptind == orig(::opts[post(::param.preframes)-1].flags)
::loptind == ::opts[::fresh].flags
::loptind == orig(::opts[post(::fresh)].flags)
::loptind == ::opts[::utf8env].flags
::loptind == ::opts[::pl.loop].flags
::loptind == ::opts[orig(::loptind)].flags
::loptind == ::opts[orig(::loptind)-1].flags
::loptind == ::opts[orig(::param.output_flags)].flags
::loptind == ::opts[orig(::param.output_flags)-1].flags
::loptind == ::opts[orig(::param.term_ctrl)].flags
::loptind == ::opts[orig(::param.loop)].flags
::loptind == ::opts[orig(::param.talk_icy)].flags
::loptind == ::opts[orig(::param.preframes)].flags
::loptind == ::opts[orig(::param.preframes)-1].flags
::loptind == ::opts[orig(::fresh)].flags
::loptind == ::opts[orig(::utf8env)].flags
::loptind == ::opts[orig(::pl.loop)].flags
::loptind == ::opts[orig(::param.output_flags)].value
::loptind == orig(::opts[post(::utf8env)].flags)
::loptind == orig(::opts[post(::pl.loop)].flags)
::loptind == orig(::opts[::loptind].flags)
::loptind == orig(::opts[::loptind-1].flags)
::loptind == orig(::opts[::param.output_flags].flags)
::loptind == orig(::opts[::param.output_flags-1].flags)
::loptind == orig(::opts[::param.output_flags].value)
::loptind == orig(::opts[::param.term_ctrl].flags)
::loptind == orig(::opts[::param.loop].flags)
::loptind == orig(::opts[::param.talk_icy].flags)
::loptind == orig(::opts[::param.preframes].flags)
::loptind == orig(::opts[::param.preframes-1].flags)
::loptind == orig(::opts[::fresh].flags)
::loptind == orig(::opts[::utf8env].flags)
::loptind == orig(::opts[::pl.loop].flags)
::genre_table == orig(::genre_table)
::genre_count == orig(::genre_count)
::genre_count == size(::genre_table[])-1
::genre_count == orig(size(::genre_table[]))-1
::htd == orig(::htd)
::htd.content_type == orig(::htd.content_type)
::htd.content_type.size == ::param.appflags
::htd.content_type.fill == ::param.appflags
::htd.icy_name == orig(::htd.icy_name)
::htd.icy_name.size == ::param.appflags
::htd.icy_name.fill == ::param.appflags
::htd.icy_url == orig(::htd.icy_url)
::htd.icy_url.size == ::param.appflags
::htd.icy_url.fill == ::param.appflags
::htd.proxyhost == orig(::htd.proxyhost)
::htd.proxyhost.size == ::param.appflags
::htd.proxyhost.fill == ::param.appflags
::htd.proxyport == orig(::htd.proxyport)
::htd.proxyport.size == ::param.appflags
::htd.proxyport.fill == ::param.appflags
::htd.proxystate == orig(::htd.proxystate)
::param == orig(::param)
::param.output_flags == orig(::param.output_flags)
::param.term_ctrl == ::fresh
::param.loop == ::fresh
::param.frame_number == ::param.gain
::param.frame_number == orig(::param.frame_number)
::param.frame_number == orig(::param.gain)
::param.outscale == orig(::param.outscale)
::param.flags == orig(::param.flags)
::param.talk_icy == ::fresh
::param.resync_limit == orig(::param.resync_limit)
::param.pitch == ::param.device_buffer
::param.pitch == orig(::param.pitch)
::param.pitch == orig(::param.device_buffer)
::param.appflags == ::pl.entry
::param.appflags == ::pl.playcount
::param.appflags == ::pl.pos
::param.appflags == ::pl.num
::param.appflags == ::pl.linebuf.size
::param.appflags == ::pl.linebuf.fill
::param.appflags == ::pl.dir.size
::param.appflags == ::pl.dir.fill
::param.appflags == orig(::htd.content_type.size)
::param.appflags == orig(::htd.content_type.fill)
::param.appflags == orig(::htd.icy_name.size)
::param.appflags == orig(::htd.icy_name.fill)
::param.appflags == orig(::htd.icy_url.size)
::param.appflags == orig(::htd.icy_url.fill)
::param.appflags == orig(::htd.proxyhost.size)
::param.appflags == orig(::htd.proxyhost.fill)
::param.appflags == orig(::htd.proxyport.size)
::param.appflags == orig(::htd.proxyport.fill)
::param.appflags == orig(::param.appflags)
::param.appflags == orig(::pl.entry)
::param.appflags == orig(::pl.playcount)
::param.appflags == orig(::pl.pos)
::param.appflags == orig(::pl.num)
::param.appflags == orig(::pl.linebuf.size)
::param.appflags == orig(::pl.linebuf.fill)
::param.appflags == orig(::pl.dir.size)
::param.appflags == orig(::pl.dir.fill)
::param.appflags == ::pl.list[::stopped].playcount
::param.appflags == orig(::pl.list[post(::stopped)].playcount)
::param.appflags == ::pl.list[::paused].playcount
::param.appflags == orig(::pl.list[post(::paused)].playcount)
::param.appflags == ::pl.list[::control_file].playcount
::param.appflags == orig(::pl.list[post(::control_file)].playcount)
::param.appflags == ::pl.list[::loptchr].playcount
::param.appflags == orig(::pl.list[post(::loptchr)].playcount)
::param.appflags == ::pl.list[::framenum].playcount
::param.appflags == orig(::pl.list[post(::framenum)].playcount)
::param.appflags == ::pl.list[::htd.icy_interval].playcount
::param.appflags == orig(::pl.list[post(::htd.icy_interval)].playcount)
::param.appflags == ::pl.list[::OutputDescriptor].playcount
::param.appflags == orig(::pl.list[post(::OutputDescriptor)].playcount)
::param.appflags == ::pl.list[::intflag].playcount
::param.appflags == orig(::pl.list[post(::intflag)].playcount)
::param.appflags == ::pl.list[::param.aggressive].playcount
::param.appflags == orig(::pl.list[post(::param.aggressive)].playcount)
::param.appflags == ::pl.list[::param.shuffle].playcount
::param.appflags == orig(::pl.list[post(::param.shuffle)].playcount)
::param.appflags == ::pl.list[::param.remote].playcount
::param.appflags == orig(::pl.list[post(::param.remote)].playcount)
::param.appflags == ::pl.list[::param.remote_err].playcount
::param.appflags == orig(::pl.list[post(::param.remote_err)].playcount)
::param.appflags == ::pl.list[::param.quiet].playcount
::param.appflags == orig(::pl.list[post(::param.quiet)].playcount)
::param.appflags == ::pl.list[::param.xterm_title].playcount
::param.appflags == orig(::pl.list[post(::param.xterm_title)].playcount)
::param.appflags == ::pl.list[::param.usebuffer].playcount
::param.appflags == orig(::pl.list[post(::param.usebuffer)].playcount)
::param.appflags == ::pl.list[::param.verbose].playcount
::param.appflags == orig(::pl.list[post(::param.verbose)].playcount)
::param.appflags == ::pl.list[::param.term_ctrl].playcount
::param.appflags == ::pl.list[::param.term_ctrl-1].playcount
::param.appflags == orig(::pl.list[post(::param.term_ctrl)].playcount)
::param.appflags == orig(::pl.list[post(::param.term_ctrl)-1].playcount)
::param.appflags == ::pl.list[::param.checkrange].playcount
::param.appflags == orig(::pl.list[post(::param.checkrange)].playcount)
::param.appflags == ::pl.list[::param.force_reopen].playcount
::param.appflags == orig(::pl.list[post(::param.force_reopen)].playcount)
::param.appflags == ::pl.list[::param.test_cpu].playcount
::param.appflags == orig(::pl.list[post(::param.test_cpu)].playcount)
::param.appflags == ::pl.list[::param.realtime].playcount
::param.appflags == orig(::pl.list[post(::param.realtime)].playcount)
::param.appflags == ::pl.list[::param.listentry].playcount
::param.appflags == orig(::pl.list[post(::param.listentry)].playcount)
::param.appflags == ::pl.list[::param.long_id3].playcount
::param.appflags == orig(::pl.list[post(::param.long_id3)].playcount)
::param.appflags == ::pl.list[::param.list_cpu].playcount
::param.appflags == orig(::pl.list[post(::param.list_cpu)].playcount)
::param.appflags == ::pl.list[::param.timeout].playcount
::param.appflags == orig(::pl.list[post(::param.timeout)].playcount)
::param.appflags == ::pl.list[::param.loop].playcount
::param.appflags == ::pl.list[::param.loop-1].playcount
::param.appflags == orig(::pl.list[post(::param.loop)].playcount)
::param.appflags == orig(::pl.list[post(::param.loop)-1].playcount)
::param.appflags == ::pl.list[::param.delay].playcount
::param.appflags == orig(::pl.list[post(::param.delay)].playcount)
::param.appflags == ::pl.list[::param.index].playcount
::param.appflags == orig(::pl.list[post(::param.index)].playcount)
::param.appflags == ::pl.list[::param.down_sample].playcount
::param.appflags == orig(::pl.list[post(::param.down_sample)].playcount)
::param.appflags == ::pl.list[::param.rva].playcount
::param.appflags == orig(::pl.list[post(::param.rva)].playcount)
::param.appflags == ::pl.list[::param.halfspeed].playcount
::param.appflags == orig(::pl.list[post(::param.halfspeed)].playcount)
::param.appflags == ::pl.list[::param.doublespeed].playcount
::param.appflags == orig(::pl.list[post(::param.doublespeed)].playcount)
::param.appflags == ::pl.list[::param.start_frame].playcount
::param.appflags == orig(::pl.list[post(::param.start_frame)].playcount)
::param.appflags == ::pl.list[::param.force_rate].playcount
::param.appflags == orig(::pl.list[post(::param.force_rate)].playcount)
::param.appflags == ::pl.list[::param.talk_icy].playcount
::param.appflags == ::pl.list[::param.talk_icy-1].playcount
::param.appflags == orig(::pl.list[post(::param.talk_icy)].playcount)
::param.appflags == orig(::pl.list[post(::param.talk_icy)-1].playcount)
::param.appflags == ::pl.list[::param.smooth].playcount
::param.appflags == orig(::pl.list[post(::param.smooth)].playcount)
::param.appflags == ::pl.list[::param.keep_open].playcount
::param.appflags == orig(::pl.list[post(::param.keep_open)].playcount)
::param.appflags == ::pl.list[::param.force_utf8].playcount
::param.appflags == orig(::pl.list[post(::param.force_utf8)].playcount)
::param.appflags == ::pl.list[::param.icy_interval].playcount
::param.appflags == orig(::pl.list[post(::param.icy_interval)].playcount)
::param.appflags == ::pl.list[::global_premium].playcount
::param.appflags == orig(::pl.list[post(::global_premium)].playcount)
::param.appflags == ::pl.list[::frames_left].playcount
::param.appflags == orig(::pl.list[post(::frames_left)].playcount)
::param.appflags == ::pl.list[::fresh].playcount
::param.appflags == ::pl.list[::fresh-1].playcount
::param.appflags == orig(::pl.list[post(::fresh)].playcount)
::param.appflags == orig(::pl.list[post(::fresh)-1].playcount)
::param.appflags == ::pl.list[::deathflag].playcount
::param.appflags == orig(::pl.list[post(::deathflag)].playcount)
::param.appflags == ::pl.list[::utf8env].playcount
::param.appflags == ::pl.list[::utf8env-1].playcount
::param.appflags == orig(::pl.list[post(::utf8env)].playcount)
::param.appflags == orig(::pl.list[post(::utf8env)-1].playcount)
::param.appflags == ::pl.list[::pl.loop].playcount
::param.appflags == ::pl.list[::pl.loop-1].playcount
::param.appflags == orig(::pl.list[post(::pl.loop)].playcount)
::param.appflags == orig(::pl.list[post(::pl.loop)-1].playcount)
::param.appflags == ::pl.list[::seeking].playcount
::param.appflags == ::pl.list[orig(::stopped)].playcount
::param.appflags == ::pl.list[orig(::paused)].playcount
::param.appflags == ::pl.list[orig(::control_file)].playcount
::param.appflags == ::pl.list[orig(::loptchr)].playcount
::param.appflags == ::pl.list[orig(::framenum)].playcount
::param.appflags == ::pl.list[orig(::htd.icy_interval)].playcount
::param.appflags == ::pl.list[orig(::OutputDescriptor)].playcount
::param.appflags == ::pl.list[orig(::intflag)].playcount
::param.appflags == ::pl.list[orig(::param.aggressive)].playcount
::param.appflags == ::pl.list[orig(::param.shuffle)].playcount
::param.appflags == ::pl.list[orig(::param.remote)].playcount
::param.appflags == ::pl.list[orig(::param.remote_err)].playcount
::param.appflags == ::pl.list[orig(::param.quiet)].playcount
::param.appflags == ::pl.list[orig(::param.xterm_title)].playcount
::param.appflags == ::pl.list[orig(::param.usebuffer)].playcount
::param.appflags == ::pl.list[orig(::param.verbose)].playcount
::param.appflags == ::pl.list[orig(::param.term_ctrl)].playcount
::param.appflags == ::pl.list[orig(::param.term_ctrl)-1].playcount
::param.appflags == ::pl.list[orig(::param.checkrange)].playcount
::param.appflags == ::pl.list[orig(::param.force_reopen)].playcount
::param.appflags == ::pl.list[orig(::param.test_cpu)].playcount
::param.appflags == ::pl.list[orig(::param.realtime)].playcount
::param.appflags == ::pl.list[orig(::param.listentry)].playcount
::param.appflags == ::pl.list[orig(::param.long_id3)].playcount
::param.appflags == ::pl.list[orig(::param.list_cpu)].playcount
::param.appflags == ::pl.list[orig(::param.timeout)].playcount
::param.appflags == ::pl.list[orig(::param.loop)].playcount
::param.appflags == ::pl.list[orig(::param.loop)-1].playcount
::param.appflags == ::pl.list[orig(::param.delay)].playcount
::param.appflags == ::pl.list[orig(::param.index)].playcount
::param.appflags == ::pl.list[orig(::param.down_sample)].playcount
::param.appflags == ::pl.list[orig(::param.rva)].playcount
::param.appflags == ::pl.list[orig(::param.halfspeed)].playcount
::param.appflags == ::pl.list[orig(::param.doublespeed)].playcount
::param.appflags == ::pl.list[orig(::param.start_frame)].playcount
::param.appflags == ::pl.list[orig(::param.force_rate)].playcount
::param.appflags == ::pl.list[orig(::param.talk_icy)].playcount
::param.appflags == ::pl.list[orig(::param.talk_icy)-1].playcount
::param.appflags == ::pl.list[orig(::param.smooth)].playcount
::param.appflags == ::pl.list[orig(::param.keep_open)].playcount
::param.appflags == ::pl.list[orig(::param.force_utf8)].playcount
::param.appflags == ::pl.list[orig(::param.icy_interval)].playcount
::param.appflags == ::pl.list[orig(::global_premium)].playcount
::param.appflags == ::pl.list[orig(::frames_left)].playcount
::param.appflags == ::pl.list[orig(::fresh)].playcount
::param.appflags == ::pl.list[orig(::fresh)-1].playcount
::param.appflags == ::pl.list[orig(::deathflag)].playcount
::param.appflags == ::pl.list[orig(::utf8env)].playcount
::param.appflags == ::pl.list[orig(::utf8env)-1].playcount
::param.appflags == ::pl.list[orig(::pl.loop)].playcount
::param.appflags == ::pl.list[orig(::pl.loop)-1].playcount
::param.appflags == ::pl.list[orig(::seeking)].playcount
::param.appflags == orig(::pl.list[post(::seeking)].playcount)
::param.appflags == orig(::pl.list[::stopped].playcount)
::param.appflags == orig(::pl.list[::paused].playcount)
::param.appflags == orig(::pl.list[::control_file].playcount)
::param.appflags == orig(::pl.list[::loptchr].playcount)
::param.appflags == orig(::pl.list[::framenum].playcount)
::param.appflags == orig(::pl.list[::htd.icy_interval].playcount)
::param.appflags == orig(::pl.list[::OutputDescriptor].playcount)
::param.appflags == orig(::pl.list[::intflag].playcount)
::param.appflags == orig(::pl.list[::param.aggressive].playcount)
::param.appflags == orig(::pl.list[::param.shuffle].playcount)
::param.appflags == orig(::pl.list[::param.remote].playcount)
::param.appflags == orig(::pl.list[::param.remote_err].playcount)
::param.appflags == orig(::pl.list[::param.quiet].playcount)
::param.appflags == orig(::pl.list[::param.xterm_title].playcount)
::param.appflags == orig(::pl.list[::param.usebuffer].playcount)
::param.appflags == orig(::pl.list[::param.verbose].playcount)
::param.appflags == orig(::pl.list[::param.term_ctrl].playcount)
::param.appflags == orig(::pl.list[::param.term_ctrl-1].playcount)
::param.appflags == orig(::pl.list[::param.checkrange].playcount)
::param.appflags == orig(::pl.list[::param.force_reopen].playcount)
::param.appflags == orig(::pl.list[::param.test_cpu].playcount)
::param.appflags == orig(::pl.list[::param.realtime].playcount)
::param.appflags == orig(::pl.list[::param.listentry].playcount)
::param.appflags == orig(::pl.list[::param.long_id3].playcount)
::param.appflags == orig(::pl.list[::param.list_cpu].playcount)
::param.appflags == orig(::pl.list[::param.timeout].playcount)
::param.appflags == orig(::pl.list[::param.loop].playcount)
::param.appflags == orig(::pl.list[::param.loop-1].playcount)
::param.appflags == orig(::pl.list[::param.delay].playcount)
::param.appflags == orig(::pl.list[::param.index].playcount)
::param.appflags == orig(::pl.list[::param.down_sample].playcount)
::param.appflags == orig(::pl.list[::param.rva].playcount)
::param.appflags == orig(::pl.list[::param.halfspeed].playcount)
::param.appflags == orig(::pl.list[::param.doublespeed].playcount)
::param.appflags == orig(::pl.list[::param.start_frame].playcount)
::param.appflags == orig(::pl.list[::param.force_rate].playcount)
::param.appflags == orig(::pl.list[::param.talk_icy].playcount)
::param.appflags == orig(::pl.list[::param.talk_icy-1].playcount)
::param.appflags == orig(::pl.list[::param.smooth].playcount)
::param.appflags == orig(::pl.list[::param.keep_open].playcount)
::param.appflags == orig(::pl.list[::param.force_utf8].playcount)
::param.appflags == orig(::pl.list[::param.icy_interval].playcount)
::param.appflags == orig(::pl.list[::global_premium].playcount)
::param.appflags == orig(::pl.list[::frames_left].playcount)
::param.appflags == orig(::pl.list[::fresh].playcount)
::param.appflags == orig(::pl.list[::fresh-1].playcount)
::param.appflags == orig(::pl.list[::deathflag].playcount)
::param.appflags == orig(::pl.list[::utf8env].playcount)
::param.appflags == orig(::pl.list[::utf8env-1].playcount)
::param.appflags == orig(::pl.list[::pl.loop].playcount)
::param.appflags == orig(::pl.list[::pl.loop-1].playcount)
::param.appflags == orig(::pl.list[::seeking].playcount)
::param.index_size == orig(::param.index_size)
::param.preload == orig(::param.preload)
::mh == orig(::mh)
::ao == orig(::ao)
::fresh == ::utf8env
::fresh == ::pl.loop
::fresh == orig(::param.term_ctrl)
::fresh == orig(::param.loop)
::fresh == orig(::param.talk_icy)
::fresh == orig(::fresh)
::fresh == orig(::utf8env)
::fresh == orig(::pl.loop)
::fresh == ::opts[::param.term_ctrl].value
::fresh == orig(::opts[post(::param.term_ctrl)].value)
::fresh == ::opts[::param.loop].value
::fresh == orig(::opts[post(::param.loop)].value)
::fresh == ::opts[::param.talk_icy].value
::fresh == orig(::opts[post(::param.talk_icy)].value)
::fresh == ::opts[::fresh].value
::fresh == orig(::opts[post(::fresh)].value)
::fresh == ::opts[::utf8env].value
::fresh == ::opts[::pl.loop].value
::fresh == ::opts[orig(::param.term_ctrl)].value
::fresh == ::opts[orig(::param.loop)].value
::fresh == ::opts[orig(::param.talk_icy)].value
::fresh == ::opts[orig(::fresh)].value
::fresh == ::opts[orig(::utf8env)].value
::fresh == ::opts[orig(::pl.loop)].value
::fresh == orig(::opts[post(::utf8env)].value)
::fresh == orig(::opts[post(::pl.loop)].value)
::fresh == orig(::opts[::param.term_ctrl].value)
::fresh == orig(::opts[::param.loop].value)
::fresh == orig(::opts[::param.talk_icy].value)
::fresh == orig(::opts[::fresh].value)
::fresh == orig(::opts[::utf8env].value)
::fresh == orig(::opts[::pl.loop].value)
::aux_out == orig(::aux_out)
::opts == orig(::opts)
::opts[] == orig(::opts[])
::opts[].sname == orig(::opts[].sname)
::opts[].flags == orig(::opts[].flags)
::opts[].func == orig(::opts[].func)
::opts[].var == orig(::opts[].var)
::opts[].value == orig(::opts[].value)
::pl == orig(::pl)
::pl.size == ::pl.alloc_step
::pl.size == orig(::pl.size)
::pl.size == orig(::pl.alloc_step)
::pl.fill == orig(::pl.fill)
::pl.list == orig(::pl.list)
::pl.list[] == orig(::pl.list[])
::pl.list[].freeit == orig(::pl.list[].freeit)
::pl.list[].playcount == orig(::pl.list[].playcount)
::pl.linebuf == orig(::pl.linebuf)
::pl.dir == orig(::pl.dir)
::pl.type == orig(::pl.type)
::term_help == orig(::term_help)
::term_help[] == orig(::term_help[])
::term_help[].key == orig(::term_help[].key)
::term_help[].key2 == orig(::term_help[].key2)
size(::rva_name[]) == size(::pl.list[])
size(::rva_name[]) == orig(size(::pl.list[]))
size(::rva_name[])-1 == ::opts[::param.output_flags-1].value
size(::rva_name[])-1 == orig(::opts[post(::param.output_flags)-1].value)
size(::rva_name[])-1 == ::opts[orig(::param.output_flags)-1].value
size(::rva_name[])-1 == orig(::opts[::param.output_flags-1].value)
::opts[::stopped] == ::opts[::param.term_ctrl-1]
::opts[::stopped] == orig(::opts[post(::param.term_ctrl)-1])
::opts[::stopped] == ::opts[::param.loop-1]
::opts[::stopped] == orig(::opts[post(::param.loop)-1])
::opts[::stopped] == ::opts[::param.talk_icy-1]
::opts[::stopped] == orig(::opts[post(::param.talk_icy)-1])
::opts[::stopped] == ::opts[::fresh-1]
::opts[::stopped] == orig(::opts[post(::fresh)-1])
::opts[::stopped] == ::opts[::utf8env-1]
::opts[::stopped] == ::opts[::pl.loop-1]
::opts[::stopped] == ::opts[orig(::param.term_ctrl)-1]
::opts[::stopped] == ::opts[orig(::param.loop)-1]
::opts[::stopped] == ::opts[orig(::param.talk_icy)-1]
::opts[::stopped] == ::opts[orig(::fresh)-1]
::opts[::stopped] == ::opts[orig(::utf8env)-1]
::opts[::stopped] == ::opts[orig(::pl.loop)-1]
::opts[::stopped] == orig(::opts[post(::utf8env)-1])
::opts[::stopped] == orig(::opts[post(::pl.loop)-1])
::opts[::stopped] == orig(::opts[::param.term_ctrl-1])
::opts[::stopped] == orig(::opts[::param.loop-1])
::opts[::stopped] == orig(::opts[::param.talk_icy-1])
::opts[::stopped] == orig(::opts[::fresh-1])
::opts[::stopped] == orig(::opts[::utf8env-1])
::opts[::stopped] == orig(::opts[::pl.loop-1])
::opts[::stopped].sname == ::opts[::param.term_ctrl-1].sname
::opts[::stopped].sname == orig(::opts[post(::param.term_ctrl)-1].sname)
::opts[::stopped].sname == ::opts[::param.loop-1].sname
::opts[::stopped].sname == orig(::opts[post(::param.loop)-1].sname)
::opts[::stopped].sname == ::opts[::param.talk_icy-1].sname
::opts[::stopped].sname == orig(::opts[post(::param.talk_icy)-1].sname)
::opts[::stopped].sname == ::opts[::fresh-1].sname
::opts[::stopped].sname == orig(::opts[post(::fresh)-1].sname)
::opts[::stopped].sname == ::opts[::utf8env-1].sname
::opts[::stopped].sname == ::opts[::pl.loop-1].sname
::opts[::stopped].sname == ::opts[orig(::param.term_ctrl)-1].sname
::opts[::stopped].sname == ::opts[orig(::param.loop)-1].sname
::opts[::stopped].sname == ::opts[orig(::param.talk_icy)-1].sname
::opts[::stopped].sname == ::opts[orig(::fresh)-1].sname
::opts[::stopped].sname == ::opts[orig(::utf8env)-1].sname
::opts[::stopped].sname == ::opts[orig(::pl.loop)-1].sname
::opts[::stopped].sname == orig(::opts[post(::utf8env)-1].sname)
::opts[::stopped].sname == orig(::opts[post(::pl.loop)-1].sname)
::opts[::stopped].sname == orig(::opts[::param.term_ctrl-1].sname)
::opts[::stopped].sname == orig(::opts[::param.loop-1].sname)
::opts[::stopped].sname == orig(::opts[::param.talk_icy-1].sname)
::opts[::stopped].sname == orig(::opts[::fresh-1].sname)
::opts[::stopped].sname == orig(::opts[::utf8env-1].sname)
::opts[::stopped].sname == orig(::opts[::pl.loop-1].sname)
::opts[::stopped].flags == ::opts[::param.term_ctrl-1].flags
::opts[::stopped].flags == orig(::opts[post(::param.term_ctrl)-1].flags)
::opts[::stopped].flags == ::opts[::param.loop-1].flags
::opts[::stopped].flags == orig(::opts[post(::param.loop)-1].flags)
::opts[::stopped].flags == ::opts[::param.talk_icy-1].flags
::opts[::stopped].flags == orig(::opts[post(::param.talk_icy)-1].flags)
::opts[::stopped].flags == ::opts[::fresh-1].flags
::opts[::stopped].flags == orig(::opts[post(::fresh)-1].flags)
::opts[::stopped].flags == ::opts[::utf8env-1].flags
::opts[::stopped].flags == ::opts[::pl.loop-1].flags
::opts[::stopped].flags == ::opts[orig(::param.term_ctrl)-1].flags
::opts[::stopped].flags == ::opts[orig(::param.loop)-1].flags
::opts[::stopped].flags == ::opts[orig(::param.talk_icy)-1].flags
::opts[::stopped].flags == ::opts[orig(::fresh)-1].flags
::opts[::stopped].flags == ::opts[orig(::utf8env)-1].flags
::opts[::stopped].flags == ::opts[orig(::pl.loop)-1].flags
::opts[::stopped].flags == orig(::opts[post(::utf8env)-1].flags)
::opts[::stopped].flags == orig(::opts[post(::pl.loop)-1].flags)
::opts[::stopped].flags == orig(::opts[::param.term_ctrl-1].flags)
::opts[::stopped].flags == orig(::opts[::param.loop-1].flags)
::opts[::stopped].flags == orig(::opts[::param.talk_icy-1].flags)
::opts[::stopped].flags == orig(::opts[::fresh-1].flags)
::opts[::stopped].flags == orig(::opts[::utf8env-1].flags)
::opts[::stopped].flags == orig(::opts[::pl.loop-1].flags)
::opts[::stopped].func == ::opts[::param.term_ctrl].func
::opts[::stopped].func == ::opts[::param.term_ctrl-1].func
::opts[::stopped].func == orig(::opts[post(::param.term_ctrl)].func)
::opts[::stopped].func == orig(::opts[post(::param.term_ctrl)-1].func)
::opts[::stopped].func == ::opts[::param.loop].func
::opts[::stopped].func == ::opts[::param.loop-1].func
::opts[::stopped].func == orig(::opts[post(::param.loop)].func)
::opts[::stopped].func == orig(::opts[post(::param.loop)-1].func)
::opts[::stopped].func == ::opts[::param.talk_icy].func
::opts[::stopped].func == ::opts[::param.talk_icy-1].func
::opts[::stopped].func == orig(::opts[post(::param.talk_icy)].func)
::opts[::stopped].func == orig(::opts[post(::param.talk_icy)-1].func)
::opts[::stopped].func == ::opts[::fresh].func
::opts[::stopped].func == ::opts[::fresh-1].func
::opts[::stopped].func == orig(::opts[post(::fresh)].func)
::opts[::stopped].func == orig(::opts[post(::fresh)-1].func)
::opts[::stopped].func == ::opts[::utf8env].func
::opts[::stopped].func == ::opts[::utf8env-1].func
::opts[::stopped].func == ::opts[::pl.loop].func
::opts[::stopped].func == ::opts[::pl.loop-1].func
::opts[::stopped].func == ::opts[orig(::param.term_ctrl)].func
::opts[::stopped].func == ::opts[orig(::param.term_ctrl)-1].func
::opts[::stopped].func == ::opts[orig(::param.loop)].func
::opts[::stopped].func == ::opts[orig(::param.loop)-1].func
::opts[::stopped].func == ::opts[orig(::param.talk_icy)].func
::opts[::stopped].func == ::opts[orig(::param.talk_icy)-1].func
::opts[::stopped].func == ::opts[orig(::fresh)].func
::opts[::stopped].func == ::opts[orig(::fresh)-1].func
::opts[::stopped].func == ::opts[orig(::utf8env)].func
::opts[::stopped].func == ::opts[orig(::utf8env)-1].func
::opts[::stopped].func == ::opts[orig(::pl.loop)].func
::opts[::stopped].func == ::opts[orig(::pl.loop)-1].func
::opts[::stopped].func == orig(::opts[post(::utf8env)].func)
::opts[::stopped].func == orig(::opts[post(::utf8env)-1].func)
::opts[::stopped].func == orig(::opts[post(::pl.loop)].func)
::opts[::stopped].func == orig(::opts[post(::pl.loop)-1].func)
::opts[::stopped].func == orig(::opts[::param.term_ctrl].func)
::opts[::stopped].func == orig(::opts[::param.term_ctrl-1].func)
::opts[::stopped].func == orig(::opts[::param.loop].func)
::opts[::stopped].func == orig(::opts[::param.loop-1].func)
::opts[::stopped].func == orig(::opts[::param.talk_icy].func)
::opts[::stopped].func == orig(::opts[::param.talk_icy-1].func)
::opts[::stopped].func == orig(::opts[::fresh].func)
::opts[::stopped].func == orig(::opts[::fresh-1].func)
::opts[::stopped].func == orig(::opts[::utf8env].func)
::opts[::stopped].func == orig(::opts[::utf8env-1].func)
::opts[::stopped].func == orig(::opts[::pl.loop].func)
::opts[::stopped].func == orig(::opts[::pl.loop-1].func)
::opts[::stopped].var == ::opts[::param.term_ctrl-1].var
::opts[::stopped].var == orig(::opts[post(::param.term_ctrl)-1].var)
::opts[::stopped].var == ::opts[::param.loop-1].var
::opts[::stopped].var == orig(::opts[post(::param.loop)-1].var)
::opts[::stopped].var == ::opts[::param.talk_icy-1].var
::opts[::stopped].var == orig(::opts[post(::param.talk_icy)-1].var)
::opts[::stopped].var == ::opts[::fresh-1].var
::opts[::stopped].var == orig(::opts[post(::fresh)-1].var)
::opts[::stopped].var == ::opts[::utf8env-1].var
::opts[::stopped].var == ::opts[::pl.loop-1].var
::opts[::stopped].var == ::opts[orig(::param.term_ctrl)-1].var
::opts[::stopped].var == ::opts[orig(::param.loop)-1].var
::opts[::stopped].var == ::opts[orig(::param.talk_icy)-1].var
::opts[::stopped].var == ::opts[orig(::fresh)-1].var
::opts[::stopped].var == ::opts[orig(::utf8env)-1].var
::opts[::stopped].var == ::opts[orig(::pl.loop)-1].var
::opts[::stopped].var == orig(::opts[post(::utf8env)-1].var)
::opts[::stopped].var == orig(::opts[post(::pl.loop)-1].var)
::opts[::stopped].var == orig(::opts[::param.term_ctrl-1].var)
::opts[::stopped].var == orig(::opts[::param.loop-1].var)
::opts[::stopped].var == orig(::opts[::param.talk_icy-1].var)
::opts[::stopped].var == orig(::opts[::fresh-1].var)
::opts[::stopped].var == orig(::opts[::utf8env-1].var)
::opts[::stopped].var == orig(::opts[::pl.loop-1].var)
::pl.list[::stopped] == ::pl.list[::param.term_ctrl-1]
::pl.list[::stopped] == orig(::pl.list[post(::param.term_ctrl)-1])
::pl.list[::stopped] == ::pl.list[::param.loop-1]
::pl.list[::stopped] == orig(::pl.list[post(::param.loop)-1])
::pl.list[::stopped] == ::pl.list[::param.talk_icy-1]
::pl.list[::stopped] == orig(::pl.list[post(::param.talk_icy)-1])
::pl.list[::stopped] == ::pl.list[::fresh-1]
::pl.list[::stopped] == orig(::pl.list[post(::fresh)-1])
::pl.list[::stopped] == ::pl.list[::utf8env-1]
::pl.list[::stopped] == orig(::pl.list[post(::utf8env)-1])
::pl.list[::stopped] == ::pl.list[::pl.loop-1]
::pl.list[::stopped] == orig(::pl.list[post(::pl.loop)-1])
::pl.list[::stopped] == ::pl.list[orig(::param.term_ctrl)-1]
::pl.list[::stopped] == ::pl.list[orig(::param.loop)-1]
::pl.list[::stopped] == ::pl.list[orig(::param.talk_icy)-1]
::pl.list[::stopped] == ::pl.list[orig(::fresh)-1]
::pl.list[::stopped] == ::pl.list[orig(::utf8env)-1]
::pl.list[::stopped] == ::pl.list[orig(::pl.loop)-1]
::pl.list[::stopped] == orig(::pl.list[::param.term_ctrl-1])
::pl.list[::stopped] == orig(::pl.list[::param.loop-1])
::pl.list[::stopped] == orig(::pl.list[::param.talk_icy-1])
::pl.list[::stopped] == orig(::pl.list[::fresh-1])
::pl.list[::stopped] == orig(::pl.list[::utf8env-1])
::pl.list[::stopped] == orig(::pl.list[::pl.loop-1])
::term_help[::stopped] == ::term_help[::param.term_ctrl-1]
::term_help[::stopped] == orig(::term_help[post(::param.term_ctrl)-1])
::term_help[::stopped] == ::term_help[::param.loop-1]
::term_help[::stopped] == orig(::term_help[post(::param.loop)-1])
::term_help[::stopped] == ::term_help[::param.talk_icy-1]
::term_help[::stopped] == orig(::term_help[post(::param.talk_icy)-1])
::term_help[::stopped] == ::term_help[::fresh-1]
::term_help[::stopped] == orig(::term_help[post(::fresh)-1])
::term_help[::stopped] == ::term_help[::utf8env-1]
::term_help[::stopped] == orig(::term_help[post(::utf8env)-1])
::term_help[::stopped] == ::term_help[::pl.loop-1]
::term_help[::stopped] == orig(::term_help[post(::pl.loop)-1])
::term_help[::stopped] == ::term_help[orig(::param.term_ctrl)-1]
::term_help[::stopped] == ::term_help[orig(::param.loop)-1]
::term_help[::stopped] == ::term_help[orig(::param.talk_icy)-1]
::term_help[::stopped] == ::term_help[orig(::fresh)-1]
::term_help[::stopped] == ::term_help[orig(::utf8env)-1]
::term_help[::stopped] == ::term_help[orig(::pl.loop)-1]
::term_help[::stopped] == orig(::term_help[::param.term_ctrl-1])
::term_help[::stopped] == orig(::term_help[::param.loop-1])
::term_help[::stopped] == orig(::term_help[::param.talk_icy-1])
::term_help[::stopped] == orig(::term_help[::fresh-1])
::term_help[::stopped] == orig(::term_help[::utf8env-1])
::term_help[::stopped] == orig(::term_help[::pl.loop-1])
::term_help[::stopped].key == ::opts[::loptind].sname
::term_help[::stopped].key == orig(::opts[post(::loptind)].sname)
::term_help[::stopped].key == ::term_help[::param.term_ctrl-1].key
::term_help[::stopped].key == orig(::term_help[post(::param.term_ctrl)-1].key)
::term_help[::stopped].key == ::term_help[::param.loop-1].key
::term_help[::stopped].key == orig(::term_help[post(::param.loop)-1].key)
::term_help[::stopped].key == ::term_help[::param.talk_icy-1].key
::term_help[::stopped].key == orig(::term_help[post(::param.talk_icy)-1].key)
::term_help[::stopped].key == ::opts[::param.preframes].sname
::term_help[::stopped].key == orig(::opts[post(::param.preframes)].sname)
::term_help[::stopped].key == ::term_help[::fresh-1].key
::term_help[::stopped].key == orig(::term_help[post(::fresh)-1].key)
::term_help[::stopped].key == ::opts[orig(::loptind)].sname
::term_help[::stopped].key == ::opts[orig(::param.preframes)].sname
::term_help[::stopped].key == ::term_help[::utf8env-1].key
::term_help[::stopped].key == orig(::term_help[post(::utf8env)-1].key)
::term_help[::stopped].key == ::term_help[::pl.loop-1].key
::term_help[::stopped].key == orig(::term_help[post(::pl.loop)-1].key)
::term_help[::stopped].key == ::term_help[orig(::param.term_ctrl)-1].key
::term_help[::stopped].key == ::term_help[orig(::param.loop)-1].key
::term_help[::stopped].key == ::term_help[orig(::param.talk_icy)-1].key
::term_help[::stopped].key == ::term_help[orig(::fresh)-1].key
::term_help[::stopped].key == ::term_help[orig(::utf8env)-1].key
::term_help[::stopped].key == ::term_help[orig(::pl.loop)-1].key
::term_help[::stopped].key == orig(::opts[::loptind].sname)
::term_help[::stopped].key == orig(::term_help[::param.term_ctrl-1].key)
::term_help[::stopped].key == orig(::term_help[::param.loop-1].key)
::term_help[::stopped].key == orig(::term_help[::param.talk_icy-1].key)
::term_help[::stopped].key == orig(::opts[::param.preframes].sname)
::term_help[::stopped].key == orig(::term_help[::fresh-1].key)
::term_help[::stopped].key == orig(::term_help[::utf8env-1].key)
::term_help[::stopped].key == orig(::term_help[::pl.loop-1].key)
::term_help[::stopped].key2 == ::term_help[::param.term_ctrl-1].key2
::term_help[::stopped].key2 == orig(::term_help[post(::param.term_ctrl)-1].key2)
::term_help[::stopped].key2 == ::term_help[::param.loop-1].key2
::term_help[::stopped].key2 == orig(::term_help[post(::param.loop)-1].key2)
::term_help[::stopped].key2 == ::term_help[::param.talk_icy-1].key2
::term_help[::stopped].key2 == orig(::term_help[post(::param.talk_icy)-1].key2)
::term_help[::stopped].key2 == ::term_help[::fresh-1].key2
::term_help[::stopped].key2 == orig(::term_help[post(::fresh)-1].key2)
::term_help[::stopped].key2 == ::term_help[::utf8env-1].key2
::term_help[::stopped].key2 == orig(::term_help[post(::utf8env)-1].key2)
::term_help[::stopped].key2 == ::term_help[::pl.loop-1].key2
::term_help[::stopped].key2 == orig(::term_help[post(::pl.loop)-1].key2)
::term_help[::stopped].key2 == ::term_help[orig(::param.term_ctrl)-1].key2
::term_help[::stopped].key2 == ::term_help[orig(::param.loop)-1].key2
::term_help[::stopped].key2 == ::term_help[orig(::param.talk_icy)-1].key2
::term_help[::stopped].key2 == ::term_help[orig(::fresh)-1].key2
::term_help[::stopped].key2 == ::term_help[orig(::utf8env)-1].key2
::term_help[::stopped].key2 == ::term_help[orig(::pl.loop)-1].key2
::term_help[::stopped].key2 == orig(::term_help[::param.term_ctrl-1].key2)
::term_help[::stopped].key2 == orig(::term_help[::param.loop-1].key2)
::term_help[::stopped].key2 == orig(::term_help[::param.talk_icy-1].key2)
::term_help[::stopped].key2 == orig(::term_help[::fresh-1].key2)
::term_help[::stopped].key2 == orig(::term_help[::utf8env-1].key2)
::term_help[::stopped].key2 == orig(::term_help[::pl.loop-1].key2)
::opts[::param.output_flags].func == ::opts[::param.output_flags-1].func
::opts[::param.output_flags].func == orig(::opts[post(::param.output_flags)-1].func)
::opts[::param.output_flags].func == ::opts[orig(::param.output_flags)-1].func
::opts[::param.output_flags].func == orig(::opts[::param.output_flags-1].func)
::opts[::param.output_flags].var == ::opts[::param.output_flags-1].var
::opts[::param.output_flags].var == orig(::opts[post(::param.output_flags)-1].var)
::opts[::param.output_flags].var == ::opts[orig(::param.output_flags)-1].var
::opts[::param.output_flags].var == orig(::opts[::param.output_flags-1].var)
::stopped == 0
::remote_header_help == "S <mpeg-version> <layer> <sampling freq> <mode(stereo/mono/...)> <mode_ext> <framesize> <stereo> <copyright> <error_protected> <emphasis> <bitrate> <extension> <vbr(0/1=yes/no)>"
::rva_name has only one value
::rva_name[] == [off, mix, album]
::rva_name[] elements one of { "album", "mix", "off" }
::outstream == null
::loptind == 4
::genre_table has only one value
::genre_table[] == [Blues, Classic Rock, Country, Dance, Disco, Funk, Grunge, Hip-Hop, Jazz, Metal, New Age, Oldies, Other, Pop, R&B, Rap, Reggae, Rock, Techno, Industrial, Alternative, Ska, Death Metal, Pranks, Soundtrack, Euro-Techno, Ambient, Trip-Hop, Vocal, Jazz+Funk, Fusion, Trance, Classical, Instrumental, Acid, House, Game, Sound Clip, Gospel, Noise, AlternRock, Bass, Soul, Punk, Space, Meditative, Instrumental Pop, Instrumental Rock, Ethnic, Gothic, Darkwave, Techno-Industrial, Electronic, Pop-Folk, Eurodance, Dream, Southern Rock, Comedy, Cult, Gangsta, Top 40, Christian Rap, Pop/Funk, Jungle, Native American, Cabaret, New Wave, Psychedelic, Rave, Showtunes, Trailer, Lo-Fi, Tribal, Acid Punk, Acid Jazz, Polka, Retro, Musical, Rock & Roll, Hard Rock, Folk, Folk/Rock, National folk, Swing, Fast-fusion, Bebob, Latin, Revival, Celtic, Bluegrass, Avantgarde, Gothic Rock, Progressive Rock, Psychedelic Rock, Symphonic Rock, Slow Rock, Big Band, Chorus, Easy Listening, Acoustic, Humour, Speech, Chanson, Opera, Chamber Music, Sonata, Symphony, Booty Bass, Primus, Porn Groove, Satire, Slow Jam, Club, Tango, Samba, Folklore, Ballad, Powder Ballad, Rhythmic Soul, Freestyle, Duet, Punk Rock, Drum Solo, A Capella, Euro-House, Dance Hall, Goa, Drum & Bass, Club House, Hardcore, Terror, Indie, BritPop, NegerPunk, Polsk Punk, Beat, Christian Gangsta, Heavy Metal, Black Metal, Crossover, Contemporary C, Christian Rock, Merengue, Salsa, Thrash Metal, Anime, JPop, SynthPop]
::binpath == "."
::htd has only one value
::htd.content_type has only one value
::htd.icy_name has only one value
::htd.icy_url has only one value
::htd.proxyhost has only one value
::htd.proxyport has only one value
::htd.proxystate == 0
::param has only one value
::param.output_module == "alsa,oss,nas"
::param.output_flags == 16
::param.term_usr1 == "s"
::param.term_usr2 == "f"
::param.frame_number == -1
::param.outscale == 32768
::param.flags == 33088
::param.resync_limit == 1024
::param.pitch == 0.0
::param.appflags == 0
::param.index_size == 1000
::param.preload == 0.2
::mh has only one value
::ao has only one value
::prgName == "mpg123"
::fresh == 1
::aux_out has only one value
::opts has only one value
::opts[] contains no nulls and has only one value, of length 96
::opts[].sname == [107, 50, 52, 116, 115, 83, 79, 99, 118, 113, 121, 0, 48, 0, 49, 0, 109, 0, 0, 0, 0, 103, 114, 0, 0, 0, 0, 0, 111, 0, 97, 102, 110, 67, 0, 0, 0, 98, 0, 0, 82, 0, 100, 104, 112, 64, 122, 90, 69, 0, 0, 0, 0, 117, 84, 0, 119, 0, 0, 0, 0, 0, 63, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 105, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 101, 0, 0, 0, 0, 0, 0, 0, 0]
::opts[].sname elements >= 0
::opts[].flags == [9, 4, 4, 4, 4, 4, 3, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 9, 4, 4, 0, 0, 0, 3, 0, 3, 9, 9, 4, 4, 3, 3, 9, 4, 17, 4, 4, 9, 9, 3, 3, 4, 4, 3, 4, 3, 4, 4, 3, 8, 4, 3, 3, 3, 4, 4, 4, 0, 0, 0, 9, 4, 4, 4, 4, 4, 4, 4, 3, 9, 9, 4, 5, 9, 17, 4, 4, 4, 4, 4, 9, 4, 3, 9, 4, 3, 9, 4, 3, 17, 0]
::opts[].flags elements >= 0
::opts[].func has only one value, of length 96
::opts[].var has only one value, of length 96
::opts[].value == [0, 1, 2, 0, 0, 0, 0, 1, 0, 0, 128, 128, 1, 1, 2, 2, 4, 4, 4, 8, 1, 0, 0, 16, 1024, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 2, 1, 2, 0, 1, 1, 0, 1, 1, 0, 0, 0, 64, 64, 16384, 0, 0, 0, 0, 4, 1, 1, 2, 2, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 2, 1, 1, 512, 0, 256, 0, 0, 8192, 0, 0, 4096, 0, 0, 0]
::opts[].value elements >= 0
::pl has only one value
::pl.size == 10
::pl.fill == 3
::pl.list has only one value
::pl.list[] contains no nulls and has only one value, of length 3
::pl.list[].url == [ImmanuelCasto-Dagrandesaraifrio.mp3, ImmanuelCasto-Dagrandesaraifrio (copy 1).mp3, ImmanuelCasto-Dagrandesaraifrio (copy 2).mp3]
::pl.list[].url elements one of { "ImmanuelCasto-Dagrandesaraifrio (copy 1).mp3", "ImmanuelCasto-Dagrandesaraifrio (copy 2).mp3", "ImmanuelCasto-Dagrandesaraifrio.mp3" }
::pl.list[].freeit == [0, 0, 0]
::pl.list[].freeit elements == 0
::pl.list[].playcount == [0, 0, 0]
::pl.list[].playcount elements == 0
::pl.linebuf has only one value
::pl.dir has only one value
::pl.type == 0
::term_help has only one value
::term_help[] contains no nulls and has only one value, of length 26
::term_help[].key == [115, 102, 100, 93, 91, 98, 112, 46, 44, 58, 59, 62, 60, 43, 45, 114, 118, 108, 116, 109, 104, 113, 99, 120, 119, 107]
::term_help[].key2 == [32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 67, 88, 0, 0]
::term_help[].key2 elements >= 0
::term_help[].desc == [interrupt/restart playback (i.e. '(un)pause'), next track, previous track, next directory (next track until directory part changes), previous directory (previous track until directory part changes), back to beginning of track, loop around current position (don't combine with output buffer), forward, rewind, fast forward, fast rewind, fine forward, fine rewind, volume up, volume down, RVA switch, verbose switch, list current playlist, indicating current track there, display tag info (again), print MPEG header info (again), this help, quit, pitch up (small step, big step), pitch down (small step, big step), reset pitch to zero, print out current position in playlist and track, for the benefit of some external tool to store bookmarks]
size(::rva_name[]) == 3
size(::genre_table[]) == 148
size(::opts[]) == 96
size(::term_help[]) == 26
::opts[::stopped] has only one value
::opts[::stopped].sname == 107
::opts[::stopped].flags == 9
::opts[::stopped].func == null
::opts[::stopped].var has only one value
::pl.list[::stopped] has only one value
::term_help[::stopped] has only one value
::term_help[::stopped].key == 115
::term_help[::stopped].key2 == 32
::opts[::loptind] has only one value
::opts[::loptind-1] has only one value
::opts[::loptind-1].sname == 116
::opts[::loptind].func has only one value
::opts[::loptind-1].func has only one value
::term_help[::loptind] has only one value
::term_help[::loptind-1] has only one value
::term_help[::loptind].key == 91
::term_help[::loptind-1].key == 93
::opts[::param.output_flags] has only one value
::opts[::param.output_flags-1] has only one value
::opts[::param.output_flags].sname == 109
::opts[::param.output_flags].func has only one value
::opts[::param.output_flags].var has only one value
::term_help[::param.output_flags] has only one value
::term_help[::param.output_flags-1] has only one value
::term_help[::param.output_flags].key == 118
::term_help[::param.output_flags-1].key == 114
::opts[::fresh] has only one value
::opts[::fresh].sname == 50
::opts[::fresh].var has only one value
::pl.list[::fresh] has only one value
::term_help[::fresh] has only one value
::term_help[::fresh].key == 102
::stopped in ::opts[].flags
::pl.list[].freeit elements == ::stopped
::remote_header_help == orig(::remote_header_help)
::binpath == ::fullprogname
::binpath == orig(::binpath)
::binpath == orig(::fullprogname)
::param.output_module == orig(::param.output_module)
::param.output_flags in ::opts[].value
::param.term_usr1 == orig(::param.term_usr1)
::param.term_usr2 == orig(::param.term_usr2)
::param.resync_limit in ::opts[].value
::pl.list[].playcount elements == ::param.appflags
::param.name == ::prgName
::prgName == orig(::param.name)
::prgName == orig(::prgName)
::term_help[::param.output_flags].key in ::opts[].sname
::term_help[::param.output_flags-1].key in ::opts[].sname
::term_help[::fresh].key in ::opts[].sname
size(::rva_name[]) in ::opts[].flags
::opts[::stopped].sname in ::term_help[].key
::opts[::loptind-1].sname in ::term_help[].key
::opts[::param.output_flags].sname in ::term_help[].key
