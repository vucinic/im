===========================================================================
..BZ2_blockSort():::ENTER
::fileMetaInfo.st_uid == ::fileMetaInfo.st_gid
::fileMetaInfo.__pad0 == ::verbosity
::fileMetaInfo.st_mtim.tv_sec == ::fileMetaInfo.st_ctim.tv_sec
::fileMetaInfo.st_mtim.tv_nsec == ::fileMetaInfo.st_ctim.tv_nsec
::verbosity == ::exitValue
::verbosity == size(s[])-1
::verbosity == size(s[].strm[0])-1
::verbosity == size(s[].arr2[0])-1
::verbosity == size(s[].block[0])-1
::verbosity == size(s[].inUse[0])-1
::verbosity == ::fileMetaInfo.__glibc_reserved[::fileMetaInfo.__pad0]
::verbosity == s[::fileMetaInfo.__pad0].numZ
::verbosity == s[::fileMetaInfo.__pad0].state_out_pos
::verbosity == s[::fileMetaInfo.__pad0].verbosity
::verbosity == ::fileMetaInfo.__glibc_reserved[::verbosity]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::exitValue]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::srcMode-1]
::verbosity == s[::verbosity].numZ
::verbosity == s[::verbosity].state_out_pos
::verbosity == s[::verbosity].verbosity
::verbosity == s[::numFileNames-1].numZ
::verbosity == s[::numFileNames-1].state_out_pos
::verbosity == s[::numFileNames-1].verbosity
::verbosity == s[::numFilesProcessed-1].numZ
::verbosity == s[::numFilesProcessed-1].state_out_pos
::verbosity == s[::numFilesProcessed-1].verbosity
::verbosity == s[::exitValue].numZ
::verbosity == s[::exitValue].state_out_pos
::verbosity == s[::exitValue].verbosity
::verbosity == s[::opMode-1].numZ
::verbosity == s[::opMode-1].state_out_pos
::verbosity == s[::opMode-1].verbosity
::keepInputFiles == ::deleteOutputOnInterrupt
::keepInputFiles == ::noisy
::keepInputFiles == s[::fileMetaInfo.__pad0].inUse[0]
::keepInputFiles == s[::verbosity].inUse[0]
::keepInputFiles == s[::numFileNames-1].inUse[0]
::keepInputFiles == s[::numFilesProcessed-1].inUse[0]
::keepInputFiles == s[::exitValue].inUse[0]
::keepInputFiles == s[::opMode-1].inUse[0]
::smallMode == ::forceOverwrite
::smallMode == ::testFailsExist
::smallMode == ::unzFailsExist
::smallMode == s[::verbosity].unseqToSeq[0]
::numFileNames == ::numFilesProcessed
::numFileNames == ::opMode
::numFileNames == size(s[])
::numFileNames == size(s[].strm[0])
::numFileNames == size(s[].arr2[0])
::numFileNames == size(s[].block[0])
::numFileNames == size(s[].inUse[0])
::numFileNames == size(s[].len[0])
::numFileNames == ::incs[::fileMetaInfo.__pad0]
::numFileNames == ::incs[::verbosity]
::numFileNames == ::incs[::numFileNames-1]
::numFileNames == ::incs[::numFilesProcessed-1]
::numFileNames == ::incs[::exitValue]
::numFileNames == ::incs[::opMode-1]
::blockSize100k == s[::fileMetaInfo.__pad0].blockSize100k
::blockSize100k == s[::verbosity].blockSize100k
::blockSize100k == s[::numFileNames-1].blockSize100k
::blockSize100k == s[::numFilesProcessed-1].blockSize100k
::blockSize100k == s[::exitValue].blockSize100k
::blockSize100k == s[::opMode-1].blockSize100k
::srcMode == size(::fileMetaInfo.__glibc_reserved[])
::srcMode == size(::zSuffix[])-1
::srcMode == size(::unzSuffix[])-1
::workFactor == s[::fileMetaInfo.__pad0].workFactor
::workFactor == s[::verbosity].workFactor
::workFactor == s[::numFileNames-1].workFactor
::workFactor == s[::numFilesProcessed-1].workFactor
::workFactor == s[::exitValue].workFactor
::workFactor == s[::opMode-1].workFactor
s[].strm->total_in_hi32 == s[].strm->total_out_hi32
s[].arr1 == s[].ptr
s[].arr1[0] == s[].ptr[0]
s[].numZ == s[].state_out_pos
s[].numZ == s[].verbosity
s[].selector[0] == s[].selectorMtf[0]
s[].len[0][0] == s[].len[1][0]
s[].len[0][0] == s[].len[2][0]
s[].len[0][0] == s[].len[3][0]
s[].len[0][0] == s[].len[4][0]
s[].code[5][0] == s[].rfreq[0][0]
s[].code[5][0] == s[].rfreq[1][0]
s[].code[5][0] == s[].rfreq[2][0]
s[].code[5][0] == s[].rfreq[3][0]
s[].code[5][0] == s[].rfreq[4][0]
s[].code[5][0] == s[].rfreq[5][0]
size(::incs[]) == s[::verbosity].code[2][0]
size(::incs[])-1 == ::incs[::srcMode-1]
size(::incs[])-1 == s[::verbosity].code[1][0]
size(::bzerrorstrings[]) == s[::verbosity].code[4][0]
size(::bzerrorstrings[])-1 == s[::verbosity].code[3][0]
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::fileMetaInfo.__pad0].state
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::verbosity].state
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::numFileNames-1].state
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::numFilesProcessed-1].state
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::exitValue].state
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::opMode-1].state
size(::zSuffix[]) == size(::unzSuffix[])
size(::zSuffix[]) == ::incs[::numFileNames]
size(::zSuffix[]) == ::incs[::numFilesProcessed]
size(::zSuffix[]) == ::incs[::opMode]
size(s[].arr1[0]) == size(s[].len[0])
size(s[].ftab[0]) == size(s[].len[0])
size(s[].ptr[0]) == size(s[].len[0])
size(s[].mtfv[0]) == size(s[].len[0])
size(s[].zbits[0]) == size(s[].len[0])
size(s[].unseqToSeq[0]) == size(s[].len[0])
size(s[].mtfFreq[0]) == size(s[].len[0])
size(s[].selector[0]) == size(s[].len[0])
size(s[].selectorMtf[0]) == size(s[].len[0])
size(s[].len[0]) == size(s[].len[0][0])
size(s[].len[0]) == size(s[].len[1])
size(s[].len[0]) == size(s[].len[1][0])
size(s[].len[0]) == size(s[].len[2])
size(s[].len[0]) == size(s[].len[2][0])
size(s[].len[0]) == size(s[].len[3])
size(s[].len[0]) == size(s[].len[3][0])
size(s[].len[0]) == size(s[].len[4])
size(s[].len[0]) == size(s[].len[4][0])
size(s[].len[0]) == size(s[].len[5])
size(s[].len[0]) == size(s[].len[5][0])
size(s[].len[0]) == size(s[].code[0])
size(s[].len[0]) == size(s[].code[0][0])
size(s[].len[0]) == size(s[].code[1])
size(s[].len[0]) == size(s[].code[1][0])
size(s[].len[0]) == size(s[].code[2])
size(s[].len[0]) == size(s[].code[2][0])
size(s[].len[0]) == size(s[].code[3])
size(s[].len[0]) == size(s[].code[3][0])
size(s[].len[0]) == size(s[].code[4])
size(s[].len[0]) == size(s[].code[4][0])
size(s[].len[0]) == size(s[].code[5])
size(s[].len[0]) == size(s[].code[5][0])
size(s[].len[0]) == size(s[].rfreq[0])
size(s[].len[0]) == size(s[].rfreq[0][0])
size(s[].len[0]) == size(s[].rfreq[1])
size(s[].len[0]) == size(s[].rfreq[1][0])
size(s[].len[0]) == size(s[].rfreq[2])
size(s[].len[0]) == size(s[].rfreq[2][0])
size(s[].len[0]) == size(s[].rfreq[3])
size(s[].len[0]) == size(s[].rfreq[3][0])
size(s[].len[0]) == size(s[].rfreq[4])
size(s[].len[0]) == size(s[].rfreq[4][0])
size(s[].len[0]) == size(s[].rfreq[5])
size(s[].len[0]) == size(s[].rfreq[5][0])
size(s[].len[0]) == size(s[].len_pack[0])
size(s[].len[0])-1 == s[::fileMetaInfo.__pad0].code[5][0]
size(s[].len[0])-1 == s[::fileMetaInfo.__pad0].rfreq[0][0]
size(s[].len[0])-1 == s[::fileMetaInfo.__pad0].rfreq[1][0]
size(s[].len[0])-1 == s[::fileMetaInfo.__pad0].rfreq[2][0]
size(s[].len[0])-1 == s[::fileMetaInfo.__pad0].rfreq[3][0]
size(s[].len[0])-1 == s[::fileMetaInfo.__pad0].rfreq[4][0]
size(s[].len[0])-1 == s[::fileMetaInfo.__pad0].rfreq[5][0]
size(s[].len[0])-1 == s[::verbosity].code[5][0]
size(s[].len[0])-1 == s[::verbosity].rfreq[0][0]
size(s[].len[0])-1 == s[::verbosity].rfreq[1][0]
size(s[].len[0])-1 == s[::verbosity].rfreq[2][0]
size(s[].len[0])-1 == s[::verbosity].rfreq[3][0]
size(s[].len[0])-1 == s[::verbosity].rfreq[4][0]
size(s[].len[0])-1 == s[::verbosity].rfreq[5][0]
size(s[].len[0])-1 == s[::numFileNames-1].code[5][0]
size(s[].len[0])-1 == s[::numFileNames-1].rfreq[0][0]
size(s[].len[0])-1 == s[::numFileNames-1].rfreq[1][0]
size(s[].len[0])-1 == s[::numFileNames-1].rfreq[2][0]
size(s[].len[0])-1 == s[::numFileNames-1].rfreq[3][0]
size(s[].len[0])-1 == s[::numFileNames-1].rfreq[4][0]
size(s[].len[0])-1 == s[::numFileNames-1].rfreq[5][0]
size(s[].len[0])-1 == s[::numFilesProcessed-1].code[5][0]
size(s[].len[0])-1 == s[::numFilesProcessed-1].rfreq[0][0]
size(s[].len[0])-1 == s[::numFilesProcessed-1].rfreq[1][0]
size(s[].len[0])-1 == s[::numFilesProcessed-1].rfreq[2][0]
size(s[].len[0])-1 == s[::numFilesProcessed-1].rfreq[3][0]
size(s[].len[0])-1 == s[::numFilesProcessed-1].rfreq[4][0]
size(s[].len[0])-1 == s[::numFilesProcessed-1].rfreq[5][0]
size(s[].len[0])-1 == s[::exitValue].code[5][0]
size(s[].len[0])-1 == s[::exitValue].rfreq[0][0]
size(s[].len[0])-1 == s[::exitValue].rfreq[1][0]
size(s[].len[0])-1 == s[::exitValue].rfreq[2][0]
size(s[].len[0])-1 == s[::exitValue].rfreq[3][0]
size(s[].len[0])-1 == s[::exitValue].rfreq[4][0]
size(s[].len[0])-1 == s[::exitValue].rfreq[5][0]
size(s[].len[0])-1 == s[::opMode-1].code[5][0]
size(s[].len[0])-1 == s[::opMode-1].rfreq[0][0]
size(s[].len[0])-1 == s[::opMode-1].rfreq[1][0]
size(s[].len[0])-1 == s[::opMode-1].rfreq[2][0]
size(s[].len[0])-1 == s[::opMode-1].rfreq[3][0]
size(s[].len[0])-1 == s[::opMode-1].rfreq[4][0]
size(s[].len[0])-1 == s[::opMode-1].rfreq[5][0]
s[::fileMetaInfo.__pad0].strm->total_in_hi32 == ::BZ2_crc32Table[::verbosity]
s[::fileMetaInfo.__pad0].strm->total_out_hi32 == ::BZ2_crc32Table[::verbosity]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFileNames-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFilesProcessed-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::opMode-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFileNames-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFilesProcessed-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::opMode-1]
::BZ2_crc32Table[::verbosity] == s[::verbosity].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[::verbosity].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == s[::numFileNames-1].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[::numFileNames-1].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == s[::numFilesProcessed-1].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[::numFilesProcessed-1].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == s[::exitValue].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[::exitValue].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == s[::opMode-1].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[::opMode-1].strm->total_out_hi32
s[::verbosity] == s[::numFileNames-1]
s[::verbosity] == s[::numFilesProcessed-1]
s[::verbosity] == s[::opMode-1]
s[::verbosity].strm == s[::numFileNames-1].strm
s[::verbosity].strm == s[::numFilesProcessed-1].strm
s[::verbosity].strm == s[::opMode-1].strm
s[::verbosity].strm[0] == s[::numFileNames-1].strm[0]
s[::verbosity].strm[0] == s[::numFilesProcessed-1].strm[0]
s[::verbosity].strm[0] == s[::opMode-1].strm[0]
s[::verbosity].strm->avail_in == s[::numFileNames-1].strm->avail_in
s[::verbosity].strm->avail_in == s[::numFilesProcessed-1].strm->avail_in
s[::verbosity].strm->avail_in == s[::opMode-1].strm->avail_in
s[::verbosity].strm->total_in_lo32 == s[::numFileNames-1].strm->total_in_lo32
s[::verbosity].strm->total_in_lo32 == s[::numFilesProcessed-1].strm->total_in_lo32
s[::verbosity].strm->total_in_lo32 == s[::opMode-1].strm->total_in_lo32
s[::verbosity].strm->avail_out == s[::numFileNames-1].strm->avail_out
s[::verbosity].strm->avail_out == s[::numFilesProcessed-1].strm->avail_out
s[::verbosity].strm->avail_out == s[::opMode-1].strm->avail_out
s[::verbosity].strm->total_out_lo32 == s[::numFileNames-1].strm->total_out_lo32
s[::verbosity].strm->total_out_lo32 == s[::numFilesProcessed-1].strm->total_out_lo32
s[::verbosity].strm->total_out_lo32 == s[::opMode-1].strm->total_out_lo32
s[::verbosity].strm->state == s[::numFileNames-1].strm->state
s[::verbosity].strm->state == s[::numFilesProcessed-1].strm->state
s[::verbosity].strm->state == s[::opMode-1].strm->state
s[::verbosity].strm->bzalloc == s[::numFileNames-1].strm->bzalloc
s[::verbosity].strm->bzalloc == s[::numFilesProcessed-1].strm->bzalloc
s[::verbosity].strm->bzalloc == s[::opMode-1].strm->bzalloc
s[::verbosity].strm->bzfree == s[::numFileNames-1].strm->bzfree
s[::verbosity].strm->bzfree == s[::numFilesProcessed-1].strm->bzfree
s[::verbosity].strm->bzfree == s[::opMode-1].strm->bzfree
s[::verbosity].strm->opaque == s[::numFileNames-1].strm->opaque
s[::verbosity].strm->opaque == s[::numFilesProcessed-1].strm->opaque
s[::verbosity].strm->opaque == s[::opMode-1].strm->opaque
s[::verbosity].mode == s[::numFileNames-1].mode
s[::verbosity].mode == s[::numFilesProcessed-1].mode
s[::verbosity].mode == s[::opMode-1].mode
s[::verbosity].avail_in_expect == s[::numFileNames-1].avail_in_expect
s[::verbosity].avail_in_expect == s[::numFilesProcessed-1].avail_in_expect
s[::verbosity].avail_in_expect == s[::opMode-1].avail_in_expect
s[::verbosity].arr1 == s[::numFileNames-1].arr1
s[::verbosity].arr1 == s[::numFileNames-1].ptr
s[::verbosity].arr1 == s[::numFilesProcessed-1].arr1
s[::verbosity].arr1 == s[::numFilesProcessed-1].ptr
s[::verbosity].arr1 == s[::opMode-1].arr1
s[::verbosity].arr1 == s[::opMode-1].ptr
s[::verbosity].arr1[0] == s[::numFileNames-1].arr1[0]
s[::verbosity].arr1[0] == s[::numFileNames-1].ptr[0]
s[::verbosity].arr1[0] == s[::numFilesProcessed-1].arr1[0]
s[::verbosity].arr1[0] == s[::numFilesProcessed-1].ptr[0]
s[::verbosity].arr1[0] == s[::opMode-1].arr1[0]
s[::verbosity].arr1[0] == s[::opMode-1].ptr[0]
s[::verbosity].arr2 == s[::numFileNames-1].arr2
s[::verbosity].arr2 == s[::numFilesProcessed-1].arr2
s[::verbosity].arr2 == s[::opMode-1].arr2
s[::verbosity].arr2[0] == s[::numFileNames-1].arr2[0]
s[::verbosity].arr2[0] == s[::numFilesProcessed-1].arr2[0]
s[::verbosity].arr2[0] == s[::opMode-1].arr2[0]
s[::verbosity].ftab == s[::numFileNames-1].ftab
s[::verbosity].ftab == s[::numFilesProcessed-1].ftab
s[::verbosity].ftab == s[::opMode-1].ftab
s[::verbosity].ftab[0] == s[::numFileNames-1].ftab[0]
s[::verbosity].ftab[0] == s[::numFilesProcessed-1].ftab[0]
s[::verbosity].ftab[0] == s[::opMode-1].ftab[0]
s[::verbosity].origPtr == s[::numFileNames-1].origPtr
s[::verbosity].origPtr == s[::numFilesProcessed-1].origPtr
s[::verbosity].origPtr == s[::opMode-1].origPtr
s[::verbosity].block == s[::numFileNames-1].block
s[::verbosity].block == s[::numFilesProcessed-1].block
s[::verbosity].block == s[::opMode-1].block
s[::verbosity].block[0] == s[::numFileNames-1].block[0]
s[::verbosity].block[0] == s[::numFilesProcessed-1].block[0]
s[::verbosity].block[0] == s[::opMode-1].block[0]
s[::verbosity].mtfv == s[::numFileNames-1].mtfv
s[::verbosity].mtfv == s[::numFilesProcessed-1].mtfv
s[::verbosity].mtfv == s[::opMode-1].mtfv
s[::verbosity].mtfv[0] == s[::numFileNames-1].mtfv[0]
s[::verbosity].mtfv[0] == s[::numFilesProcessed-1].mtfv[0]
s[::verbosity].mtfv[0] == s[::opMode-1].mtfv[0]
s[::verbosity].zbits == s[::numFileNames-1].zbits
s[::verbosity].zbits == s[::numFilesProcessed-1].zbits
s[::verbosity].zbits == s[::opMode-1].zbits
s[::verbosity].zbits[0] == s[::numFileNames-1].zbits[0]
s[::verbosity].zbits[0] == s[::numFilesProcessed-1].zbits[0]
s[::verbosity].zbits[0] == s[::opMode-1].zbits[0]
s[::verbosity].state_in_ch == s[::numFileNames-1].state_in_ch
s[::verbosity].state_in_ch == s[::numFilesProcessed-1].state_in_ch
s[::verbosity].state_in_ch == s[::opMode-1].state_in_ch
s[::verbosity].state_in_len == s[::numFileNames-1].state_in_len
s[::verbosity].state_in_len == s[::numFilesProcessed-1].state_in_len
s[::verbosity].state_in_len == s[::opMode-1].state_in_len
s[::verbosity].nblock == s[::numFileNames-1].nblock
s[::verbosity].nblock == s[::numFilesProcessed-1].nblock
s[::verbosity].nblock == s[::opMode-1].nblock
s[::verbosity].nblockMAX == s[::numFileNames-1].nblockMAX
s[::verbosity].nblockMAX == s[::numFilesProcessed-1].nblockMAX
s[::verbosity].nblockMAX == s[::opMode-1].nblockMAX
s[::verbosity].nInUse == s[::numFileNames-1].nInUse
s[::verbosity].nInUse == s[::numFilesProcessed-1].nInUse
s[::verbosity].nInUse == s[::opMode-1].nInUse
s[::verbosity].inUse == s[::numFileNames-1].inUse
s[::verbosity].inUse == s[::numFilesProcessed-1].inUse
s[::verbosity].inUse == s[::opMode-1].inUse
s[::verbosity].unseqToSeq[0] == s[::numFileNames-1].unseqToSeq[0]
s[::verbosity].unseqToSeq[0] == s[::numFilesProcessed-1].unseqToSeq[0]
s[::verbosity].unseqToSeq[0] == s[::opMode-1].unseqToSeq[0]
s[::verbosity].bsBuff == s[::numFileNames-1].bsBuff
s[::verbosity].bsBuff == s[::numFilesProcessed-1].bsBuff
s[::verbosity].bsBuff == s[::opMode-1].bsBuff
s[::verbosity].bsLive == s[::numFileNames-1].bsLive
s[::verbosity].bsLive == s[::numFilesProcessed-1].bsLive
s[::verbosity].bsLive == s[::opMode-1].bsLive
s[::verbosity].blockCRC == s[::numFileNames-1].blockCRC
s[::verbosity].blockCRC == s[::numFilesProcessed-1].blockCRC
s[::verbosity].blockCRC == s[::opMode-1].blockCRC
s[::verbosity].combinedCRC == s[::numFileNames-1].combinedCRC
s[::verbosity].combinedCRC == s[::numFilesProcessed-1].combinedCRC
s[::verbosity].combinedCRC == s[::opMode-1].combinedCRC
s[::verbosity].blockNo == s[::numFileNames-1].blockNo
s[::verbosity].blockNo == s[::numFilesProcessed-1].blockNo
s[::verbosity].blockNo == s[::opMode-1].blockNo
s[::verbosity].nMTF == s[::numFileNames-1].nMTF
s[::verbosity].nMTF == s[::numFilesProcessed-1].nMTF
s[::verbosity].nMTF == s[::opMode-1].nMTF
s[::verbosity].mtfFreq == s[::numFileNames-1].mtfFreq
s[::verbosity].mtfFreq == s[::numFilesProcessed-1].mtfFreq
s[::verbosity].mtfFreq == s[::opMode-1].mtfFreq
s[::verbosity].mtfFreq[0] == s[::numFileNames-1].mtfFreq[0]
s[::verbosity].mtfFreq[0] == s[::numFilesProcessed-1].mtfFreq[0]
s[::verbosity].mtfFreq[0] == s[::opMode-1].mtfFreq[0]
s[::verbosity].selector == s[::numFileNames-1].selector
s[::verbosity].selector == s[::numFilesProcessed-1].selector
s[::verbosity].selector == s[::opMode-1].selector
s[::verbosity].selector[0] == s[::numFileNames-1].selector[0]
s[::verbosity].selector[0] == s[::numFileNames-1].selectorMtf[0]
s[::verbosity].selector[0] == s[::numFilesProcessed-1].selector[0]
s[::verbosity].selector[0] == s[::numFilesProcessed-1].selectorMtf[0]
s[::verbosity].selector[0] == s[::opMode-1].selector[0]
s[::verbosity].selector[0] == s[::opMode-1].selectorMtf[0]
s[::verbosity].selectorMtf == s[::numFileNames-1].selectorMtf
s[::verbosity].selectorMtf == s[::numFilesProcessed-1].selectorMtf
s[::verbosity].selectorMtf == s[::opMode-1].selectorMtf
s[::verbosity].len[0] == s[::numFileNames-1].len[0]
s[::verbosity].len[0] == s[::numFilesProcessed-1].len[0]
s[::verbosity].len[0] == s[::opMode-1].len[0]
s[::verbosity].len[0][0] == s[::numFileNames-1].len[0][0]
s[::verbosity].len[0][0] == s[::numFileNames-1].len[1][0]
s[::verbosity].len[0][0] == s[::numFileNames-1].len[2][0]
s[::verbosity].len[0][0] == s[::numFileNames-1].len[3][0]
s[::verbosity].len[0][0] == s[::numFileNames-1].len[4][0]
s[::verbosity].len[0][0] == s[::numFilesProcessed-1].len[0][0]
s[::verbosity].len[0][0] == s[::numFilesProcessed-1].len[1][0]
s[::verbosity].len[0][0] == s[::numFilesProcessed-1].len[2][0]
s[::verbosity].len[0][0] == s[::numFilesProcessed-1].len[3][0]
s[::verbosity].len[0][0] == s[::numFilesProcessed-1].len[4][0]
s[::verbosity].len[0][0] == s[::opMode-1].len[0][0]
s[::verbosity].len[0][0] == s[::opMode-1].len[1][0]
s[::verbosity].len[0][0] == s[::opMode-1].len[2][0]
s[::verbosity].len[0][0] == s[::opMode-1].len[3][0]
s[::verbosity].len[0][0] == s[::opMode-1].len[4][0]
s[::verbosity].len[1] == s[::numFileNames-1].len[1]
s[::verbosity].len[1] == s[::numFilesProcessed-1].len[1]
s[::verbosity].len[1] == s[::opMode-1].len[1]
s[::verbosity].len[2] == s[::numFileNames-1].len[2]
s[::verbosity].len[2] == s[::numFilesProcessed-1].len[2]
s[::verbosity].len[2] == s[::opMode-1].len[2]
s[::verbosity].len[3] == s[::numFileNames-1].len[3]
s[::verbosity].len[3] == s[::numFilesProcessed-1].len[3]
s[::verbosity].len[3] == s[::opMode-1].len[3]
s[::verbosity].len[4] == s[::numFileNames-1].len[4]
s[::verbosity].len[4] == s[::numFilesProcessed-1].len[4]
s[::verbosity].len[4] == s[::opMode-1].len[4]
s[::verbosity].len[5] == s[::numFileNames-1].len[5]
s[::verbosity].len[5] == s[::numFilesProcessed-1].len[5]
s[::verbosity].len[5] == s[::opMode-1].len[5]
s[::verbosity].len[5][0] == s[::numFileNames-1].len[5][0]
s[::verbosity].len[5][0] == s[::numFilesProcessed-1].len[5][0]
s[::verbosity].len[5][0] == s[::opMode-1].len[5][0]
s[::verbosity].code[0] == s[::numFileNames-1].code[0]
s[::verbosity].code[0] == s[::numFilesProcessed-1].code[0]
s[::verbosity].code[0] == s[::opMode-1].code[0]
s[::verbosity].code[0][0] == s[::numFileNames-1].code[0][0]
s[::verbosity].code[0][0] == s[::numFilesProcessed-1].code[0][0]
s[::verbosity].code[0][0] == s[::opMode-1].code[0][0]
s[::verbosity].code[1] == s[::numFileNames-1].code[1]
s[::verbosity].code[1] == s[::numFilesProcessed-1].code[1]
s[::verbosity].code[1] == s[::opMode-1].code[1]
s[::verbosity].code[1][0] == s[::numFileNames-1].code[1][0]
s[::verbosity].code[1][0] == s[::numFilesProcessed-1].code[1][0]
s[::verbosity].code[1][0] == s[::opMode-1].code[1][0]
s[::verbosity].code[2] == s[::numFileNames-1].code[2]
s[::verbosity].code[2] == s[::numFilesProcessed-1].code[2]
s[::verbosity].code[2] == s[::opMode-1].code[2]
s[::verbosity].code[2][0] == s[::numFileNames-1].code[2][0]
s[::verbosity].code[2][0] == s[::numFilesProcessed-1].code[2][0]
s[::verbosity].code[2][0] == s[::opMode-1].code[2][0]
s[::verbosity].code[3] == s[::numFileNames-1].code[3]
s[::verbosity].code[3] == s[::numFilesProcessed-1].code[3]
s[::verbosity].code[3] == s[::opMode-1].code[3]
s[::verbosity].code[3][0] == s[::numFileNames-1].code[3][0]
s[::verbosity].code[3][0] == s[::numFilesProcessed-1].code[3][0]
s[::verbosity].code[3][0] == s[::opMode-1].code[3][0]
s[::verbosity].code[4] == s[::numFileNames-1].code[4]
s[::verbosity].code[4] == s[::numFilesProcessed-1].code[4]
s[::verbosity].code[4] == s[::opMode-1].code[4]
s[::verbosity].code[4][0] == s[::numFileNames-1].code[4][0]
s[::verbosity].code[4][0] == s[::numFilesProcessed-1].code[4][0]
s[::verbosity].code[4][0] == s[::opMode-1].code[4][0]
s[::verbosity].code[5] == s[::numFileNames-1].code[5]
s[::verbosity].code[5] == s[::numFilesProcessed-1].code[5]
s[::verbosity].code[5] == s[::opMode-1].code[5]
s[::verbosity].rfreq[0] == s[::numFileNames-1].rfreq[0]
s[::verbosity].rfreq[0] == s[::numFilesProcessed-1].rfreq[0]
s[::verbosity].rfreq[0] == s[::opMode-1].rfreq[0]
s[::verbosity].rfreq[1] == s[::numFileNames-1].rfreq[1]
s[::verbosity].rfreq[1] == s[::numFilesProcessed-1].rfreq[1]
s[::verbosity].rfreq[1] == s[::opMode-1].rfreq[1]
s[::verbosity].rfreq[2] == s[::numFileNames-1].rfreq[2]
s[::verbosity].rfreq[2] == s[::numFilesProcessed-1].rfreq[2]
s[::verbosity].rfreq[2] == s[::opMode-1].rfreq[2]
s[::verbosity].rfreq[3] == s[::numFileNames-1].rfreq[3]
s[::verbosity].rfreq[3] == s[::numFilesProcessed-1].rfreq[3]
s[::verbosity].rfreq[3] == s[::opMode-1].rfreq[3]
s[::verbosity].rfreq[4] == s[::numFileNames-1].rfreq[4]
s[::verbosity].rfreq[4] == s[::numFilesProcessed-1].rfreq[4]
s[::verbosity].rfreq[4] == s[::opMode-1].rfreq[4]
s[::verbosity].rfreq[5] == s[::numFileNames-1].rfreq[5]
s[::verbosity].rfreq[5] == s[::numFilesProcessed-1].rfreq[5]
s[::verbosity].rfreq[5] == s[::opMode-1].rfreq[5]
s[::verbosity].len_pack == s[::numFileNames-1].len_pack
s[::verbosity].len_pack == s[::numFilesProcessed-1].len_pack
s[::verbosity].len_pack == s[::opMode-1].len_pack
s[::verbosity].len_pack[0] == s[::numFileNames-1].len_pack[0]
s[::verbosity].len_pack[0] == s[::numFilesProcessed-1].len_pack[0]
s[::verbosity].len_pack[0] == s[::opMode-1].len_pack[0]
::incs has only one value
::incs[] == [1, 4, 13, 40, 121, 364, 1093, 3280, 9841, 29524, 88573, 265720, 797161, 2391484]
::incs[] elements >= 1
::bzerrorstrings has only one value
::bzerrorstrings[] == [OK, SEQUENCE_ERROR, PARAM_ERROR, MEM_ERROR, DATA_ERROR, DATA_ERROR_MAGIC, IO_ERROR, UNEXPECTED_EOF, OUTBUFF_FULL, CONFIG_ERROR, ???, ???, ???, ???, ???, ???]
::fileMetaInfo has only one value
::fileMetaInfo.st_dev == 2049
::fileMetaInfo.st_ino == 936492
::fileMetaInfo.st_nlink == 1
::fileMetaInfo.st_mode == 33277
::fileMetaInfo.st_uid == 1000
::fileMetaInfo.st_rdev == 0
::fileMetaInfo.st_size == 5738700
::fileMetaInfo.st_blksize == 4096
::fileMetaInfo.st_blocks == 11216
::fileMetaInfo.st_atim has only one value
::fileMetaInfo.st_atim.tv_sec == 1496096467
::fileMetaInfo.st_atim.tv_nsec == 709424920
::fileMetaInfo.st_mtim has only one value
::fileMetaInfo.st_mtim.tv_sec == 1483563943
::fileMetaInfo.st_mtim.tv_nsec == 421335644
::fileMetaInfo.st_ctim has only one value
::fileMetaInfo.__glibc_reserved has only one value
::fileMetaInfo.__glibc_reserved[] == [0, 0, 0]
::fileMetaInfo.__glibc_reserved[] elements == 0
::BZ2_rNums has only one value
::BZ2_rNums[] == [619, 720, 127, 481, 931, 816, 813, 233, 566, 247, 985, 724, 205, 454, 863, 491, 741, 242, 949, 214, 733, 859, 335, 708, 621, 574, 73, 654, 730, 472, 419, 436, 278, 496, 867, 210, 399, 680, 480, 51, 878, 465, 811, 169, 869, 675, 611, 697, 867, 561, 862, 687, 507, 283, 482, 129, 807, 591, 733, 623, 150, 238, 59, 379, 684, 877, 625, 169, 643, 105, 170, 607, 520, 932, 727, 476, 693, 425, 174, 647, 73, 122, 335, 530, 442, 853, 695, 249, 445, 515, 909, 545, 703, 919, 874, 474, 882, 500, 594, 612, 641, 801, 220, 162, 819, 984, 589, 513, 495, 799, 161, 604, 958, 533, 221, 400, 386, 867, 600, 782, 382, 596, 414, 171, 516, 375, 682, 485, 911, 276, 98, 553, 163, 354, 666, 933, 424, 341, 533, 870, 227, 730, 475, 186, 263, 647, 537, 686, 600, 224, 469, 68, 770, 919, 190, 373, 294, 822, 808, 206, 184, 943, 795, 384, 383, 461, 404, 758, 839, 887, 715, 67, 618, 276, 204, 918, 873, 777, 604, 560, 951, 160, 578, 722, 79, 804, 96, 409, 713, 940, 652, 934, 970, 447, 318, 353, 859, 672, 112, 785, 645, 863, 803, 350, 139, 93, 354, 99, 820, 908, 609, 772, 154, 274, 580, 184, 79, 626, 630, 742, 653, 282, 762, 623, 680, 81, 927, 626, 789, 125, 411, 521, 938, 300, 821, 78, 343, 175, 128, 250, 170, 774, 972, 275, 999, 639, 495, 78, 352, 126, 857, 956, 358, 619, 580, 124, 737, 594, 701, 612, 669, 112, 134, 694, 363, 992, 809, 743, 168, 974, 944, 375, 748, 52, 600, 747, 642, 182, 862, 81, 344, 805, 988, 739, 511, 655, 814, 334, 249, 515, 897, 955, 664, 981, 649, 113, 974, 459, 893, 228, 433, 837, 553, 268, 926, 240, 102, 654, 459, 51, 686, 754, 806, 760, 493, 403, 415, 394, 687, 700, 946, 670, 656, 610, 738, 392, 760, 799, 887, 653, 978, 321, 576, 617, 626, 502, 894, 679, 243, 440, 680, 879, 194, 572, 640, 724, 926, 56, 204, 700, 707, 151, 457, 449, 797, 195, 791, 558, 945, 679, 297, 59, 87, 824, 713, 663, 412, 693, 342, 606, 134, 108, 571, 364, 631, 212, 174, 643, 304, 329, 343, 97, 430, 751, 497, 314, 983, 374, 822, 928, 140, 206, 73, 263, 980, 736, 876, 478, 430, 305, 170, 514, 364, 692, 829, 82, 855, 953, 676, 246, 369, 970, 294, 750, 807, 827, 150, 790, 288, 923, 804, 378, 215, 828, 592, 281, 565, 555, 710, 82, 896, 831, 547, 261, 524, 462, 293, 465, 502, 56, 661, 821, 976, 991, 658, 869, 905, 758, 745, 193, 768, 550, 608, 933, 378, 286, 215, 979, 792, 961, 61, 688, 793, 644, 986, 403, 106, 366, 905, 644, 372, 567, 466, 434, 645, 210, 389, 550, 919, 135, 780, 773, 635, 389, 707, 100, 626, 958, 165, 504, 920, 176, 193, 713, 857, 265, 203, 50, 668, 108, 645, 990, 626, 197, 510, 357, 358, 850, 858, 364, 936, 638]
::BZ2_crc32Table has only one value
::BZ2_crc32Table[] == [0, 79764919, 159529838, 222504665, 319059676, 398814059, 445009330, 507990021, 638119352, 583659535, 797628118, 726387553, 890018660, 835552979, 1015980042, 944750013, 1276238704, 1221641927, 1167319070, 1095957929, 1595256236, 1540665371, 1452775106, 1381403509, 1780037320, 1859660671, 1671105958, 1733955601, 2031960084, 2111593891, 1889500026, 1952343757, 2552477408, 2632100695, 2443283854, 2506133561, 2334638140, 2414271883, 2191915858, 2254759653, 3190512472, 3135915759, 3081330742, 3009969537, 2905550212, 2850959411, 2762807018, 2691435357, 3560074640, 3505614887, 3719321342, 3648080713, 3342211916, 3287746299, 3467911202, 3396681109, 4063920168, 4143685023, 4223187782, 4286162673, 3779000052, 3858754371, 3904687514, 3967668269, 881225847, 809987520, 1023691545, 969234094, 662832811, 591600412, 771767749, 717299826, 311336399, 374308984, 453813921, 533576470, 25881363, 88864420, 134795389, 214552010, 2023205639, 2086057648, 1897238633, 1976864222, 1804852699, 1867694188, 1645340341, 1724971778, 1587496639, 1516133128, 1461550545, 1406951526, 1302016099, 1230646740, 1142491917, 1087903418, 2896545431, 2825181984, 2770861561, 2716262478, 3215044683, 3143675388, 3055782693, 3001194130, 2326604591, 2389456536, 2200899649, 2280525302, 2578013683, 2640855108, 2418763421, 2498394922, 3769900519, 3832873040, 3912640137, 3992402750, 4088425275, 4151408268, 4197601365, 4277358050, 3334271071, 3263032808, 3476998961, 3422541446, 3585640067, 3514407732, 3694837229, 3640369242, 1762451694, 1842216281, 1619975040, 1682949687, 2047383090, 2127137669, 1938468188, 2001449195, 1325665622, 1271206113, 1183200824, 1111960463, 1543535498, 1489069629, 1434599652, 1363369299, 622672798, 568075817, 748617968, 677256519, 907627842, 853037301, 1067152940, 995781531, 51762726, 131386257, 177728840, 240578815, 269590778, 349224269, 429104020, 491947555, 4046411278, 4126034873, 4172115296, 4234965207, 3794477266, 3874110821, 3953728444, 4016571915, 3609705398, 3555108353, 3735388376, 3664026991, 3290680682, 3236090077, 3449943556, 3378572211, 3174993278, 3120533705, 3032266256, 2961025959, 2923101090, 2868635157, 2813903052, 2742672763, 2604032198, 2683796849, 2461293480, 2524268063, 2284983834, 2364738477, 2175806836, 2238787779, 1569362073, 1498123566, 1409854455, 1355396672, 1317987909, 1246755826, 1192025387, 1137557660, 2072149281, 2135122070, 1912620623, 1992383480, 1753615357, 1816598090, 1627664531, 1707420964, 295390185, 358241886, 404320391, 483945776, 43990325, 106832002, 186451547, 266083308, 932423249, 861060070, 1041341759, 986742920, 613929101, 542559546, 756411363, 701822548, 3316196985, 3244833742, 3425377559, 3370778784, 3601682597, 3530312978, 3744426955, 3689838204, 3819031489, 3881883254, 3928223919, 4007849240, 4037393693, 4100235434, 4180117107, 4259748804, 2310601993, 2373574846, 2151335527, 2231098320, 2596047829, 2659030626, 2470359227, 2550115596, 2947551409, 2876312838, 2788305887, 2733848168, 3165939309, 3094707162, 3040238851, 2985771188]
::BZ2_crc32Table[] elements >= 0
::mammamia == 3216
::keepInputFiles == 1
::smallMode == 0
::numFileNames == 1
::blockSize100k == 9
::longestFileName == 20
::inName == "../inputs/in_big.txt"
::outName == "../inputs/in_big.txt.bz2"
::tmpName == ""
::progName == "zip-injected"
::progNameReally == "./zip-injected"
::outputHandleJustInCase has only one value
::workFactor == 30
::zSuffix has only one value
::zSuffix[] == [.bz2, .bz, .tbz2, .tbz]
::unzSuffix has only one value
::unzSuffix[] == [, , .tar, .tar]
::unzSuffix[] elements one of { "", ".tar" }
s has only one value
s[] contains no nulls and has only one value, of length 1
s[] elements has only one value
s[].strm contains no nulls and has only one value, of length 1
s[].strm elements has only one value
s[].strm[0] contains no nulls and has only one value, of length 1
s[].strm[0] elements has only one value
s[].strm->total_in_hi32 == [0]
s[].strm->total_in_hi32 elements == 0
s[].strm->next_out elements one of { "BZh91AY&SY\361\031\246\204", "\177\346(+$\312k%jvM\340\307\267\217 \017\3069@\r\260\240\003\010", "\376\030\240\254\223)\254\324\211\360\243\002~\321\374\200?\030\345" }
s[].strm->avail_out == [5000]
s[].strm->avail_out elements == 5000
s[].strm->state contains no nulls and has only one value, of length 1
s[].strm->state elements has only one value
s[].strm->bzalloc contains no nulls and has only one value, of length 1
s[].strm->bzalloc elements has only one value
s[].strm->bzfree contains no nulls and has only one value, of length 1
s[].strm->bzfree elements has only one value
s[].strm->opaque == [null]
s[].strm->opaque elements == null
s[].mode elements one of { 2, 4 }
s[].mode one of { [2], [4] }
s[].state == [2]
s[].state elements == 2
s[].avail_in_expect == [0]
s[].avail_in_expect elements == 0
s[].arr1 contains no nulls and has only one value, of length 1
s[].arr1 elements has only one value
s[].arr1[0] elements one of { 23, 65559 }
s[].arr1[0] one of { [23], [65559] }
s[].arr2 contains no nulls and has only one value, of length 1
s[].arr2 elements has only one value
s[].ftab contains no nulls and has only one value, of length 1
s[].ftab elements has only one value
s[].ftab[0] == [4294967295]
s[].ftab[0] elements == 4294967295L
s[].origPtr elements one of { 65814, 654151, 818040 }
s[].origPtr one of { [65814], [654151], [818040] }
s[].block contains no nulls and has only one value, of length 1
s[].block elements has only one value
s[].mtfv contains no nulls and has only one value, of length 1
s[].mtfv elements has only one value
s[].mtfv[0] == [23]
s[].mtfv[0] elements == 23
s[].zbits[0] elements one of { 66, 127, 254 }
s[].zbits[0] one of { [66], [127], [254] }
s[].workFactor == [30]
s[].workFactor elements == 30
s[].state_in_len elements one of { 0, 1 }
s[].state_in_len one of { [0], [1] }
s[].nblock elements one of { 572335, 899981, 899982 }
s[].nblock one of { [572335], [899981], [899982] }
s[].nblockMAX == [899981]
s[].nblockMAX elements == 899981
s[].numZ == [0]
s[].numZ elements == 0
s[].nInUse == [24]
s[].nInUse elements == 24
s[].inUse contains no nulls and has only one value, of length 1
s[].inUse elements has only one value
s[].inUse[0] == [1]
s[].inUse[0] elements == 1
s[].unseqToSeq[0] == [0]
s[].unseqToSeq[0] elements == 0
s[].bsBuff elements one of { 805044224, 2145386496, 4261412864L }
s[].bsBuff one of { [805044224], [2145386496], [4261412864] }
s[].bsLive elements one of { 9, 11, 14 }
s[].bsLive one of { [9], [11], [14] }
s[].blockSize100k == [9]
s[].blockSize100k elements == 9
s[].nMTF elements one of { 3748, 3749 }
s[].nMTF one of { [3748], [3749] }
s[].mtfFreq contains no nulls and has only one value, of length 1
s[].mtfFreq elements has only one value
s[].mtfFreq[0] elements one of { 1335, 1399, 1474 }
s[].mtfFreq[0] one of { [1335], [1399], [1474] }
s[].selector contains no nulls and has only one value, of length 1
s[].selector elements has only one value
s[].selector[0] elements one of { 4, 5 }
s[].selector[0] one of { [4], [5] }
s[].selectorMtf contains no nulls and has only one value, of length 1
s[].selectorMtf elements has only one value
s[].len[0] contains no nulls and has only one value, of length 1
s[].len[0] elements has only one value
s[].len[0][0] == [5]
s[].len[0][0] elements == 5
s[].len[1] contains no nulls and has only one value, of length 1
s[].len[1] elements has only one value
s[].len[2] contains no nulls and has only one value, of length 1
s[].len[2] elements has only one value
s[].len[3] contains no nulls and has only one value, of length 1
s[].len[3] elements has only one value
s[].len[4] contains no nulls and has only one value, of length 1
s[].len[4] elements has only one value
s[].len[5] contains no nulls and has only one value, of length 1
s[].len[5] elements has only one value
s[].len[5][0] == [4]
s[].len[5][0] elements == 4
s[].code[0] contains no nulls and has only one value, of length 1
s[].code[0] elements has only one value
s[].code[0][0] == [12]
s[].code[0][0] elements == 12
s[].code[1] contains no nulls and has only one value, of length 1
s[].code[1] elements has only one value
s[].code[1][0] == [13]
s[].code[1][0] elements == 13
s[].code[2] contains no nulls and has only one value, of length 1
s[].code[2] elements has only one value
s[].code[2][0] == [14]
s[].code[2][0] elements == 14
s[].code[3] contains no nulls and has only one value, of length 1
s[].code[3] elements has only one value
s[].code[3][0] == [15]
s[].code[3][0] elements == 15
s[].code[4] contains no nulls and has only one value, of length 1
s[].code[4] elements has only one value
s[].code[4][0] == [16]
s[].code[4][0] elements == 16
s[].code[5] contains no nulls and has only one value, of length 1
s[].code[5] elements has only one value
s[].code[5][0] == [0]
s[].code[5][0] elements == 0
s[].rfreq[0] contains no nulls and has only one value, of length 1
s[].rfreq[0] elements has only one value
s[].rfreq[1] contains no nulls and has only one value, of length 1
s[].rfreq[1] elements has only one value
s[].rfreq[2] contains no nulls and has only one value, of length 1
s[].rfreq[2] elements has only one value
s[].rfreq[3] contains no nulls and has only one value, of length 1
s[].rfreq[3] elements has only one value
s[].rfreq[4] contains no nulls and has only one value, of length 1
s[].rfreq[4] elements has only one value
s[].rfreq[5] contains no nulls and has only one value, of length 1
s[].rfreq[5] elements has only one value
s[].len_pack contains no nulls and has only one value, of length 1
s[].len_pack elements has only one value
s[].len_pack[0] == [327685]
s[].len_pack[0] elements == 327685
size(::incs[]) == 14
size(::bzerrorstrings[]) == 16
size(::BZ2_rNums[]) == 512
size(::BZ2_crc32Table[]) == 256
size(::zSuffix[]) == 4
size(s[].len[0]) == 1
::incs[::blockSize100k] == 29524
::incs[::blockSize100k-1] == 9841
::incs[::srcMode] == 40
::BZ2_rNums[::verbosity] == 619
::BZ2_rNums[::numFileNames] == 720
::BZ2_rNums[::blockSize100k] == 247
::BZ2_rNums[::blockSize100k-1] == 566
::BZ2_rNums[::srcMode] == 481
::BZ2_rNums[::srcMode-1] == 127
::BZ2_rNums[::longestFileName] == 733
::BZ2_rNums[::longestFileName-1] == 214
::BZ2_rNums[::workFactor] == 419
::BZ2_rNums[::workFactor-1] == 472
::BZ2_crc32Table[::verbosity] == 0
::BZ2_crc32Table[::numFileNames] == 79764919
::BZ2_crc32Table[::blockSize100k] == 583659535
::BZ2_crc32Table[::blockSize100k-1] == 638119352
::BZ2_crc32Table[::srcMode] == 222504665
::BZ2_crc32Table[::srcMode-1] == 159529838
::BZ2_crc32Table[::longestFileName] == 1595256236
::BZ2_crc32Table[::longestFileName-1] == 1095957929
::BZ2_crc32Table[::workFactor] == 1889500026
::BZ2_crc32Table[::workFactor-1] == 2111593891
size(s[].len[0]) in ::incs[]
s[::verbosity].code[1][0] in ::incs[]
::fileMetaInfo.__glibc_reserved[] elements == ::verbosity
::fileMetaInfo.__glibc_reserved[] elements == size(s[].len[0])-1
size(s[].len[0])-1 in ::fileMetaInfo.__glibc_reserved[]
size(::BZ2_rNums[])-1 in ::BZ2_rNums[]
s[::verbosity].avail_in_expect in ::BZ2_crc32Table[]
s[].numZ elements == ::verbosity
::verbosity in s[].code[5][0]
s[].code[5][0] elements == ::verbosity
s[].inUse[0] elements == ::keepInputFiles
::smallMode in s[].unseqToSeq[0]
s[].unseqToSeq[0] elements == ::smallMode
s[].blockSize100k elements == ::blockSize100k
::tmpName in ::unzSuffix[]
s[].workFactor elements == ::workFactor
s[] elements == s[::verbosity]
s[].strm elements == s[::verbosity].strm
s[].strm[0] elements == s[::verbosity].strm[0]
s[].strm->avail_in == s[].avail_in_expect (elementwise)
s[].strm->avail_in is the reverse of s[].avail_in_expect
s[].strm->avail_in elements == s[::verbosity].strm->avail_in
s[::verbosity].avail_in_expect in s[].strm->avail_in
s[].strm->avail_in elements == s[::verbosity].avail_in_expect
s[].strm->total_in_lo32 elements == s[::verbosity].strm->total_in_lo32
s[].strm->total_in_hi32 == s[].avail_in_expect (elementwise)
s[].strm->total_in_hi32 is the reverse of s[].avail_in_expect
s[].strm->total_in_hi32 elements == ::BZ2_crc32Table[::verbosity]
s[::verbosity].avail_in_expect in s[].strm->total_in_hi32
s[].strm->total_in_hi32 elements == s[::verbosity].avail_in_expect
s[].strm->avail_out elements == s[::verbosity].strm->avail_out
s[].strm->total_out_lo32 elements == s[::verbosity].strm->total_out_lo32
s[].strm->state elements == s[::verbosity].strm->state
s[].strm->bzalloc elements == s[::verbosity].strm->bzalloc
s[].strm->bzfree elements == s[::verbosity].strm->bzfree
s[].strm->opaque elements == s[::verbosity].strm->opaque
s[].mode elements == s[::verbosity].mode
s[].state elements == size(::fileMetaInfo.__glibc_reserved[])-1
::BZ2_crc32Table[::verbosity] in s[].avail_in_expect
s[].avail_in_expect elements == ::BZ2_crc32Table[::verbosity]
s[::verbosity].strm->avail_in in s[].avail_in_expect
s[].avail_in_expect elements == s[::verbosity].strm->avail_in
s[].avail_in_expect elements == s[::verbosity].avail_in_expect
s[].arr1 elements == s[::verbosity].arr1
s[].arr1[0] elements == s[::verbosity].arr1[0]
s[].arr2 elements == s[::verbosity].arr2
s[].arr2[0] elements == s[::verbosity].arr2[0]
s[].ftab elements == s[::verbosity].ftab
s[].ftab[0] elements == s[::verbosity].ftab[0]
s[].origPtr elements == s[::verbosity].origPtr
s[].block elements == s[::verbosity].block
s[].block[0] elements == s[::verbosity].block[0]
s[].mtfv elements == s[::verbosity].mtfv
s[].mtfv[0] elements == s[::verbosity].mtfv[0]
s[].zbits elements == s[::verbosity].zbits
s[].zbits[0] elements == s[::verbosity].zbits[0]
s[].state_in_ch elements == s[::verbosity].state_in_ch
s[].state_in_len elements == s[::verbosity].state_in_len
s[].nblock elements == s[::verbosity].nblock
s[].nblockMAX elements == s[::verbosity].nblockMAX
s[].numZ == s[].code[5][0] (elementwise)
s[].numZ is the reverse of s[].code[5][0]
s[].numZ elements == size(s[].len[0])-1
size(s[].len[0])-1 in s[].numZ
s[].nInUse elements == s[::verbosity].nInUse
s[].inUse elements == s[::verbosity].inUse
s[].unseqToSeq[0] elements == s[::verbosity].unseqToSeq[0]
s[].bsBuff elements == s[::verbosity].bsBuff
s[].bsLive elements == s[::verbosity].bsLive
s[].blockCRC elements == s[::verbosity].blockCRC
s[].combinedCRC elements == s[::verbosity].combinedCRC
s[].blockNo elements == s[::verbosity].blockNo
s[].nMTF elements == s[::verbosity].nMTF
s[].mtfFreq elements == s[::verbosity].mtfFreq
s[].mtfFreq[0] elements == s[::verbosity].mtfFreq[0]
s[].selector elements == s[::verbosity].selector
s[].selector[0] elements == s[::verbosity].selector[0]
s[].selectorMtf elements == s[::verbosity].selectorMtf
s[].len[0] elements == s[::verbosity].len[0]
s[].len[0][0] elements == s[::verbosity].len[0][0]
s[].len[1] elements == s[::verbosity].len[1]
s[].len[2] elements == s[::verbosity].len[2]
s[].len[3] elements == s[::verbosity].len[3]
s[].len[4] elements == s[::verbosity].len[4]
s[].len[5] elements == s[::verbosity].len[5]
s[].len[5][0] elements == s[::verbosity].len[5][0]
s[].code[0] elements == s[::verbosity].code[0]
s[].code[0][0] elements == s[::verbosity].code[0][0]
s[].code[1] elements == s[::verbosity].code[1]
s[].code[1][0] elements == size(::incs[])-1
size(::incs[])-1 in s[].code[1][0]
s[].code[1][0] elements == s[::verbosity].code[1][0]
s[].code[2] elements == s[::verbosity].code[2]
s[].code[2][0] elements == size(::incs[])
size(::incs[]) in s[].code[2][0]
s[].code[2][0] elements == s[::verbosity].code[2][0]
s[].code[3] elements == s[::verbosity].code[3]
s[].code[3][0] elements == size(::bzerrorstrings[])-1
size(::bzerrorstrings[])-1 in s[].code[3][0]
s[].code[3][0] elements == s[::verbosity].code[3][0]
s[].code[4] elements == s[::verbosity].code[4]
s[].code[4][0] elements == size(::bzerrorstrings[])
size(::bzerrorstrings[]) in s[].code[4][0]
s[].code[4][0] elements == s[::verbosity].code[4][0]
s[].code[5] elements == s[::verbosity].code[5]
s[].code[5][0] elements == size(s[].len[0])-1
s[].rfreq[0] elements == s[::verbosity].rfreq[0]
s[].rfreq[1] elements == s[::verbosity].rfreq[1]
s[].rfreq[2] elements == s[::verbosity].rfreq[2]
s[].rfreq[3] elements == s[::verbosity].rfreq[3]
s[].rfreq[4] elements == s[::verbosity].rfreq[4]
s[].rfreq[5] elements == s[::verbosity].rfreq[5]
s[].len_pack elements == s[::verbosity].len_pack
s[].len_pack[0] elements == s[::verbosity].len_pack[0]
===========================================================================
..BZ2_blockSort():::EXIT
::incs == orig(::incs)
::incs[] == orig(::incs[])
::bzerrorstrings == orig(::bzerrorstrings)
::fileMetaInfo == orig(::fileMetaInfo)
::fileMetaInfo.st_dev == orig(::fileMetaInfo.st_dev)
::fileMetaInfo.st_ino == orig(::fileMetaInfo.st_ino)
::fileMetaInfo.st_nlink == orig(::fileMetaInfo.st_nlink)
::fileMetaInfo.st_mode == orig(::fileMetaInfo.st_mode)
::fileMetaInfo.st_uid == ::fileMetaInfo.st_gid
::fileMetaInfo.st_uid == orig(::fileMetaInfo.st_uid)
::fileMetaInfo.st_uid == orig(::fileMetaInfo.st_gid)
::fileMetaInfo.__pad0 == ::verbosity
::fileMetaInfo.st_rdev == orig(::fileMetaInfo.st_rdev)
::fileMetaInfo.st_size == orig(::fileMetaInfo.st_size)
::fileMetaInfo.st_blksize == orig(::fileMetaInfo.st_blksize)
::fileMetaInfo.st_blocks == orig(::fileMetaInfo.st_blocks)
::fileMetaInfo.st_atim == orig(::fileMetaInfo.st_atim)
::fileMetaInfo.st_atim.tv_sec == orig(::fileMetaInfo.st_atim.tv_sec)
::fileMetaInfo.st_atim.tv_nsec == orig(::fileMetaInfo.st_atim.tv_nsec)
::fileMetaInfo.st_mtim == orig(::fileMetaInfo.st_mtim)
::fileMetaInfo.st_mtim.tv_sec == ::fileMetaInfo.st_ctim.tv_sec
::fileMetaInfo.st_mtim.tv_sec == orig(::fileMetaInfo.st_mtim.tv_sec)
::fileMetaInfo.st_mtim.tv_sec == orig(::fileMetaInfo.st_ctim.tv_sec)
::fileMetaInfo.st_mtim.tv_nsec == ::fileMetaInfo.st_ctim.tv_nsec
::fileMetaInfo.st_mtim.tv_nsec == orig(::fileMetaInfo.st_mtim.tv_nsec)
::fileMetaInfo.st_mtim.tv_nsec == orig(::fileMetaInfo.st_ctim.tv_nsec)
::fileMetaInfo.st_ctim == orig(::fileMetaInfo.st_ctim)
::fileMetaInfo.__glibc_reserved == orig(::fileMetaInfo.__glibc_reserved)
::fileMetaInfo.__glibc_reserved[] == orig(::fileMetaInfo.__glibc_reserved[])
::BZ2_rNums == orig(::BZ2_rNums)
::BZ2_rNums[] == orig(::BZ2_rNums[])
::BZ2_crc32Table == orig(::BZ2_crc32Table)
::BZ2_crc32Table[] == orig(::BZ2_crc32Table[])
::mammamia == orig(::mammamia)
::verbosity == ::exitValue
::verbosity == orig(::fileMetaInfo.__pad0)
::verbosity == orig(::verbosity)
::verbosity == orig(::exitValue)
::verbosity == size(s[])-1
::verbosity == size(s[].strm[0])-1
::verbosity == size(s[].arr1[0])-1
::verbosity == size(s[].arr2[0])-1
::verbosity == size(s[].ftab[0])-1
::verbosity == size(s[].ptr[0])-1
::verbosity == size(s[].block[0])-1
::verbosity == size(s[].mtfv[0])-1
::verbosity == size(s[].inUse[0])-1
::verbosity == orig(size(s[]))-1
::verbosity == orig(size(s[].strm[0]))-1
::verbosity == orig(size(s[].arr2[0]))-1
::verbosity == orig(size(s[].block[0]))-1
::verbosity == orig(size(s[].inUse[0]))-1
::verbosity == ::fileMetaInfo.__glibc_reserved[::fileMetaInfo.__pad0]
::verbosity == s[::fileMetaInfo.__pad0].numZ
::verbosity == s[::fileMetaInfo.__pad0].state_out_pos
::verbosity == s[::fileMetaInfo.__pad0].verbosity
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::fileMetaInfo.__pad0)])
::verbosity == orig(s[post(::fileMetaInfo.__pad0)].numZ)
::verbosity == orig(s[post(::fileMetaInfo.__pad0)].state_out_pos)
::verbosity == orig(s[post(::fileMetaInfo.__pad0)].verbosity)
::verbosity == ::fileMetaInfo.__glibc_reserved[::verbosity]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::exitValue]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::srcMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::fileMetaInfo.__pad0)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::verbosity)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFileNames)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFileNames)-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFilesProcessed)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFilesProcessed)-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::exitValue)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::opMode)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::opMode)-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::srcMode)-1]
::verbosity == s[::verbosity].numZ
::verbosity == s[::verbosity].state_out_pos
::verbosity == s[::verbosity].verbosity
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::verbosity)])
::verbosity == orig(s[post(::verbosity)].numZ)
::verbosity == orig(s[post(::verbosity)].state_out_pos)
::verbosity == orig(s[post(::verbosity)].verbosity)
::verbosity == s[::numFileNames-1].numZ
::verbosity == s[::numFileNames-1].state_out_pos
::verbosity == s[::numFileNames-1].verbosity
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFileNames)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFileNames)-1])
::verbosity == orig(s[post(::numFileNames)-1].numZ)
::verbosity == orig(s[post(::numFileNames)-1].state_out_pos)
::verbosity == orig(s[post(::numFileNames)-1].verbosity)
::verbosity == s[::numFilesProcessed-1].numZ
::verbosity == s[::numFilesProcessed-1].state_out_pos
::verbosity == s[::numFilesProcessed-1].verbosity
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFilesProcessed)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFilesProcessed)-1])
::verbosity == orig(s[post(::numFilesProcessed)-1].numZ)
::verbosity == orig(s[post(::numFilesProcessed)-1].state_out_pos)
::verbosity == orig(s[post(::numFilesProcessed)-1].verbosity)
::verbosity == s[::exitValue].numZ
::verbosity == s[::exitValue].state_out_pos
::verbosity == s[::exitValue].verbosity
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::exitValue)])
::verbosity == orig(s[post(::exitValue)].numZ)
::verbosity == orig(s[post(::exitValue)].state_out_pos)
::verbosity == orig(s[post(::exitValue)].verbosity)
::verbosity == s[::opMode-1].numZ
::verbosity == s[::opMode-1].state_out_pos
::verbosity == s[::opMode-1].verbosity
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::opMode)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::opMode)-1])
::verbosity == orig(s[post(::opMode)-1].numZ)
::verbosity == orig(s[post(::opMode)-1].state_out_pos)
::verbosity == orig(s[post(::opMode)-1].verbosity)
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::srcMode)-1])
::verbosity == s[orig(::fileMetaInfo.__pad0)].numZ
::verbosity == s[orig(::verbosity)].numZ
::verbosity == s[orig(::numFileNames)-1].numZ
::verbosity == s[orig(::numFilesProcessed)-1].numZ
::verbosity == s[orig(::exitValue)].numZ
::verbosity == s[orig(::opMode)-1].numZ
::verbosity == s[orig(::fileMetaInfo.__pad0)].state_out_pos
::verbosity == s[orig(::verbosity)].state_out_pos
::verbosity == s[orig(::numFileNames)-1].state_out_pos
::verbosity == s[orig(::numFilesProcessed)-1].state_out_pos
::verbosity == s[orig(::exitValue)].state_out_pos
::verbosity == s[orig(::opMode)-1].state_out_pos
::verbosity == s[orig(::fileMetaInfo.__pad0)].verbosity
::verbosity == s[orig(::verbosity)].verbosity
::verbosity == s[orig(::numFileNames)-1].verbosity
::verbosity == s[orig(::numFilesProcessed)-1].verbosity
::verbosity == s[orig(::exitValue)].verbosity
::verbosity == s[orig(::opMode)-1].verbosity
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::fileMetaInfo.__pad0])
::verbosity == orig(s[::fileMetaInfo.__pad0].numZ)
::verbosity == orig(s[::fileMetaInfo.__pad0].state_out_pos)
::verbosity == orig(s[::fileMetaInfo.__pad0].verbosity)
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::verbosity])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFileNames])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFileNames-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFilesProcessed])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFilesProcessed-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::exitValue])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::opMode])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::opMode-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::srcMode-1])
::verbosity == orig(s[::verbosity].numZ)
::verbosity == orig(s[::verbosity].state_out_pos)
::verbosity == orig(s[::verbosity].verbosity)
::verbosity == orig(s[::numFileNames-1].numZ)
::verbosity == orig(s[::numFileNames-1].state_out_pos)
::verbosity == orig(s[::numFileNames-1].verbosity)
::verbosity == orig(s[::numFilesProcessed-1].numZ)
::verbosity == orig(s[::numFilesProcessed-1].state_out_pos)
::verbosity == orig(s[::numFilesProcessed-1].verbosity)
::verbosity == orig(s[::exitValue].numZ)
::verbosity == orig(s[::exitValue].state_out_pos)
::verbosity == orig(s[::exitValue].verbosity)
::verbosity == orig(s[::opMode-1].numZ)
::verbosity == orig(s[::opMode-1].state_out_pos)
::verbosity == orig(s[::opMode-1].verbosity)
::keepInputFiles == ::deleteOutputOnInterrupt
::keepInputFiles == ::noisy
::keepInputFiles == orig(::keepInputFiles)
::keepInputFiles == orig(::deleteOutputOnInterrupt)
::keepInputFiles == orig(::noisy)
::keepInputFiles == s[::fileMetaInfo.__pad0].inUse[0]
::keepInputFiles == orig(s[post(::fileMetaInfo.__pad0)].inUse[0])
::keepInputFiles == s[::verbosity].inUse[0]
::keepInputFiles == orig(s[post(::verbosity)].inUse[0])
::keepInputFiles == s[::numFileNames-1].inUse[0]
::keepInputFiles == orig(s[post(::numFileNames)-1].inUse[0])
::keepInputFiles == s[::numFilesProcessed-1].inUse[0]
::keepInputFiles == orig(s[post(::numFilesProcessed)-1].inUse[0])
::keepInputFiles == s[::exitValue].inUse[0]
::keepInputFiles == orig(s[post(::exitValue)].inUse[0])
::keepInputFiles == s[::opMode-1].inUse[0]
::keepInputFiles == orig(s[post(::opMode)-1].inUse[0])
::keepInputFiles == s[orig(::fileMetaInfo.__pad0)].inUse[0]
::keepInputFiles == s[orig(::verbosity)].inUse[0]
::keepInputFiles == s[orig(::numFileNames)-1].inUse[0]
::keepInputFiles == s[orig(::numFilesProcessed)-1].inUse[0]
::keepInputFiles == s[orig(::exitValue)].inUse[0]
::keepInputFiles == s[orig(::opMode)-1].inUse[0]
::keepInputFiles == orig(s[::fileMetaInfo.__pad0].inUse[0])
::keepInputFiles == orig(s[::verbosity].inUse[0])
::keepInputFiles == orig(s[::numFileNames-1].inUse[0])
::keepInputFiles == orig(s[::numFilesProcessed-1].inUse[0])
::keepInputFiles == orig(s[::exitValue].inUse[0])
::keepInputFiles == orig(s[::opMode-1].inUse[0])
::smallMode == ::forceOverwrite
::smallMode == ::testFailsExist
::smallMode == ::unzFailsExist
::smallMode == orig(::smallMode)
::smallMode == orig(::forceOverwrite)
::smallMode == orig(::testFailsExist)
::smallMode == orig(::unzFailsExist)
::smallMode == s[::verbosity].unseqToSeq[0]
::numFileNames == ::numFilesProcessed
::numFileNames == ::opMode
::numFileNames == orig(::numFileNames)
::numFileNames == orig(::numFilesProcessed)
::numFileNames == orig(::opMode)
::numFileNames == orig(size(s[]))
::numFileNames == orig(size(s[].strm[0]))
::numFileNames == orig(size(s[].arr2[0]))
::numFileNames == orig(size(s[].block[0]))
::numFileNames == orig(size(s[].inUse[0]))
::numFileNames == ::incs[::fileMetaInfo.__pad0]
::numFileNames == ::incs[::verbosity]
::numFileNames == ::incs[::numFileNames-1]
::numFileNames == ::incs[::numFilesProcessed-1]
::numFileNames == ::incs[::exitValue]
::numFileNames == ::incs[::opMode-1]
::numFileNames == ::incs[orig(::fileMetaInfo.__pad0)]
::numFileNames == ::incs[orig(::verbosity)]
::numFileNames == ::incs[orig(::numFileNames)-1]
::numFileNames == ::incs[orig(::numFilesProcessed)-1]
::numFileNames == ::incs[orig(::exitValue)]
::numFileNames == ::incs[orig(::opMode)-1]
::numFileNames == orig(::incs[post(::fileMetaInfo.__pad0)])
::numFileNames == orig(::incs[post(::verbosity)])
::numFileNames == orig(::incs[post(::numFileNames)-1])
::numFileNames == orig(::incs[post(::numFilesProcessed)-1])
::numFileNames == orig(::incs[post(::exitValue)])
::numFileNames == orig(::incs[post(::opMode)-1])
::numFileNames == orig(::incs[::fileMetaInfo.__pad0])
::numFileNames == orig(::incs[::verbosity])
::numFileNames == orig(::incs[::numFileNames-1])
::numFileNames == orig(::incs[::numFilesProcessed-1])
::numFileNames == orig(::incs[::exitValue])
::numFileNames == orig(::incs[::opMode-1])
::blockSize100k == orig(::blockSize100k)
::blockSize100k == s[::fileMetaInfo.__pad0].blockSize100k
::blockSize100k == orig(s[post(::fileMetaInfo.__pad0)].blockSize100k)
::blockSize100k == s[::verbosity].blockSize100k
::blockSize100k == orig(s[post(::verbosity)].blockSize100k)
::blockSize100k == s[::numFileNames-1].blockSize100k
::blockSize100k == orig(s[post(::numFileNames)-1].blockSize100k)
::blockSize100k == s[::numFilesProcessed-1].blockSize100k
::blockSize100k == orig(s[post(::numFilesProcessed)-1].blockSize100k)
::blockSize100k == s[::exitValue].blockSize100k
::blockSize100k == orig(s[post(::exitValue)].blockSize100k)
::blockSize100k == s[::opMode-1].blockSize100k
::blockSize100k == orig(s[post(::opMode)-1].blockSize100k)
::blockSize100k == s[orig(::fileMetaInfo.__pad0)].blockSize100k
::blockSize100k == s[orig(::verbosity)].blockSize100k
::blockSize100k == s[orig(::numFileNames)-1].blockSize100k
::blockSize100k == s[orig(::numFilesProcessed)-1].blockSize100k
::blockSize100k == s[orig(::exitValue)].blockSize100k
::blockSize100k == s[orig(::opMode)-1].blockSize100k
::blockSize100k == orig(s[::fileMetaInfo.__pad0].blockSize100k)
::blockSize100k == orig(s[::verbosity].blockSize100k)
::blockSize100k == orig(s[::numFileNames-1].blockSize100k)
::blockSize100k == orig(s[::numFilesProcessed-1].blockSize100k)
::blockSize100k == orig(s[::exitValue].blockSize100k)
::blockSize100k == orig(s[::opMode-1].blockSize100k)
::srcMode == orig(::srcMode)
::srcMode == size(::fileMetaInfo.__glibc_reserved[])
::srcMode == size(::zSuffix[])-1
::srcMode == size(::unzSuffix[])-1
::srcMode == orig(size(::fileMetaInfo.__glibc_reserved[]))
::srcMode == orig(size(::zSuffix[]))-1
::srcMode == orig(size(::unzSuffix[]))-1
::longestFileName == orig(::longestFileName)
::outputHandleJustInCase == orig(::outputHandleJustInCase)
::workFactor == orig(::workFactor)
::workFactor == s[::fileMetaInfo.__pad0].workFactor
::workFactor == orig(s[post(::fileMetaInfo.__pad0)].workFactor)
::workFactor == s[::verbosity].workFactor
::workFactor == orig(s[post(::verbosity)].workFactor)
::workFactor == s[::numFileNames-1].workFactor
::workFactor == orig(s[post(::numFileNames)-1].workFactor)
::workFactor == s[::numFilesProcessed-1].workFactor
::workFactor == orig(s[post(::numFilesProcessed)-1].workFactor)
::workFactor == s[::exitValue].workFactor
::workFactor == orig(s[post(::exitValue)].workFactor)
::workFactor == s[::opMode-1].workFactor
::workFactor == orig(s[post(::opMode)-1].workFactor)
::workFactor == s[orig(::fileMetaInfo.__pad0)].workFactor
::workFactor == s[orig(::verbosity)].workFactor
::workFactor == s[orig(::numFileNames)-1].workFactor
::workFactor == s[orig(::numFilesProcessed)-1].workFactor
::workFactor == s[orig(::exitValue)].workFactor
::workFactor == s[orig(::opMode)-1].workFactor
::workFactor == orig(s[::fileMetaInfo.__pad0].workFactor)
::workFactor == orig(s[::verbosity].workFactor)
::workFactor == orig(s[::numFileNames-1].workFactor)
::workFactor == orig(s[::numFilesProcessed-1].workFactor)
::workFactor == orig(s[::exitValue].workFactor)
::workFactor == orig(s[::opMode-1].workFactor)
::zSuffix == orig(::zSuffix)
::unzSuffix == orig(::unzSuffix)
s[] == orig(s[])
s[].strm == orig(s[].strm)
s[].strm[0] == orig(s[].strm[0])
s[].strm->avail_in == orig(s[].strm->avail_in)
s[].strm->total_in_lo32 == orig(s[].strm->total_in_lo32)
s[].strm->total_in_hi32 == s[].strm->total_out_hi32
s[].strm->total_in_hi32 == orig(s[].strm->total_in_hi32)
s[].strm->total_in_hi32 == orig(s[].strm->total_out_hi32)
s[].strm->avail_out == orig(s[].strm->avail_out)
s[].strm->total_out_lo32 == orig(s[].strm->total_out_lo32)
s[].strm->state == orig(s[].strm->state)
s[].strm->bzalloc == orig(s[].strm->bzalloc)
s[].strm->bzfree == orig(s[].strm->bzfree)
s[].strm->opaque == orig(s[].strm->opaque)
s[].mode == orig(s[].mode)
s[].state == orig(s[].state)
s[].avail_in_expect == orig(s[].avail_in_expect)
s[].arr1 == s[].ptr
s[].arr1 == orig(s[].arr1)
s[].arr1 == orig(s[].ptr)
s[].arr1[0] == s[].ptr[0]
s[].arr2 == orig(s[].arr2)
s[].arr2[0] == orig(s[].arr2[0])
s[].ftab == orig(s[].ftab)
s[].block == orig(s[].block)
s[].block[0] == orig(s[].block[0])
s[].mtfv == orig(s[].mtfv)
s[].zbits == orig(s[].zbits)
s[].workFactor == orig(s[].workFactor)
s[].state_in_ch == orig(s[].state_in_ch)
s[].state_in_len == orig(s[].state_in_len)
s[].nblock == orig(s[].nblock)
s[].nblockMAX == orig(s[].nblockMAX)
s[].numZ == s[].state_out_pos
s[].numZ == s[].verbosity
s[].numZ == orig(s[].numZ)
s[].numZ == orig(s[].state_out_pos)
s[].numZ == orig(s[].verbosity)
s[].nInUse == orig(s[].nInUse)
s[].inUse == orig(s[].inUse)
s[].inUse[0] == orig(s[].inUse[0])
s[].unseqToSeq[0] == orig(s[].unseqToSeq[0])
s[].bsBuff == orig(s[].bsBuff)
s[].bsLive == orig(s[].bsLive)
s[].blockCRC == orig(s[].blockCRC)
s[].combinedCRC == orig(s[].combinedCRC)
s[].blockNo == orig(s[].blockNo)
s[].blockSize100k == orig(s[].blockSize100k)
s[].nMTF == orig(s[].nMTF)
s[].mtfFreq == orig(s[].mtfFreq)
s[].mtfFreq[0] == orig(s[].mtfFreq[0])
s[].selector == orig(s[].selector)
s[].selector[0] == s[].selectorMtf[0]
s[].selector[0] == orig(s[].selector[0])
s[].selector[0] == orig(s[].selectorMtf[0])
s[].selectorMtf == orig(s[].selectorMtf)
s[].len[0] == orig(s[].len[0])
s[].len[0][0] == s[].len[1][0]
s[].len[0][0] == s[].len[2][0]
s[].len[0][0] == s[].len[3][0]
s[].len[0][0] == s[].len[4][0]
s[].len[0][0] == orig(s[].len[0][0])
s[].len[0][0] == orig(s[].len[1][0])
s[].len[0][0] == orig(s[].len[2][0])
s[].len[0][0] == orig(s[].len[3][0])
s[].len[0][0] == orig(s[].len[4][0])
s[].len[1] == orig(s[].len[1])
s[].len[2] == orig(s[].len[2])
s[].len[3] == orig(s[].len[3])
s[].len[4] == orig(s[].len[4])
s[].len[5] == orig(s[].len[5])
s[].len[5][0] == orig(s[].len[5][0])
s[].code[0] == orig(s[].code[0])
s[].code[0][0] == orig(s[].code[0][0])
s[].code[1] == orig(s[].code[1])
s[].code[1][0] == orig(s[].code[1][0])
s[].code[2] == orig(s[].code[2])
s[].code[2][0] == orig(s[].code[2][0])
s[].code[3] == orig(s[].code[3])
s[].code[3][0] == orig(s[].code[3][0])
s[].code[4] == orig(s[].code[4])
s[].code[4][0] == orig(s[].code[4][0])
s[].code[5] == orig(s[].code[5])
s[].code[5][0] == s[].rfreq[0][0]
s[].code[5][0] == s[].rfreq[1][0]
s[].code[5][0] == s[].rfreq[2][0]
s[].code[5][0] == s[].rfreq[3][0]
s[].code[5][0] == s[].rfreq[4][0]
s[].code[5][0] == s[].rfreq[5][0]
s[].code[5][0] == orig(s[].code[5][0])
s[].code[5][0] == orig(s[].rfreq[0][0])
s[].code[5][0] == orig(s[].rfreq[1][0])
s[].code[5][0] == orig(s[].rfreq[2][0])
s[].code[5][0] == orig(s[].rfreq[3][0])
s[].code[5][0] == orig(s[].rfreq[4][0])
s[].code[5][0] == orig(s[].rfreq[5][0])
s[].rfreq[0] == orig(s[].rfreq[0])
s[].rfreq[1] == orig(s[].rfreq[1])
s[].rfreq[2] == orig(s[].rfreq[2])
s[].rfreq[3] == orig(s[].rfreq[3])
s[].rfreq[4] == orig(s[].rfreq[4])
s[].rfreq[5] == orig(s[].rfreq[5])
s[].len_pack == orig(s[].len_pack)
s[].len_pack[0] == orig(s[].len_pack[0])
size(::incs[]) == s[::verbosity].code[2][0]
size(::incs[])-1 == ::incs[::srcMode-1]
size(::incs[])-1 == ::incs[orig(::srcMode)-1]
size(::incs[])-1 == s[::verbosity].code[1][0]
size(::incs[])-1 == orig(::incs[post(::srcMode)-1])
size(::incs[])-1 == orig(::incs[::srcMode-1])
size(::bzerrorstrings[]) == s[::verbosity].code[4][0]
size(::bzerrorstrings[])-1 == s[::verbosity].code[3][0]
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::fileMetaInfo.__pad0].state
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[post(::fileMetaInfo.__pad0)].state)
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::verbosity].state
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[post(::verbosity)].state)
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::numFileNames-1].state
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[post(::numFileNames)-1].state)
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::numFilesProcessed-1].state
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[post(::numFilesProcessed)-1].state)
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::exitValue].state
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[post(::exitValue)].state)
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::opMode-1].state
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[post(::opMode)-1].state)
size(::fileMetaInfo.__glibc_reserved[])-1 == s[orig(::fileMetaInfo.__pad0)].state
size(::fileMetaInfo.__glibc_reserved[])-1 == s[orig(::verbosity)].state
size(::fileMetaInfo.__glibc_reserved[])-1 == s[orig(::numFileNames)-1].state
size(::fileMetaInfo.__glibc_reserved[])-1 == s[orig(::numFilesProcessed)-1].state
size(::fileMetaInfo.__glibc_reserved[])-1 == s[orig(::exitValue)].state
size(::fileMetaInfo.__glibc_reserved[])-1 == s[orig(::opMode)-1].state
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[::fileMetaInfo.__pad0].state)
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[::verbosity].state)
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[::numFileNames-1].state)
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[::numFilesProcessed-1].state)
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[::exitValue].state)
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[::opMode-1].state)
size(::zSuffix[]) == size(::unzSuffix[])
size(::zSuffix[]) == orig(size(::unzSuffix[]))
size(::zSuffix[]) == ::incs[::numFileNames]
size(::zSuffix[]) == ::incs[::numFilesProcessed]
size(::zSuffix[]) == ::incs[::opMode]
size(::zSuffix[]) == ::incs[orig(::numFileNames)]
size(::zSuffix[]) == ::incs[orig(::numFilesProcessed)]
size(::zSuffix[]) == ::incs[orig(::opMode)]
size(::zSuffix[]) == orig(::incs[post(::numFileNames)])
size(::zSuffix[]) == orig(::incs[post(::numFilesProcessed)])
size(::zSuffix[]) == orig(::incs[post(::opMode)])
size(::zSuffix[]) == orig(::incs[::numFileNames])
size(::zSuffix[]) == orig(::incs[::numFilesProcessed])
size(::zSuffix[]) == orig(::incs[::opMode])
size(s[].len[0])-1 == s[::fileMetaInfo.__pad0].code[5][0]
size(s[].len[0])-1 == s[::fileMetaInfo.__pad0].rfreq[0][0]
size(s[].len[0])-1 == s[::fileMetaInfo.__pad0].rfreq[1][0]
size(s[].len[0])-1 == s[::fileMetaInfo.__pad0].rfreq[2][0]
size(s[].len[0])-1 == s[::fileMetaInfo.__pad0].rfreq[3][0]
size(s[].len[0])-1 == s[::fileMetaInfo.__pad0].rfreq[4][0]
size(s[].len[0])-1 == s[::fileMetaInfo.__pad0].rfreq[5][0]
size(s[].len[0])-1 == orig(s[post(::fileMetaInfo.__pad0)].code[5][0])
size(s[].len[0])-1 == orig(s[post(::fileMetaInfo.__pad0)].rfreq[0][0])
size(s[].len[0])-1 == orig(s[post(::fileMetaInfo.__pad0)].rfreq[1][0])
size(s[].len[0])-1 == orig(s[post(::fileMetaInfo.__pad0)].rfreq[2][0])
size(s[].len[0])-1 == orig(s[post(::fileMetaInfo.__pad0)].rfreq[3][0])
size(s[].len[0])-1 == orig(s[post(::fileMetaInfo.__pad0)].rfreq[4][0])
size(s[].len[0])-1 == orig(s[post(::fileMetaInfo.__pad0)].rfreq[5][0])
size(s[].len[0])-1 == s[::verbosity].code[5][0]
size(s[].len[0])-1 == s[::verbosity].rfreq[0][0]
size(s[].len[0])-1 == s[::verbosity].rfreq[1][0]
size(s[].len[0])-1 == s[::verbosity].rfreq[2][0]
size(s[].len[0])-1 == s[::verbosity].rfreq[3][0]
size(s[].len[0])-1 == s[::verbosity].rfreq[4][0]
size(s[].len[0])-1 == s[::verbosity].rfreq[5][0]
size(s[].len[0])-1 == orig(s[post(::verbosity)].code[5][0])
size(s[].len[0])-1 == orig(s[post(::verbosity)].rfreq[0][0])
size(s[].len[0])-1 == orig(s[post(::verbosity)].rfreq[1][0])
size(s[].len[0])-1 == orig(s[post(::verbosity)].rfreq[2][0])
size(s[].len[0])-1 == orig(s[post(::verbosity)].rfreq[3][0])
size(s[].len[0])-1 == orig(s[post(::verbosity)].rfreq[4][0])
size(s[].len[0])-1 == orig(s[post(::verbosity)].rfreq[5][0])
size(s[].len[0])-1 == s[::numFileNames-1].code[5][0]
size(s[].len[0])-1 == s[::numFileNames-1].rfreq[0][0]
size(s[].len[0])-1 == s[::numFileNames-1].rfreq[1][0]
size(s[].len[0])-1 == s[::numFileNames-1].rfreq[2][0]
size(s[].len[0])-1 == s[::numFileNames-1].rfreq[3][0]
size(s[].len[0])-1 == s[::numFileNames-1].rfreq[4][0]
size(s[].len[0])-1 == s[::numFileNames-1].rfreq[5][0]
size(s[].len[0])-1 == orig(s[post(::numFileNames)-1].code[5][0])
size(s[].len[0])-1 == orig(s[post(::numFileNames)-1].rfreq[0][0])
size(s[].len[0])-1 == orig(s[post(::numFileNames)-1].rfreq[1][0])
size(s[].len[0])-1 == orig(s[post(::numFileNames)-1].rfreq[2][0])
size(s[].len[0])-1 == orig(s[post(::numFileNames)-1].rfreq[3][0])
size(s[].len[0])-1 == orig(s[post(::numFileNames)-1].rfreq[4][0])
size(s[].len[0])-1 == orig(s[post(::numFileNames)-1].rfreq[5][0])
size(s[].len[0])-1 == s[::numFilesProcessed-1].code[5][0]
size(s[].len[0])-1 == s[::numFilesProcessed-1].rfreq[0][0]
size(s[].len[0])-1 == s[::numFilesProcessed-1].rfreq[1][0]
size(s[].len[0])-1 == s[::numFilesProcessed-1].rfreq[2][0]
size(s[].len[0])-1 == s[::numFilesProcessed-1].rfreq[3][0]
size(s[].len[0])-1 == s[::numFilesProcessed-1].rfreq[4][0]
size(s[].len[0])-1 == s[::numFilesProcessed-1].rfreq[5][0]
size(s[].len[0])-1 == orig(s[post(::numFilesProcessed)-1].code[5][0])
size(s[].len[0])-1 == orig(s[post(::numFilesProcessed)-1].rfreq[0][0])
size(s[].len[0])-1 == orig(s[post(::numFilesProcessed)-1].rfreq[1][0])
size(s[].len[0])-1 == orig(s[post(::numFilesProcessed)-1].rfreq[2][0])
size(s[].len[0])-1 == orig(s[post(::numFilesProcessed)-1].rfreq[3][0])
size(s[].len[0])-1 == orig(s[post(::numFilesProcessed)-1].rfreq[4][0])
size(s[].len[0])-1 == orig(s[post(::numFilesProcessed)-1].rfreq[5][0])
size(s[].len[0])-1 == s[::exitValue].code[5][0]
size(s[].len[0])-1 == s[::exitValue].rfreq[0][0]
size(s[].len[0])-1 == s[::exitValue].rfreq[1][0]
size(s[].len[0])-1 == s[::exitValue].rfreq[2][0]
size(s[].len[0])-1 == s[::exitValue].rfreq[3][0]
size(s[].len[0])-1 == s[::exitValue].rfreq[4][0]
size(s[].len[0])-1 == s[::exitValue].rfreq[5][0]
size(s[].len[0])-1 == orig(s[post(::exitValue)].code[5][0])
size(s[].len[0])-1 == orig(s[post(::exitValue)].rfreq[0][0])
size(s[].len[0])-1 == orig(s[post(::exitValue)].rfreq[1][0])
size(s[].len[0])-1 == orig(s[post(::exitValue)].rfreq[2][0])
size(s[].len[0])-1 == orig(s[post(::exitValue)].rfreq[3][0])
size(s[].len[0])-1 == orig(s[post(::exitValue)].rfreq[4][0])
size(s[].len[0])-1 == orig(s[post(::exitValue)].rfreq[5][0])
size(s[].len[0])-1 == s[::opMode-1].code[5][0]
size(s[].len[0])-1 == s[::opMode-1].rfreq[0][0]
size(s[].len[0])-1 == s[::opMode-1].rfreq[1][0]
size(s[].len[0])-1 == s[::opMode-1].rfreq[2][0]
size(s[].len[0])-1 == s[::opMode-1].rfreq[3][0]
size(s[].len[0])-1 == s[::opMode-1].rfreq[4][0]
size(s[].len[0])-1 == s[::opMode-1].rfreq[5][0]
size(s[].len[0])-1 == orig(s[post(::opMode)-1].code[5][0])
size(s[].len[0])-1 == orig(s[post(::opMode)-1].rfreq[0][0])
size(s[].len[0])-1 == orig(s[post(::opMode)-1].rfreq[1][0])
size(s[].len[0])-1 == orig(s[post(::opMode)-1].rfreq[2][0])
size(s[].len[0])-1 == orig(s[post(::opMode)-1].rfreq[3][0])
size(s[].len[0])-1 == orig(s[post(::opMode)-1].rfreq[4][0])
size(s[].len[0])-1 == orig(s[post(::opMode)-1].rfreq[5][0])
size(s[].len[0])-1 == s[orig(::fileMetaInfo.__pad0)].code[5][0]
size(s[].len[0])-1 == s[orig(::verbosity)].code[5][0]
size(s[].len[0])-1 == s[orig(::numFileNames)-1].code[5][0]
size(s[].len[0])-1 == s[orig(::numFilesProcessed)-1].code[5][0]
size(s[].len[0])-1 == s[orig(::exitValue)].code[5][0]
size(s[].len[0])-1 == s[orig(::opMode)-1].code[5][0]
size(s[].len[0])-1 == s[orig(::fileMetaInfo.__pad0)].rfreq[0][0]
size(s[].len[0])-1 == s[orig(::verbosity)].rfreq[0][0]
size(s[].len[0])-1 == s[orig(::numFileNames)-1].rfreq[0][0]
size(s[].len[0])-1 == s[orig(::numFilesProcessed)-1].rfreq[0][0]
size(s[].len[0])-1 == s[orig(::exitValue)].rfreq[0][0]
size(s[].len[0])-1 == s[orig(::opMode)-1].rfreq[0][0]
size(s[].len[0])-1 == s[orig(::fileMetaInfo.__pad0)].rfreq[1][0]
size(s[].len[0])-1 == s[orig(::verbosity)].rfreq[1][0]
size(s[].len[0])-1 == s[orig(::numFileNames)-1].rfreq[1][0]
size(s[].len[0])-1 == s[orig(::numFilesProcessed)-1].rfreq[1][0]
size(s[].len[0])-1 == s[orig(::exitValue)].rfreq[1][0]
size(s[].len[0])-1 == s[orig(::opMode)-1].rfreq[1][0]
size(s[].len[0])-1 == s[orig(::fileMetaInfo.__pad0)].rfreq[2][0]
size(s[].len[0])-1 == s[orig(::verbosity)].rfreq[2][0]
size(s[].len[0])-1 == s[orig(::numFileNames)-1].rfreq[2][0]
size(s[].len[0])-1 == s[orig(::numFilesProcessed)-1].rfreq[2][0]
size(s[].len[0])-1 == s[orig(::exitValue)].rfreq[2][0]
size(s[].len[0])-1 == s[orig(::opMode)-1].rfreq[2][0]
size(s[].len[0])-1 == s[orig(::fileMetaInfo.__pad0)].rfreq[3][0]
size(s[].len[0])-1 == s[orig(::verbosity)].rfreq[3][0]
size(s[].len[0])-1 == s[orig(::numFileNames)-1].rfreq[3][0]
size(s[].len[0])-1 == s[orig(::numFilesProcessed)-1].rfreq[3][0]
size(s[].len[0])-1 == s[orig(::exitValue)].rfreq[3][0]
size(s[].len[0])-1 == s[orig(::opMode)-1].rfreq[3][0]
size(s[].len[0])-1 == s[orig(::fileMetaInfo.__pad0)].rfreq[4][0]
size(s[].len[0])-1 == s[orig(::verbosity)].rfreq[4][0]
size(s[].len[0])-1 == s[orig(::numFileNames)-1].rfreq[4][0]
size(s[].len[0])-1 == s[orig(::numFilesProcessed)-1].rfreq[4][0]
size(s[].len[0])-1 == s[orig(::exitValue)].rfreq[4][0]
size(s[].len[0])-1 == s[orig(::opMode)-1].rfreq[4][0]
size(s[].len[0])-1 == s[orig(::fileMetaInfo.__pad0)].rfreq[5][0]
size(s[].len[0])-1 == s[orig(::verbosity)].rfreq[5][0]
size(s[].len[0])-1 == s[orig(::numFileNames)-1].rfreq[5][0]
size(s[].len[0])-1 == s[orig(::numFilesProcessed)-1].rfreq[5][0]
size(s[].len[0])-1 == s[orig(::exitValue)].rfreq[5][0]
size(s[].len[0])-1 == s[orig(::opMode)-1].rfreq[5][0]
size(s[].len[0])-1 == orig(s[::fileMetaInfo.__pad0].code[5][0])
size(s[].len[0])-1 == orig(s[::fileMetaInfo.__pad0].rfreq[0][0])
size(s[].len[0])-1 == orig(s[::fileMetaInfo.__pad0].rfreq[1][0])
size(s[].len[0])-1 == orig(s[::fileMetaInfo.__pad0].rfreq[2][0])
size(s[].len[0])-1 == orig(s[::fileMetaInfo.__pad0].rfreq[3][0])
size(s[].len[0])-1 == orig(s[::fileMetaInfo.__pad0].rfreq[4][0])
size(s[].len[0])-1 == orig(s[::fileMetaInfo.__pad0].rfreq[5][0])
size(s[].len[0])-1 == orig(s[::verbosity].code[5][0])
size(s[].len[0])-1 == orig(s[::verbosity].rfreq[0][0])
size(s[].len[0])-1 == orig(s[::verbosity].rfreq[1][0])
size(s[].len[0])-1 == orig(s[::verbosity].rfreq[2][0])
size(s[].len[0])-1 == orig(s[::verbosity].rfreq[3][0])
size(s[].len[0])-1 == orig(s[::verbosity].rfreq[4][0])
size(s[].len[0])-1 == orig(s[::verbosity].rfreq[5][0])
size(s[].len[0])-1 == orig(s[::numFileNames-1].code[5][0])
size(s[].len[0])-1 == orig(s[::numFileNames-1].rfreq[0][0])
size(s[].len[0])-1 == orig(s[::numFileNames-1].rfreq[1][0])
size(s[].len[0])-1 == orig(s[::numFileNames-1].rfreq[2][0])
size(s[].len[0])-1 == orig(s[::numFileNames-1].rfreq[3][0])
size(s[].len[0])-1 == orig(s[::numFileNames-1].rfreq[4][0])
size(s[].len[0])-1 == orig(s[::numFileNames-1].rfreq[5][0])
size(s[].len[0])-1 == orig(s[::numFilesProcessed-1].code[5][0])
size(s[].len[0])-1 == orig(s[::numFilesProcessed-1].rfreq[0][0])
size(s[].len[0])-1 == orig(s[::numFilesProcessed-1].rfreq[1][0])
size(s[].len[0])-1 == orig(s[::numFilesProcessed-1].rfreq[2][0])
size(s[].len[0])-1 == orig(s[::numFilesProcessed-1].rfreq[3][0])
size(s[].len[0])-1 == orig(s[::numFilesProcessed-1].rfreq[4][0])
size(s[].len[0])-1 == orig(s[::numFilesProcessed-1].rfreq[5][0])
size(s[].len[0])-1 == orig(s[::exitValue].code[5][0])
size(s[].len[0])-1 == orig(s[::exitValue].rfreq[0][0])
size(s[].len[0])-1 == orig(s[::exitValue].rfreq[1][0])
size(s[].len[0])-1 == orig(s[::exitValue].rfreq[2][0])
size(s[].len[0])-1 == orig(s[::exitValue].rfreq[3][0])
size(s[].len[0])-1 == orig(s[::exitValue].rfreq[4][0])
size(s[].len[0])-1 == orig(s[::exitValue].rfreq[5][0])
size(s[].len[0])-1 == orig(s[::opMode-1].code[5][0])
size(s[].len[0])-1 == orig(s[::opMode-1].rfreq[0][0])
size(s[].len[0])-1 == orig(s[::opMode-1].rfreq[1][0])
size(s[].len[0])-1 == orig(s[::opMode-1].rfreq[2][0])
size(s[].len[0])-1 == orig(s[::opMode-1].rfreq[3][0])
size(s[].len[0])-1 == orig(s[::opMode-1].rfreq[4][0])
size(s[].len[0])-1 == orig(s[::opMode-1].rfreq[5][0])
s[::fileMetaInfo.__pad0].strm->total_in_hi32 == ::BZ2_crc32Table[::verbosity]
s[::fileMetaInfo.__pad0].strm->total_out_hi32 == ::BZ2_crc32Table[::verbosity]
orig(s[post(::fileMetaInfo.__pad0)].strm->total_in_hi32) == ::BZ2_crc32Table[::verbosity]
orig(s[post(::fileMetaInfo.__pad0)].strm->total_out_hi32) == ::BZ2_crc32Table[::verbosity]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFileNames-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFilesProcessed-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::opMode-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[orig(::numFileNames)-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[orig(::numFilesProcessed)-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[orig(::opMode)-1]
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[post(::numFileNames)-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[post(::numFilesProcessed)-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[post(::opMode)-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[::numFileNames-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[::numFilesProcessed-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[::opMode-1])
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFileNames-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFilesProcessed-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::opMode-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[orig(::numFileNames)-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[orig(::numFilesProcessed)-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[orig(::opMode)-1]
::BZ2_crc32Table[::verbosity] == s[::verbosity].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[::verbosity].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == orig(s[post(::verbosity)].strm->total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[post(::verbosity)].strm->total_out_hi32)
::BZ2_crc32Table[::verbosity] == s[::numFileNames-1].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[::numFileNames-1].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[post(::numFileNames)-1])
::BZ2_crc32Table[::verbosity] == orig(s[post(::numFileNames)-1].strm->total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[post(::numFileNames)-1].strm->total_out_hi32)
::BZ2_crc32Table[::verbosity] == s[::numFilesProcessed-1].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[::numFilesProcessed-1].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[post(::numFilesProcessed)-1])
::BZ2_crc32Table[::verbosity] == orig(s[post(::numFilesProcessed)-1].strm->total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[post(::numFilesProcessed)-1].strm->total_out_hi32)
::BZ2_crc32Table[::verbosity] == s[::exitValue].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[::exitValue].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == orig(s[post(::exitValue)].strm->total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[post(::exitValue)].strm->total_out_hi32)
::BZ2_crc32Table[::verbosity] == s[::opMode-1].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[::opMode-1].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[post(::opMode)-1])
::BZ2_crc32Table[::verbosity] == orig(s[post(::opMode)-1].strm->total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[post(::opMode)-1].strm->total_out_hi32)
::BZ2_crc32Table[::verbosity] == s[orig(::fileMetaInfo.__pad0)].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[orig(::verbosity)].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[orig(::numFileNames)-1].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[orig(::numFilesProcessed)-1].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[orig(::exitValue)].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[orig(::opMode)-1].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[orig(::fileMetaInfo.__pad0)].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == s[orig(::verbosity)].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == s[orig(::numFileNames)-1].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == s[orig(::numFilesProcessed)-1].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == s[orig(::exitValue)].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == s[orig(::opMode)-1].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == orig(s[::fileMetaInfo.__pad0].strm->total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[::fileMetaInfo.__pad0].strm->total_out_hi32)
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[::numFileNames-1])
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[::numFilesProcessed-1])
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[::opMode-1])
::BZ2_crc32Table[::verbosity] == orig(s[::verbosity].strm->total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[::verbosity].strm->total_out_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[::numFileNames-1].strm->total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[::numFileNames-1].strm->total_out_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[::numFilesProcessed-1].strm->total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[::numFilesProcessed-1].strm->total_out_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[::exitValue].strm->total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[::exitValue].strm->total_out_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[::opMode-1].strm->total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[::opMode-1].strm->total_out_hi32)
s[::verbosity] == s[::numFileNames-1]
s[::verbosity] == orig(s[post(::numFileNames)-1])
s[::verbosity] == s[::numFilesProcessed-1]
s[::verbosity] == orig(s[post(::numFilesProcessed)-1])
s[::verbosity] == s[::opMode-1]
s[::verbosity] == orig(s[post(::opMode)-1])
s[::verbosity] == s[orig(::numFileNames)-1]
s[::verbosity] == s[orig(::numFilesProcessed)-1]
s[::verbosity] == s[orig(::opMode)-1]
s[::verbosity] == orig(s[::numFileNames-1])
s[::verbosity] == orig(s[::numFilesProcessed-1])
s[::verbosity] == orig(s[::opMode-1])
s[::verbosity].strm == s[::numFileNames-1].strm
s[::verbosity].strm == orig(s[post(::numFileNames)-1].strm)
s[::verbosity].strm == s[::numFilesProcessed-1].strm
s[::verbosity].strm == orig(s[post(::numFilesProcessed)-1].strm)
s[::verbosity].strm == s[::opMode-1].strm
s[::verbosity].strm == orig(s[post(::opMode)-1].strm)
s[::verbosity].strm == s[orig(::numFileNames)-1].strm
s[::verbosity].strm == s[orig(::numFilesProcessed)-1].strm
s[::verbosity].strm == s[orig(::opMode)-1].strm
s[::verbosity].strm == orig(s[::numFileNames-1].strm)
s[::verbosity].strm == orig(s[::numFilesProcessed-1].strm)
s[::verbosity].strm == orig(s[::opMode-1].strm)
s[::verbosity].strm[0] == s[::numFileNames-1].strm[0]
s[::verbosity].strm[0] == orig(s[post(::numFileNames)-1].strm[0])
s[::verbosity].strm[0] == s[::numFilesProcessed-1].strm[0]
s[::verbosity].strm[0] == orig(s[post(::numFilesProcessed)-1].strm[0])
s[::verbosity].strm[0] == s[::opMode-1].strm[0]
s[::verbosity].strm[0] == orig(s[post(::opMode)-1].strm[0])
s[::verbosity].strm[0] == s[orig(::numFileNames)-1].strm[0]
s[::verbosity].strm[0] == s[orig(::numFilesProcessed)-1].strm[0]
s[::verbosity].strm[0] == s[orig(::opMode)-1].strm[0]
s[::verbosity].strm[0] == orig(s[::numFileNames-1].strm[0])
s[::verbosity].strm[0] == orig(s[::numFilesProcessed-1].strm[0])
s[::verbosity].strm[0] == orig(s[::opMode-1].strm[0])
s[::verbosity].strm->avail_in == s[::numFileNames-1].strm->avail_in
s[::verbosity].strm->avail_in == orig(s[post(::numFileNames)-1].strm->avail_in)
s[::verbosity].strm->avail_in == s[::numFilesProcessed-1].strm->avail_in
s[::verbosity].strm->avail_in == orig(s[post(::numFilesProcessed)-1].strm->avail_in)
s[::verbosity].strm->avail_in == s[::opMode-1].strm->avail_in
s[::verbosity].strm->avail_in == orig(s[post(::opMode)-1].strm->avail_in)
s[::verbosity].strm->avail_in == s[orig(::numFileNames)-1].strm->avail_in
s[::verbosity].strm->avail_in == s[orig(::numFilesProcessed)-1].strm->avail_in
s[::verbosity].strm->avail_in == s[orig(::opMode)-1].strm->avail_in
s[::verbosity].strm->avail_in == orig(s[::numFileNames-1].strm->avail_in)
s[::verbosity].strm->avail_in == orig(s[::numFilesProcessed-1].strm->avail_in)
s[::verbosity].strm->avail_in == orig(s[::opMode-1].strm->avail_in)
s[::verbosity].strm->total_in_lo32 == s[::numFileNames-1].strm->total_in_lo32
s[::verbosity].strm->total_in_lo32 == orig(s[post(::numFileNames)-1].strm->total_in_lo32)
s[::verbosity].strm->total_in_lo32 == s[::numFilesProcessed-1].strm->total_in_lo32
s[::verbosity].strm->total_in_lo32 == orig(s[post(::numFilesProcessed)-1].strm->total_in_lo32)
s[::verbosity].strm->total_in_lo32 == s[::opMode-1].strm->total_in_lo32
s[::verbosity].strm->total_in_lo32 == orig(s[post(::opMode)-1].strm->total_in_lo32)
s[::verbosity].strm->total_in_lo32 == s[orig(::numFileNames)-1].strm->total_in_lo32
s[::verbosity].strm->total_in_lo32 == s[orig(::numFilesProcessed)-1].strm->total_in_lo32
s[::verbosity].strm->total_in_lo32 == s[orig(::opMode)-1].strm->total_in_lo32
s[::verbosity].strm->total_in_lo32 == orig(s[::numFileNames-1].strm->total_in_lo32)
s[::verbosity].strm->total_in_lo32 == orig(s[::numFilesProcessed-1].strm->total_in_lo32)
s[::verbosity].strm->total_in_lo32 == orig(s[::opMode-1].strm->total_in_lo32)
s[::verbosity].strm->avail_out == s[::numFileNames-1].strm->avail_out
s[::verbosity].strm->avail_out == orig(s[post(::numFileNames)-1].strm->avail_out)
s[::verbosity].strm->avail_out == s[::numFilesProcessed-1].strm->avail_out
s[::verbosity].strm->avail_out == orig(s[post(::numFilesProcessed)-1].strm->avail_out)
s[::verbosity].strm->avail_out == s[::opMode-1].strm->avail_out
s[::verbosity].strm->avail_out == orig(s[post(::opMode)-1].strm->avail_out)
s[::verbosity].strm->avail_out == s[orig(::numFileNames)-1].strm->avail_out
s[::verbosity].strm->avail_out == s[orig(::numFilesProcessed)-1].strm->avail_out
s[::verbosity].strm->avail_out == s[orig(::opMode)-1].strm->avail_out
s[::verbosity].strm->avail_out == orig(s[::numFileNames-1].strm->avail_out)
s[::verbosity].strm->avail_out == orig(s[::numFilesProcessed-1].strm->avail_out)
s[::verbosity].strm->avail_out == orig(s[::opMode-1].strm->avail_out)
s[::verbosity].strm->total_out_lo32 == s[::numFileNames-1].strm->total_out_lo32
s[::verbosity].strm->total_out_lo32 == orig(s[post(::numFileNames)-1].strm->total_out_lo32)
s[::verbosity].strm->total_out_lo32 == s[::numFilesProcessed-1].strm->total_out_lo32
s[::verbosity].strm->total_out_lo32 == orig(s[post(::numFilesProcessed)-1].strm->total_out_lo32)
s[::verbosity].strm->total_out_lo32 == s[::opMode-1].strm->total_out_lo32
s[::verbosity].strm->total_out_lo32 == orig(s[post(::opMode)-1].strm->total_out_lo32)
s[::verbosity].strm->total_out_lo32 == s[orig(::numFileNames)-1].strm->total_out_lo32
s[::verbosity].strm->total_out_lo32 == s[orig(::numFilesProcessed)-1].strm->total_out_lo32
s[::verbosity].strm->total_out_lo32 == s[orig(::opMode)-1].strm->total_out_lo32
s[::verbosity].strm->total_out_lo32 == orig(s[::numFileNames-1].strm->total_out_lo32)
s[::verbosity].strm->total_out_lo32 == orig(s[::numFilesProcessed-1].strm->total_out_lo32)
s[::verbosity].strm->total_out_lo32 == orig(s[::opMode-1].strm->total_out_lo32)
s[::verbosity].strm->state == s[::numFileNames-1].strm->state
s[::verbosity].strm->state == orig(s[post(::numFileNames)-1].strm->state)
s[::verbosity].strm->state == s[::numFilesProcessed-1].strm->state
s[::verbosity].strm->state == orig(s[post(::numFilesProcessed)-1].strm->state)
s[::verbosity].strm->state == s[::opMode-1].strm->state
s[::verbosity].strm->state == orig(s[post(::opMode)-1].strm->state)
s[::verbosity].strm->state == s[orig(::numFileNames)-1].strm->state
s[::verbosity].strm->state == s[orig(::numFilesProcessed)-1].strm->state
s[::verbosity].strm->state == s[orig(::opMode)-1].strm->state
s[::verbosity].strm->state == orig(s[::numFileNames-1].strm->state)
s[::verbosity].strm->state == orig(s[::numFilesProcessed-1].strm->state)
s[::verbosity].strm->state == orig(s[::opMode-1].strm->state)
s[::verbosity].strm->bzalloc == s[::numFileNames-1].strm->bzalloc
s[::verbosity].strm->bzalloc == orig(s[post(::numFileNames)-1].strm->bzalloc)
s[::verbosity].strm->bzalloc == s[::numFilesProcessed-1].strm->bzalloc
s[::verbosity].strm->bzalloc == orig(s[post(::numFilesProcessed)-1].strm->bzalloc)
s[::verbosity].strm->bzalloc == s[::opMode-1].strm->bzalloc
s[::verbosity].strm->bzalloc == orig(s[post(::opMode)-1].strm->bzalloc)
s[::verbosity].strm->bzalloc == s[orig(::numFileNames)-1].strm->bzalloc
s[::verbosity].strm->bzalloc == s[orig(::numFilesProcessed)-1].strm->bzalloc
s[::verbosity].strm->bzalloc == s[orig(::opMode)-1].strm->bzalloc
s[::verbosity].strm->bzalloc == orig(s[::numFileNames-1].strm->bzalloc)
s[::verbosity].strm->bzalloc == orig(s[::numFilesProcessed-1].strm->bzalloc)
s[::verbosity].strm->bzalloc == orig(s[::opMode-1].strm->bzalloc)
s[::verbosity].strm->bzfree == s[::numFileNames-1].strm->bzfree
s[::verbosity].strm->bzfree == orig(s[post(::numFileNames)-1].strm->bzfree)
s[::verbosity].strm->bzfree == s[::numFilesProcessed-1].strm->bzfree
s[::verbosity].strm->bzfree == orig(s[post(::numFilesProcessed)-1].strm->bzfree)
s[::verbosity].strm->bzfree == s[::opMode-1].strm->bzfree
s[::verbosity].strm->bzfree == orig(s[post(::opMode)-1].strm->bzfree)
s[::verbosity].strm->bzfree == s[orig(::numFileNames)-1].strm->bzfree
s[::verbosity].strm->bzfree == s[orig(::numFilesProcessed)-1].strm->bzfree
s[::verbosity].strm->bzfree == s[orig(::opMode)-1].strm->bzfree
s[::verbosity].strm->bzfree == orig(s[::numFileNames-1].strm->bzfree)
s[::verbosity].strm->bzfree == orig(s[::numFilesProcessed-1].strm->bzfree)
s[::verbosity].strm->bzfree == orig(s[::opMode-1].strm->bzfree)
s[::verbosity].strm->opaque == s[::numFileNames-1].strm->opaque
s[::verbosity].strm->opaque == orig(s[post(::numFileNames)-1].strm->opaque)
s[::verbosity].strm->opaque == s[::numFilesProcessed-1].strm->opaque
s[::verbosity].strm->opaque == orig(s[post(::numFilesProcessed)-1].strm->opaque)
s[::verbosity].strm->opaque == s[::opMode-1].strm->opaque
s[::verbosity].strm->opaque == orig(s[post(::opMode)-1].strm->opaque)
s[::verbosity].strm->opaque == s[orig(::numFileNames)-1].strm->opaque
s[::verbosity].strm->opaque == s[orig(::numFilesProcessed)-1].strm->opaque
s[::verbosity].strm->opaque == s[orig(::opMode)-1].strm->opaque
s[::verbosity].strm->opaque == orig(s[::numFileNames-1].strm->opaque)
s[::verbosity].strm->opaque == orig(s[::numFilesProcessed-1].strm->opaque)
s[::verbosity].strm->opaque == orig(s[::opMode-1].strm->opaque)
s[::verbosity].mode == s[::numFileNames-1].mode
s[::verbosity].mode == orig(s[post(::numFileNames)-1].mode)
s[::verbosity].mode == s[::numFilesProcessed-1].mode
s[::verbosity].mode == orig(s[post(::numFilesProcessed)-1].mode)
s[::verbosity].mode == s[::opMode-1].mode
s[::verbosity].mode == orig(s[post(::opMode)-1].mode)
s[::verbosity].mode == s[orig(::numFileNames)-1].mode
s[::verbosity].mode == s[orig(::numFilesProcessed)-1].mode
s[::verbosity].mode == s[orig(::opMode)-1].mode
s[::verbosity].mode == orig(s[::numFileNames-1].mode)
s[::verbosity].mode == orig(s[::numFilesProcessed-1].mode)
s[::verbosity].mode == orig(s[::opMode-1].mode)
s[::verbosity].avail_in_expect == s[::numFileNames-1].avail_in_expect
s[::verbosity].avail_in_expect == orig(s[post(::numFileNames)-1].avail_in_expect)
s[::verbosity].avail_in_expect == s[::numFilesProcessed-1].avail_in_expect
s[::verbosity].avail_in_expect == orig(s[post(::numFilesProcessed)-1].avail_in_expect)
s[::verbosity].avail_in_expect == s[::opMode-1].avail_in_expect
s[::verbosity].avail_in_expect == orig(s[post(::opMode)-1].avail_in_expect)
s[::verbosity].avail_in_expect == s[orig(::numFileNames)-1].avail_in_expect
s[::verbosity].avail_in_expect == s[orig(::numFilesProcessed)-1].avail_in_expect
s[::verbosity].avail_in_expect == s[orig(::opMode)-1].avail_in_expect
s[::verbosity].avail_in_expect == orig(s[::numFileNames-1].avail_in_expect)
s[::verbosity].avail_in_expect == orig(s[::numFilesProcessed-1].avail_in_expect)
s[::verbosity].avail_in_expect == orig(s[::opMode-1].avail_in_expect)
s[::verbosity].arr1 == s[::numFileNames-1].arr1
s[::verbosity].arr1 == s[::numFileNames-1].ptr
s[::verbosity].arr1 == orig(s[post(::numFileNames)-1].arr1)
s[::verbosity].arr1 == orig(s[post(::numFileNames)-1].ptr)
s[::verbosity].arr1 == s[::numFilesProcessed-1].arr1
s[::verbosity].arr1 == s[::numFilesProcessed-1].ptr
s[::verbosity].arr1 == orig(s[post(::numFilesProcessed)-1].arr1)
s[::verbosity].arr1 == orig(s[post(::numFilesProcessed)-1].ptr)
s[::verbosity].arr1 == s[::opMode-1].arr1
s[::verbosity].arr1 == s[::opMode-1].ptr
s[::verbosity].arr1 == orig(s[post(::opMode)-1].arr1)
s[::verbosity].arr1 == orig(s[post(::opMode)-1].ptr)
s[::verbosity].arr1 == s[orig(::numFileNames)-1].arr1
s[::verbosity].arr1 == s[orig(::numFilesProcessed)-1].arr1
s[::verbosity].arr1 == s[orig(::opMode)-1].arr1
s[::verbosity].arr1 == s[orig(::numFileNames)-1].ptr
s[::verbosity].arr1 == s[orig(::numFilesProcessed)-1].ptr
s[::verbosity].arr1 == s[orig(::opMode)-1].ptr
s[::verbosity].arr1 == orig(s[::numFileNames-1].arr1)
s[::verbosity].arr1 == orig(s[::numFileNames-1].ptr)
s[::verbosity].arr1 == orig(s[::numFilesProcessed-1].arr1)
s[::verbosity].arr1 == orig(s[::numFilesProcessed-1].ptr)
s[::verbosity].arr1 == orig(s[::opMode-1].arr1)
s[::verbosity].arr1 == orig(s[::opMode-1].ptr)
s[::verbosity].arr1[0] == s[::numFileNames-1].arr1[0]
s[::verbosity].arr1[0] == s[::numFileNames-1].ptr[0]
s[::verbosity].arr1[0] == s[::numFilesProcessed-1].arr1[0]
s[::verbosity].arr1[0] == s[::numFilesProcessed-1].ptr[0]
s[::verbosity].arr1[0] == s[::opMode-1].arr1[0]
s[::verbosity].arr1[0] == s[::opMode-1].ptr[0]
s[::verbosity].arr1[0] == s[orig(::numFileNames)-1].arr1[0]
s[::verbosity].arr1[0] == s[orig(::numFilesProcessed)-1].arr1[0]
s[::verbosity].arr1[0] == s[orig(::opMode)-1].arr1[0]
s[::verbosity].arr1[0] == s[orig(::numFileNames)-1].ptr[0]
s[::verbosity].arr1[0] == s[orig(::numFilesProcessed)-1].ptr[0]
s[::verbosity].arr1[0] == s[orig(::opMode)-1].ptr[0]
s[::verbosity].arr2 == s[::numFileNames-1].arr2
s[::verbosity].arr2 == orig(s[post(::numFileNames)-1].arr2)
s[::verbosity].arr2 == s[::numFilesProcessed-1].arr2
s[::verbosity].arr2 == orig(s[post(::numFilesProcessed)-1].arr2)
s[::verbosity].arr2 == s[::opMode-1].arr2
s[::verbosity].arr2 == orig(s[post(::opMode)-1].arr2)
s[::verbosity].arr2 == s[orig(::numFileNames)-1].arr2
s[::verbosity].arr2 == s[orig(::numFilesProcessed)-1].arr2
s[::verbosity].arr2 == s[orig(::opMode)-1].arr2
s[::verbosity].arr2 == orig(s[::numFileNames-1].arr2)
s[::verbosity].arr2 == orig(s[::numFilesProcessed-1].arr2)
s[::verbosity].arr2 == orig(s[::opMode-1].arr2)
s[::verbosity].arr2[0] == s[::numFileNames-1].arr2[0]
s[::verbosity].arr2[0] == orig(s[post(::numFileNames)-1].arr2[0])
s[::verbosity].arr2[0] == s[::numFilesProcessed-1].arr2[0]
s[::verbosity].arr2[0] == orig(s[post(::numFilesProcessed)-1].arr2[0])
s[::verbosity].arr2[0] == s[::opMode-1].arr2[0]
s[::verbosity].arr2[0] == orig(s[post(::opMode)-1].arr2[0])
s[::verbosity].arr2[0] == s[orig(::numFileNames)-1].arr2[0]
s[::verbosity].arr2[0] == s[orig(::numFilesProcessed)-1].arr2[0]
s[::verbosity].arr2[0] == s[orig(::opMode)-1].arr2[0]
s[::verbosity].arr2[0] == orig(s[::numFileNames-1].arr2[0])
s[::verbosity].arr2[0] == orig(s[::numFilesProcessed-1].arr2[0])
s[::verbosity].arr2[0] == orig(s[::opMode-1].arr2[0])
s[::verbosity].ftab == s[::numFileNames-1].ftab
s[::verbosity].ftab == orig(s[post(::numFileNames)-1].ftab)
s[::verbosity].ftab == s[::numFilesProcessed-1].ftab
s[::verbosity].ftab == orig(s[post(::numFilesProcessed)-1].ftab)
s[::verbosity].ftab == s[::opMode-1].ftab
s[::verbosity].ftab == orig(s[post(::opMode)-1].ftab)
s[::verbosity].ftab == s[orig(::numFileNames)-1].ftab
s[::verbosity].ftab == s[orig(::numFilesProcessed)-1].ftab
s[::verbosity].ftab == s[orig(::opMode)-1].ftab
s[::verbosity].ftab == orig(s[::numFileNames-1].ftab)
s[::verbosity].ftab == orig(s[::numFilesProcessed-1].ftab)
s[::verbosity].ftab == orig(s[::opMode-1].ftab)
s[::verbosity].ftab[0] == s[::numFileNames-1].ftab[0]
s[::verbosity].ftab[0] == s[::numFilesProcessed-1].ftab[0]
s[::verbosity].ftab[0] == s[::opMode-1].ftab[0]
s[::verbosity].ftab[0] == s[orig(::numFileNames)-1].ftab[0]
s[::verbosity].ftab[0] == s[orig(::numFilesProcessed)-1].ftab[0]
s[::verbosity].ftab[0] == s[orig(::opMode)-1].ftab[0]
s[::verbosity].origPtr == s[::numFileNames-1].origPtr
s[::verbosity].origPtr == s[::numFilesProcessed-1].origPtr
s[::verbosity].origPtr == s[::opMode-1].origPtr
s[::verbosity].origPtr == s[orig(::numFileNames)-1].origPtr
s[::verbosity].origPtr == s[orig(::numFilesProcessed)-1].origPtr
s[::verbosity].origPtr == s[orig(::opMode)-1].origPtr
s[::verbosity].block == s[::numFileNames-1].block
s[::verbosity].block == orig(s[post(::numFileNames)-1].block)
s[::verbosity].block == s[::numFilesProcessed-1].block
s[::verbosity].block == orig(s[post(::numFilesProcessed)-1].block)
s[::verbosity].block == s[::opMode-1].block
s[::verbosity].block == orig(s[post(::opMode)-1].block)
s[::verbosity].block == s[orig(::numFileNames)-1].block
s[::verbosity].block == s[orig(::numFilesProcessed)-1].block
s[::verbosity].block == s[orig(::opMode)-1].block
s[::verbosity].block == orig(s[::numFileNames-1].block)
s[::verbosity].block == orig(s[::numFilesProcessed-1].block)
s[::verbosity].block == orig(s[::opMode-1].block)
s[::verbosity].block[0] == s[::numFileNames-1].block[0]
s[::verbosity].block[0] == orig(s[post(::numFileNames)-1].block[0])
s[::verbosity].block[0] == s[::numFilesProcessed-1].block[0]
s[::verbosity].block[0] == orig(s[post(::numFilesProcessed)-1].block[0])
s[::verbosity].block[0] == s[::opMode-1].block[0]
s[::verbosity].block[0] == orig(s[post(::opMode)-1].block[0])
s[::verbosity].block[0] == s[orig(::numFileNames)-1].block[0]
s[::verbosity].block[0] == s[orig(::numFilesProcessed)-1].block[0]
s[::verbosity].block[0] == s[orig(::opMode)-1].block[0]
s[::verbosity].block[0] == orig(s[::numFileNames-1].block[0])
s[::verbosity].block[0] == orig(s[::numFilesProcessed-1].block[0])
s[::verbosity].block[0] == orig(s[::opMode-1].block[0])
s[::verbosity].mtfv == s[::numFileNames-1].mtfv
s[::verbosity].mtfv == orig(s[post(::numFileNames)-1].mtfv)
s[::verbosity].mtfv == s[::numFilesProcessed-1].mtfv
s[::verbosity].mtfv == orig(s[post(::numFilesProcessed)-1].mtfv)
s[::verbosity].mtfv == s[::opMode-1].mtfv
s[::verbosity].mtfv == orig(s[post(::opMode)-1].mtfv)
s[::verbosity].mtfv == s[orig(::numFileNames)-1].mtfv
s[::verbosity].mtfv == s[orig(::numFilesProcessed)-1].mtfv
s[::verbosity].mtfv == s[orig(::opMode)-1].mtfv
s[::verbosity].mtfv == orig(s[::numFileNames-1].mtfv)
s[::verbosity].mtfv == orig(s[::numFilesProcessed-1].mtfv)
s[::verbosity].mtfv == orig(s[::opMode-1].mtfv)
s[::verbosity].mtfv[0] == s[::numFileNames-1].mtfv[0]
s[::verbosity].mtfv[0] == s[::numFilesProcessed-1].mtfv[0]
s[::verbosity].mtfv[0] == s[::opMode-1].mtfv[0]
s[::verbosity].mtfv[0] == s[orig(::numFileNames)-1].mtfv[0]
s[::verbosity].mtfv[0] == s[orig(::numFilesProcessed)-1].mtfv[0]
s[::verbosity].mtfv[0] == s[orig(::opMode)-1].mtfv[0]
s[::verbosity].zbits == s[::numFileNames-1].zbits
s[::verbosity].zbits == orig(s[post(::numFileNames)-1].zbits)
s[::verbosity].zbits == s[::numFilesProcessed-1].zbits
s[::verbosity].zbits == orig(s[post(::numFilesProcessed)-1].zbits)
s[::verbosity].zbits == s[::opMode-1].zbits
s[::verbosity].zbits == orig(s[post(::opMode)-1].zbits)
s[::verbosity].zbits == s[orig(::numFileNames)-1].zbits
s[::verbosity].zbits == s[orig(::numFilesProcessed)-1].zbits
s[::verbosity].zbits == s[orig(::opMode)-1].zbits
s[::verbosity].zbits == orig(s[::numFileNames-1].zbits)
s[::verbosity].zbits == orig(s[::numFilesProcessed-1].zbits)
s[::verbosity].zbits == orig(s[::opMode-1].zbits)
s[::verbosity].zbits[0] == s[::numFileNames-1].zbits[0]
s[::verbosity].zbits[0] == s[::numFilesProcessed-1].zbits[0]
s[::verbosity].zbits[0] == s[::opMode-1].zbits[0]
s[::verbosity].zbits[0] == s[orig(::numFileNames)-1].zbits[0]
s[::verbosity].zbits[0] == s[orig(::numFilesProcessed)-1].zbits[0]
s[::verbosity].zbits[0] == s[orig(::opMode)-1].zbits[0]
s[::verbosity].state_in_ch == s[::numFileNames-1].state_in_ch
s[::verbosity].state_in_ch == orig(s[post(::numFileNames)-1].state_in_ch)
s[::verbosity].state_in_ch == s[::numFilesProcessed-1].state_in_ch
s[::verbosity].state_in_ch == orig(s[post(::numFilesProcessed)-1].state_in_ch)
s[::verbosity].state_in_ch == s[::opMode-1].state_in_ch
s[::verbosity].state_in_ch == orig(s[post(::opMode)-1].state_in_ch)
s[::verbosity].state_in_ch == s[orig(::numFileNames)-1].state_in_ch
s[::verbosity].state_in_ch == s[orig(::numFilesProcessed)-1].state_in_ch
s[::verbosity].state_in_ch == s[orig(::opMode)-1].state_in_ch
s[::verbosity].state_in_ch == orig(s[::numFileNames-1].state_in_ch)
s[::verbosity].state_in_ch == orig(s[::numFilesProcessed-1].state_in_ch)
s[::verbosity].state_in_ch == orig(s[::opMode-1].state_in_ch)
s[::verbosity].state_in_len == s[::numFileNames-1].state_in_len
s[::verbosity].state_in_len == orig(s[post(::numFileNames)-1].state_in_len)
s[::verbosity].state_in_len == s[::numFilesProcessed-1].state_in_len
s[::verbosity].state_in_len == orig(s[post(::numFilesProcessed)-1].state_in_len)
s[::verbosity].state_in_len == s[::opMode-1].state_in_len
s[::verbosity].state_in_len == orig(s[post(::opMode)-1].state_in_len)
s[::verbosity].state_in_len == s[orig(::numFileNames)-1].state_in_len
s[::verbosity].state_in_len == s[orig(::numFilesProcessed)-1].state_in_len
s[::verbosity].state_in_len == s[orig(::opMode)-1].state_in_len
s[::verbosity].state_in_len == orig(s[::numFileNames-1].state_in_len)
s[::verbosity].state_in_len == orig(s[::numFilesProcessed-1].state_in_len)
s[::verbosity].state_in_len == orig(s[::opMode-1].state_in_len)
s[::verbosity].nblock == s[::numFileNames-1].nblock
s[::verbosity].nblock == orig(s[post(::numFileNames)-1].nblock)
s[::verbosity].nblock == s[::numFilesProcessed-1].nblock
s[::verbosity].nblock == orig(s[post(::numFilesProcessed)-1].nblock)
s[::verbosity].nblock == s[::opMode-1].nblock
s[::verbosity].nblock == orig(s[post(::opMode)-1].nblock)
s[::verbosity].nblock == s[orig(::numFileNames)-1].nblock
s[::verbosity].nblock == s[orig(::numFilesProcessed)-1].nblock
s[::verbosity].nblock == s[orig(::opMode)-1].nblock
s[::verbosity].nblock == orig(s[::numFileNames-1].nblock)
s[::verbosity].nblock == orig(s[::numFilesProcessed-1].nblock)
s[::verbosity].nblock == orig(s[::opMode-1].nblock)
s[::verbosity].nblockMAX == s[::numFileNames-1].nblockMAX
s[::verbosity].nblockMAX == orig(s[post(::numFileNames)-1].nblockMAX)
s[::verbosity].nblockMAX == s[::numFilesProcessed-1].nblockMAX
s[::verbosity].nblockMAX == orig(s[post(::numFilesProcessed)-1].nblockMAX)
s[::verbosity].nblockMAX == s[::opMode-1].nblockMAX
s[::verbosity].nblockMAX == orig(s[post(::opMode)-1].nblockMAX)
s[::verbosity].nblockMAX == s[orig(::numFileNames)-1].nblockMAX
s[::verbosity].nblockMAX == s[orig(::numFilesProcessed)-1].nblockMAX
s[::verbosity].nblockMAX == s[orig(::opMode)-1].nblockMAX
s[::verbosity].nblockMAX == orig(s[::numFileNames-1].nblockMAX)
s[::verbosity].nblockMAX == orig(s[::numFilesProcessed-1].nblockMAX)
s[::verbosity].nblockMAX == orig(s[::opMode-1].nblockMAX)
s[::verbosity].nInUse == s[::numFileNames-1].nInUse
s[::verbosity].nInUse == orig(s[post(::numFileNames)-1].nInUse)
s[::verbosity].nInUse == s[::numFilesProcessed-1].nInUse
s[::verbosity].nInUse == orig(s[post(::numFilesProcessed)-1].nInUse)
s[::verbosity].nInUse == s[::opMode-1].nInUse
s[::verbosity].nInUse == orig(s[post(::opMode)-1].nInUse)
s[::verbosity].nInUse == s[orig(::numFileNames)-1].nInUse
s[::verbosity].nInUse == s[orig(::numFilesProcessed)-1].nInUse
s[::verbosity].nInUse == s[orig(::opMode)-1].nInUse
s[::verbosity].nInUse == orig(s[::numFileNames-1].nInUse)
s[::verbosity].nInUse == orig(s[::numFilesProcessed-1].nInUse)
s[::verbosity].nInUse == orig(s[::opMode-1].nInUse)
s[::verbosity].inUse == s[::numFileNames-1].inUse
s[::verbosity].inUse == orig(s[post(::numFileNames)-1].inUse)
s[::verbosity].inUse == s[::numFilesProcessed-1].inUse
s[::verbosity].inUse == orig(s[post(::numFilesProcessed)-1].inUse)
s[::verbosity].inUse == s[::opMode-1].inUse
s[::verbosity].inUse == orig(s[post(::opMode)-1].inUse)
s[::verbosity].inUse == s[orig(::numFileNames)-1].inUse
s[::verbosity].inUse == s[orig(::numFilesProcessed)-1].inUse
s[::verbosity].inUse == s[orig(::opMode)-1].inUse
s[::verbosity].inUse == orig(s[::numFileNames-1].inUse)
s[::verbosity].inUse == orig(s[::numFilesProcessed-1].inUse)
s[::verbosity].inUse == orig(s[::opMode-1].inUse)
s[::verbosity].unseqToSeq[0] == s[::numFileNames-1].unseqToSeq[0]
s[::verbosity].unseqToSeq[0] == orig(s[post(::numFileNames)-1].unseqToSeq[0])
s[::verbosity].unseqToSeq[0] == s[::numFilesProcessed-1].unseqToSeq[0]
s[::verbosity].unseqToSeq[0] == orig(s[post(::numFilesProcessed)-1].unseqToSeq[0])
s[::verbosity].unseqToSeq[0] == s[::opMode-1].unseqToSeq[0]
s[::verbosity].unseqToSeq[0] == orig(s[post(::opMode)-1].unseqToSeq[0])
s[::verbosity].unseqToSeq[0] == s[orig(::numFileNames)-1].unseqToSeq[0]
s[::verbosity].unseqToSeq[0] == s[orig(::numFilesProcessed)-1].unseqToSeq[0]
s[::verbosity].unseqToSeq[0] == s[orig(::opMode)-1].unseqToSeq[0]
s[::verbosity].unseqToSeq[0] == orig(s[::numFileNames-1].unseqToSeq[0])
s[::verbosity].unseqToSeq[0] == orig(s[::numFilesProcessed-1].unseqToSeq[0])
s[::verbosity].unseqToSeq[0] == orig(s[::opMode-1].unseqToSeq[0])
s[::verbosity].bsBuff == s[::numFileNames-1].bsBuff
s[::verbosity].bsBuff == orig(s[post(::numFileNames)-1].bsBuff)
s[::verbosity].bsBuff == s[::numFilesProcessed-1].bsBuff
s[::verbosity].bsBuff == orig(s[post(::numFilesProcessed)-1].bsBuff)
s[::verbosity].bsBuff == s[::opMode-1].bsBuff
s[::verbosity].bsBuff == orig(s[post(::opMode)-1].bsBuff)
s[::verbosity].bsBuff == s[orig(::numFileNames)-1].bsBuff
s[::verbosity].bsBuff == s[orig(::numFilesProcessed)-1].bsBuff
s[::verbosity].bsBuff == s[orig(::opMode)-1].bsBuff
s[::verbosity].bsBuff == orig(s[::numFileNames-1].bsBuff)
s[::verbosity].bsBuff == orig(s[::numFilesProcessed-1].bsBuff)
s[::verbosity].bsBuff == orig(s[::opMode-1].bsBuff)
s[::verbosity].bsLive == s[::numFileNames-1].bsLive
s[::verbosity].bsLive == orig(s[post(::numFileNames)-1].bsLive)
s[::verbosity].bsLive == s[::numFilesProcessed-1].bsLive
s[::verbosity].bsLive == orig(s[post(::numFilesProcessed)-1].bsLive)
s[::verbosity].bsLive == s[::opMode-1].bsLive
s[::verbosity].bsLive == orig(s[post(::opMode)-1].bsLive)
s[::verbosity].bsLive == s[orig(::numFileNames)-1].bsLive
s[::verbosity].bsLive == s[orig(::numFilesProcessed)-1].bsLive
s[::verbosity].bsLive == s[orig(::opMode)-1].bsLive
s[::verbosity].bsLive == orig(s[::numFileNames-1].bsLive)
s[::verbosity].bsLive == orig(s[::numFilesProcessed-1].bsLive)
s[::verbosity].bsLive == orig(s[::opMode-1].bsLive)
s[::verbosity].blockCRC == s[::numFileNames-1].blockCRC
s[::verbosity].blockCRC == orig(s[post(::numFileNames)-1].blockCRC)
s[::verbosity].blockCRC == s[::numFilesProcessed-1].blockCRC
s[::verbosity].blockCRC == orig(s[post(::numFilesProcessed)-1].blockCRC)
s[::verbosity].blockCRC == s[::opMode-1].blockCRC
s[::verbosity].blockCRC == orig(s[post(::opMode)-1].blockCRC)
s[::verbosity].blockCRC == s[orig(::numFileNames)-1].blockCRC
s[::verbosity].blockCRC == s[orig(::numFilesProcessed)-1].blockCRC
s[::verbosity].blockCRC == s[orig(::opMode)-1].blockCRC
s[::verbosity].blockCRC == orig(s[::numFileNames-1].blockCRC)
s[::verbosity].blockCRC == orig(s[::numFilesProcessed-1].blockCRC)
s[::verbosity].blockCRC == orig(s[::opMode-1].blockCRC)
s[::verbosity].combinedCRC == s[::numFileNames-1].combinedCRC
s[::verbosity].combinedCRC == orig(s[post(::numFileNames)-1].combinedCRC)
s[::verbosity].combinedCRC == s[::numFilesProcessed-1].combinedCRC
s[::verbosity].combinedCRC == orig(s[post(::numFilesProcessed)-1].combinedCRC)
s[::verbosity].combinedCRC == s[::opMode-1].combinedCRC
s[::verbosity].combinedCRC == orig(s[post(::opMode)-1].combinedCRC)
s[::verbosity].combinedCRC == s[orig(::numFileNames)-1].combinedCRC
s[::verbosity].combinedCRC == s[orig(::numFilesProcessed)-1].combinedCRC
s[::verbosity].combinedCRC == s[orig(::opMode)-1].combinedCRC
s[::verbosity].combinedCRC == orig(s[::numFileNames-1].combinedCRC)
s[::verbosity].combinedCRC == orig(s[::numFilesProcessed-1].combinedCRC)
s[::verbosity].combinedCRC == orig(s[::opMode-1].combinedCRC)
s[::verbosity].blockNo == s[::numFileNames-1].blockNo
s[::verbosity].blockNo == orig(s[post(::numFileNames)-1].blockNo)
s[::verbosity].blockNo == s[::numFilesProcessed-1].blockNo
s[::verbosity].blockNo == orig(s[post(::numFilesProcessed)-1].blockNo)
s[::verbosity].blockNo == s[::opMode-1].blockNo
s[::verbosity].blockNo == orig(s[post(::opMode)-1].blockNo)
s[::verbosity].blockNo == s[orig(::numFileNames)-1].blockNo
s[::verbosity].blockNo == s[orig(::numFilesProcessed)-1].blockNo
s[::verbosity].blockNo == s[orig(::opMode)-1].blockNo
s[::verbosity].blockNo == orig(s[::numFileNames-1].blockNo)
s[::verbosity].blockNo == orig(s[::numFilesProcessed-1].blockNo)
s[::verbosity].blockNo == orig(s[::opMode-1].blockNo)
s[::verbosity].nMTF == s[::numFileNames-1].nMTF
s[::verbosity].nMTF == orig(s[post(::numFileNames)-1].nMTF)
s[::verbosity].nMTF == s[::numFilesProcessed-1].nMTF
s[::verbosity].nMTF == orig(s[post(::numFilesProcessed)-1].nMTF)
s[::verbosity].nMTF == s[::opMode-1].nMTF
s[::verbosity].nMTF == orig(s[post(::opMode)-1].nMTF)
s[::verbosity].nMTF == s[orig(::numFileNames)-1].nMTF
s[::verbosity].nMTF == s[orig(::numFilesProcessed)-1].nMTF
s[::verbosity].nMTF == s[orig(::opMode)-1].nMTF
s[::verbosity].nMTF == orig(s[::numFileNames-1].nMTF)
s[::verbosity].nMTF == orig(s[::numFilesProcessed-1].nMTF)
s[::verbosity].nMTF == orig(s[::opMode-1].nMTF)
s[::verbosity].mtfFreq == s[::numFileNames-1].mtfFreq
s[::verbosity].mtfFreq == orig(s[post(::numFileNames)-1].mtfFreq)
s[::verbosity].mtfFreq == s[::numFilesProcessed-1].mtfFreq
s[::verbosity].mtfFreq == orig(s[post(::numFilesProcessed)-1].mtfFreq)
s[::verbosity].mtfFreq == s[::opMode-1].mtfFreq
s[::verbosity].mtfFreq == orig(s[post(::opMode)-1].mtfFreq)
s[::verbosity].mtfFreq == s[orig(::numFileNames)-1].mtfFreq
s[::verbosity].mtfFreq == s[orig(::numFilesProcessed)-1].mtfFreq
s[::verbosity].mtfFreq == s[orig(::opMode)-1].mtfFreq
s[::verbosity].mtfFreq == orig(s[::numFileNames-1].mtfFreq)
s[::verbosity].mtfFreq == orig(s[::numFilesProcessed-1].mtfFreq)
s[::verbosity].mtfFreq == orig(s[::opMode-1].mtfFreq)
s[::verbosity].mtfFreq[0] == s[::numFileNames-1].mtfFreq[0]
s[::verbosity].mtfFreq[0] == orig(s[post(::numFileNames)-1].mtfFreq[0])
s[::verbosity].mtfFreq[0] == s[::numFilesProcessed-1].mtfFreq[0]
s[::verbosity].mtfFreq[0] == orig(s[post(::numFilesProcessed)-1].mtfFreq[0])
s[::verbosity].mtfFreq[0] == s[::opMode-1].mtfFreq[0]
s[::verbosity].mtfFreq[0] == orig(s[post(::opMode)-1].mtfFreq[0])
s[::verbosity].mtfFreq[0] == s[orig(::numFileNames)-1].mtfFreq[0]
s[::verbosity].mtfFreq[0] == s[orig(::numFilesProcessed)-1].mtfFreq[0]
s[::verbosity].mtfFreq[0] == s[orig(::opMode)-1].mtfFreq[0]
s[::verbosity].mtfFreq[0] == orig(s[::numFileNames-1].mtfFreq[0])
s[::verbosity].mtfFreq[0] == orig(s[::numFilesProcessed-1].mtfFreq[0])
s[::verbosity].mtfFreq[0] == orig(s[::opMode-1].mtfFreq[0])
s[::verbosity].selector == s[::numFileNames-1].selector
s[::verbosity].selector == orig(s[post(::numFileNames)-1].selector)
s[::verbosity].selector == s[::numFilesProcessed-1].selector
s[::verbosity].selector == orig(s[post(::numFilesProcessed)-1].selector)
s[::verbosity].selector == s[::opMode-1].selector
s[::verbosity].selector == orig(s[post(::opMode)-1].selector)
s[::verbosity].selector == s[orig(::numFileNames)-1].selector
s[::verbosity].selector == s[orig(::numFilesProcessed)-1].selector
s[::verbosity].selector == s[orig(::opMode)-1].selector
s[::verbosity].selector == orig(s[::numFileNames-1].selector)
s[::verbosity].selector == orig(s[::numFilesProcessed-1].selector)
s[::verbosity].selector == orig(s[::opMode-1].selector)
s[::verbosity].selector[0] == s[::numFileNames-1].selector[0]
s[::verbosity].selector[0] == s[::numFileNames-1].selectorMtf[0]
s[::verbosity].selector[0] == orig(s[post(::numFileNames)-1].selector[0])
s[::verbosity].selector[0] == orig(s[post(::numFileNames)-1].selectorMtf[0])
s[::verbosity].selector[0] == s[::numFilesProcessed-1].selector[0]
s[::verbosity].selector[0] == s[::numFilesProcessed-1].selectorMtf[0]
s[::verbosity].selector[0] == orig(s[post(::numFilesProcessed)-1].selector[0])
s[::verbosity].selector[0] == orig(s[post(::numFilesProcessed)-1].selectorMtf[0])
s[::verbosity].selector[0] == s[::opMode-1].selector[0]
s[::verbosity].selector[0] == s[::opMode-1].selectorMtf[0]
s[::verbosity].selector[0] == orig(s[post(::opMode)-1].selector[0])
s[::verbosity].selector[0] == orig(s[post(::opMode)-1].selectorMtf[0])
s[::verbosity].selector[0] == s[orig(::numFileNames)-1].selector[0]
s[::verbosity].selector[0] == s[orig(::numFilesProcessed)-1].selector[0]
s[::verbosity].selector[0] == s[orig(::opMode)-1].selector[0]
s[::verbosity].selector[0] == s[orig(::numFileNames)-1].selectorMtf[0]
s[::verbosity].selector[0] == s[orig(::numFilesProcessed)-1].selectorMtf[0]
s[::verbosity].selector[0] == s[orig(::opMode)-1].selectorMtf[0]
s[::verbosity].selector[0] == orig(s[::numFileNames-1].selector[0])
s[::verbosity].selector[0] == orig(s[::numFileNames-1].selectorMtf[0])
s[::verbosity].selector[0] == orig(s[::numFilesProcessed-1].selector[0])
s[::verbosity].selector[0] == orig(s[::numFilesProcessed-1].selectorMtf[0])
s[::verbosity].selector[0] == orig(s[::opMode-1].selector[0])
s[::verbosity].selector[0] == orig(s[::opMode-1].selectorMtf[0])
s[::verbosity].selectorMtf == s[::numFileNames-1].selectorMtf
s[::verbosity].selectorMtf == orig(s[post(::numFileNames)-1].selectorMtf)
s[::verbosity].selectorMtf == s[::numFilesProcessed-1].selectorMtf
s[::verbosity].selectorMtf == orig(s[post(::numFilesProcessed)-1].selectorMtf)
s[::verbosity].selectorMtf == s[::opMode-1].selectorMtf
s[::verbosity].selectorMtf == orig(s[post(::opMode)-1].selectorMtf)
s[::verbosity].selectorMtf == s[orig(::numFileNames)-1].selectorMtf
s[::verbosity].selectorMtf == s[orig(::numFilesProcessed)-1].selectorMtf
s[::verbosity].selectorMtf == s[orig(::opMode)-1].selectorMtf
s[::verbosity].selectorMtf == orig(s[::numFileNames-1].selectorMtf)
s[::verbosity].selectorMtf == orig(s[::numFilesProcessed-1].selectorMtf)
s[::verbosity].selectorMtf == orig(s[::opMode-1].selectorMtf)
s[::verbosity].len[0] == s[::numFileNames-1].len[0]
s[::verbosity].len[0] == orig(s[post(::numFileNames)-1].len[0])
s[::verbosity].len[0] == s[::numFilesProcessed-1].len[0]
s[::verbosity].len[0] == orig(s[post(::numFilesProcessed)-1].len[0])
s[::verbosity].len[0] == s[::opMode-1].len[0]
s[::verbosity].len[0] == orig(s[post(::opMode)-1].len[0])
s[::verbosity].len[0] == s[orig(::numFileNames)-1].len[0]
s[::verbosity].len[0] == s[orig(::numFilesProcessed)-1].len[0]
s[::verbosity].len[0] == s[orig(::opMode)-1].len[0]
s[::verbosity].len[0] == orig(s[::numFileNames-1].len[0])
s[::verbosity].len[0] == orig(s[::numFilesProcessed-1].len[0])
s[::verbosity].len[0] == orig(s[::opMode-1].len[0])
s[::verbosity].len[0][0] == s[::numFileNames-1].len[0][0]
s[::verbosity].len[0][0] == s[::numFileNames-1].len[1][0]
s[::verbosity].len[0][0] == s[::numFileNames-1].len[2][0]
s[::verbosity].len[0][0] == s[::numFileNames-1].len[3][0]
s[::verbosity].len[0][0] == s[::numFileNames-1].len[4][0]
s[::verbosity].len[0][0] == orig(s[post(::numFileNames)-1].len[0][0])
s[::verbosity].len[0][0] == orig(s[post(::numFileNames)-1].len[1][0])
s[::verbosity].len[0][0] == orig(s[post(::numFileNames)-1].len[2][0])
s[::verbosity].len[0][0] == orig(s[post(::numFileNames)-1].len[3][0])
s[::verbosity].len[0][0] == orig(s[post(::numFileNames)-1].len[4][0])
s[::verbosity].len[0][0] == s[::numFilesProcessed-1].len[0][0]
s[::verbosity].len[0][0] == s[::numFilesProcessed-1].len[1][0]
s[::verbosity].len[0][0] == s[::numFilesProcessed-1].len[2][0]
s[::verbosity].len[0][0] == s[::numFilesProcessed-1].len[3][0]
s[::verbosity].len[0][0] == s[::numFilesProcessed-1].len[4][0]
s[::verbosity].len[0][0] == orig(s[post(::numFilesProcessed)-1].len[0][0])
s[::verbosity].len[0][0] == orig(s[post(::numFilesProcessed)-1].len[1][0])
s[::verbosity].len[0][0] == orig(s[post(::numFilesProcessed)-1].len[2][0])
s[::verbosity].len[0][0] == orig(s[post(::numFilesProcessed)-1].len[3][0])
s[::verbosity].len[0][0] == orig(s[post(::numFilesProcessed)-1].len[4][0])
s[::verbosity].len[0][0] == s[::opMode-1].len[0][0]
s[::verbosity].len[0][0] == s[::opMode-1].len[1][0]
s[::verbosity].len[0][0] == s[::opMode-1].len[2][0]
s[::verbosity].len[0][0] == s[::opMode-1].len[3][0]
s[::verbosity].len[0][0] == s[::opMode-1].len[4][0]
s[::verbosity].len[0][0] == orig(s[post(::opMode)-1].len[0][0])
s[::verbosity].len[0][0] == orig(s[post(::opMode)-1].len[1][0])
s[::verbosity].len[0][0] == orig(s[post(::opMode)-1].len[2][0])
s[::verbosity].len[0][0] == orig(s[post(::opMode)-1].len[3][0])
s[::verbosity].len[0][0] == orig(s[post(::opMode)-1].len[4][0])
s[::verbosity].len[0][0] == s[orig(::numFileNames)-1].len[0][0]
s[::verbosity].len[0][0] == s[orig(::numFilesProcessed)-1].len[0][0]
s[::verbosity].len[0][0] == s[orig(::opMode)-1].len[0][0]
s[::verbosity].len[0][0] == s[orig(::numFileNames)-1].len[1][0]
s[::verbosity].len[0][0] == s[orig(::numFilesProcessed)-1].len[1][0]
s[::verbosity].len[0][0] == s[orig(::opMode)-1].len[1][0]
s[::verbosity].len[0][0] == s[orig(::numFileNames)-1].len[2][0]
s[::verbosity].len[0][0] == s[orig(::numFilesProcessed)-1].len[2][0]
s[::verbosity].len[0][0] == s[orig(::opMode)-1].len[2][0]
s[::verbosity].len[0][0] == s[orig(::numFileNames)-1].len[3][0]
s[::verbosity].len[0][0] == s[orig(::numFilesProcessed)-1].len[3][0]
s[::verbosity].len[0][0] == s[orig(::opMode)-1].len[3][0]
s[::verbosity].len[0][0] == s[orig(::numFileNames)-1].len[4][0]
s[::verbosity].len[0][0] == s[orig(::numFilesProcessed)-1].len[4][0]
s[::verbosity].len[0][0] == s[orig(::opMode)-1].len[4][0]
s[::verbosity].len[0][0] == orig(s[::numFileNames-1].len[0][0])
s[::verbosity].len[0][0] == orig(s[::numFileNames-1].len[1][0])
s[::verbosity].len[0][0] == orig(s[::numFileNames-1].len[2][0])
s[::verbosity].len[0][0] == orig(s[::numFileNames-1].len[3][0])
s[::verbosity].len[0][0] == orig(s[::numFileNames-1].len[4][0])
s[::verbosity].len[0][0] == orig(s[::numFilesProcessed-1].len[0][0])
s[::verbosity].len[0][0] == orig(s[::numFilesProcessed-1].len[1][0])
s[::verbosity].len[0][0] == orig(s[::numFilesProcessed-1].len[2][0])
s[::verbosity].len[0][0] == orig(s[::numFilesProcessed-1].len[3][0])
s[::verbosity].len[0][0] == orig(s[::numFilesProcessed-1].len[4][0])
s[::verbosity].len[0][0] == orig(s[::opMode-1].len[0][0])
s[::verbosity].len[0][0] == orig(s[::opMode-1].len[1][0])
s[::verbosity].len[0][0] == orig(s[::opMode-1].len[2][0])
s[::verbosity].len[0][0] == orig(s[::opMode-1].len[3][0])
s[::verbosity].len[0][0] == orig(s[::opMode-1].len[4][0])
s[::verbosity].len[1] == s[::numFileNames-1].len[1]
s[::verbosity].len[1] == orig(s[post(::numFileNames)-1].len[1])
s[::verbosity].len[1] == s[::numFilesProcessed-1].len[1]
s[::verbosity].len[1] == orig(s[post(::numFilesProcessed)-1].len[1])
s[::verbosity].len[1] == s[::opMode-1].len[1]
s[::verbosity].len[1] == orig(s[post(::opMode)-1].len[1])
s[::verbosity].len[1] == s[orig(::numFileNames)-1].len[1]
s[::verbosity].len[1] == s[orig(::numFilesProcessed)-1].len[1]
s[::verbosity].len[1] == s[orig(::opMode)-1].len[1]
s[::verbosity].len[1] == orig(s[::numFileNames-1].len[1])
s[::verbosity].len[1] == orig(s[::numFilesProcessed-1].len[1])
s[::verbosity].len[1] == orig(s[::opMode-1].len[1])
s[::verbosity].len[2] == s[::numFileNames-1].len[2]
s[::verbosity].len[2] == orig(s[post(::numFileNames)-1].len[2])
s[::verbosity].len[2] == s[::numFilesProcessed-1].len[2]
s[::verbosity].len[2] == orig(s[post(::numFilesProcessed)-1].len[2])
s[::verbosity].len[2] == s[::opMode-1].len[2]
s[::verbosity].len[2] == orig(s[post(::opMode)-1].len[2])
s[::verbosity].len[2] == s[orig(::numFileNames)-1].len[2]
s[::verbosity].len[2] == s[orig(::numFilesProcessed)-1].len[2]
s[::verbosity].len[2] == s[orig(::opMode)-1].len[2]
s[::verbosity].len[2] == orig(s[::numFileNames-1].len[2])
s[::verbosity].len[2] == orig(s[::numFilesProcessed-1].len[2])
s[::verbosity].len[2] == orig(s[::opMode-1].len[2])
s[::verbosity].len[3] == s[::numFileNames-1].len[3]
s[::verbosity].len[3] == orig(s[post(::numFileNames)-1].len[3])
s[::verbosity].len[3] == s[::numFilesProcessed-1].len[3]
s[::verbosity].len[3] == orig(s[post(::numFilesProcessed)-1].len[3])
s[::verbosity].len[3] == s[::opMode-1].len[3]
s[::verbosity].len[3] == orig(s[post(::opMode)-1].len[3])
s[::verbosity].len[3] == s[orig(::numFileNames)-1].len[3]
s[::verbosity].len[3] == s[orig(::numFilesProcessed)-1].len[3]
s[::verbosity].len[3] == s[orig(::opMode)-1].len[3]
s[::verbosity].len[3] == orig(s[::numFileNames-1].len[3])
s[::verbosity].len[3] == orig(s[::numFilesProcessed-1].len[3])
s[::verbosity].len[3] == orig(s[::opMode-1].len[3])
s[::verbosity].len[4] == s[::numFileNames-1].len[4]
s[::verbosity].len[4] == orig(s[post(::numFileNames)-1].len[4])
s[::verbosity].len[4] == s[::numFilesProcessed-1].len[4]
s[::verbosity].len[4] == orig(s[post(::numFilesProcessed)-1].len[4])
s[::verbosity].len[4] == s[::opMode-1].len[4]
s[::verbosity].len[4] == orig(s[post(::opMode)-1].len[4])
s[::verbosity].len[4] == s[orig(::numFileNames)-1].len[4]
s[::verbosity].len[4] == s[orig(::numFilesProcessed)-1].len[4]
s[::verbosity].len[4] == s[orig(::opMode)-1].len[4]
s[::verbosity].len[4] == orig(s[::numFileNames-1].len[4])
s[::verbosity].len[4] == orig(s[::numFilesProcessed-1].len[4])
s[::verbosity].len[4] == orig(s[::opMode-1].len[4])
s[::verbosity].len[5] == s[::numFileNames-1].len[5]
s[::verbosity].len[5] == orig(s[post(::numFileNames)-1].len[5])
s[::verbosity].len[5] == s[::numFilesProcessed-1].len[5]
s[::verbosity].len[5] == orig(s[post(::numFilesProcessed)-1].len[5])
s[::verbosity].len[5] == s[::opMode-1].len[5]
s[::verbosity].len[5] == orig(s[post(::opMode)-1].len[5])
s[::verbosity].len[5] == s[orig(::numFileNames)-1].len[5]
s[::verbosity].len[5] == s[orig(::numFilesProcessed)-1].len[5]
s[::verbosity].len[5] == s[orig(::opMode)-1].len[5]
s[::verbosity].len[5] == orig(s[::numFileNames-1].len[5])
s[::verbosity].len[5] == orig(s[::numFilesProcessed-1].len[5])
s[::verbosity].len[5] == orig(s[::opMode-1].len[5])
s[::verbosity].len[5][0] == s[::numFileNames-1].len[5][0]
s[::verbosity].len[5][0] == orig(s[post(::numFileNames)-1].len[5][0])
s[::verbosity].len[5][0] == s[::numFilesProcessed-1].len[5][0]
s[::verbosity].len[5][0] == orig(s[post(::numFilesProcessed)-1].len[5][0])
s[::verbosity].len[5][0] == s[::opMode-1].len[5][0]
s[::verbosity].len[5][0] == orig(s[post(::opMode)-1].len[5][0])
s[::verbosity].len[5][0] == s[orig(::numFileNames)-1].len[5][0]
s[::verbosity].len[5][0] == s[orig(::numFilesProcessed)-1].len[5][0]
s[::verbosity].len[5][0] == s[orig(::opMode)-1].len[5][0]
s[::verbosity].len[5][0] == orig(s[::numFileNames-1].len[5][0])
s[::verbosity].len[5][0] == orig(s[::numFilesProcessed-1].len[5][0])
s[::verbosity].len[5][0] == orig(s[::opMode-1].len[5][0])
s[::verbosity].code[0] == s[::numFileNames-1].code[0]
s[::verbosity].code[0] == orig(s[post(::numFileNames)-1].code[0])
s[::verbosity].code[0] == s[::numFilesProcessed-1].code[0]
s[::verbosity].code[0] == orig(s[post(::numFilesProcessed)-1].code[0])
s[::verbosity].code[0] == s[::opMode-1].code[0]
s[::verbosity].code[0] == orig(s[post(::opMode)-1].code[0])
s[::verbosity].code[0] == s[orig(::numFileNames)-1].code[0]
s[::verbosity].code[0] == s[orig(::numFilesProcessed)-1].code[0]
s[::verbosity].code[0] == s[orig(::opMode)-1].code[0]
s[::verbosity].code[0] == orig(s[::numFileNames-1].code[0])
s[::verbosity].code[0] == orig(s[::numFilesProcessed-1].code[0])
s[::verbosity].code[0] == orig(s[::opMode-1].code[0])
s[::verbosity].code[0][0] == s[::numFileNames-1].code[0][0]
s[::verbosity].code[0][0] == orig(s[post(::numFileNames)-1].code[0][0])
s[::verbosity].code[0][0] == s[::numFilesProcessed-1].code[0][0]
s[::verbosity].code[0][0] == orig(s[post(::numFilesProcessed)-1].code[0][0])
s[::verbosity].code[0][0] == s[::opMode-1].code[0][0]
s[::verbosity].code[0][0] == orig(s[post(::opMode)-1].code[0][0])
s[::verbosity].code[0][0] == s[orig(::numFileNames)-1].code[0][0]
s[::verbosity].code[0][0] == s[orig(::numFilesProcessed)-1].code[0][0]
s[::verbosity].code[0][0] == s[orig(::opMode)-1].code[0][0]
s[::verbosity].code[0][0] == orig(s[::numFileNames-1].code[0][0])
s[::verbosity].code[0][0] == orig(s[::numFilesProcessed-1].code[0][0])
s[::verbosity].code[0][0] == orig(s[::opMode-1].code[0][0])
s[::verbosity].code[1] == s[::numFileNames-1].code[1]
s[::verbosity].code[1] == orig(s[post(::numFileNames)-1].code[1])
s[::verbosity].code[1] == s[::numFilesProcessed-1].code[1]
s[::verbosity].code[1] == orig(s[post(::numFilesProcessed)-1].code[1])
s[::verbosity].code[1] == s[::opMode-1].code[1]
s[::verbosity].code[1] == orig(s[post(::opMode)-1].code[1])
s[::verbosity].code[1] == s[orig(::numFileNames)-1].code[1]
s[::verbosity].code[1] == s[orig(::numFilesProcessed)-1].code[1]
s[::verbosity].code[1] == s[orig(::opMode)-1].code[1]
s[::verbosity].code[1] == orig(s[::numFileNames-1].code[1])
s[::verbosity].code[1] == orig(s[::numFilesProcessed-1].code[1])
s[::verbosity].code[1] == orig(s[::opMode-1].code[1])
s[::verbosity].code[1][0] == s[::numFileNames-1].code[1][0]
s[::verbosity].code[1][0] == orig(s[post(::numFileNames)-1].code[1][0])
s[::verbosity].code[1][0] == s[::numFilesProcessed-1].code[1][0]
s[::verbosity].code[1][0] == orig(s[post(::numFilesProcessed)-1].code[1][0])
s[::verbosity].code[1][0] == s[::opMode-1].code[1][0]
s[::verbosity].code[1][0] == orig(s[post(::opMode)-1].code[1][0])
s[::verbosity].code[1][0] == s[orig(::numFileNames)-1].code[1][0]
s[::verbosity].code[1][0] == s[orig(::numFilesProcessed)-1].code[1][0]
s[::verbosity].code[1][0] == s[orig(::opMode)-1].code[1][0]
s[::verbosity].code[1][0] == orig(s[::numFileNames-1].code[1][0])
s[::verbosity].code[1][0] == orig(s[::numFilesProcessed-1].code[1][0])
s[::verbosity].code[1][0] == orig(s[::opMode-1].code[1][0])
s[::verbosity].code[2] == s[::numFileNames-1].code[2]
s[::verbosity].code[2] == orig(s[post(::numFileNames)-1].code[2])
s[::verbosity].code[2] == s[::numFilesProcessed-1].code[2]
s[::verbosity].code[2] == orig(s[post(::numFilesProcessed)-1].code[2])
s[::verbosity].code[2] == s[::opMode-1].code[2]
s[::verbosity].code[2] == orig(s[post(::opMode)-1].code[2])
s[::verbosity].code[2] == s[orig(::numFileNames)-1].code[2]
s[::verbosity].code[2] == s[orig(::numFilesProcessed)-1].code[2]
s[::verbosity].code[2] == s[orig(::opMode)-1].code[2]
s[::verbosity].code[2] == orig(s[::numFileNames-1].code[2])
s[::verbosity].code[2] == orig(s[::numFilesProcessed-1].code[2])
s[::verbosity].code[2] == orig(s[::opMode-1].code[2])
s[::verbosity].code[2][0] == s[::numFileNames-1].code[2][0]
s[::verbosity].code[2][0] == orig(s[post(::numFileNames)-1].code[2][0])
s[::verbosity].code[2][0] == s[::numFilesProcessed-1].code[2][0]
s[::verbosity].code[2][0] == orig(s[post(::numFilesProcessed)-1].code[2][0])
s[::verbosity].code[2][0] == s[::opMode-1].code[2][0]
s[::verbosity].code[2][0] == orig(s[post(::opMode)-1].code[2][0])
s[::verbosity].code[2][0] == s[orig(::numFileNames)-1].code[2][0]
s[::verbosity].code[2][0] == s[orig(::numFilesProcessed)-1].code[2][0]
s[::verbosity].code[2][0] == s[orig(::opMode)-1].code[2][0]
s[::verbosity].code[2][0] == orig(s[::numFileNames-1].code[2][0])
s[::verbosity].code[2][0] == orig(s[::numFilesProcessed-1].code[2][0])
s[::verbosity].code[2][0] == orig(s[::opMode-1].code[2][0])
s[::verbosity].code[3] == s[::numFileNames-1].code[3]
s[::verbosity].code[3] == orig(s[post(::numFileNames)-1].code[3])
s[::verbosity].code[3] == s[::numFilesProcessed-1].code[3]
s[::verbosity].code[3] == orig(s[post(::numFilesProcessed)-1].code[3])
s[::verbosity].code[3] == s[::opMode-1].code[3]
s[::verbosity].code[3] == orig(s[post(::opMode)-1].code[3])
s[::verbosity].code[3] == s[orig(::numFileNames)-1].code[3]
s[::verbosity].code[3] == s[orig(::numFilesProcessed)-1].code[3]
s[::verbosity].code[3] == s[orig(::opMode)-1].code[3]
s[::verbosity].code[3] == orig(s[::numFileNames-1].code[3])
s[::verbosity].code[3] == orig(s[::numFilesProcessed-1].code[3])
s[::verbosity].code[3] == orig(s[::opMode-1].code[3])
s[::verbosity].code[3][0] == s[::numFileNames-1].code[3][0]
s[::verbosity].code[3][0] == orig(s[post(::numFileNames)-1].code[3][0])
s[::verbosity].code[3][0] == s[::numFilesProcessed-1].code[3][0]
s[::verbosity].code[3][0] == orig(s[post(::numFilesProcessed)-1].code[3][0])
s[::verbosity].code[3][0] == s[::opMode-1].code[3][0]
s[::verbosity].code[3][0] == orig(s[post(::opMode)-1].code[3][0])
s[::verbosity].code[3][0] == s[orig(::numFileNames)-1].code[3][0]
s[::verbosity].code[3][0] == s[orig(::numFilesProcessed)-1].code[3][0]
s[::verbosity].code[3][0] == s[orig(::opMode)-1].code[3][0]
s[::verbosity].code[3][0] == orig(s[::numFileNames-1].code[3][0])
s[::verbosity].code[3][0] == orig(s[::numFilesProcessed-1].code[3][0])
s[::verbosity].code[3][0] == orig(s[::opMode-1].code[3][0])
s[::verbosity].code[4] == s[::numFileNames-1].code[4]
s[::verbosity].code[4] == orig(s[post(::numFileNames)-1].code[4])
s[::verbosity].code[4] == s[::numFilesProcessed-1].code[4]
s[::verbosity].code[4] == orig(s[post(::numFilesProcessed)-1].code[4])
s[::verbosity].code[4] == s[::opMode-1].code[4]
s[::verbosity].code[4] == orig(s[post(::opMode)-1].code[4])
s[::verbosity].code[4] == s[orig(::numFileNames)-1].code[4]
s[::verbosity].code[4] == s[orig(::numFilesProcessed)-1].code[4]
s[::verbosity].code[4] == s[orig(::opMode)-1].code[4]
s[::verbosity].code[4] == orig(s[::numFileNames-1].code[4])
s[::verbosity].code[4] == orig(s[::numFilesProcessed-1].code[4])
s[::verbosity].code[4] == orig(s[::opMode-1].code[4])
s[::verbosity].code[4][0] == s[::numFileNames-1].code[4][0]
s[::verbosity].code[4][0] == orig(s[post(::numFileNames)-1].code[4][0])
s[::verbosity].code[4][0] == s[::numFilesProcessed-1].code[4][0]
s[::verbosity].code[4][0] == orig(s[post(::numFilesProcessed)-1].code[4][0])
s[::verbosity].code[4][0] == s[::opMode-1].code[4][0]
s[::verbosity].code[4][0] == orig(s[post(::opMode)-1].code[4][0])
s[::verbosity].code[4][0] == s[orig(::numFileNames)-1].code[4][0]
s[::verbosity].code[4][0] == s[orig(::numFilesProcessed)-1].code[4][0]
s[::verbosity].code[4][0] == s[orig(::opMode)-1].code[4][0]
s[::verbosity].code[4][0] == orig(s[::numFileNames-1].code[4][0])
s[::verbosity].code[4][0] == orig(s[::numFilesProcessed-1].code[4][0])
s[::verbosity].code[4][0] == orig(s[::opMode-1].code[4][0])
s[::verbosity].code[5] == s[::numFileNames-1].code[5]
s[::verbosity].code[5] == orig(s[post(::numFileNames)-1].code[5])
s[::verbosity].code[5] == s[::numFilesProcessed-1].code[5]
s[::verbosity].code[5] == orig(s[post(::numFilesProcessed)-1].code[5])
s[::verbosity].code[5] == s[::opMode-1].code[5]
s[::verbosity].code[5] == orig(s[post(::opMode)-1].code[5])
s[::verbosity].code[5] == s[orig(::numFileNames)-1].code[5]
s[::verbosity].code[5] == s[orig(::numFilesProcessed)-1].code[5]
s[::verbosity].code[5] == s[orig(::opMode)-1].code[5]
s[::verbosity].code[5] == orig(s[::numFileNames-1].code[5])
s[::verbosity].code[5] == orig(s[::numFilesProcessed-1].code[5])
s[::verbosity].code[5] == orig(s[::opMode-1].code[5])
s[::verbosity].rfreq[0] == s[::numFileNames-1].rfreq[0]
s[::verbosity].rfreq[0] == orig(s[post(::numFileNames)-1].rfreq[0])
s[::verbosity].rfreq[0] == s[::numFilesProcessed-1].rfreq[0]
s[::verbosity].rfreq[0] == orig(s[post(::numFilesProcessed)-1].rfreq[0])
s[::verbosity].rfreq[0] == s[::opMode-1].rfreq[0]
s[::verbosity].rfreq[0] == orig(s[post(::opMode)-1].rfreq[0])
s[::verbosity].rfreq[0] == s[orig(::numFileNames)-1].rfreq[0]
s[::verbosity].rfreq[0] == s[orig(::numFilesProcessed)-1].rfreq[0]
s[::verbosity].rfreq[0] == s[orig(::opMode)-1].rfreq[0]
s[::verbosity].rfreq[0] == orig(s[::numFileNames-1].rfreq[0])
s[::verbosity].rfreq[0] == orig(s[::numFilesProcessed-1].rfreq[0])
s[::verbosity].rfreq[0] == orig(s[::opMode-1].rfreq[0])
s[::verbosity].rfreq[1] == s[::numFileNames-1].rfreq[1]
s[::verbosity].rfreq[1] == orig(s[post(::numFileNames)-1].rfreq[1])
s[::verbosity].rfreq[1] == s[::numFilesProcessed-1].rfreq[1]
s[::verbosity].rfreq[1] == orig(s[post(::numFilesProcessed)-1].rfreq[1])
s[::verbosity].rfreq[1] == s[::opMode-1].rfreq[1]
s[::verbosity].rfreq[1] == orig(s[post(::opMode)-1].rfreq[1])
s[::verbosity].rfreq[1] == s[orig(::numFileNames)-1].rfreq[1]
s[::verbosity].rfreq[1] == s[orig(::numFilesProcessed)-1].rfreq[1]
s[::verbosity].rfreq[1] == s[orig(::opMode)-1].rfreq[1]
s[::verbosity].rfreq[1] == orig(s[::numFileNames-1].rfreq[1])
s[::verbosity].rfreq[1] == orig(s[::numFilesProcessed-1].rfreq[1])
s[::verbosity].rfreq[1] == orig(s[::opMode-1].rfreq[1])
s[::verbosity].rfreq[2] == s[::numFileNames-1].rfreq[2]
s[::verbosity].rfreq[2] == orig(s[post(::numFileNames)-1].rfreq[2])
s[::verbosity].rfreq[2] == s[::numFilesProcessed-1].rfreq[2]
s[::verbosity].rfreq[2] == orig(s[post(::numFilesProcessed)-1].rfreq[2])
s[::verbosity].rfreq[2] == s[::opMode-1].rfreq[2]
s[::verbosity].rfreq[2] == orig(s[post(::opMode)-1].rfreq[2])
s[::verbosity].rfreq[2] == s[orig(::numFileNames)-1].rfreq[2]
s[::verbosity].rfreq[2] == s[orig(::numFilesProcessed)-1].rfreq[2]
s[::verbosity].rfreq[2] == s[orig(::opMode)-1].rfreq[2]
s[::verbosity].rfreq[2] == orig(s[::numFileNames-1].rfreq[2])
s[::verbosity].rfreq[2] == orig(s[::numFilesProcessed-1].rfreq[2])
s[::verbosity].rfreq[2] == orig(s[::opMode-1].rfreq[2])
s[::verbosity].rfreq[3] == s[::numFileNames-1].rfreq[3]
s[::verbosity].rfreq[3] == orig(s[post(::numFileNames)-1].rfreq[3])
s[::verbosity].rfreq[3] == s[::numFilesProcessed-1].rfreq[3]
s[::verbosity].rfreq[3] == orig(s[post(::numFilesProcessed)-1].rfreq[3])
s[::verbosity].rfreq[3] == s[::opMode-1].rfreq[3]
s[::verbosity].rfreq[3] == orig(s[post(::opMode)-1].rfreq[3])
s[::verbosity].rfreq[3] == s[orig(::numFileNames)-1].rfreq[3]
s[::verbosity].rfreq[3] == s[orig(::numFilesProcessed)-1].rfreq[3]
s[::verbosity].rfreq[3] == s[orig(::opMode)-1].rfreq[3]
s[::verbosity].rfreq[3] == orig(s[::numFileNames-1].rfreq[3])
s[::verbosity].rfreq[3] == orig(s[::numFilesProcessed-1].rfreq[3])
s[::verbosity].rfreq[3] == orig(s[::opMode-1].rfreq[3])
s[::verbosity].rfreq[4] == s[::numFileNames-1].rfreq[4]
s[::verbosity].rfreq[4] == orig(s[post(::numFileNames)-1].rfreq[4])
s[::verbosity].rfreq[4] == s[::numFilesProcessed-1].rfreq[4]
s[::verbosity].rfreq[4] == orig(s[post(::numFilesProcessed)-1].rfreq[4])
s[::verbosity].rfreq[4] == s[::opMode-1].rfreq[4]
s[::verbosity].rfreq[4] == orig(s[post(::opMode)-1].rfreq[4])
s[::verbosity].rfreq[4] == s[orig(::numFileNames)-1].rfreq[4]
s[::verbosity].rfreq[4] == s[orig(::numFilesProcessed)-1].rfreq[4]
s[::verbosity].rfreq[4] == s[orig(::opMode)-1].rfreq[4]
s[::verbosity].rfreq[4] == orig(s[::numFileNames-1].rfreq[4])
s[::verbosity].rfreq[4] == orig(s[::numFilesProcessed-1].rfreq[4])
s[::verbosity].rfreq[4] == orig(s[::opMode-1].rfreq[4])
s[::verbosity].rfreq[5] == s[::numFileNames-1].rfreq[5]
s[::verbosity].rfreq[5] == orig(s[post(::numFileNames)-1].rfreq[5])
s[::verbosity].rfreq[5] == s[::numFilesProcessed-1].rfreq[5]
s[::verbosity].rfreq[5] == orig(s[post(::numFilesProcessed)-1].rfreq[5])
s[::verbosity].rfreq[5] == s[::opMode-1].rfreq[5]
s[::verbosity].rfreq[5] == orig(s[post(::opMode)-1].rfreq[5])
s[::verbosity].rfreq[5] == s[orig(::numFileNames)-1].rfreq[5]
s[::verbosity].rfreq[5] == s[orig(::numFilesProcessed)-1].rfreq[5]
s[::verbosity].rfreq[5] == s[orig(::opMode)-1].rfreq[5]
s[::verbosity].rfreq[5] == orig(s[::numFileNames-1].rfreq[5])
s[::verbosity].rfreq[5] == orig(s[::numFilesProcessed-1].rfreq[5])
s[::verbosity].rfreq[5] == orig(s[::opMode-1].rfreq[5])
s[::verbosity].len_pack == s[::numFileNames-1].len_pack
s[::verbosity].len_pack == orig(s[post(::numFileNames)-1].len_pack)
s[::verbosity].len_pack == s[::numFilesProcessed-1].len_pack
s[::verbosity].len_pack == orig(s[post(::numFilesProcessed)-1].len_pack)
s[::verbosity].len_pack == s[::opMode-1].len_pack
s[::verbosity].len_pack == orig(s[post(::opMode)-1].len_pack)
s[::verbosity].len_pack == s[orig(::numFileNames)-1].len_pack
s[::verbosity].len_pack == s[orig(::numFilesProcessed)-1].len_pack
s[::verbosity].len_pack == s[orig(::opMode)-1].len_pack
s[::verbosity].len_pack == orig(s[::numFileNames-1].len_pack)
s[::verbosity].len_pack == orig(s[::numFilesProcessed-1].len_pack)
s[::verbosity].len_pack == orig(s[::opMode-1].len_pack)
s[::verbosity].len_pack[0] == s[::numFileNames-1].len_pack[0]
s[::verbosity].len_pack[0] == orig(s[post(::numFileNames)-1].len_pack[0])
s[::verbosity].len_pack[0] == s[::numFilesProcessed-1].len_pack[0]
s[::verbosity].len_pack[0] == orig(s[post(::numFilesProcessed)-1].len_pack[0])
s[::verbosity].len_pack[0] == s[::opMode-1].len_pack[0]
s[::verbosity].len_pack[0] == orig(s[post(::opMode)-1].len_pack[0])
s[::verbosity].len_pack[0] == s[orig(::numFileNames)-1].len_pack[0]
s[::verbosity].len_pack[0] == s[orig(::numFilesProcessed)-1].len_pack[0]
s[::verbosity].len_pack[0] == s[orig(::opMode)-1].len_pack[0]
s[::verbosity].len_pack[0] == orig(s[::numFileNames-1].len_pack[0])
s[::verbosity].len_pack[0] == orig(s[::numFilesProcessed-1].len_pack[0])
s[::verbosity].len_pack[0] == orig(s[::opMode-1].len_pack[0])
orig(s[post(::numFileNames)-1].arr1[0]) == orig(s[::verbosity].arr1[0])
orig(s[post(::numFileNames)-1].ftab[0]) == orig(s[::verbosity].ftab[0])
orig(s[post(::numFileNames)-1].origPtr) == orig(s[::verbosity].origPtr)
orig(s[post(::numFileNames)-1].ptr[0]) == orig(s[::verbosity].arr1[0])
orig(s[post(::numFileNames)-1].mtfv[0]) == orig(s[::verbosity].mtfv[0])
orig(s[post(::numFileNames)-1].zbits[0]) == orig(s[::verbosity].zbits[0])
orig(s[post(::numFilesProcessed)-1].arr1[0]) == orig(s[::verbosity].arr1[0])
orig(s[post(::numFilesProcessed)-1].ftab[0]) == orig(s[::verbosity].ftab[0])
orig(s[post(::numFilesProcessed)-1].origPtr) == orig(s[::verbosity].origPtr)
orig(s[post(::numFilesProcessed)-1].ptr[0]) == orig(s[::verbosity].arr1[0])
orig(s[post(::numFilesProcessed)-1].mtfv[0]) == orig(s[::verbosity].mtfv[0])
orig(s[post(::numFilesProcessed)-1].zbits[0]) == orig(s[::verbosity].zbits[0])
orig(s[post(::opMode)-1].arr1[0]) == orig(s[::verbosity].arr1[0])
orig(s[post(::opMode)-1].ftab[0]) == orig(s[::verbosity].ftab[0])
orig(s[post(::opMode)-1].origPtr) == orig(s[::verbosity].origPtr)
orig(s[post(::opMode)-1].ptr[0]) == orig(s[::verbosity].arr1[0])
orig(s[post(::opMode)-1].mtfv[0]) == orig(s[::verbosity].mtfv[0])
orig(s[post(::opMode)-1].zbits[0]) == orig(s[::verbosity].zbits[0])
::incs has only one value
::incs[] == [1, 4, 13, 40, 121, 364, 1093, 3280, 9841, 29524, 88573, 265720, 797161, 2391484]
::incs[] elements >= 1
::bzerrorstrings has only one value
::bzerrorstrings[] == [OK, SEQUENCE_ERROR, PARAM_ERROR, MEM_ERROR, DATA_ERROR, DATA_ERROR_MAGIC, IO_ERROR, UNEXPECTED_EOF, OUTBUFF_FULL, CONFIG_ERROR, ???, ???, ???, ???, ???, ???]
::fileMetaInfo has only one value
::fileMetaInfo.st_dev == 2049
::fileMetaInfo.st_ino == 936492
::fileMetaInfo.st_nlink == 1
::fileMetaInfo.st_mode == 33277
::fileMetaInfo.st_uid == 1000
::fileMetaInfo.st_rdev == 0
::fileMetaInfo.st_size == 5738700
::fileMetaInfo.st_blksize == 4096
::fileMetaInfo.st_blocks == 11216
::fileMetaInfo.st_atim has only one value
::fileMetaInfo.st_atim.tv_sec == 1496096467
::fileMetaInfo.st_atim.tv_nsec == 709424920
::fileMetaInfo.st_mtim has only one value
::fileMetaInfo.st_mtim.tv_sec == 1483563943
::fileMetaInfo.st_mtim.tv_nsec == 421335644
::fileMetaInfo.st_ctim has only one value
::fileMetaInfo.__glibc_reserved has only one value
::fileMetaInfo.__glibc_reserved[] == [0, 0, 0]
::fileMetaInfo.__glibc_reserved[] elements == 0
::BZ2_rNums has only one value
::BZ2_rNums[] == [619, 720, 127, 481, 931, 816, 813, 233, 566, 247, 985, 724, 205, 454, 863, 491, 741, 242, 949, 214, 733, 859, 335, 708, 621, 574, 73, 654, 730, 472, 419, 436, 278, 496, 867, 210, 399, 680, 480, 51, 878, 465, 811, 169, 869, 675, 611, 697, 867, 561, 862, 687, 507, 283, 482, 129, 807, 591, 733, 623, 150, 238, 59, 379, 684, 877, 625, 169, 643, 105, 170, 607, 520, 932, 727, 476, 693, 425, 174, 647, 73, 122, 335, 530, 442, 853, 695, 249, 445, 515, 909, 545, 703, 919, 874, 474, 882, 500, 594, 612, 641, 801, 220, 162, 819, 984, 589, 513, 495, 799, 161, 604, 958, 533, 221, 400, 386, 867, 600, 782, 382, 596, 414, 171, 516, 375, 682, 485, 911, 276, 98, 553, 163, 354, 666, 933, 424, 341, 533, 870, 227, 730, 475, 186, 263, 647, 537, 686, 600, 224, 469, 68, 770, 919, 190, 373, 294, 822, 808, 206, 184, 943, 795, 384, 383, 461, 404, 758, 839, 887, 715, 67, 618, 276, 204, 918, 873, 777, 604, 560, 951, 160, 578, 722, 79, 804, 96, 409, 713, 940, 652, 934, 970, 447, 318, 353, 859, 672, 112, 785, 645, 863, 803, 350, 139, 93, 354, 99, 820, 908, 609, 772, 154, 274, 580, 184, 79, 626, 630, 742, 653, 282, 762, 623, 680, 81, 927, 626, 789, 125, 411, 521, 938, 300, 821, 78, 343, 175, 128, 250, 170, 774, 972, 275, 999, 639, 495, 78, 352, 126, 857, 956, 358, 619, 580, 124, 737, 594, 701, 612, 669, 112, 134, 694, 363, 992, 809, 743, 168, 974, 944, 375, 748, 52, 600, 747, 642, 182, 862, 81, 344, 805, 988, 739, 511, 655, 814, 334, 249, 515, 897, 955, 664, 981, 649, 113, 974, 459, 893, 228, 433, 837, 553, 268, 926, 240, 102, 654, 459, 51, 686, 754, 806, 760, 493, 403, 415, 394, 687, 700, 946, 670, 656, 610, 738, 392, 760, 799, 887, 653, 978, 321, 576, 617, 626, 502, 894, 679, 243, 440, 680, 879, 194, 572, 640, 724, 926, 56, 204, 700, 707, 151, 457, 449, 797, 195, 791, 558, 945, 679, 297, 59, 87, 824, 713, 663, 412, 693, 342, 606, 134, 108, 571, 364, 631, 212, 174, 643, 304, 329, 343, 97, 430, 751, 497, 314, 983, 374, 822, 928, 140, 206, 73, 263, 980, 736, 876, 478, 430, 305, 170, 514, 364, 692, 829, 82, 855, 953, 676, 246, 369, 970, 294, 750, 807, 827, 150, 790, 288, 923, 804, 378, 215, 828, 592, 281, 565, 555, 710, 82, 896, 831, 547, 261, 524, 462, 293, 465, 502, 56, 661, 821, 976, 991, 658, 869, 905, 758, 745, 193, 768, 550, 608, 933, 378, 286, 215, 979, 792, 961, 61, 688, 793, 644, 986, 403, 106, 366, 905, 644, 372, 567, 466, 434, 645, 210, 389, 550, 919, 135, 780, 773, 635, 389, 707, 100, 626, 958, 165, 504, 920, 176, 193, 713, 857, 265, 203, 50, 668, 108, 645, 990, 626, 197, 510, 357, 358, 850, 858, 364, 936, 638]
::BZ2_crc32Table has only one value
::BZ2_crc32Table[] == [0, 79764919, 159529838, 222504665, 319059676, 398814059, 445009330, 507990021, 638119352, 583659535, 797628118, 726387553, 890018660, 835552979, 1015980042, 944750013, 1276238704, 1221641927, 1167319070, 1095957929, 1595256236, 1540665371, 1452775106, 1381403509, 1780037320, 1859660671, 1671105958, 1733955601, 2031960084, 2111593891, 1889500026, 1952343757, 2552477408, 2632100695, 2443283854, 2506133561, 2334638140, 2414271883, 2191915858, 2254759653, 3190512472, 3135915759, 3081330742, 3009969537, 2905550212, 2850959411, 2762807018, 2691435357, 3560074640, 3505614887, 3719321342, 3648080713, 3342211916, 3287746299, 3467911202, 3396681109, 4063920168, 4143685023, 4223187782, 4286162673, 3779000052, 3858754371, 3904687514, 3967668269, 881225847, 809987520, 1023691545, 969234094, 662832811, 591600412, 771767749, 717299826, 311336399, 374308984, 453813921, 533576470, 25881363, 88864420, 134795389, 214552010, 2023205639, 2086057648, 1897238633, 1976864222, 1804852699, 1867694188, 1645340341, 1724971778, 1587496639, 1516133128, 1461550545, 1406951526, 1302016099, 1230646740, 1142491917, 1087903418, 2896545431, 2825181984, 2770861561, 2716262478, 3215044683, 3143675388, 3055782693, 3001194130, 2326604591, 2389456536, 2200899649, 2280525302, 2578013683, 2640855108, 2418763421, 2498394922, 3769900519, 3832873040, 3912640137, 3992402750, 4088425275, 4151408268, 4197601365, 4277358050, 3334271071, 3263032808, 3476998961, 3422541446, 3585640067, 3514407732, 3694837229, 3640369242, 1762451694, 1842216281, 1619975040, 1682949687, 2047383090, 2127137669, 1938468188, 2001449195, 1325665622, 1271206113, 1183200824, 1111960463, 1543535498, 1489069629, 1434599652, 1363369299, 622672798, 568075817, 748617968, 677256519, 907627842, 853037301, 1067152940, 995781531, 51762726, 131386257, 177728840, 240578815, 269590778, 349224269, 429104020, 491947555, 4046411278, 4126034873, 4172115296, 4234965207, 3794477266, 3874110821, 3953728444, 4016571915, 3609705398, 3555108353, 3735388376, 3664026991, 3290680682, 3236090077, 3449943556, 3378572211, 3174993278, 3120533705, 3032266256, 2961025959, 2923101090, 2868635157, 2813903052, 2742672763, 2604032198, 2683796849, 2461293480, 2524268063, 2284983834, 2364738477, 2175806836, 2238787779, 1569362073, 1498123566, 1409854455, 1355396672, 1317987909, 1246755826, 1192025387, 1137557660, 2072149281, 2135122070, 1912620623, 1992383480, 1753615357, 1816598090, 1627664531, 1707420964, 295390185, 358241886, 404320391, 483945776, 43990325, 106832002, 186451547, 266083308, 932423249, 861060070, 1041341759, 986742920, 613929101, 542559546, 756411363, 701822548, 3316196985, 3244833742, 3425377559, 3370778784, 3601682597, 3530312978, 3744426955, 3689838204, 3819031489, 3881883254, 3928223919, 4007849240, 4037393693, 4100235434, 4180117107, 4259748804, 2310601993, 2373574846, 2151335527, 2231098320, 2596047829, 2659030626, 2470359227, 2550115596, 2947551409, 2876312838, 2788305887, 2733848168, 3165939309, 3094707162, 3040238851, 2985771188]
::BZ2_crc32Table[] elements >= 0
::mammamia == 3216
::keepInputFiles == 1
::smallMode == 0
::numFileNames == 1
::blockSize100k == 9
::longestFileName == 20
::inName == "../inputs/in_big.txt"
::outName == "../inputs/in_big.txt.bz2"
::tmpName == ""
::progName == "zip-injected"
::progNameReally == "./zip-injected"
::outputHandleJustInCase has only one value
::workFactor == 30
::zSuffix has only one value
::zSuffix[] == [.bz2, .bz, .tbz2, .tbz]
::unzSuffix has only one value
::unzSuffix[] == [, , .tar, .tar]
::unzSuffix[] elements one of { "", ".tar" }
s[] contains no nulls and has only one value, of length 1
s[] elements has only one value
s[].strm contains no nulls and has only one value, of length 1
s[].strm elements has only one value
s[].strm[0] contains no nulls and has only one value, of length 1
s[].strm[0] elements has only one value
s[].strm->total_in_hi32 == [0]
s[].strm->total_in_hi32 elements == 0
s[].strm->next_out elements one of { "BZh91AY&SY\361\031\246\204", "\177\346(+$\312k%jvM\340\307\267\217 \017\3069@\r\260\240\003\010", "\376\030\240\254\223)\254\324\211\360\243\002~\321\374\200?\030\345" }
s[].strm->avail_out == [5000]
s[].strm->avail_out elements == 5000
s[].strm->state contains no nulls and has only one value, of length 1
s[].strm->state elements has only one value
s[].strm->bzalloc contains no nulls and has only one value, of length 1
s[].strm->bzalloc elements has only one value
s[].strm->bzfree contains no nulls and has only one value, of length 1
s[].strm->bzfree elements has only one value
s[].strm->opaque == [null]
s[].strm->opaque elements == null
s[].mode elements one of { 2, 4 }
s[].mode one of { [2], [4] }
s[].state == [2]
s[].state elements == 2
s[].avail_in_expect == [0]
s[].avail_in_expect elements == 0
s[].arr1 contains no nulls and has only one value, of length 1
s[].arr1 elements has only one value
s[].arr2 contains no nulls and has only one value, of length 1
s[].arr2 elements has only one value
s[].ftab contains no nulls and has only one value, of length 1
s[].ftab elements has only one value
s[].ftab[0] == [4294967295]
s[].ftab[0] elements == 4294967295L
s[].block contains no nulls and has only one value, of length 1
s[].block elements has only one value
s[].mtfv contains no nulls and has only one value, of length 1
s[].mtfv elements has only one value
s[].zbits[0] elements one of { 11, 12, 195 }
s[].zbits[0] one of { [11], [12], [195] }
s[].workFactor == [30]
s[].workFactor elements == 30
s[].state_in_len elements one of { 0, 1 }
s[].state_in_len one of { [0], [1] }
s[].nblock elements one of { 572335, 899981, 899982 }
s[].nblock one of { [572335], [899981], [899982] }
s[].nblockMAX == [899981]
s[].nblockMAX elements == 899981
s[].numZ == [0]
s[].numZ elements == 0
s[].nInUse == [24]
s[].nInUse elements == 24
s[].inUse contains no nulls and has only one value, of length 1
s[].inUse elements has only one value
s[].inUse[0] == [1]
s[].inUse[0] elements == 1
s[].unseqToSeq[0] == [0]
s[].unseqToSeq[0] elements == 0
s[].bsBuff elements one of { 805044224, 2145386496, 4261412864L }
s[].bsBuff one of { [805044224], [2145386496], [4261412864] }
s[].bsLive elements one of { 9, 11, 14 }
s[].bsLive one of { [9], [11], [14] }
s[].blockSize100k == [9]
s[].blockSize100k elements == 9
s[].nMTF elements one of { 3748, 3749 }
s[].nMTF one of { [3748], [3749] }
s[].mtfFreq contains no nulls and has only one value, of length 1
s[].mtfFreq elements has only one value
s[].mtfFreq[0] elements one of { 1335, 1399, 1474 }
s[].mtfFreq[0] one of { [1335], [1399], [1474] }
s[].selector contains no nulls and has only one value, of length 1
s[].selector elements has only one value
s[].selector[0] elements one of { 4, 5 }
s[].selector[0] one of { [4], [5] }
s[].selectorMtf contains no nulls and has only one value, of length 1
s[].selectorMtf elements has only one value
s[].len[0] contains no nulls and has only one value, of length 1
s[].len[0] elements has only one value
s[].len[0][0] == [5]
s[].len[0][0] elements == 5
s[].len[1] contains no nulls and has only one value, of length 1
s[].len[1] elements has only one value
s[].len[2] contains no nulls and has only one value, of length 1
s[].len[2] elements has only one value
s[].len[3] contains no nulls and has only one value, of length 1
s[].len[3] elements has only one value
s[].len[4] contains no nulls and has only one value, of length 1
s[].len[4] elements has only one value
s[].len[5] contains no nulls and has only one value, of length 1
s[].len[5] elements has only one value
s[].len[5][0] == [4]
s[].len[5][0] elements == 4
s[].code[0] contains no nulls and has only one value, of length 1
s[].code[0] elements has only one value
s[].code[0][0] == [12]
s[].code[0][0] elements == 12
s[].code[1] contains no nulls and has only one value, of length 1
s[].code[1] elements has only one value
s[].code[1][0] == [13]
s[].code[1][0] elements == 13
s[].code[2] contains no nulls and has only one value, of length 1
s[].code[2] elements has only one value
s[].code[2][0] == [14]
s[].code[2][0] elements == 14
s[].code[3] contains no nulls and has only one value, of length 1
s[].code[3] elements has only one value
s[].code[3][0] == [15]
s[].code[3][0] elements == 15
s[].code[4] contains no nulls and has only one value, of length 1
s[].code[4] elements has only one value
s[].code[4][0] == [16]
s[].code[4][0] elements == 16
s[].code[5] contains no nulls and has only one value, of length 1
s[].code[5] elements has only one value
s[].code[5][0] == [0]
s[].code[5][0] elements == 0
s[].rfreq[0] contains no nulls and has only one value, of length 1
s[].rfreq[0] elements has only one value
s[].rfreq[1] contains no nulls and has only one value, of length 1
s[].rfreq[1] elements has only one value
s[].rfreq[2] contains no nulls and has only one value, of length 1
s[].rfreq[2] elements has only one value
s[].rfreq[3] contains no nulls and has only one value, of length 1
s[].rfreq[3] elements has only one value
s[].rfreq[4] contains no nulls and has only one value, of length 1
s[].rfreq[4] elements has only one value
s[].rfreq[5] contains no nulls and has only one value, of length 1
s[].rfreq[5] elements has only one value
s[].len_pack contains no nulls and has only one value, of length 1
s[].len_pack elements has only one value
s[].len_pack[0] == [327685]
s[].len_pack[0] elements == 327685
size(::incs[]) == 14
size(::bzerrorstrings[]) == 16
size(::BZ2_rNums[]) == 512
size(::BZ2_crc32Table[]) == 256
size(::zSuffix[]) == 4
::incs[::blockSize100k] == 29524
::incs[::blockSize100k-1] == 9841
::incs[::srcMode] == 40
::BZ2_rNums[::verbosity] == 619
::BZ2_rNums[::numFileNames] == 720
::BZ2_rNums[::blockSize100k] == 247
::BZ2_rNums[::blockSize100k-1] == 566
::BZ2_rNums[::srcMode] == 481
::BZ2_rNums[::srcMode-1] == 127
::BZ2_rNums[::longestFileName] == 733
::BZ2_rNums[::longestFileName-1] == 214
::BZ2_rNums[::workFactor] == 419
::BZ2_rNums[::workFactor-1] == 472
::BZ2_crc32Table[::verbosity] == 0
::BZ2_crc32Table[::numFileNames] == 79764919
::BZ2_crc32Table[::blockSize100k] == 583659535
::BZ2_crc32Table[::blockSize100k-1] == 638119352
::BZ2_crc32Table[::srcMode] == 222504665
::BZ2_crc32Table[::srcMode-1] == 159529838
::BZ2_crc32Table[::longestFileName] == 1595256236
::BZ2_crc32Table[::longestFileName-1] == 1095957929
::BZ2_crc32Table[::workFactor] == 1889500026
::BZ2_crc32Table[::workFactor-1] == 2111593891
orig(size(s[].len[0])) in ::incs[]
s[::verbosity].code[1][0] in ::incs[]
::fileMetaInfo.__glibc_reserved[] elements == ::verbosity
::fileMetaInfo.__glibc_reserved[] elements == size(s[].len[0])-1
size(s[].len[0])-1 in ::fileMetaInfo.__glibc_reserved[]
size(::BZ2_rNums[])-1 in ::BZ2_rNums[]
s[::verbosity].avail_in_expect in ::BZ2_crc32Table[]
s[].numZ elements == ::verbosity
::verbosity in s[].code[5][0]
s[].code[5][0] elements == ::verbosity
s[].inUse[0] elements == ::keepInputFiles
::smallMode in s[].unseqToSeq[0]
s[].unseqToSeq[0] elements == ::smallMode
s[].blockSize100k elements == ::blockSize100k
::inName == orig(::inName)
::outName == orig(::outName)
::tmpName in ::unzSuffix[]
::tmpName == orig(::tmpName)
::progName == orig(::progName)
::progNameReally == orig(::progNameReally)
s[].workFactor elements == ::workFactor
s[] elements == s[::verbosity]
s[].strm elements == s[::verbosity].strm
s[].strm[0] elements == s[::verbosity].strm[0]
s[].strm->avail_in == s[].avail_in_expect (elementwise)
s[].strm->avail_in is the reverse of s[].avail_in_expect
s[].strm->avail_in elements == s[::verbosity].strm->avail_in
s[::verbosity].avail_in_expect in s[].strm->avail_in
s[].strm->avail_in elements == s[::verbosity].avail_in_expect
s[].strm->total_in_lo32 elements == s[::verbosity].strm->total_in_lo32
s[].strm->total_in_hi32 == s[].avail_in_expect (elementwise)
s[].strm->total_in_hi32 is the reverse of s[].avail_in_expect
s[].strm->total_in_hi32 elements == ::BZ2_crc32Table[::verbosity]
s[::verbosity].avail_in_expect in s[].strm->total_in_hi32
s[].strm->total_in_hi32 elements == s[::verbosity].avail_in_expect
s[].strm->avail_out elements == s[::verbosity].strm->avail_out
s[].strm->total_out_lo32 elements == s[::verbosity].strm->total_out_lo32
s[].strm->state elements == s[::verbosity].strm->state
s[].strm->bzalloc elements == s[::verbosity].strm->bzalloc
s[].strm->bzfree elements == s[::verbosity].strm->bzfree
s[].strm->opaque elements == s[::verbosity].strm->opaque
s[].mode elements == s[::verbosity].mode
s[].state elements == size(::fileMetaInfo.__glibc_reserved[])-1
::BZ2_crc32Table[::verbosity] in s[].avail_in_expect
s[].avail_in_expect elements == ::BZ2_crc32Table[::verbosity]
s[::verbosity].strm->avail_in in s[].avail_in_expect
s[].avail_in_expect elements == s[::verbosity].strm->avail_in
s[].avail_in_expect elements == s[::verbosity].avail_in_expect
s[].arr1 elements == s[::verbosity].arr1
s[].arr1[0] elements == s[::verbosity].arr1[0]
s[].arr2 elements == s[::verbosity].arr2
s[].arr2[0] elements == s[::verbosity].arr2[0]
s[].ftab elements == s[::verbosity].ftab
s[].ftab[0] == orig(s[].ftab[0]) (elementwise)
s[].ftab[0] is the reverse of orig(s[].ftab[0])
s[].ftab[0] elements == s[::verbosity].ftab[0]
orig(s[::verbosity].ftab[0]) in s[].ftab[0]
s[].ftab[0] elements == orig(s[::verbosity].ftab[0])
s[].origPtr elements == s[::verbosity].origPtr
s[].block elements == s[::verbosity].block
s[].block[0] elements == s[::verbosity].block[0]
s[].mtfv elements == s[::verbosity].mtfv
s[].mtfv[0] elements == s[::verbosity].mtfv[0]
s[].zbits elements == s[::verbosity].zbits
s[].zbits[0] elements == s[::verbosity].zbits[0]
s[].state_in_ch elements == s[::verbosity].state_in_ch
s[].state_in_len elements == s[::verbosity].state_in_len
s[].nblock elements == s[::verbosity].nblock
s[].nblockMAX elements == s[::verbosity].nblockMAX
s[].numZ == s[].code[5][0] (elementwise)
s[].numZ is the reverse of s[].code[5][0]
s[].numZ elements == size(s[].len[0])-1
size(s[].len[0])-1 in s[].numZ
s[].nInUse elements == s[::verbosity].nInUse
s[].inUse elements == s[::verbosity].inUse
s[].unseqToSeq[0] elements == s[::verbosity].unseqToSeq[0]
s[].bsBuff elements == s[::verbosity].bsBuff
s[].bsLive elements == s[::verbosity].bsLive
s[].blockCRC elements == s[::verbosity].blockCRC
s[].combinedCRC elements == s[::verbosity].combinedCRC
s[].blockNo elements == s[::verbosity].blockNo
s[].nMTF elements == s[::verbosity].nMTF
s[].mtfFreq elements == s[::verbosity].mtfFreq
s[].mtfFreq[0] elements == s[::verbosity].mtfFreq[0]
s[].selector elements == s[::verbosity].selector
s[].selector[0] elements == s[::verbosity].selector[0]
s[].selectorMtf elements == s[::verbosity].selectorMtf
s[].len[0] elements == s[::verbosity].len[0]
s[].len[0][0] elements == s[::verbosity].len[0][0]
s[].len[1] elements == s[::verbosity].len[1]
s[].len[2] elements == s[::verbosity].len[2]
s[].len[3] elements == s[::verbosity].len[3]
s[].len[4] elements == s[::verbosity].len[4]
s[].len[5] elements == s[::verbosity].len[5]
s[].len[5][0] elements == s[::verbosity].len[5][0]
s[].code[0] elements == s[::verbosity].code[0]
s[].code[0][0] elements == s[::verbosity].code[0][0]
s[].code[1] elements == s[::verbosity].code[1]
s[].code[1][0] elements == size(::incs[])-1
size(::incs[])-1 in s[].code[1][0]
s[].code[1][0] elements == s[::verbosity].code[1][0]
s[].code[2] elements == s[::verbosity].code[2]
s[].code[2][0] elements == size(::incs[])
size(::incs[]) in s[].code[2][0]
s[].code[2][0] elements == s[::verbosity].code[2][0]
s[].code[3] elements == s[::verbosity].code[3]
s[].code[3][0] elements == size(::bzerrorstrings[])-1
size(::bzerrorstrings[])-1 in s[].code[3][0]
s[].code[3][0] elements == s[::verbosity].code[3][0]
s[].code[4] elements == s[::verbosity].code[4]
s[].code[4][0] elements == size(::bzerrorstrings[])
size(::bzerrorstrings[]) in s[].code[4][0]
s[].code[4][0] elements == s[::verbosity].code[4][0]
s[].code[5] elements == s[::verbosity].code[5]
s[].code[5][0] elements == size(s[].len[0])-1
s[].rfreq[0] elements == s[::verbosity].rfreq[0]
s[].rfreq[1] elements == s[::verbosity].rfreq[1]
s[].rfreq[2] elements == s[::verbosity].rfreq[2]
s[].rfreq[3] elements == s[::verbosity].rfreq[3]
s[].rfreq[4] elements == s[::verbosity].rfreq[4]
s[].rfreq[5] elements == s[::verbosity].rfreq[5]
s[].len_pack elements == s[::verbosity].len_pack
s[].len_pack[0] elements == s[::verbosity].len_pack[0]
orig(s[].ftab[0]) elements == s[::verbosity].ftab[0]
s[::verbosity].ftab[0] in orig(s[].ftab[0])
===========================================================================
..BZ2_bsInitWrite():::ENTER
::fileMetaInfo.st_uid == ::fileMetaInfo.st_gid
::fileMetaInfo.__pad0 == ::verbosity
::fileMetaInfo.st_mtim.tv_sec == ::fileMetaInfo.st_ctim.tv_sec
::fileMetaInfo.st_mtim.tv_nsec == ::fileMetaInfo.st_ctim.tv_nsec
::verbosity == ::exitValue
::verbosity == size(s[])-1
::verbosity == size(s[].strm[0])-1
::verbosity == size(s[].arr1[0])-1
::verbosity == size(s[].arr2[0])-1
::verbosity == size(s[].ftab[0])-1
::verbosity == size(s[].ptr[0])-1
::verbosity == size(s[].block[0])-1
::verbosity == size(s[].mtfv[0])-1
::verbosity == size(s[].zbits[0])-1
::verbosity == size(s[].inUse[0])-1
::verbosity == ::fileMetaInfo.__glibc_reserved[::fileMetaInfo.__pad0]
::verbosity == s[::fileMetaInfo.__pad0].numZ
::verbosity == s[::fileMetaInfo.__pad0].state_out_pos
::verbosity == s[::fileMetaInfo.__pad0].verbosity
::verbosity == ::fileMetaInfo.__glibc_reserved[::verbosity]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::exitValue]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::srcMode-1]
::verbosity == s[::verbosity].numZ
::verbosity == s[::verbosity].state_out_pos
::verbosity == s[::verbosity].verbosity
::verbosity == s[::numFileNames-1].numZ
::verbosity == s[::numFileNames-1].state_out_pos
::verbosity == s[::numFileNames-1].verbosity
::verbosity == s[::numFilesProcessed-1].numZ
::verbosity == s[::numFilesProcessed-1].state_out_pos
::verbosity == s[::numFilesProcessed-1].verbosity
::verbosity == s[::exitValue].numZ
::verbosity == s[::exitValue].state_out_pos
::verbosity == s[::exitValue].verbosity
::verbosity == s[::opMode-1].numZ
::verbosity == s[::opMode-1].state_out_pos
::verbosity == s[::opMode-1].verbosity
::keepInputFiles == ::deleteOutputOnInterrupt
::keepInputFiles == ::noisy
::keepInputFiles == s[::fileMetaInfo.__pad0].inUse[0]
::keepInputFiles == s[::verbosity].inUse[0]
::keepInputFiles == s[::numFileNames-1].inUse[0]
::keepInputFiles == s[::numFilesProcessed-1].inUse[0]
::keepInputFiles == s[::exitValue].inUse[0]
::keepInputFiles == s[::opMode-1].inUse[0]
::smallMode == ::forceOverwrite
::smallMode == ::testFailsExist
::smallMode == ::unzFailsExist
::numFileNames == ::numFilesProcessed
::numFileNames == ::opMode
::numFileNames == size(s[])
::numFileNames == size(s[].strm[0])
::numFileNames == size(s[].arr1[0])
::numFileNames == size(s[].arr2[0])
::numFileNames == size(s[].ftab[0])
::numFileNames == size(s[].ptr[0])
::numFileNames == size(s[].block[0])
::numFileNames == size(s[].mtfv[0])
::numFileNames == size(s[].zbits[0])
::numFileNames == size(s[].inUse[0])
::numFileNames == ::incs[::fileMetaInfo.__pad0]
::numFileNames == ::incs[::verbosity]
::numFileNames == ::incs[::numFileNames-1]
::numFileNames == ::incs[::numFilesProcessed-1]
::numFileNames == ::incs[::exitValue]
::numFileNames == ::incs[::opMode-1]
::numFileNames == s[::fileMetaInfo.__pad0].state_in_len
::numFileNames == s[::fileMetaInfo.__pad0].blockNo
::numFileNames == s[::verbosity].state_in_len
::numFileNames == s[::verbosity].blockNo
::numFileNames == s[::numFileNames-1].state_in_len
::numFileNames == s[::numFileNames-1].blockNo
::numFileNames == s[::numFilesProcessed-1].state_in_len
::numFileNames == s[::numFilesProcessed-1].blockNo
::numFileNames == s[::exitValue].state_in_len
::numFileNames == s[::exitValue].blockNo
::numFileNames == s[::opMode-1].state_in_len
::numFileNames == s[::opMode-1].blockNo
::blockSize100k == s[::fileMetaInfo.__pad0].blockSize100k
::blockSize100k == s[::verbosity].blockSize100k
::blockSize100k == s[::numFileNames-1].blockSize100k
::blockSize100k == s[::numFilesProcessed-1].blockSize100k
::blockSize100k == s[::exitValue].blockSize100k
::blockSize100k == s[::opMode-1].blockSize100k
::srcMode == size(::fileMetaInfo.__glibc_reserved[])
::srcMode == size(::zSuffix[])-1
::srcMode == size(::unzSuffix[])-1
::workFactor == s[::fileMetaInfo.__pad0].workFactor
::workFactor == s[::verbosity].workFactor
::workFactor == s[::numFileNames-1].workFactor
::workFactor == s[::numFilesProcessed-1].workFactor
::workFactor == s[::exitValue].workFactor
::workFactor == s[::opMode-1].workFactor
s[].strm->total_in_hi32 == s[].strm->total_out_lo32
s[].strm->total_in_hi32 == s[].strm->total_out_hi32
s[].mode == s[].state
s[].arr1 == s[].ptr
s[].arr1[0] == s[].ptr[0]
s[].state_in_len == s[].blockNo
s[].numZ == s[].state_out_pos
s[].numZ == s[].verbosity
s[].blockCRC == s[].combinedCRC
size(::incs[])-1 == ::incs[::srcMode-1]
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::fileMetaInfo.__pad0].mode
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::fileMetaInfo.__pad0].state
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::verbosity].mode
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::verbosity].state
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::numFileNames-1].mode
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::numFileNames-1].state
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::numFilesProcessed-1].mode
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::numFilesProcessed-1].state
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::exitValue].mode
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::exitValue].state
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::opMode-1].mode
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::opMode-1].state
size(::zSuffix[]) == size(::unzSuffix[])
size(::zSuffix[]) == ::incs[::numFileNames]
size(::zSuffix[]) == ::incs[::numFilesProcessed]
size(::zSuffix[]) == ::incs[::opMode]
s[::fileMetaInfo.__pad0].strm->total_in_hi32 == ::BZ2_crc32Table[::verbosity]
s[::fileMetaInfo.__pad0].strm->total_out_lo32 == ::BZ2_crc32Table[::verbosity]
s[::fileMetaInfo.__pad0].strm->total_out_hi32 == ::BZ2_crc32Table[::verbosity]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFileNames-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFilesProcessed-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::opMode-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFileNames-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFilesProcessed-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::opMode-1]
::BZ2_crc32Table[::verbosity] == s[::verbosity].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[::verbosity].strm->total_out_lo32
::BZ2_crc32Table[::verbosity] == s[::verbosity].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == s[::numFileNames-1].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[::numFileNames-1].strm->total_out_lo32
::BZ2_crc32Table[::verbosity] == s[::numFileNames-1].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == s[::numFilesProcessed-1].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[::numFilesProcessed-1].strm->total_out_lo32
::BZ2_crc32Table[::verbosity] == s[::numFilesProcessed-1].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == s[::exitValue].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[::exitValue].strm->total_out_lo32
::BZ2_crc32Table[::verbosity] == s[::exitValue].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == s[::opMode-1].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[::opMode-1].strm->total_out_lo32
::BZ2_crc32Table[::verbosity] == s[::opMode-1].strm->total_out_hi32
s[::verbosity] == s[::numFileNames-1]
s[::verbosity] == s[::numFilesProcessed-1]
s[::verbosity] == s[::opMode-1]
s[::verbosity].strm == s[::numFileNames-1].strm
s[::verbosity].strm == s[::numFilesProcessed-1].strm
s[::verbosity].strm == s[::opMode-1].strm
s[::verbosity].strm[0] == s[::numFileNames-1].strm[0]
s[::verbosity].strm[0] == s[::numFilesProcessed-1].strm[0]
s[::verbosity].strm[0] == s[::opMode-1].strm[0]
s[::verbosity].strm->avail_in == s[::numFileNames-1].strm->avail_in
s[::verbosity].strm->avail_in == s[::numFilesProcessed-1].strm->avail_in
s[::verbosity].strm->avail_in == s[::opMode-1].strm->avail_in
s[::verbosity].strm->total_in_lo32 == s[::numFileNames-1].strm->total_in_lo32
s[::verbosity].strm->total_in_lo32 == s[::numFilesProcessed-1].strm->total_in_lo32
s[::verbosity].strm->total_in_lo32 == s[::opMode-1].strm->total_in_lo32
s[::verbosity].strm->avail_out == s[::numFileNames-1].strm->avail_out
s[::verbosity].strm->avail_out == s[::numFilesProcessed-1].strm->avail_out
s[::verbosity].strm->avail_out == s[::opMode-1].strm->avail_out
s[::verbosity].strm->state == s[::numFileNames-1].strm->state
s[::verbosity].strm->state == s[::numFilesProcessed-1].strm->state
s[::verbosity].strm->state == s[::opMode-1].strm->state
s[::verbosity].strm->bzalloc == s[::numFileNames-1].strm->bzalloc
s[::verbosity].strm->bzalloc == s[::numFilesProcessed-1].strm->bzalloc
s[::verbosity].strm->bzalloc == s[::opMode-1].strm->bzalloc
s[::verbosity].strm->bzfree == s[::numFileNames-1].strm->bzfree
s[::verbosity].strm->bzfree == s[::numFilesProcessed-1].strm->bzfree
s[::verbosity].strm->bzfree == s[::opMode-1].strm->bzfree
s[::verbosity].strm->opaque == s[::numFileNames-1].strm->opaque
s[::verbosity].strm->opaque == s[::numFilesProcessed-1].strm->opaque
s[::verbosity].strm->opaque == s[::opMode-1].strm->opaque
s[::verbosity].arr1 == s[::numFileNames-1].arr1
s[::verbosity].arr1 == s[::numFileNames-1].ptr
s[::verbosity].arr1 == s[::numFilesProcessed-1].arr1
s[::verbosity].arr1 == s[::numFilesProcessed-1].ptr
s[::verbosity].arr1 == s[::opMode-1].arr1
s[::verbosity].arr1 == s[::opMode-1].ptr
s[::verbosity].arr1[0] == s[::numFileNames-1].arr1[0]
s[::verbosity].arr1[0] == s[::numFileNames-1].ptr[0]
s[::verbosity].arr1[0] == s[::numFilesProcessed-1].arr1[0]
s[::verbosity].arr1[0] == s[::numFilesProcessed-1].ptr[0]
s[::verbosity].arr1[0] == s[::opMode-1].arr1[0]
s[::verbosity].arr1[0] == s[::opMode-1].ptr[0]
s[::verbosity].arr2 == s[::numFileNames-1].arr2
s[::verbosity].arr2 == s[::numFilesProcessed-1].arr2
s[::verbosity].arr2 == s[::opMode-1].arr2
s[::verbosity].arr2[0] == s[::numFileNames-1].arr2[0]
s[::verbosity].arr2[0] == s[::numFilesProcessed-1].arr2[0]
s[::verbosity].arr2[0] == s[::opMode-1].arr2[0]
s[::verbosity].ftab == s[::numFileNames-1].ftab
s[::verbosity].ftab == s[::numFilesProcessed-1].ftab
s[::verbosity].ftab == s[::opMode-1].ftab
s[::verbosity].ftab[0] == s[::numFileNames-1].ftab[0]
s[::verbosity].ftab[0] == s[::numFilesProcessed-1].ftab[0]
s[::verbosity].ftab[0] == s[::opMode-1].ftab[0]
s[::verbosity].origPtr == s[::numFileNames-1].origPtr
s[::verbosity].origPtr == s[::numFilesProcessed-1].origPtr
s[::verbosity].origPtr == s[::opMode-1].origPtr
s[::verbosity].block == s[::numFileNames-1].block
s[::verbosity].block == s[::numFilesProcessed-1].block
s[::verbosity].block == s[::opMode-1].block
s[::verbosity].block[0] == s[::numFileNames-1].block[0]
s[::verbosity].block[0] == s[::numFilesProcessed-1].block[0]
s[::verbosity].block[0] == s[::opMode-1].block[0]
s[::verbosity].mtfv == s[::numFileNames-1].mtfv
s[::verbosity].mtfv == s[::numFilesProcessed-1].mtfv
s[::verbosity].mtfv == s[::opMode-1].mtfv
s[::verbosity].mtfv[0] == s[::numFileNames-1].mtfv[0]
s[::verbosity].mtfv[0] == s[::numFilesProcessed-1].mtfv[0]
s[::verbosity].mtfv[0] == s[::opMode-1].mtfv[0]
s[::verbosity].zbits == s[::numFileNames-1].zbits
s[::verbosity].zbits == s[::numFilesProcessed-1].zbits
s[::verbosity].zbits == s[::opMode-1].zbits
s[::verbosity].zbits[0] == s[::numFileNames-1].zbits[0]
s[::verbosity].zbits[0] == s[::numFilesProcessed-1].zbits[0]
s[::verbosity].zbits[0] == s[::opMode-1].zbits[0]
s[::verbosity].state_in_ch == s[::numFileNames-1].state_in_ch
s[::verbosity].state_in_ch == s[::numFilesProcessed-1].state_in_ch
s[::verbosity].state_in_ch == s[::opMode-1].state_in_ch
s[::verbosity].nblock == s[::numFileNames-1].nblock
s[::verbosity].nblock == s[::numFilesProcessed-1].nblock
s[::verbosity].nblock == s[::opMode-1].nblock
s[::verbosity].nblockMAX == s[::numFileNames-1].nblockMAX
s[::verbosity].nblockMAX == s[::numFilesProcessed-1].nblockMAX
s[::verbosity].nblockMAX == s[::opMode-1].nblockMAX
s[::verbosity].inUse == s[::numFileNames-1].inUse
s[::verbosity].inUse == s[::numFilesProcessed-1].inUse
s[::verbosity].inUse == s[::opMode-1].inUse
s[::verbosity].blockCRC == s[::numFileNames-1].blockCRC
s[::verbosity].blockCRC == s[::numFileNames-1].combinedCRC
s[::verbosity].blockCRC == s[::numFilesProcessed-1].blockCRC
s[::verbosity].blockCRC == s[::numFilesProcessed-1].combinedCRC
s[::verbosity].blockCRC == s[::opMode-1].blockCRC
s[::verbosity].blockCRC == s[::opMode-1].combinedCRC
::incs has only one value
::incs[] == [1, 4, 13, 40, 121, 364, 1093, 3280, 9841, 29524, 88573, 265720, 797161, 2391484]
::bzerrorstrings has only one value
::bzerrorstrings[] == [OK, SEQUENCE_ERROR, PARAM_ERROR, MEM_ERROR, DATA_ERROR, DATA_ERROR_MAGIC, IO_ERROR, UNEXPECTED_EOF, OUTBUFF_FULL, CONFIG_ERROR, ???, ???, ???, ???, ???, ???]
::fileMetaInfo has only one value
::fileMetaInfo.st_dev == 2049
::fileMetaInfo.st_ino == 936492
::fileMetaInfo.st_nlink == 1
::fileMetaInfo.st_mode == 33277
::fileMetaInfo.st_uid == 1000
::fileMetaInfo.st_rdev == 0
::fileMetaInfo.st_size == 5738700
::fileMetaInfo.st_blksize == 4096
::fileMetaInfo.st_blocks == 11216
::fileMetaInfo.st_atim has only one value
::fileMetaInfo.st_atim.tv_sec == 1496096467
::fileMetaInfo.st_atim.tv_nsec == 709424920
::fileMetaInfo.st_mtim has only one value
::fileMetaInfo.st_mtim.tv_sec == 1483563943
::fileMetaInfo.st_mtim.tv_nsec == 421335644
::fileMetaInfo.st_ctim has only one value
::fileMetaInfo.__glibc_reserved has only one value
::fileMetaInfo.__glibc_reserved[] == [0, 0, 0]
::fileMetaInfo.__glibc_reserved[] elements == 0
::BZ2_rNums has only one value
::BZ2_rNums[] == [619, 720, 127, 481, 931, 816, 813, 233, 566, 247, 985, 724, 205, 454, 863, 491, 741, 242, 949, 214, 733, 859, 335, 708, 621, 574, 73, 654, 730, 472, 419, 436, 278, 496, 867, 210, 399, 680, 480, 51, 878, 465, 811, 169, 869, 675, 611, 697, 867, 561, 862, 687, 507, 283, 482, 129, 807, 591, 733, 623, 150, 238, 59, 379, 684, 877, 625, 169, 643, 105, 170, 607, 520, 932, 727, 476, 693, 425, 174, 647, 73, 122, 335, 530, 442, 853, 695, 249, 445, 515, 909, 545, 703, 919, 874, 474, 882, 500, 594, 612, 641, 801, 220, 162, 819, 984, 589, 513, 495, 799, 161, 604, 958, 533, 221, 400, 386, 867, 600, 782, 382, 596, 414, 171, 516, 375, 682, 485, 911, 276, 98, 553, 163, 354, 666, 933, 424, 341, 533, 870, 227, 730, 475, 186, 263, 647, 537, 686, 600, 224, 469, 68, 770, 919, 190, 373, 294, 822, 808, 206, 184, 943, 795, 384, 383, 461, 404, 758, 839, 887, 715, 67, 618, 276, 204, 918, 873, 777, 604, 560, 951, 160, 578, 722, 79, 804, 96, 409, 713, 940, 652, 934, 970, 447, 318, 353, 859, 672, 112, 785, 645, 863, 803, 350, 139, 93, 354, 99, 820, 908, 609, 772, 154, 274, 580, 184, 79, 626, 630, 742, 653, 282, 762, 623, 680, 81, 927, 626, 789, 125, 411, 521, 938, 300, 821, 78, 343, 175, 128, 250, 170, 774, 972, 275, 999, 639, 495, 78, 352, 126, 857, 956, 358, 619, 580, 124, 737, 594, 701, 612, 669, 112, 134, 694, 363, 992, 809, 743, 168, 974, 944, 375, 748, 52, 600, 747, 642, 182, 862, 81, 344, 805, 988, 739, 511, 655, 814, 334, 249, 515, 897, 955, 664, 981, 649, 113, 974, 459, 893, 228, 433, 837, 553, 268, 926, 240, 102, 654, 459, 51, 686, 754, 806, 760, 493, 403, 415, 394, 687, 700, 946, 670, 656, 610, 738, 392, 760, 799, 887, 653, 978, 321, 576, 617, 626, 502, 894, 679, 243, 440, 680, 879, 194, 572, 640, 724, 926, 56, 204, 700, 707, 151, 457, 449, 797, 195, 791, 558, 945, 679, 297, 59, 87, 824, 713, 663, 412, 693, 342, 606, 134, 108, 571, 364, 631, 212, 174, 643, 304, 329, 343, 97, 430, 751, 497, 314, 983, 374, 822, 928, 140, 206, 73, 263, 980, 736, 876, 478, 430, 305, 170, 514, 364, 692, 829, 82, 855, 953, 676, 246, 369, 970, 294, 750, 807, 827, 150, 790, 288, 923, 804, 378, 215, 828, 592, 281, 565, 555, 710, 82, 896, 831, 547, 261, 524, 462, 293, 465, 502, 56, 661, 821, 976, 991, 658, 869, 905, 758, 745, 193, 768, 550, 608, 933, 378, 286, 215, 979, 792, 961, 61, 688, 793, 644, 986, 403, 106, 366, 905, 644, 372, 567, 466, 434, 645, 210, 389, 550, 919, 135, 780, 773, 635, 389, 707, 100, 626, 958, 165, 504, 920, 176, 193, 713, 857, 265, 203, 50, 668, 108, 645, 990, 626, 197, 510, 357, 358, 850, 858, 364, 936, 638]
::BZ2_crc32Table has only one value
::BZ2_crc32Table[] == [0, 79764919, 159529838, 222504665, 319059676, 398814059, 445009330, 507990021, 638119352, 583659535, 797628118, 726387553, 890018660, 835552979, 1015980042, 944750013, 1276238704, 1221641927, 1167319070, 1095957929, 1595256236, 1540665371, 1452775106, 1381403509, 1780037320, 1859660671, 1671105958, 1733955601, 2031960084, 2111593891, 1889500026, 1952343757, 2552477408, 2632100695, 2443283854, 2506133561, 2334638140, 2414271883, 2191915858, 2254759653, 3190512472, 3135915759, 3081330742, 3009969537, 2905550212, 2850959411, 2762807018, 2691435357, 3560074640, 3505614887, 3719321342, 3648080713, 3342211916, 3287746299, 3467911202, 3396681109, 4063920168, 4143685023, 4223187782, 4286162673, 3779000052, 3858754371, 3904687514, 3967668269, 881225847, 809987520, 1023691545, 969234094, 662832811, 591600412, 771767749, 717299826, 311336399, 374308984, 453813921, 533576470, 25881363, 88864420, 134795389, 214552010, 2023205639, 2086057648, 1897238633, 1976864222, 1804852699, 1867694188, 1645340341, 1724971778, 1587496639, 1516133128, 1461550545, 1406951526, 1302016099, 1230646740, 1142491917, 1087903418, 2896545431, 2825181984, 2770861561, 2716262478, 3215044683, 3143675388, 3055782693, 3001194130, 2326604591, 2389456536, 2200899649, 2280525302, 2578013683, 2640855108, 2418763421, 2498394922, 3769900519, 3832873040, 3912640137, 3992402750, 4088425275, 4151408268, 4197601365, 4277358050, 3334271071, 3263032808, 3476998961, 3422541446, 3585640067, 3514407732, 3694837229, 3640369242, 1762451694, 1842216281, 1619975040, 1682949687, 2047383090, 2127137669, 1938468188, 2001449195, 1325665622, 1271206113, 1183200824, 1111960463, 1543535498, 1489069629, 1434599652, 1363369299, 622672798, 568075817, 748617968, 677256519, 907627842, 853037301, 1067152940, 995781531, 51762726, 131386257, 177728840, 240578815, 269590778, 349224269, 429104020, 491947555, 4046411278, 4126034873, 4172115296, 4234965207, 3794477266, 3874110821, 3953728444, 4016571915, 3609705398, 3555108353, 3735388376, 3664026991, 3290680682, 3236090077, 3449943556, 3378572211, 3174993278, 3120533705, 3032266256, 2961025959, 2923101090, 2868635157, 2813903052, 2742672763, 2604032198, 2683796849, 2461293480, 2524268063, 2284983834, 2364738477, 2175806836, 2238787779, 1569362073, 1498123566, 1409854455, 1355396672, 1317987909, 1246755826, 1192025387, 1137557660, 2072149281, 2135122070, 1912620623, 1992383480, 1753615357, 1816598090, 1627664531, 1707420964, 295390185, 358241886, 404320391, 483945776, 43990325, 106832002, 186451547, 266083308, 932423249, 861060070, 1041341759, 986742920, 613929101, 542559546, 756411363, 701822548, 3316196985, 3244833742, 3425377559, 3370778784, 3601682597, 3530312978, 3744426955, 3689838204, 3819031489, 3881883254, 3928223919, 4007849240, 4037393693, 4100235434, 4180117107, 4259748804, 2310601993, 2373574846, 2151335527, 2231098320, 2596047829, 2659030626, 2470359227, 2550115596, 2947551409, 2876312838, 2788305887, 2733848168, 3165939309, 3094707162, 3040238851, 2985771188]
::mammamia == 3216
::keepInputFiles == 1
::smallMode == 0
::numFileNames == 1
::blockSize100k == 9
::longestFileName == 20
::inName == "../inputs/in_big.txt"
::outName == "../inputs/in_big.txt.bz2"
::tmpName == ""
::progName == "zip-injected"
::progNameReally == "./zip-injected"
::outputHandleJustInCase has only one value
::workFactor == 30
::zSuffix has only one value
::zSuffix[] == [.bz2, .bz, .tbz2, .tbz]
::unzSuffix has only one value
::unzSuffix[] == [, , .tar, .tar]
::unzSuffix[] elements one of { "", ".tar" }
s has only one value
s[] contains no nulls and has only one value, of length 1
s[] elements has only one value
s[].strm contains no nulls and has only one value, of length 1
s[].strm elements has only one value
s[].strm[0] contains no nulls and has only one value, of length 1
s[].strm[0] elements has only one value
s[].strm->next_in == [;`             
.: `:  ;`    :;     `        `                    
             :;  ,;;;;;    ;;;;;  `;  .;;: ,;;;;` 
      `````` :; `;,  `;;  ;;` `;; `; `;, `,;`  ,;`
      ;;;;;;;;;..;       .;     ;.`; ;:   ;`    ,;
      ;;      ;. ;;;;,`  ;:     ::`; ;.  `;;;;;;;;
      ;;      ;.  ,:;;;; ;,     :;`; ;.  .;```````
      ;;      ;.      `;`;;     ;:`; ;.   ;       
      ;;      ;.,;`   .; ;;,   ,; `; ;.   ;;    ;:
      ;;      ;. ;;;;;;: ;:;;:;;. `; ;.    ;;;;;; 
                  `,,,   ;, :::   `, ,`     `,,   
                         ;,                       
                         ;,                       
                         ;,                       


                                                  
      `::::                                       
     :::,``                                       
    ::.                                           
   ::  `:::                                       
  ::  :::.                                        
 `:` ::`                                          
 :: .:` `;;;;                                     
 :. :, .;;.,;;                    :;`             
`:  :  ;;    ;:                   :;`             
.: `:  ;`    :;     `        `                    
             :;  ,;;;;;    ;;;;;  `;  .;;: ,;;;;` 
      `````` :; `;,  `;;  ;;` `;; `; `;, `,;`  ,;`
      ;;;;;;;;;..;       .;     ;.`; ;:   ;`    ,;
      ;;      ;. ;;;;,`  ;:     ::`; ;.  `;;;;;;;;
      ;;      ;.  ,:;;;; ;,     :]
s[].strm->next_in elements == ";`             \n.: `:  ;`    :;     `        `                    \n             :;  ,;;;;;    ;;;;;  `;  .;;: ,;;;;` \n      `````` :; `;,  `;;  ;;` `;; `; `;, `,;`  ,;`\n      ;;;;;;;;;..;       .;     ;.`; ;:   ;`    ,;\n      ;;      ;. ;;;;,`  ;:     ::`; ;.  `;;;;;;;;\n      ;;      ;.  ,:;;;; ;,     :;`; ;.  .;```````\n      ;;      ;.      `;`;;     ;:`; ;.   ;       \n      ;;      ;.,;`   .; ;;,   ,; `; ;.   ;;    ;:\n      ;;      ;. ;;;;;;: ;:;;:;;. `; ;.    ;;;;;; \n                  `,,,   ;, :::   `, ,`     `,,   \n                         ;,                       \n                         ;,                       \n                         ;,                       \n\n\n                                                  \n      `::::                                       \n     :::,``                                       \n    ::.                                           \n   ::  `:::                                       \n  ::  :::.                                        \n `:` ::`                                          \n :: .:` `;;;;                                     \n :. :, .;;.,;;                    :;`             \n`:  :  ;;    ;:                   :;`             \n.: `:  ;`    :;     `        `                    \n             :;  ,;;;;;    ;;;;;  `;  .;;: ,;;;;` \n      `````` :; `;,  `;;  ;;` `;; `; `;, `,;`  ,;`\n      ;;;;;;;;;..;       .;     ;.`; ;:   ;`    ,;\n      ;;      ;. ;;;;,`  ;:     ::`; ;.  `;;;;;;;;\n      ;;      ;.  ,:;;;; ;,     :"
s[].strm->avail_in == [1479]
s[].strm->avail_in elements == 1479
s[].strm->total_in_lo32 == [1578521]
s[].strm->total_in_lo32 elements == 1578521
s[].strm->total_in_hi32 == [0]
s[].strm->total_in_hi32 elements == 0
s[].strm->avail_out == [5000]
s[].strm->avail_out elements == 5000
s[].strm->state contains no nulls and has only one value, of length 1
s[].strm->state elements has only one value
s[].strm->bzalloc contains no nulls and has only one value, of length 1
s[].strm->bzalloc elements has only one value
s[].strm->bzfree contains no nulls and has only one value, of length 1
s[].strm->bzfree elements has only one value
s[].strm->opaque == [null]
s[].strm->opaque elements == null
s[].mode == [2]
s[].mode elements == 2
s[].arr1 contains no nulls and has only one value, of length 1
s[].arr1 elements has only one value
s[].arr1[0] == [899926]
s[].arr1[0] elements == 899926
s[].arr2 contains no nulls and has only one value, of length 1
s[].arr2 elements has only one value
s[].arr2[0] == [538970634]
s[].arr2[0] elements == 538970634
s[].ftab contains no nulls and has only one value, of length 1
s[].ftab elements has only one value
s[].ftab[0] == [4294967295]
s[].ftab[0] elements == 4294967295L
s[].origPtr == [65814]
s[].origPtr elements == 65814
s[].block contains no nulls and has only one value, of length 1
s[].block elements has only one value
s[].block[0] == [10]
s[].block[0] elements == 10
s[].mtfv contains no nulls and has only one value, of length 1
s[].mtfv elements has only one value
s[].mtfv[0] == [47958]
s[].mtfv[0] elements == 47958
s[].zbits contains no nulls and has only one value, of length 1
s[].zbits elements has only one value
s[].zbits[0] == [6]
s[].zbits[0] elements == 6
s[].workFactor == [30]
s[].workFactor elements == 30
s[].state_in_ch == [58]
s[].state_in_ch elements == 58
s[].state_in_len == [1]
s[].state_in_len elements == 1
s[].nblock == [899982]
s[].nblock elements == 899982
s[].nblockMAX == [899981]
s[].nblockMAX elements == 899981
s[].numZ == [0]
s[].numZ elements == 0
s[].inUse contains no nulls and has only one value, of length 1
s[].inUse elements has only one value
s[].inUse[0] == [1]
s[].inUse[0] elements == 1
s[].blockCRC == [4044990084]
s[].blockCRC elements == 4044990084L
s[].blockSize100k == [9]
s[].blockSize100k elements == 9
size(::incs[]) == 14
size(::bzerrorstrings[]) == 16
size(::BZ2_rNums[]) == 512
size(::BZ2_crc32Table[]) == 256
size(::zSuffix[]) == 4
::incs[::blockSize100k] == 29524
::incs[::blockSize100k-1] == 9841
::incs[::srcMode] == 40
::BZ2_rNums[::verbosity] == 619
::BZ2_rNums[::numFileNames] == 720
::BZ2_rNums[::blockSize100k] == 247
::BZ2_rNums[::blockSize100k-1] == 566
::BZ2_rNums[::srcMode] == 481
::BZ2_rNums[::srcMode-1] == 127
::BZ2_rNums[::longestFileName] == 733
::BZ2_rNums[::longestFileName-1] == 214
::BZ2_rNums[::workFactor] == 419
::BZ2_rNums[::workFactor-1] == 472
::BZ2_crc32Table[::verbosity] == 0
::BZ2_crc32Table[::numFileNames] == 79764919
::BZ2_crc32Table[::blockSize100k] == 583659535
::BZ2_crc32Table[::blockSize100k-1] == 638119352
::BZ2_crc32Table[::srcMode] == 222504665
::BZ2_crc32Table[::srcMode-1] == 159529838
::BZ2_crc32Table[::longestFileName] == 1595256236
::BZ2_crc32Table[::longestFileName-1] == 1095957929
::BZ2_crc32Table[::workFactor] == 1889500026
::BZ2_crc32Table[::workFactor-1] == 2111593891
::fileMetaInfo.__glibc_reserved[] elements == ::verbosity
size(::BZ2_rNums[])-1 in ::BZ2_rNums[]
s[].numZ elements == ::verbosity
s[].inUse[0] elements == ::keepInputFiles
s[].state_in_len elements == ::numFileNames
s[].blockSize100k elements == ::blockSize100k
::tmpName in ::unzSuffix[]
s[].workFactor elements == ::workFactor
s[] elements == s[::verbosity]
s[].strm elements == s[::verbosity].strm
s[].strm[0] elements == s[::verbosity].strm[0]
s[].strm->avail_in elements == s[::verbosity].strm->avail_in
s[].strm->total_in_lo32 elements == s[::verbosity].strm->total_in_lo32
s[].strm->total_in_hi32 elements == ::BZ2_crc32Table[::verbosity]
s[].strm->avail_out elements == s[::verbosity].strm->avail_out
s[].strm->state elements == s[::verbosity].strm->state
s[].strm->bzalloc elements == s[::verbosity].strm->bzalloc
s[].strm->bzfree elements == s[::verbosity].strm->bzfree
s[].strm->opaque elements == s[::verbosity].strm->opaque
s[].mode elements == size(::fileMetaInfo.__glibc_reserved[])-1
s[].arr1 elements == s[::verbosity].arr1
s[].arr1[0] elements == s[::verbosity].arr1[0]
s[].arr2 elements == s[::verbosity].arr2
s[].arr2[0] elements == s[::verbosity].arr2[0]
s[].ftab elements == s[::verbosity].ftab
s[].ftab[0] elements == s[::verbosity].ftab[0]
s[].origPtr elements == s[::verbosity].origPtr
s[].block elements == s[::verbosity].block
s[].block[0] elements == s[::verbosity].block[0]
s[].mtfv elements == s[::verbosity].mtfv
s[].mtfv[0] elements == s[::verbosity].mtfv[0]
s[].zbits elements == s[::verbosity].zbits
s[].zbits[0] elements == s[::verbosity].zbits[0]
s[].state_in_ch elements == s[::verbosity].state_in_ch
s[].nblock elements == s[::verbosity].nblock
s[].nblockMAX elements == s[::verbosity].nblockMAX
s[].inUse elements == s[::verbosity].inUse
s[].blockCRC elements == s[::verbosity].blockCRC
===========================================================================
..BZ2_bsInitWrite():::EXIT
::incs == orig(::incs)
::incs[] == orig(::incs[])
::bzerrorstrings == orig(::bzerrorstrings)
::fileMetaInfo == orig(::fileMetaInfo)
::fileMetaInfo.st_dev == orig(::fileMetaInfo.st_dev)
::fileMetaInfo.st_ino == orig(::fileMetaInfo.st_ino)
::fileMetaInfo.st_nlink == orig(::fileMetaInfo.st_nlink)
::fileMetaInfo.st_mode == orig(::fileMetaInfo.st_mode)
::fileMetaInfo.st_uid == ::fileMetaInfo.st_gid
::fileMetaInfo.st_uid == orig(::fileMetaInfo.st_uid)
::fileMetaInfo.st_uid == orig(::fileMetaInfo.st_gid)
::fileMetaInfo.__pad0 == ::verbosity
::fileMetaInfo.st_rdev == orig(::fileMetaInfo.st_rdev)
::fileMetaInfo.st_size == orig(::fileMetaInfo.st_size)
::fileMetaInfo.st_blksize == orig(::fileMetaInfo.st_blksize)
::fileMetaInfo.st_blocks == orig(::fileMetaInfo.st_blocks)
::fileMetaInfo.st_atim == orig(::fileMetaInfo.st_atim)
::fileMetaInfo.st_atim.tv_sec == orig(::fileMetaInfo.st_atim.tv_sec)
::fileMetaInfo.st_atim.tv_nsec == orig(::fileMetaInfo.st_atim.tv_nsec)
::fileMetaInfo.st_mtim == orig(::fileMetaInfo.st_mtim)
::fileMetaInfo.st_mtim.tv_sec == ::fileMetaInfo.st_ctim.tv_sec
::fileMetaInfo.st_mtim.tv_sec == orig(::fileMetaInfo.st_mtim.tv_sec)
::fileMetaInfo.st_mtim.tv_sec == orig(::fileMetaInfo.st_ctim.tv_sec)
::fileMetaInfo.st_mtim.tv_nsec == ::fileMetaInfo.st_ctim.tv_nsec
::fileMetaInfo.st_mtim.tv_nsec == orig(::fileMetaInfo.st_mtim.tv_nsec)
::fileMetaInfo.st_mtim.tv_nsec == orig(::fileMetaInfo.st_ctim.tv_nsec)
::fileMetaInfo.st_ctim == orig(::fileMetaInfo.st_ctim)
::fileMetaInfo.__glibc_reserved == orig(::fileMetaInfo.__glibc_reserved)
::fileMetaInfo.__glibc_reserved[] == orig(::fileMetaInfo.__glibc_reserved[])
::BZ2_rNums == orig(::BZ2_rNums)
::BZ2_rNums[] == orig(::BZ2_rNums[])
::BZ2_crc32Table == orig(::BZ2_crc32Table)
::BZ2_crc32Table[] == orig(::BZ2_crc32Table[])
::mammamia == orig(::mammamia)
::verbosity == ::exitValue
::verbosity == orig(::fileMetaInfo.__pad0)
::verbosity == orig(::verbosity)
::verbosity == orig(::exitValue)
::verbosity == size(s[])-1
::verbosity == size(s[].strm[0])-1
::verbosity == size(s[].arr1[0])-1
::verbosity == size(s[].arr2[0])-1
::verbosity == size(s[].ftab[0])-1
::verbosity == size(s[].ptr[0])-1
::verbosity == size(s[].block[0])-1
::verbosity == size(s[].mtfv[0])-1
::verbosity == size(s[].zbits[0])-1
::verbosity == size(s[].inUse[0])-1
::verbosity == orig(size(s[]))-1
::verbosity == orig(size(s[].strm[0]))-1
::verbosity == orig(size(s[].arr1[0]))-1
::verbosity == orig(size(s[].arr2[0]))-1
::verbosity == orig(size(s[].ftab[0]))-1
::verbosity == orig(size(s[].ptr[0]))-1
::verbosity == orig(size(s[].block[0]))-1
::verbosity == orig(size(s[].mtfv[0]))-1
::verbosity == orig(size(s[].zbits[0]))-1
::verbosity == orig(size(s[].inUse[0]))-1
::verbosity == ::fileMetaInfo.__glibc_reserved[::fileMetaInfo.__pad0]
::verbosity == s[::fileMetaInfo.__pad0].numZ
::verbosity == s[::fileMetaInfo.__pad0].state_out_pos
::verbosity == s[::fileMetaInfo.__pad0].bsLive
::verbosity == s[::fileMetaInfo.__pad0].verbosity
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::fileMetaInfo.__pad0)])
::verbosity == orig(s[post(::fileMetaInfo.__pad0)].numZ)
::verbosity == orig(s[post(::fileMetaInfo.__pad0)].state_out_pos)
::verbosity == orig(s[post(::fileMetaInfo.__pad0)].verbosity)
::verbosity == ::fileMetaInfo.__glibc_reserved[::verbosity]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::exitValue]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::srcMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::fileMetaInfo.__pad0)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::verbosity)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFileNames)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFileNames)-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFilesProcessed)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFilesProcessed)-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::exitValue)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::opMode)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::opMode)-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::srcMode)-1]
::verbosity == s[::verbosity].numZ
::verbosity == s[::verbosity].state_out_pos
::verbosity == s[::verbosity].bsLive
::verbosity == s[::verbosity].verbosity
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::verbosity)])
::verbosity == orig(s[post(::verbosity)].numZ)
::verbosity == orig(s[post(::verbosity)].state_out_pos)
::verbosity == orig(s[post(::verbosity)].verbosity)
::verbosity == s[::numFileNames-1].numZ
::verbosity == s[::numFileNames-1].state_out_pos
::verbosity == s[::numFileNames-1].bsLive
::verbosity == s[::numFileNames-1].verbosity
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFileNames)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFileNames)-1])
::verbosity == orig(s[post(::numFileNames)-1].numZ)
::verbosity == orig(s[post(::numFileNames)-1].state_out_pos)
::verbosity == orig(s[post(::numFileNames)-1].verbosity)
::verbosity == s[::numFilesProcessed-1].numZ
::verbosity == s[::numFilesProcessed-1].state_out_pos
::verbosity == s[::numFilesProcessed-1].bsLive
::verbosity == s[::numFilesProcessed-1].verbosity
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFilesProcessed)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFilesProcessed)-1])
::verbosity == orig(s[post(::numFilesProcessed)-1].numZ)
::verbosity == orig(s[post(::numFilesProcessed)-1].state_out_pos)
::verbosity == orig(s[post(::numFilesProcessed)-1].verbosity)
::verbosity == s[::exitValue].numZ
::verbosity == s[::exitValue].state_out_pos
::verbosity == s[::exitValue].bsLive
::verbosity == s[::exitValue].verbosity
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::exitValue)])
::verbosity == orig(s[post(::exitValue)].numZ)
::verbosity == orig(s[post(::exitValue)].state_out_pos)
::verbosity == orig(s[post(::exitValue)].verbosity)
::verbosity == s[::opMode-1].numZ
::verbosity == s[::opMode-1].state_out_pos
::verbosity == s[::opMode-1].bsLive
::verbosity == s[::opMode-1].verbosity
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::opMode)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::opMode)-1])
::verbosity == orig(s[post(::opMode)-1].numZ)
::verbosity == orig(s[post(::opMode)-1].state_out_pos)
::verbosity == orig(s[post(::opMode)-1].verbosity)
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::srcMode)-1])
::verbosity == s[orig(::fileMetaInfo.__pad0)].numZ
::verbosity == s[orig(::verbosity)].numZ
::verbosity == s[orig(::numFileNames)-1].numZ
::verbosity == s[orig(::numFilesProcessed)-1].numZ
::verbosity == s[orig(::exitValue)].numZ
::verbosity == s[orig(::opMode)-1].numZ
::verbosity == s[orig(::fileMetaInfo.__pad0)].state_out_pos
::verbosity == s[orig(::verbosity)].state_out_pos
::verbosity == s[orig(::numFileNames)-1].state_out_pos
::verbosity == s[orig(::numFilesProcessed)-1].state_out_pos
::verbosity == s[orig(::exitValue)].state_out_pos
::verbosity == s[orig(::opMode)-1].state_out_pos
::verbosity == s[orig(::fileMetaInfo.__pad0)].bsLive
::verbosity == s[orig(::verbosity)].bsLive
::verbosity == s[orig(::numFileNames)-1].bsLive
::verbosity == s[orig(::numFilesProcessed)-1].bsLive
::verbosity == s[orig(::exitValue)].bsLive
::verbosity == s[orig(::opMode)-1].bsLive
::verbosity == s[orig(::fileMetaInfo.__pad0)].verbosity
::verbosity == s[orig(::verbosity)].verbosity
::verbosity == s[orig(::numFileNames)-1].verbosity
::verbosity == s[orig(::numFilesProcessed)-1].verbosity
::verbosity == s[orig(::exitValue)].verbosity
::verbosity == s[orig(::opMode)-1].verbosity
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::fileMetaInfo.__pad0])
::verbosity == orig(s[::fileMetaInfo.__pad0].numZ)
::verbosity == orig(s[::fileMetaInfo.__pad0].state_out_pos)
::verbosity == orig(s[::fileMetaInfo.__pad0].verbosity)
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::verbosity])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFileNames])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFileNames-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFilesProcessed])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFilesProcessed-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::exitValue])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::opMode])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::opMode-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::srcMode-1])
::verbosity == orig(s[::verbosity].numZ)
::verbosity == orig(s[::verbosity].state_out_pos)
::verbosity == orig(s[::verbosity].verbosity)
::verbosity == orig(s[::numFileNames-1].numZ)
::verbosity == orig(s[::numFileNames-1].state_out_pos)
::verbosity == orig(s[::numFileNames-1].verbosity)
::verbosity == orig(s[::numFilesProcessed-1].numZ)
::verbosity == orig(s[::numFilesProcessed-1].state_out_pos)
::verbosity == orig(s[::numFilesProcessed-1].verbosity)
::verbosity == orig(s[::exitValue].numZ)
::verbosity == orig(s[::exitValue].state_out_pos)
::verbosity == orig(s[::exitValue].verbosity)
::verbosity == orig(s[::opMode-1].numZ)
::verbosity == orig(s[::opMode-1].state_out_pos)
::verbosity == orig(s[::opMode-1].verbosity)
::keepInputFiles == ::deleteOutputOnInterrupt
::keepInputFiles == ::noisy
::keepInputFiles == orig(::keepInputFiles)
::keepInputFiles == orig(::deleteOutputOnInterrupt)
::keepInputFiles == orig(::noisy)
::keepInputFiles == s[::fileMetaInfo.__pad0].inUse[0]
::keepInputFiles == orig(s[post(::fileMetaInfo.__pad0)].inUse[0])
::keepInputFiles == s[::verbosity].inUse[0]
::keepInputFiles == orig(s[post(::verbosity)].inUse[0])
::keepInputFiles == s[::numFileNames-1].inUse[0]
::keepInputFiles == orig(s[post(::numFileNames)-1].inUse[0])
::keepInputFiles == s[::numFilesProcessed-1].inUse[0]
::keepInputFiles == orig(s[post(::numFilesProcessed)-1].inUse[0])
::keepInputFiles == s[::exitValue].inUse[0]
::keepInputFiles == orig(s[post(::exitValue)].inUse[0])
::keepInputFiles == s[::opMode-1].inUse[0]
::keepInputFiles == orig(s[post(::opMode)-1].inUse[0])
::keepInputFiles == s[orig(::fileMetaInfo.__pad0)].inUse[0]
::keepInputFiles == s[orig(::verbosity)].inUse[0]
::keepInputFiles == s[orig(::numFileNames)-1].inUse[0]
::keepInputFiles == s[orig(::numFilesProcessed)-1].inUse[0]
::keepInputFiles == s[orig(::exitValue)].inUse[0]
::keepInputFiles == s[orig(::opMode)-1].inUse[0]
::keepInputFiles == orig(s[::fileMetaInfo.__pad0].inUse[0])
::keepInputFiles == orig(s[::verbosity].inUse[0])
::keepInputFiles == orig(s[::numFileNames-1].inUse[0])
::keepInputFiles == orig(s[::numFilesProcessed-1].inUse[0])
::keepInputFiles == orig(s[::exitValue].inUse[0])
::keepInputFiles == orig(s[::opMode-1].inUse[0])
::smallMode == ::forceOverwrite
::smallMode == ::testFailsExist
::smallMode == ::unzFailsExist
::smallMode == orig(::smallMode)
::smallMode == orig(::forceOverwrite)
::smallMode == orig(::testFailsExist)
::smallMode == orig(::unzFailsExist)
::numFileNames == ::numFilesProcessed
::numFileNames == ::opMode
::numFileNames == orig(::numFileNames)
::numFileNames == orig(::numFilesProcessed)
::numFileNames == orig(::opMode)
::numFileNames == orig(size(s[]))
::numFileNames == orig(size(s[].strm[0]))
::numFileNames == orig(size(s[].arr1[0]))
::numFileNames == orig(size(s[].arr2[0]))
::numFileNames == orig(size(s[].ftab[0]))
::numFileNames == orig(size(s[].ptr[0]))
::numFileNames == orig(size(s[].block[0]))
::numFileNames == orig(size(s[].mtfv[0]))
::numFileNames == orig(size(s[].zbits[0]))
::numFileNames == orig(size(s[].inUse[0]))
::numFileNames == ::incs[::fileMetaInfo.__pad0]
::numFileNames == ::incs[::verbosity]
::numFileNames == ::incs[::numFileNames-1]
::numFileNames == ::incs[::numFilesProcessed-1]
::numFileNames == ::incs[::exitValue]
::numFileNames == ::incs[::opMode-1]
::numFileNames == ::incs[orig(::fileMetaInfo.__pad0)]
::numFileNames == ::incs[orig(::verbosity)]
::numFileNames == ::incs[orig(::numFileNames)-1]
::numFileNames == ::incs[orig(::numFilesProcessed)-1]
::numFileNames == ::incs[orig(::exitValue)]
::numFileNames == ::incs[orig(::opMode)-1]
::numFileNames == s[::fileMetaInfo.__pad0].state_in_len
::numFileNames == s[::fileMetaInfo.__pad0].blockNo
::numFileNames == orig(::incs[post(::fileMetaInfo.__pad0)])
::numFileNames == orig(s[post(::fileMetaInfo.__pad0)].state_in_len)
::numFileNames == orig(s[post(::fileMetaInfo.__pad0)].blockNo)
::numFileNames == s[::verbosity].state_in_len
::numFileNames == s[::verbosity].blockNo
::numFileNames == orig(::incs[post(::verbosity)])
::numFileNames == orig(s[post(::verbosity)].state_in_len)
::numFileNames == orig(s[post(::verbosity)].blockNo)
::numFileNames == s[::numFileNames-1].state_in_len
::numFileNames == s[::numFileNames-1].blockNo
::numFileNames == orig(::incs[post(::numFileNames)-1])
::numFileNames == orig(s[post(::numFileNames)-1].state_in_len)
::numFileNames == orig(s[post(::numFileNames)-1].blockNo)
::numFileNames == s[::numFilesProcessed-1].state_in_len
::numFileNames == s[::numFilesProcessed-1].blockNo
::numFileNames == orig(::incs[post(::numFilesProcessed)-1])
::numFileNames == orig(s[post(::numFilesProcessed)-1].state_in_len)
::numFileNames == orig(s[post(::numFilesProcessed)-1].blockNo)
::numFileNames == s[::exitValue].state_in_len
::numFileNames == s[::exitValue].blockNo
::numFileNames == orig(::incs[post(::exitValue)])
::numFileNames == orig(s[post(::exitValue)].state_in_len)
::numFileNames == orig(s[post(::exitValue)].blockNo)
::numFileNames == s[::opMode-1].state_in_len
::numFileNames == s[::opMode-1].blockNo
::numFileNames == orig(::incs[post(::opMode)-1])
::numFileNames == orig(s[post(::opMode)-1].state_in_len)
::numFileNames == orig(s[post(::opMode)-1].blockNo)
::numFileNames == s[orig(::fileMetaInfo.__pad0)].state_in_len
::numFileNames == s[orig(::verbosity)].state_in_len
::numFileNames == s[orig(::numFileNames)-1].state_in_len
::numFileNames == s[orig(::numFilesProcessed)-1].state_in_len
::numFileNames == s[orig(::exitValue)].state_in_len
::numFileNames == s[orig(::opMode)-1].state_in_len
::numFileNames == s[orig(::fileMetaInfo.__pad0)].blockNo
::numFileNames == s[orig(::verbosity)].blockNo
::numFileNames == s[orig(::numFileNames)-1].blockNo
::numFileNames == s[orig(::numFilesProcessed)-1].blockNo
::numFileNames == s[orig(::exitValue)].blockNo
::numFileNames == s[orig(::opMode)-1].blockNo
::numFileNames == orig(::incs[::fileMetaInfo.__pad0])
::numFileNames == orig(::incs[::verbosity])
::numFileNames == orig(::incs[::numFileNames-1])
::numFileNames == orig(::incs[::numFilesProcessed-1])
::numFileNames == orig(::incs[::exitValue])
::numFileNames == orig(::incs[::opMode-1])
::numFileNames == orig(s[::fileMetaInfo.__pad0].state_in_len)
::numFileNames == orig(s[::fileMetaInfo.__pad0].blockNo)
::numFileNames == orig(s[::verbosity].state_in_len)
::numFileNames == orig(s[::verbosity].blockNo)
::numFileNames == orig(s[::numFileNames-1].state_in_len)
::numFileNames == orig(s[::numFileNames-1].blockNo)
::numFileNames == orig(s[::numFilesProcessed-1].state_in_len)
::numFileNames == orig(s[::numFilesProcessed-1].blockNo)
::numFileNames == orig(s[::exitValue].state_in_len)
::numFileNames == orig(s[::exitValue].blockNo)
::numFileNames == orig(s[::opMode-1].state_in_len)
::numFileNames == orig(s[::opMode-1].blockNo)
::blockSize100k == orig(::blockSize100k)
::blockSize100k == s[::fileMetaInfo.__pad0].blockSize100k
::blockSize100k == orig(s[post(::fileMetaInfo.__pad0)].blockSize100k)
::blockSize100k == s[::verbosity].blockSize100k
::blockSize100k == orig(s[post(::verbosity)].blockSize100k)
::blockSize100k == s[::numFileNames-1].blockSize100k
::blockSize100k == orig(s[post(::numFileNames)-1].blockSize100k)
::blockSize100k == s[::numFilesProcessed-1].blockSize100k
::blockSize100k == orig(s[post(::numFilesProcessed)-1].blockSize100k)
::blockSize100k == s[::exitValue].blockSize100k
::blockSize100k == orig(s[post(::exitValue)].blockSize100k)
::blockSize100k == s[::opMode-1].blockSize100k
::blockSize100k == orig(s[post(::opMode)-1].blockSize100k)
::blockSize100k == s[orig(::fileMetaInfo.__pad0)].blockSize100k
::blockSize100k == s[orig(::verbosity)].blockSize100k
::blockSize100k == s[orig(::numFileNames)-1].blockSize100k
::blockSize100k == s[orig(::numFilesProcessed)-1].blockSize100k
::blockSize100k == s[orig(::exitValue)].blockSize100k
::blockSize100k == s[orig(::opMode)-1].blockSize100k
::blockSize100k == orig(s[::fileMetaInfo.__pad0].blockSize100k)
::blockSize100k == orig(s[::verbosity].blockSize100k)
::blockSize100k == orig(s[::numFileNames-1].blockSize100k)
::blockSize100k == orig(s[::numFilesProcessed-1].blockSize100k)
::blockSize100k == orig(s[::exitValue].blockSize100k)
::blockSize100k == orig(s[::opMode-1].blockSize100k)
::srcMode == orig(::srcMode)
::srcMode == size(::fileMetaInfo.__glibc_reserved[])
::srcMode == size(::zSuffix[])-1
::srcMode == size(::unzSuffix[])-1
::srcMode == orig(size(::fileMetaInfo.__glibc_reserved[]))
::srcMode == orig(size(::zSuffix[]))-1
::srcMode == orig(size(::unzSuffix[]))-1
::longestFileName == orig(::longestFileName)
::outputHandleJustInCase == orig(::outputHandleJustInCase)
::workFactor == orig(::workFactor)
::workFactor == s[::fileMetaInfo.__pad0].workFactor
::workFactor == orig(s[post(::fileMetaInfo.__pad0)].workFactor)
::workFactor == s[::verbosity].workFactor
::workFactor == orig(s[post(::verbosity)].workFactor)
::workFactor == s[::numFileNames-1].workFactor
::workFactor == orig(s[post(::numFileNames)-1].workFactor)
::workFactor == s[::numFilesProcessed-1].workFactor
::workFactor == orig(s[post(::numFilesProcessed)-1].workFactor)
::workFactor == s[::exitValue].workFactor
::workFactor == orig(s[post(::exitValue)].workFactor)
::workFactor == s[::opMode-1].workFactor
::workFactor == orig(s[post(::opMode)-1].workFactor)
::workFactor == s[orig(::fileMetaInfo.__pad0)].workFactor
::workFactor == s[orig(::verbosity)].workFactor
::workFactor == s[orig(::numFileNames)-1].workFactor
::workFactor == s[orig(::numFilesProcessed)-1].workFactor
::workFactor == s[orig(::exitValue)].workFactor
::workFactor == s[orig(::opMode)-1].workFactor
::workFactor == orig(s[::fileMetaInfo.__pad0].workFactor)
::workFactor == orig(s[::verbosity].workFactor)
::workFactor == orig(s[::numFileNames-1].workFactor)
::workFactor == orig(s[::numFilesProcessed-1].workFactor)
::workFactor == orig(s[::exitValue].workFactor)
::workFactor == orig(s[::opMode-1].workFactor)
::zSuffix == orig(::zSuffix)
::unzSuffix == orig(::unzSuffix)
s[] == orig(s[])
s[].strm == orig(s[].strm)
s[].strm[0] == orig(s[].strm[0])
s[].strm->avail_in == orig(s[].strm->avail_in)
s[].strm->total_in_lo32 == orig(s[].strm->total_in_lo32)
s[].strm->total_in_hi32 == s[].bsBuff
s[].strm->avail_out == orig(s[].strm->avail_out)
s[].strm->total_out_lo32 == s[].bsBuff
s[].strm->total_out_hi32 == s[].bsBuff
s[].strm->state == orig(s[].strm->state)
s[].strm->bzalloc == orig(s[].strm->bzalloc)
s[].strm->bzfree == orig(s[].strm->bzfree)
s[].strm->opaque == orig(s[].strm->opaque)
s[].mode == s[].state
s[].mode == orig(s[].mode)
s[].mode == orig(s[].state)
s[].arr1 == s[].ptr
s[].arr1 == orig(s[].arr1)
s[].arr1 == orig(s[].ptr)
s[].arr1[0] == s[].ptr[0]
s[].arr1[0] == orig(s[].arr1[0])
s[].arr1[0] == orig(s[].ptr[0])
s[].arr2 == orig(s[].arr2)
s[].arr2[0] == orig(s[].arr2[0])
s[].ftab == orig(s[].ftab)
s[].ftab[0] == orig(s[].ftab[0])
s[].origPtr == orig(s[].origPtr)
s[].block == orig(s[].block)
s[].block[0] == orig(s[].block[0])
s[].mtfv == orig(s[].mtfv)
s[].mtfv[0] == orig(s[].mtfv[0])
s[].zbits == orig(s[].zbits)
s[].zbits[0] == orig(s[].zbits[0])
s[].workFactor == orig(s[].workFactor)
s[].state_in_ch == orig(s[].state_in_ch)
s[].state_in_len == s[].blockNo
s[].state_in_len == orig(s[].state_in_len)
s[].state_in_len == orig(s[].blockNo)
s[].nblock == orig(s[].nblock)
s[].nblockMAX == orig(s[].nblockMAX)
s[].numZ == s[].state_out_pos
s[].numZ == s[].bsLive
s[].numZ == s[].verbosity
s[].numZ == orig(s[].numZ)
s[].numZ == orig(s[].state_out_pos)
s[].numZ == orig(s[].verbosity)
s[].inUse == orig(s[].inUse)
s[].inUse[0] == orig(s[].inUse[0])
s[].bsBuff == orig(s[].strm->total_in_hi32)
s[].bsBuff == orig(s[].strm->total_out_lo32)
s[].bsBuff == orig(s[].strm->total_out_hi32)
s[].blockCRC == s[].combinedCRC
s[].blockCRC == orig(s[].blockCRC)
s[].blockCRC == orig(s[].combinedCRC)
s[].blockSize100k == orig(s[].blockSize100k)
size(::incs[])-1 == ::incs[::srcMode-1]
size(::incs[])-1 == ::incs[orig(::srcMode)-1]
size(::incs[])-1 == orig(::incs[post(::srcMode)-1])
size(::incs[])-1 == orig(::incs[::srcMode-1])
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::fileMetaInfo.__pad0].mode
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::fileMetaInfo.__pad0].state
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[post(::fileMetaInfo.__pad0)].mode)
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[post(::fileMetaInfo.__pad0)].state)
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::verbosity].mode
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::verbosity].state
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[post(::verbosity)].mode)
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[post(::verbosity)].state)
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::numFileNames-1].mode
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::numFileNames-1].state
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[post(::numFileNames)-1].mode)
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[post(::numFileNames)-1].state)
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::numFilesProcessed-1].mode
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::numFilesProcessed-1].state
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[post(::numFilesProcessed)-1].mode)
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[post(::numFilesProcessed)-1].state)
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::exitValue].mode
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::exitValue].state
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[post(::exitValue)].mode)
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[post(::exitValue)].state)
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::opMode-1].mode
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::opMode-1].state
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[post(::opMode)-1].mode)
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[post(::opMode)-1].state)
size(::fileMetaInfo.__glibc_reserved[])-1 == s[orig(::fileMetaInfo.__pad0)].mode
size(::fileMetaInfo.__glibc_reserved[])-1 == s[orig(::verbosity)].mode
size(::fileMetaInfo.__glibc_reserved[])-1 == s[orig(::numFileNames)-1].mode
size(::fileMetaInfo.__glibc_reserved[])-1 == s[orig(::numFilesProcessed)-1].mode
size(::fileMetaInfo.__glibc_reserved[])-1 == s[orig(::exitValue)].mode
size(::fileMetaInfo.__glibc_reserved[])-1 == s[orig(::opMode)-1].mode
size(::fileMetaInfo.__glibc_reserved[])-1 == s[orig(::fileMetaInfo.__pad0)].state
size(::fileMetaInfo.__glibc_reserved[])-1 == s[orig(::verbosity)].state
size(::fileMetaInfo.__glibc_reserved[])-1 == s[orig(::numFileNames)-1].state
size(::fileMetaInfo.__glibc_reserved[])-1 == s[orig(::numFilesProcessed)-1].state
size(::fileMetaInfo.__glibc_reserved[])-1 == s[orig(::exitValue)].state
size(::fileMetaInfo.__glibc_reserved[])-1 == s[orig(::opMode)-1].state
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[::fileMetaInfo.__pad0].mode)
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[::fileMetaInfo.__pad0].state)
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[::verbosity].mode)
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[::verbosity].state)
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[::numFileNames-1].mode)
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[::numFileNames-1].state)
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[::numFilesProcessed-1].mode)
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[::numFilesProcessed-1].state)
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[::exitValue].mode)
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[::exitValue].state)
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[::opMode-1].mode)
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[::opMode-1].state)
size(::zSuffix[]) == size(::unzSuffix[])
size(::zSuffix[]) == orig(size(::unzSuffix[]))
size(::zSuffix[]) == ::incs[::numFileNames]
size(::zSuffix[]) == ::incs[::numFilesProcessed]
size(::zSuffix[]) == ::incs[::opMode]
size(::zSuffix[]) == ::incs[orig(::numFileNames)]
size(::zSuffix[]) == ::incs[orig(::numFilesProcessed)]
size(::zSuffix[]) == ::incs[orig(::opMode)]
size(::zSuffix[]) == orig(::incs[post(::numFileNames)])
size(::zSuffix[]) == orig(::incs[post(::numFilesProcessed)])
size(::zSuffix[]) == orig(::incs[post(::opMode)])
size(::zSuffix[]) == orig(::incs[::numFileNames])
size(::zSuffix[]) == orig(::incs[::numFilesProcessed])
size(::zSuffix[]) == orig(::incs[::opMode])
s[::fileMetaInfo.__pad0].strm->total_in_hi32 == ::BZ2_crc32Table[::verbosity]
s[::fileMetaInfo.__pad0].strm->total_out_lo32 == ::BZ2_crc32Table[::verbosity]
s[::fileMetaInfo.__pad0].strm->total_out_hi32 == ::BZ2_crc32Table[::verbosity]
s[::fileMetaInfo.__pad0].bsBuff == ::BZ2_crc32Table[::verbosity]
orig(s[post(::fileMetaInfo.__pad0)].strm->total_in_hi32) == ::BZ2_crc32Table[::verbosity]
orig(s[post(::fileMetaInfo.__pad0)].strm->total_out_lo32) == ::BZ2_crc32Table[::verbosity]
orig(s[post(::fileMetaInfo.__pad0)].strm->total_out_hi32) == ::BZ2_crc32Table[::verbosity]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFileNames-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFilesProcessed-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::opMode-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[orig(::numFileNames)-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[orig(::numFilesProcessed)-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[orig(::opMode)-1]
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[post(::numFileNames)-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[post(::numFilesProcessed)-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[post(::opMode)-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[::numFileNames-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[::numFilesProcessed-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[::opMode-1])
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFileNames-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFilesProcessed-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::opMode-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[orig(::numFileNames)-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[orig(::numFilesProcessed)-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[orig(::opMode)-1]
::BZ2_crc32Table[::verbosity] == s[::verbosity].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[::verbosity].strm->total_out_lo32
::BZ2_crc32Table[::verbosity] == s[::verbosity].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == s[::verbosity].bsBuff
::BZ2_crc32Table[::verbosity] == orig(s[post(::verbosity)].strm->total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[post(::verbosity)].strm->total_out_lo32)
::BZ2_crc32Table[::verbosity] == orig(s[post(::verbosity)].strm->total_out_hi32)
::BZ2_crc32Table[::verbosity] == s[::numFileNames-1].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[::numFileNames-1].strm->total_out_lo32
::BZ2_crc32Table[::verbosity] == s[::numFileNames-1].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == s[::numFileNames-1].bsBuff
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[post(::numFileNames)-1])
::BZ2_crc32Table[::verbosity] == orig(s[post(::numFileNames)-1].strm->total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[post(::numFileNames)-1].strm->total_out_lo32)
::BZ2_crc32Table[::verbosity] == orig(s[post(::numFileNames)-1].strm->total_out_hi32)
::BZ2_crc32Table[::verbosity] == s[::numFilesProcessed-1].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[::numFilesProcessed-1].strm->total_out_lo32
::BZ2_crc32Table[::verbosity] == s[::numFilesProcessed-1].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == s[::numFilesProcessed-1].bsBuff
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[post(::numFilesProcessed)-1])
::BZ2_crc32Table[::verbosity] == orig(s[post(::numFilesProcessed)-1].strm->total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[post(::numFilesProcessed)-1].strm->total_out_lo32)
::BZ2_crc32Table[::verbosity] == orig(s[post(::numFilesProcessed)-1].strm->total_out_hi32)
::BZ2_crc32Table[::verbosity] == s[::exitValue].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[::exitValue].strm->total_out_lo32
::BZ2_crc32Table[::verbosity] == s[::exitValue].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == s[::exitValue].bsBuff
::BZ2_crc32Table[::verbosity] == orig(s[post(::exitValue)].strm->total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[post(::exitValue)].strm->total_out_lo32)
::BZ2_crc32Table[::verbosity] == orig(s[post(::exitValue)].strm->total_out_hi32)
::BZ2_crc32Table[::verbosity] == s[::opMode-1].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[::opMode-1].strm->total_out_lo32
::BZ2_crc32Table[::verbosity] == s[::opMode-1].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == s[::opMode-1].bsBuff
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[post(::opMode)-1])
::BZ2_crc32Table[::verbosity] == orig(s[post(::opMode)-1].strm->total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[post(::opMode)-1].strm->total_out_lo32)
::BZ2_crc32Table[::verbosity] == orig(s[post(::opMode)-1].strm->total_out_hi32)
::BZ2_crc32Table[::verbosity] == s[orig(::fileMetaInfo.__pad0)].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[orig(::verbosity)].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[orig(::numFileNames)-1].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[orig(::numFilesProcessed)-1].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[orig(::exitValue)].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[orig(::opMode)-1].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[orig(::fileMetaInfo.__pad0)].strm->total_out_lo32
::BZ2_crc32Table[::verbosity] == s[orig(::verbosity)].strm->total_out_lo32
::BZ2_crc32Table[::verbosity] == s[orig(::numFileNames)-1].strm->total_out_lo32
::BZ2_crc32Table[::verbosity] == s[orig(::numFilesProcessed)-1].strm->total_out_lo32
::BZ2_crc32Table[::verbosity] == s[orig(::exitValue)].strm->total_out_lo32
::BZ2_crc32Table[::verbosity] == s[orig(::opMode)-1].strm->total_out_lo32
::BZ2_crc32Table[::verbosity] == s[orig(::fileMetaInfo.__pad0)].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == s[orig(::verbosity)].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == s[orig(::numFileNames)-1].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == s[orig(::numFilesProcessed)-1].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == s[orig(::exitValue)].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == s[orig(::opMode)-1].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == s[orig(::fileMetaInfo.__pad0)].bsBuff
::BZ2_crc32Table[::verbosity] == s[orig(::verbosity)].bsBuff
::BZ2_crc32Table[::verbosity] == s[orig(::numFileNames)-1].bsBuff
::BZ2_crc32Table[::verbosity] == s[orig(::numFilesProcessed)-1].bsBuff
::BZ2_crc32Table[::verbosity] == s[orig(::exitValue)].bsBuff
::BZ2_crc32Table[::verbosity] == s[orig(::opMode)-1].bsBuff
::BZ2_crc32Table[::verbosity] == orig(s[::fileMetaInfo.__pad0].strm->total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[::fileMetaInfo.__pad0].strm->total_out_lo32)
::BZ2_crc32Table[::verbosity] == orig(s[::fileMetaInfo.__pad0].strm->total_out_hi32)
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[::numFileNames-1])
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[::numFilesProcessed-1])
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[::opMode-1])
::BZ2_crc32Table[::verbosity] == orig(s[::verbosity].strm->total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[::verbosity].strm->total_out_lo32)
::BZ2_crc32Table[::verbosity] == orig(s[::verbosity].strm->total_out_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[::numFileNames-1].strm->total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[::numFileNames-1].strm->total_out_lo32)
::BZ2_crc32Table[::verbosity] == orig(s[::numFileNames-1].strm->total_out_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[::numFilesProcessed-1].strm->total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[::numFilesProcessed-1].strm->total_out_lo32)
::BZ2_crc32Table[::verbosity] == orig(s[::numFilesProcessed-1].strm->total_out_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[::exitValue].strm->total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[::exitValue].strm->total_out_lo32)
::BZ2_crc32Table[::verbosity] == orig(s[::exitValue].strm->total_out_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[::opMode-1].strm->total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[::opMode-1].strm->total_out_lo32)
::BZ2_crc32Table[::verbosity] == orig(s[::opMode-1].strm->total_out_hi32)
s[::verbosity] == s[::numFileNames-1]
s[::verbosity] == orig(s[post(::numFileNames)-1])
s[::verbosity] == s[::numFilesProcessed-1]
s[::verbosity] == orig(s[post(::numFilesProcessed)-1])
s[::verbosity] == s[::opMode-1]
s[::verbosity] == orig(s[post(::opMode)-1])
s[::verbosity] == s[orig(::numFileNames)-1]
s[::verbosity] == s[orig(::numFilesProcessed)-1]
s[::verbosity] == s[orig(::opMode)-1]
s[::verbosity] == orig(s[::numFileNames-1])
s[::verbosity] == orig(s[::numFilesProcessed-1])
s[::verbosity] == orig(s[::opMode-1])
s[::verbosity].strm == s[::numFileNames-1].strm
s[::verbosity].strm == orig(s[post(::numFileNames)-1].strm)
s[::verbosity].strm == s[::numFilesProcessed-1].strm
s[::verbosity].strm == orig(s[post(::numFilesProcessed)-1].strm)
s[::verbosity].strm == s[::opMode-1].strm
s[::verbosity].strm == orig(s[post(::opMode)-1].strm)
s[::verbosity].strm == s[orig(::numFileNames)-1].strm
s[::verbosity].strm == s[orig(::numFilesProcessed)-1].strm
s[::verbosity].strm == s[orig(::opMode)-1].strm
s[::verbosity].strm == orig(s[::numFileNames-1].strm)
s[::verbosity].strm == orig(s[::numFilesProcessed-1].strm)
s[::verbosity].strm == orig(s[::opMode-1].strm)
s[::verbosity].strm[0] == s[::numFileNames-1].strm[0]
s[::verbosity].strm[0] == orig(s[post(::numFileNames)-1].strm[0])
s[::verbosity].strm[0] == s[::numFilesProcessed-1].strm[0]
s[::verbosity].strm[0] == orig(s[post(::numFilesProcessed)-1].strm[0])
s[::verbosity].strm[0] == s[::opMode-1].strm[0]
s[::verbosity].strm[0] == orig(s[post(::opMode)-1].strm[0])
s[::verbosity].strm[0] == s[orig(::numFileNames)-1].strm[0]
s[::verbosity].strm[0] == s[orig(::numFilesProcessed)-1].strm[0]
s[::verbosity].strm[0] == s[orig(::opMode)-1].strm[0]
s[::verbosity].strm[0] == orig(s[::numFileNames-1].strm[0])
s[::verbosity].strm[0] == orig(s[::numFilesProcessed-1].strm[0])
s[::verbosity].strm[0] == orig(s[::opMode-1].strm[0])
s[::verbosity].strm->avail_in == s[::numFileNames-1].strm->avail_in
s[::verbosity].strm->avail_in == orig(s[post(::numFileNames)-1].strm->avail_in)
s[::verbosity].strm->avail_in == s[::numFilesProcessed-1].strm->avail_in
s[::verbosity].strm->avail_in == orig(s[post(::numFilesProcessed)-1].strm->avail_in)
s[::verbosity].strm->avail_in == s[::opMode-1].strm->avail_in
s[::verbosity].strm->avail_in == orig(s[post(::opMode)-1].strm->avail_in)
s[::verbosity].strm->avail_in == s[orig(::numFileNames)-1].strm->avail_in
s[::verbosity].strm->avail_in == s[orig(::numFilesProcessed)-1].strm->avail_in
s[::verbosity].strm->avail_in == s[orig(::opMode)-1].strm->avail_in
s[::verbosity].strm->avail_in == orig(s[::numFileNames-1].strm->avail_in)
s[::verbosity].strm->avail_in == orig(s[::numFilesProcessed-1].strm->avail_in)
s[::verbosity].strm->avail_in == orig(s[::opMode-1].strm->avail_in)
s[::verbosity].strm->total_in_lo32 == s[::numFileNames-1].strm->total_in_lo32
s[::verbosity].strm->total_in_lo32 == orig(s[post(::numFileNames)-1].strm->total_in_lo32)
s[::verbosity].strm->total_in_lo32 == s[::numFilesProcessed-1].strm->total_in_lo32
s[::verbosity].strm->total_in_lo32 == orig(s[post(::numFilesProcessed)-1].strm->total_in_lo32)
s[::verbosity].strm->total_in_lo32 == s[::opMode-1].strm->total_in_lo32
s[::verbosity].strm->total_in_lo32 == orig(s[post(::opMode)-1].strm->total_in_lo32)
s[::verbosity].strm->total_in_lo32 == s[orig(::numFileNames)-1].strm->total_in_lo32
s[::verbosity].strm->total_in_lo32 == s[orig(::numFilesProcessed)-1].strm->total_in_lo32
s[::verbosity].strm->total_in_lo32 == s[orig(::opMode)-1].strm->total_in_lo32
s[::verbosity].strm->total_in_lo32 == orig(s[::numFileNames-1].strm->total_in_lo32)
s[::verbosity].strm->total_in_lo32 == orig(s[::numFilesProcessed-1].strm->total_in_lo32)
s[::verbosity].strm->total_in_lo32 == orig(s[::opMode-1].strm->total_in_lo32)
s[::verbosity].strm->avail_out == s[::numFileNames-1].strm->avail_out
s[::verbosity].strm->avail_out == orig(s[post(::numFileNames)-1].strm->avail_out)
s[::verbosity].strm->avail_out == s[::numFilesProcessed-1].strm->avail_out
s[::verbosity].strm->avail_out == orig(s[post(::numFilesProcessed)-1].strm->avail_out)
s[::verbosity].strm->avail_out == s[::opMode-1].strm->avail_out
s[::verbosity].strm->avail_out == orig(s[post(::opMode)-1].strm->avail_out)
s[::verbosity].strm->avail_out == s[orig(::numFileNames)-1].strm->avail_out
s[::verbosity].strm->avail_out == s[orig(::numFilesProcessed)-1].strm->avail_out
s[::verbosity].strm->avail_out == s[orig(::opMode)-1].strm->avail_out
s[::verbosity].strm->avail_out == orig(s[::numFileNames-1].strm->avail_out)
s[::verbosity].strm->avail_out == orig(s[::numFilesProcessed-1].strm->avail_out)
s[::verbosity].strm->avail_out == orig(s[::opMode-1].strm->avail_out)
s[::verbosity].strm->state == s[::numFileNames-1].strm->state
s[::verbosity].strm->state == orig(s[post(::numFileNames)-1].strm->state)
s[::verbosity].strm->state == s[::numFilesProcessed-1].strm->state
s[::verbosity].strm->state == orig(s[post(::numFilesProcessed)-1].strm->state)
s[::verbosity].strm->state == s[::opMode-1].strm->state
s[::verbosity].strm->state == orig(s[post(::opMode)-1].strm->state)
s[::verbosity].strm->state == s[orig(::numFileNames)-1].strm->state
s[::verbosity].strm->state == s[orig(::numFilesProcessed)-1].strm->state
s[::verbosity].strm->state == s[orig(::opMode)-1].strm->state
s[::verbosity].strm->state == orig(s[::numFileNames-1].strm->state)
s[::verbosity].strm->state == orig(s[::numFilesProcessed-1].strm->state)
s[::verbosity].strm->state == orig(s[::opMode-1].strm->state)
s[::verbosity].strm->bzalloc == s[::numFileNames-1].strm->bzalloc
s[::verbosity].strm->bzalloc == orig(s[post(::numFileNames)-1].strm->bzalloc)
s[::verbosity].strm->bzalloc == s[::numFilesProcessed-1].strm->bzalloc
s[::verbosity].strm->bzalloc == orig(s[post(::numFilesProcessed)-1].strm->bzalloc)
s[::verbosity].strm->bzalloc == s[::opMode-1].strm->bzalloc
s[::verbosity].strm->bzalloc == orig(s[post(::opMode)-1].strm->bzalloc)
s[::verbosity].strm->bzalloc == s[orig(::numFileNames)-1].strm->bzalloc
s[::verbosity].strm->bzalloc == s[orig(::numFilesProcessed)-1].strm->bzalloc
s[::verbosity].strm->bzalloc == s[orig(::opMode)-1].strm->bzalloc
s[::verbosity].strm->bzalloc == orig(s[::numFileNames-1].strm->bzalloc)
s[::verbosity].strm->bzalloc == orig(s[::numFilesProcessed-1].strm->bzalloc)
s[::verbosity].strm->bzalloc == orig(s[::opMode-1].strm->bzalloc)
s[::verbosity].strm->bzfree == s[::numFileNames-1].strm->bzfree
s[::verbosity].strm->bzfree == orig(s[post(::numFileNames)-1].strm->bzfree)
s[::verbosity].strm->bzfree == s[::numFilesProcessed-1].strm->bzfree
s[::verbosity].strm->bzfree == orig(s[post(::numFilesProcessed)-1].strm->bzfree)
s[::verbosity].strm->bzfree == s[::opMode-1].strm->bzfree
s[::verbosity].strm->bzfree == orig(s[post(::opMode)-1].strm->bzfree)
s[::verbosity].strm->bzfree == s[orig(::numFileNames)-1].strm->bzfree
s[::verbosity].strm->bzfree == s[orig(::numFilesProcessed)-1].strm->bzfree
s[::verbosity].strm->bzfree == s[orig(::opMode)-1].strm->bzfree
s[::verbosity].strm->bzfree == orig(s[::numFileNames-1].strm->bzfree)
s[::verbosity].strm->bzfree == orig(s[::numFilesProcessed-1].strm->bzfree)
s[::verbosity].strm->bzfree == orig(s[::opMode-1].strm->bzfree)
s[::verbosity].strm->opaque == s[::numFileNames-1].strm->opaque
s[::verbosity].strm->opaque == orig(s[post(::numFileNames)-1].strm->opaque)
s[::verbosity].strm->opaque == s[::numFilesProcessed-1].strm->opaque
s[::verbosity].strm->opaque == orig(s[post(::numFilesProcessed)-1].strm->opaque)
s[::verbosity].strm->opaque == s[::opMode-1].strm->opaque
s[::verbosity].strm->opaque == orig(s[post(::opMode)-1].strm->opaque)
s[::verbosity].strm->opaque == s[orig(::numFileNames)-1].strm->opaque
s[::verbosity].strm->opaque == s[orig(::numFilesProcessed)-1].strm->opaque
s[::verbosity].strm->opaque == s[orig(::opMode)-1].strm->opaque
s[::verbosity].strm->opaque == orig(s[::numFileNames-1].strm->opaque)
s[::verbosity].strm->opaque == orig(s[::numFilesProcessed-1].strm->opaque)
s[::verbosity].strm->opaque == orig(s[::opMode-1].strm->opaque)
s[::verbosity].arr1 == s[::numFileNames-1].arr1
s[::verbosity].arr1 == s[::numFileNames-1].ptr
s[::verbosity].arr1 == orig(s[post(::numFileNames)-1].arr1)
s[::verbosity].arr1 == orig(s[post(::numFileNames)-1].ptr)
s[::verbosity].arr1 == s[::numFilesProcessed-1].arr1
s[::verbosity].arr1 == s[::numFilesProcessed-1].ptr
s[::verbosity].arr1 == orig(s[post(::numFilesProcessed)-1].arr1)
s[::verbosity].arr1 == orig(s[post(::numFilesProcessed)-1].ptr)
s[::verbosity].arr1 == s[::opMode-1].arr1
s[::verbosity].arr1 == s[::opMode-1].ptr
s[::verbosity].arr1 == orig(s[post(::opMode)-1].arr1)
s[::verbosity].arr1 == orig(s[post(::opMode)-1].ptr)
s[::verbosity].arr1 == s[orig(::numFileNames)-1].arr1
s[::verbosity].arr1 == s[orig(::numFilesProcessed)-1].arr1
s[::verbosity].arr1 == s[orig(::opMode)-1].arr1
s[::verbosity].arr1 == s[orig(::numFileNames)-1].ptr
s[::verbosity].arr1 == s[orig(::numFilesProcessed)-1].ptr
s[::verbosity].arr1 == s[orig(::opMode)-1].ptr
s[::verbosity].arr1 == orig(s[::numFileNames-1].arr1)
s[::verbosity].arr1 == orig(s[::numFileNames-1].ptr)
s[::verbosity].arr1 == orig(s[::numFilesProcessed-1].arr1)
s[::verbosity].arr1 == orig(s[::numFilesProcessed-1].ptr)
s[::verbosity].arr1 == orig(s[::opMode-1].arr1)
s[::verbosity].arr1 == orig(s[::opMode-1].ptr)
s[::verbosity].arr1[0] == s[::numFileNames-1].arr1[0]
s[::verbosity].arr1[0] == s[::numFileNames-1].ptr[0]
s[::verbosity].arr1[0] == orig(s[post(::numFileNames)-1].arr1[0])
s[::verbosity].arr1[0] == orig(s[post(::numFileNames)-1].ptr[0])
s[::verbosity].arr1[0] == s[::numFilesProcessed-1].arr1[0]
s[::verbosity].arr1[0] == s[::numFilesProcessed-1].ptr[0]
s[::verbosity].arr1[0] == orig(s[post(::numFilesProcessed)-1].arr1[0])
s[::verbosity].arr1[0] == orig(s[post(::numFilesProcessed)-1].ptr[0])
s[::verbosity].arr1[0] == s[::opMode-1].arr1[0]
s[::verbosity].arr1[0] == s[::opMode-1].ptr[0]
s[::verbosity].arr1[0] == orig(s[post(::opMode)-1].arr1[0])
s[::verbosity].arr1[0] == orig(s[post(::opMode)-1].ptr[0])
s[::verbosity].arr1[0] == s[orig(::numFileNames)-1].arr1[0]
s[::verbosity].arr1[0] == s[orig(::numFilesProcessed)-1].arr1[0]
s[::verbosity].arr1[0] == s[orig(::opMode)-1].arr1[0]
s[::verbosity].arr1[0] == s[orig(::numFileNames)-1].ptr[0]
s[::verbosity].arr1[0] == s[orig(::numFilesProcessed)-1].ptr[0]
s[::verbosity].arr1[0] == s[orig(::opMode)-1].ptr[0]
s[::verbosity].arr1[0] == orig(s[::numFileNames-1].arr1[0])
s[::verbosity].arr1[0] == orig(s[::numFileNames-1].ptr[0])
s[::verbosity].arr1[0] == orig(s[::numFilesProcessed-1].arr1[0])
s[::verbosity].arr1[0] == orig(s[::numFilesProcessed-1].ptr[0])
s[::verbosity].arr1[0] == orig(s[::opMode-1].arr1[0])
s[::verbosity].arr1[0] == orig(s[::opMode-1].ptr[0])
s[::verbosity].arr2 == s[::numFileNames-1].arr2
s[::verbosity].arr2 == orig(s[post(::numFileNames)-1].arr2)
s[::verbosity].arr2 == s[::numFilesProcessed-1].arr2
s[::verbosity].arr2 == orig(s[post(::numFilesProcessed)-1].arr2)
s[::verbosity].arr2 == s[::opMode-1].arr2
s[::verbosity].arr2 == orig(s[post(::opMode)-1].arr2)
s[::verbosity].arr2 == s[orig(::numFileNames)-1].arr2
s[::verbosity].arr2 == s[orig(::numFilesProcessed)-1].arr2
s[::verbosity].arr2 == s[orig(::opMode)-1].arr2
s[::verbosity].arr2 == orig(s[::numFileNames-1].arr2)
s[::verbosity].arr2 == orig(s[::numFilesProcessed-1].arr2)
s[::verbosity].arr2 == orig(s[::opMode-1].arr2)
s[::verbosity].arr2[0] == s[::numFileNames-1].arr2[0]
s[::verbosity].arr2[0] == orig(s[post(::numFileNames)-1].arr2[0])
s[::verbosity].arr2[0] == s[::numFilesProcessed-1].arr2[0]
s[::verbosity].arr2[0] == orig(s[post(::numFilesProcessed)-1].arr2[0])
s[::verbosity].arr2[0] == s[::opMode-1].arr2[0]
s[::verbosity].arr2[0] == orig(s[post(::opMode)-1].arr2[0])
s[::verbosity].arr2[0] == s[orig(::numFileNames)-1].arr2[0]
s[::verbosity].arr2[0] == s[orig(::numFilesProcessed)-1].arr2[0]
s[::verbosity].arr2[0] == s[orig(::opMode)-1].arr2[0]
s[::verbosity].arr2[0] == orig(s[::numFileNames-1].arr2[0])
s[::verbosity].arr2[0] == orig(s[::numFilesProcessed-1].arr2[0])
s[::verbosity].arr2[0] == orig(s[::opMode-1].arr2[0])
s[::verbosity].ftab == s[::numFileNames-1].ftab
s[::verbosity].ftab == orig(s[post(::numFileNames)-1].ftab)
s[::verbosity].ftab == s[::numFilesProcessed-1].ftab
s[::verbosity].ftab == orig(s[post(::numFilesProcessed)-1].ftab)
s[::verbosity].ftab == s[::opMode-1].ftab
s[::verbosity].ftab == orig(s[post(::opMode)-1].ftab)
s[::verbosity].ftab == s[orig(::numFileNames)-1].ftab
s[::verbosity].ftab == s[orig(::numFilesProcessed)-1].ftab
s[::verbosity].ftab == s[orig(::opMode)-1].ftab
s[::verbosity].ftab == orig(s[::numFileNames-1].ftab)
s[::verbosity].ftab == orig(s[::numFilesProcessed-1].ftab)
s[::verbosity].ftab == orig(s[::opMode-1].ftab)
s[::verbosity].ftab[0] == s[::numFileNames-1].ftab[0]
s[::verbosity].ftab[0] == orig(s[post(::numFileNames)-1].ftab[0])
s[::verbosity].ftab[0] == s[::numFilesProcessed-1].ftab[0]
s[::verbosity].ftab[0] == orig(s[post(::numFilesProcessed)-1].ftab[0])
s[::verbosity].ftab[0] == s[::opMode-1].ftab[0]
s[::verbosity].ftab[0] == orig(s[post(::opMode)-1].ftab[0])
s[::verbosity].ftab[0] == s[orig(::numFileNames)-1].ftab[0]
s[::verbosity].ftab[0] == s[orig(::numFilesProcessed)-1].ftab[0]
s[::verbosity].ftab[0] == s[orig(::opMode)-1].ftab[0]
s[::verbosity].ftab[0] == orig(s[::numFileNames-1].ftab[0])
s[::verbosity].ftab[0] == orig(s[::numFilesProcessed-1].ftab[0])
s[::verbosity].ftab[0] == orig(s[::opMode-1].ftab[0])
s[::verbosity].origPtr == s[::numFileNames-1].origPtr
s[::verbosity].origPtr == orig(s[post(::numFileNames)-1].origPtr)
s[::verbosity].origPtr == s[::numFilesProcessed-1].origPtr
s[::verbosity].origPtr == orig(s[post(::numFilesProcessed)-1].origPtr)
s[::verbosity].origPtr == s[::opMode-1].origPtr
s[::verbosity].origPtr == orig(s[post(::opMode)-1].origPtr)
s[::verbosity].origPtr == s[orig(::numFileNames)-1].origPtr
s[::verbosity].origPtr == s[orig(::numFilesProcessed)-1].origPtr
s[::verbosity].origPtr == s[orig(::opMode)-1].origPtr
s[::verbosity].origPtr == orig(s[::numFileNames-1].origPtr)
s[::verbosity].origPtr == orig(s[::numFilesProcessed-1].origPtr)
s[::verbosity].origPtr == orig(s[::opMode-1].origPtr)
s[::verbosity].block == s[::numFileNames-1].block
s[::verbosity].block == orig(s[post(::numFileNames)-1].block)
s[::verbosity].block == s[::numFilesProcessed-1].block
s[::verbosity].block == orig(s[post(::numFilesProcessed)-1].block)
s[::verbosity].block == s[::opMode-1].block
s[::verbosity].block == orig(s[post(::opMode)-1].block)
s[::verbosity].block == s[orig(::numFileNames)-1].block
s[::verbosity].block == s[orig(::numFilesProcessed)-1].block
s[::verbosity].block == s[orig(::opMode)-1].block
s[::verbosity].block == orig(s[::numFileNames-1].block)
s[::verbosity].block == orig(s[::numFilesProcessed-1].block)
s[::verbosity].block == orig(s[::opMode-1].block)
s[::verbosity].block[0] == s[::numFileNames-1].block[0]
s[::verbosity].block[0] == orig(s[post(::numFileNames)-1].block[0])
s[::verbosity].block[0] == s[::numFilesProcessed-1].block[0]
s[::verbosity].block[0] == orig(s[post(::numFilesProcessed)-1].block[0])
s[::verbosity].block[0] == s[::opMode-1].block[0]
s[::verbosity].block[0] == orig(s[post(::opMode)-1].block[0])
s[::verbosity].block[0] == s[orig(::numFileNames)-1].block[0]
s[::verbosity].block[0] == s[orig(::numFilesProcessed)-1].block[0]
s[::verbosity].block[0] == s[orig(::opMode)-1].block[0]
s[::verbosity].block[0] == orig(s[::numFileNames-1].block[0])
s[::verbosity].block[0] == orig(s[::numFilesProcessed-1].block[0])
s[::verbosity].block[0] == orig(s[::opMode-1].block[0])
s[::verbosity].mtfv == s[::numFileNames-1].mtfv
s[::verbosity].mtfv == orig(s[post(::numFileNames)-1].mtfv)
s[::verbosity].mtfv == s[::numFilesProcessed-1].mtfv
s[::verbosity].mtfv == orig(s[post(::numFilesProcessed)-1].mtfv)
s[::verbosity].mtfv == s[::opMode-1].mtfv
s[::verbosity].mtfv == orig(s[post(::opMode)-1].mtfv)
s[::verbosity].mtfv == s[orig(::numFileNames)-1].mtfv
s[::verbosity].mtfv == s[orig(::numFilesProcessed)-1].mtfv
s[::verbosity].mtfv == s[orig(::opMode)-1].mtfv
s[::verbosity].mtfv == orig(s[::numFileNames-1].mtfv)
s[::verbosity].mtfv == orig(s[::numFilesProcessed-1].mtfv)
s[::verbosity].mtfv == orig(s[::opMode-1].mtfv)
s[::verbosity].mtfv[0] == s[::numFileNames-1].mtfv[0]
s[::verbosity].mtfv[0] == orig(s[post(::numFileNames)-1].mtfv[0])
s[::verbosity].mtfv[0] == s[::numFilesProcessed-1].mtfv[0]
s[::verbosity].mtfv[0] == orig(s[post(::numFilesProcessed)-1].mtfv[0])
s[::verbosity].mtfv[0] == s[::opMode-1].mtfv[0]
s[::verbosity].mtfv[0] == orig(s[post(::opMode)-1].mtfv[0])
s[::verbosity].mtfv[0] == s[orig(::numFileNames)-1].mtfv[0]
s[::verbosity].mtfv[0] == s[orig(::numFilesProcessed)-1].mtfv[0]
s[::verbosity].mtfv[0] == s[orig(::opMode)-1].mtfv[0]
s[::verbosity].mtfv[0] == orig(s[::numFileNames-1].mtfv[0])
s[::verbosity].mtfv[0] == orig(s[::numFilesProcessed-1].mtfv[0])
s[::verbosity].mtfv[0] == orig(s[::opMode-1].mtfv[0])
s[::verbosity].zbits == s[::numFileNames-1].zbits
s[::verbosity].zbits == orig(s[post(::numFileNames)-1].zbits)
s[::verbosity].zbits == s[::numFilesProcessed-1].zbits
s[::verbosity].zbits == orig(s[post(::numFilesProcessed)-1].zbits)
s[::verbosity].zbits == s[::opMode-1].zbits
s[::verbosity].zbits == orig(s[post(::opMode)-1].zbits)
s[::verbosity].zbits == s[orig(::numFileNames)-1].zbits
s[::verbosity].zbits == s[orig(::numFilesProcessed)-1].zbits
s[::verbosity].zbits == s[orig(::opMode)-1].zbits
s[::verbosity].zbits == orig(s[::numFileNames-1].zbits)
s[::verbosity].zbits == orig(s[::numFilesProcessed-1].zbits)
s[::verbosity].zbits == orig(s[::opMode-1].zbits)
s[::verbosity].zbits[0] == s[::numFileNames-1].zbits[0]
s[::verbosity].zbits[0] == orig(s[post(::numFileNames)-1].zbits[0])
s[::verbosity].zbits[0] == s[::numFilesProcessed-1].zbits[0]
s[::verbosity].zbits[0] == orig(s[post(::numFilesProcessed)-1].zbits[0])
s[::verbosity].zbits[0] == s[::opMode-1].zbits[0]
s[::verbosity].zbits[0] == orig(s[post(::opMode)-1].zbits[0])
s[::verbosity].zbits[0] == s[orig(::numFileNames)-1].zbits[0]
s[::verbosity].zbits[0] == s[orig(::numFilesProcessed)-1].zbits[0]
s[::verbosity].zbits[0] == s[orig(::opMode)-1].zbits[0]
s[::verbosity].zbits[0] == orig(s[::numFileNames-1].zbits[0])
s[::verbosity].zbits[0] == orig(s[::numFilesProcessed-1].zbits[0])
s[::verbosity].zbits[0] == orig(s[::opMode-1].zbits[0])
s[::verbosity].state_in_ch == s[::numFileNames-1].state_in_ch
s[::verbosity].state_in_ch == orig(s[post(::numFileNames)-1].state_in_ch)
s[::verbosity].state_in_ch == s[::numFilesProcessed-1].state_in_ch
s[::verbosity].state_in_ch == orig(s[post(::numFilesProcessed)-1].state_in_ch)
s[::verbosity].state_in_ch == s[::opMode-1].state_in_ch
s[::verbosity].state_in_ch == orig(s[post(::opMode)-1].state_in_ch)
s[::verbosity].state_in_ch == s[orig(::numFileNames)-1].state_in_ch
s[::verbosity].state_in_ch == s[orig(::numFilesProcessed)-1].state_in_ch
s[::verbosity].state_in_ch == s[orig(::opMode)-1].state_in_ch
s[::verbosity].state_in_ch == orig(s[::numFileNames-1].state_in_ch)
s[::verbosity].state_in_ch == orig(s[::numFilesProcessed-1].state_in_ch)
s[::verbosity].state_in_ch == orig(s[::opMode-1].state_in_ch)
s[::verbosity].nblock == s[::numFileNames-1].nblock
s[::verbosity].nblock == orig(s[post(::numFileNames)-1].nblock)
s[::verbosity].nblock == s[::numFilesProcessed-1].nblock
s[::verbosity].nblock == orig(s[post(::numFilesProcessed)-1].nblock)
s[::verbosity].nblock == s[::opMode-1].nblock
s[::verbosity].nblock == orig(s[post(::opMode)-1].nblock)
s[::verbosity].nblock == s[orig(::numFileNames)-1].nblock
s[::verbosity].nblock == s[orig(::numFilesProcessed)-1].nblock
s[::verbosity].nblock == s[orig(::opMode)-1].nblock
s[::verbosity].nblock == orig(s[::numFileNames-1].nblock)
s[::verbosity].nblock == orig(s[::numFilesProcessed-1].nblock)
s[::verbosity].nblock == orig(s[::opMode-1].nblock)
s[::verbosity].nblockMAX == s[::numFileNames-1].nblockMAX
s[::verbosity].nblockMAX == orig(s[post(::numFileNames)-1].nblockMAX)
s[::verbosity].nblockMAX == s[::numFilesProcessed-1].nblockMAX
s[::verbosity].nblockMAX == orig(s[post(::numFilesProcessed)-1].nblockMAX)
s[::verbosity].nblockMAX == s[::opMode-1].nblockMAX
s[::verbosity].nblockMAX == orig(s[post(::opMode)-1].nblockMAX)
s[::verbosity].nblockMAX == s[orig(::numFileNames)-1].nblockMAX
s[::verbosity].nblockMAX == s[orig(::numFilesProcessed)-1].nblockMAX
s[::verbosity].nblockMAX == s[orig(::opMode)-1].nblockMAX
s[::verbosity].nblockMAX == orig(s[::numFileNames-1].nblockMAX)
s[::verbosity].nblockMAX == orig(s[::numFilesProcessed-1].nblockMAX)
s[::verbosity].nblockMAX == orig(s[::opMode-1].nblockMAX)
s[::verbosity].inUse == s[::numFileNames-1].inUse
s[::verbosity].inUse == orig(s[post(::numFileNames)-1].inUse)
s[::verbosity].inUse == s[::numFilesProcessed-1].inUse
s[::verbosity].inUse == orig(s[post(::numFilesProcessed)-1].inUse)
s[::verbosity].inUse == s[::opMode-1].inUse
s[::verbosity].inUse == orig(s[post(::opMode)-1].inUse)
s[::verbosity].inUse == s[orig(::numFileNames)-1].inUse
s[::verbosity].inUse == s[orig(::numFilesProcessed)-1].inUse
s[::verbosity].inUse == s[orig(::opMode)-1].inUse
s[::verbosity].inUse == orig(s[::numFileNames-1].inUse)
s[::verbosity].inUse == orig(s[::numFilesProcessed-1].inUse)
s[::verbosity].inUse == orig(s[::opMode-1].inUse)
s[::verbosity].blockCRC == s[::numFileNames-1].blockCRC
s[::verbosity].blockCRC == s[::numFileNames-1].combinedCRC
s[::verbosity].blockCRC == orig(s[post(::numFileNames)-1].blockCRC)
s[::verbosity].blockCRC == orig(s[post(::numFileNames)-1].combinedCRC)
s[::verbosity].blockCRC == s[::numFilesProcessed-1].blockCRC
s[::verbosity].blockCRC == s[::numFilesProcessed-1].combinedCRC
s[::verbosity].blockCRC == orig(s[post(::numFilesProcessed)-1].blockCRC)
s[::verbosity].blockCRC == orig(s[post(::numFilesProcessed)-1].combinedCRC)
s[::verbosity].blockCRC == s[::opMode-1].blockCRC
s[::verbosity].blockCRC == s[::opMode-1].combinedCRC
s[::verbosity].blockCRC == orig(s[post(::opMode)-1].blockCRC)
s[::verbosity].blockCRC == orig(s[post(::opMode)-1].combinedCRC)
s[::verbosity].blockCRC == s[orig(::numFileNames)-1].blockCRC
s[::verbosity].blockCRC == s[orig(::numFilesProcessed)-1].blockCRC
s[::verbosity].blockCRC == s[orig(::opMode)-1].blockCRC
s[::verbosity].blockCRC == s[orig(::numFileNames)-1].combinedCRC
s[::verbosity].blockCRC == s[orig(::numFilesProcessed)-1].combinedCRC
s[::verbosity].blockCRC == s[orig(::opMode)-1].combinedCRC
s[::verbosity].blockCRC == orig(s[::numFileNames-1].blockCRC)
s[::verbosity].blockCRC == orig(s[::numFileNames-1].combinedCRC)
s[::verbosity].blockCRC == orig(s[::numFilesProcessed-1].blockCRC)
s[::verbosity].blockCRC == orig(s[::numFilesProcessed-1].combinedCRC)
s[::verbosity].blockCRC == orig(s[::opMode-1].blockCRC)
s[::verbosity].blockCRC == orig(s[::opMode-1].combinedCRC)
::incs has only one value
::incs[] == [1, 4, 13, 40, 121, 364, 1093, 3280, 9841, 29524, 88573, 265720, 797161, 2391484]
::bzerrorstrings has only one value
::bzerrorstrings[] == [OK, SEQUENCE_ERROR, PARAM_ERROR, MEM_ERROR, DATA_ERROR, DATA_ERROR_MAGIC, IO_ERROR, UNEXPECTED_EOF, OUTBUFF_FULL, CONFIG_ERROR, ???, ???, ???, ???, ???, ???]
::fileMetaInfo has only one value
::fileMetaInfo.st_dev == 2049
::fileMetaInfo.st_ino == 936492
::fileMetaInfo.st_nlink == 1
::fileMetaInfo.st_mode == 33277
::fileMetaInfo.st_uid == 1000
::fileMetaInfo.st_rdev == 0
::fileMetaInfo.st_size == 5738700
::fileMetaInfo.st_blksize == 4096
::fileMetaInfo.st_blocks == 11216
::fileMetaInfo.st_atim has only one value
::fileMetaInfo.st_atim.tv_sec == 1496096467
::fileMetaInfo.st_atim.tv_nsec == 709424920
::fileMetaInfo.st_mtim has only one value
::fileMetaInfo.st_mtim.tv_sec == 1483563943
::fileMetaInfo.st_mtim.tv_nsec == 421335644
::fileMetaInfo.st_ctim has only one value
::fileMetaInfo.__glibc_reserved has only one value
::fileMetaInfo.__glibc_reserved[] == [0, 0, 0]
::fileMetaInfo.__glibc_reserved[] elements == 0
::BZ2_rNums has only one value
::BZ2_rNums[] == [619, 720, 127, 481, 931, 816, 813, 233, 566, 247, 985, 724, 205, 454, 863, 491, 741, 242, 949, 214, 733, 859, 335, 708, 621, 574, 73, 654, 730, 472, 419, 436, 278, 496, 867, 210, 399, 680, 480, 51, 878, 465, 811, 169, 869, 675, 611, 697, 867, 561, 862, 687, 507, 283, 482, 129, 807, 591, 733, 623, 150, 238, 59, 379, 684, 877, 625, 169, 643, 105, 170, 607, 520, 932, 727, 476, 693, 425, 174, 647, 73, 122, 335, 530, 442, 853, 695, 249, 445, 515, 909, 545, 703, 919, 874, 474, 882, 500, 594, 612, 641, 801, 220, 162, 819, 984, 589, 513, 495, 799, 161, 604, 958, 533, 221, 400, 386, 867, 600, 782, 382, 596, 414, 171, 516, 375, 682, 485, 911, 276, 98, 553, 163, 354, 666, 933, 424, 341, 533, 870, 227, 730, 475, 186, 263, 647, 537, 686, 600, 224, 469, 68, 770, 919, 190, 373, 294, 822, 808, 206, 184, 943, 795, 384, 383, 461, 404, 758, 839, 887, 715, 67, 618, 276, 204, 918, 873, 777, 604, 560, 951, 160, 578, 722, 79, 804, 96, 409, 713, 940, 652, 934, 970, 447, 318, 353, 859, 672, 112, 785, 645, 863, 803, 350, 139, 93, 354, 99, 820, 908, 609, 772, 154, 274, 580, 184, 79, 626, 630, 742, 653, 282, 762, 623, 680, 81, 927, 626, 789, 125, 411, 521, 938, 300, 821, 78, 343, 175, 128, 250, 170, 774, 972, 275, 999, 639, 495, 78, 352, 126, 857, 956, 358, 619, 580, 124, 737, 594, 701, 612, 669, 112, 134, 694, 363, 992, 809, 743, 168, 974, 944, 375, 748, 52, 600, 747, 642, 182, 862, 81, 344, 805, 988, 739, 511, 655, 814, 334, 249, 515, 897, 955, 664, 981, 649, 113, 974, 459, 893, 228, 433, 837, 553, 268, 926, 240, 102, 654, 459, 51, 686, 754, 806, 760, 493, 403, 415, 394, 687, 700, 946, 670, 656, 610, 738, 392, 760, 799, 887, 653, 978, 321, 576, 617, 626, 502, 894, 679, 243, 440, 680, 879, 194, 572, 640, 724, 926, 56, 204, 700, 707, 151, 457, 449, 797, 195, 791, 558, 945, 679, 297, 59, 87, 824, 713, 663, 412, 693, 342, 606, 134, 108, 571, 364, 631, 212, 174, 643, 304, 329, 343, 97, 430, 751, 497, 314, 983, 374, 822, 928, 140, 206, 73, 263, 980, 736, 876, 478, 430, 305, 170, 514, 364, 692, 829, 82, 855, 953, 676, 246, 369, 970, 294, 750, 807, 827, 150, 790, 288, 923, 804, 378, 215, 828, 592, 281, 565, 555, 710, 82, 896, 831, 547, 261, 524, 462, 293, 465, 502, 56, 661, 821, 976, 991, 658, 869, 905, 758, 745, 193, 768, 550, 608, 933, 378, 286, 215, 979, 792, 961, 61, 688, 793, 644, 986, 403, 106, 366, 905, 644, 372, 567, 466, 434, 645, 210, 389, 550, 919, 135, 780, 773, 635, 389, 707, 100, 626, 958, 165, 504, 920, 176, 193, 713, 857, 265, 203, 50, 668, 108, 645, 990, 626, 197, 510, 357, 358, 850, 858, 364, 936, 638]
::BZ2_crc32Table has only one value
::BZ2_crc32Table[] == [0, 79764919, 159529838, 222504665, 319059676, 398814059, 445009330, 507990021, 638119352, 583659535, 797628118, 726387553, 890018660, 835552979, 1015980042, 944750013, 1276238704, 1221641927, 1167319070, 1095957929, 1595256236, 1540665371, 1452775106, 1381403509, 1780037320, 1859660671, 1671105958, 1733955601, 2031960084, 2111593891, 1889500026, 1952343757, 2552477408, 2632100695, 2443283854, 2506133561, 2334638140, 2414271883, 2191915858, 2254759653, 3190512472, 3135915759, 3081330742, 3009969537, 2905550212, 2850959411, 2762807018, 2691435357, 3560074640, 3505614887, 3719321342, 3648080713, 3342211916, 3287746299, 3467911202, 3396681109, 4063920168, 4143685023, 4223187782, 4286162673, 3779000052, 3858754371, 3904687514, 3967668269, 881225847, 809987520, 1023691545, 969234094, 662832811, 591600412, 771767749, 717299826, 311336399, 374308984, 453813921, 533576470, 25881363, 88864420, 134795389, 214552010, 2023205639, 2086057648, 1897238633, 1976864222, 1804852699, 1867694188, 1645340341, 1724971778, 1587496639, 1516133128, 1461550545, 1406951526, 1302016099, 1230646740, 1142491917, 1087903418, 2896545431, 2825181984, 2770861561, 2716262478, 3215044683, 3143675388, 3055782693, 3001194130, 2326604591, 2389456536, 2200899649, 2280525302, 2578013683, 2640855108, 2418763421, 2498394922, 3769900519, 3832873040, 3912640137, 3992402750, 4088425275, 4151408268, 4197601365, 4277358050, 3334271071, 3263032808, 3476998961, 3422541446, 3585640067, 3514407732, 3694837229, 3640369242, 1762451694, 1842216281, 1619975040, 1682949687, 2047383090, 2127137669, 1938468188, 2001449195, 1325665622, 1271206113, 1183200824, 1111960463, 1543535498, 1489069629, 1434599652, 1363369299, 622672798, 568075817, 748617968, 677256519, 907627842, 853037301, 1067152940, 995781531, 51762726, 131386257, 177728840, 240578815, 269590778, 349224269, 429104020, 491947555, 4046411278, 4126034873, 4172115296, 4234965207, 3794477266, 3874110821, 3953728444, 4016571915, 3609705398, 3555108353, 3735388376, 3664026991, 3290680682, 3236090077, 3449943556, 3378572211, 3174993278, 3120533705, 3032266256, 2961025959, 2923101090, 2868635157, 2813903052, 2742672763, 2604032198, 2683796849, 2461293480, 2524268063, 2284983834, 2364738477, 2175806836, 2238787779, 1569362073, 1498123566, 1409854455, 1355396672, 1317987909, 1246755826, 1192025387, 1137557660, 2072149281, 2135122070, 1912620623, 1992383480, 1753615357, 1816598090, 1627664531, 1707420964, 295390185, 358241886, 404320391, 483945776, 43990325, 106832002, 186451547, 266083308, 932423249, 861060070, 1041341759, 986742920, 613929101, 542559546, 756411363, 701822548, 3316196985, 3244833742, 3425377559, 3370778784, 3601682597, 3530312978, 3744426955, 3689838204, 3819031489, 3881883254, 3928223919, 4007849240, 4037393693, 4100235434, 4180117107, 4259748804, 2310601993, 2373574846, 2151335527, 2231098320, 2596047829, 2659030626, 2470359227, 2550115596, 2947551409, 2876312838, 2788305887, 2733848168, 3165939309, 3094707162, 3040238851, 2985771188]
::mammamia == 3216
::keepInputFiles == 1
::smallMode == 0
::numFileNames == 1
::blockSize100k == 9
::longestFileName == 20
::inName == "../inputs/in_big.txt"
::outName == "../inputs/in_big.txt.bz2"
::tmpName == ""
::progName == "zip-injected"
::progNameReally == "./zip-injected"
::outputHandleJustInCase has only one value
::workFactor == 30
::zSuffix has only one value
::zSuffix[] == [.bz2, .bz, .tbz2, .tbz]
::unzSuffix has only one value
::unzSuffix[] == [, , .tar, .tar]
::unzSuffix[] elements one of { "", ".tar" }
s[] contains no nulls and has only one value, of length 1
s[] elements has only one value
s[].strm contains no nulls and has only one value, of length 1
s[].strm elements has only one value
s[].strm[0] contains no nulls and has only one value, of length 1
s[].strm[0] elements has only one value
s[].strm->next_in == [;`             
.: `:  ;`    :;     `        `                    
             :;  ,;;;;;    ;;;;;  `;  .;;: ,;;;;` 
      `````` :; `;,  `;;  ;;` `;; `; `;, `,;`  ,;`
      ;;;;;;;;;..;       .;     ;.`; ;:   ;`    ,;
      ;;      ;. ;;;;,`  ;:     ::`; ;.  `;;;;;;;;
      ;;      ;.  ,:;;;; ;,     :;`; ;.  .;```````
      ;;      ;.      `;`;;     ;:`; ;.   ;       
      ;;      ;.,;`   .; ;;,   ,; `; ;.   ;;    ;:
      ;;      ;. ;;;;;;: ;:;;:;;. `; ;.    ;;;;;; 
                  `,,,   ;, :::   `, ,`     `,,   
                         ;,                       
                         ;,                       
                         ;,                       


                                                  
      `::::                                       
     :::,``                                       
    ::.                                           
   ::  `:::                                       
  ::  :::.                                        
 `:` ::`                                          
 :: .:` `;;;;                                     
 :. :, .;;.,;;                    :;`             
`:  :  ;;    ;:                   :;`             
.: `:  ;`    :;     `        `                    
             :;  ,;;;;;    ;;;;;  `;  .;;: ,;;;;` 
      `````` :; `;,  `;;  ;;` `;; `; `;, `,;`  ,;`
      ;;;;;;;;;..;       .;     ;.`; ;:   ;`    ,;
      ;;      ;. ;;;;,`  ;:     ::`; ;.  `;;;;;;;;
      ;;      ;.  ,:;;;; ;,     :]
s[].strm->next_in elements == ";`             \n.: `:  ;`    :;     `        `                    \n             :;  ,;;;;;    ;;;;;  `;  .;;: ,;;;;` \n      `````` :; `;,  `;;  ;;` `;; `; `;, `,;`  ,;`\n      ;;;;;;;;;..;       .;     ;.`; ;:   ;`    ,;\n      ;;      ;. ;;;;,`  ;:     ::`; ;.  `;;;;;;;;\n      ;;      ;.  ,:;;;; ;,     :;`; ;.  .;```````\n      ;;      ;.      `;`;;     ;:`; ;.   ;       \n      ;;      ;.,;`   .; ;;,   ,; `; ;.   ;;    ;:\n      ;;      ;. ;;;;;;: ;:;;:;;. `; ;.    ;;;;;; \n                  `,,,   ;, :::   `, ,`     `,,   \n                         ;,                       \n                         ;,                       \n                         ;,                       \n\n\n                                                  \n      `::::                                       \n     :::,``                                       \n    ::.                                           \n   ::  `:::                                       \n  ::  :::.                                        \n `:` ::`                                          \n :: .:` `;;;;                                     \n :. :, .;;.,;;                    :;`             \n`:  :  ;;    ;:                   :;`             \n.: `:  ;`    :;     `        `                    \n             :;  ,;;;;;    ;;;;;  `;  .;;: ,;;;;` \n      `````` :; `;,  `;;  ;;` `;; `; `;, `,;`  ,;`\n      ;;;;;;;;;..;       .;     ;.`; ;:   ;`    ,;\n      ;;      ;. ;;;;,`  ;:     ::`; ;.  `;;;;;;;;\n      ;;      ;.  ,:;;;; ;,     :"
s[].strm->avail_in == [1479]
s[].strm->avail_in elements == 1479
s[].strm->total_in_lo32 == [1578521]
s[].strm->total_in_lo32 elements == 1578521
s[].strm->avail_out == [5000]
s[].strm->avail_out elements == 5000
s[].strm->state contains no nulls and has only one value, of length 1
s[].strm->state elements has only one value
s[].strm->bzalloc contains no nulls and has only one value, of length 1
s[].strm->bzalloc elements has only one value
s[].strm->bzfree contains no nulls and has only one value, of length 1
s[].strm->bzfree elements has only one value
s[].strm->opaque == [null]
s[].strm->opaque elements == null
s[].mode == [2]
s[].mode elements == 2
s[].arr1 contains no nulls and has only one value, of length 1
s[].arr1 elements has only one value
s[].arr1[0] == [899926]
s[].arr1[0] elements == 899926
s[].arr2 contains no nulls and has only one value, of length 1
s[].arr2 elements has only one value
s[].arr2[0] == [538970634]
s[].arr2[0] elements == 538970634
s[].ftab contains no nulls and has only one value, of length 1
s[].ftab elements has only one value
s[].ftab[0] == [4294967295]
s[].ftab[0] elements == 4294967295L
s[].origPtr == [65814]
s[].origPtr elements == 65814
s[].block contains no nulls and has only one value, of length 1
s[].block elements has only one value
s[].block[0] == [10]
s[].block[0] elements == 10
s[].mtfv contains no nulls and has only one value, of length 1
s[].mtfv elements has only one value
s[].mtfv[0] == [47958]
s[].mtfv[0] elements == 47958
s[].zbits contains no nulls and has only one value, of length 1
s[].zbits elements has only one value
s[].zbits[0] == [6]
s[].zbits[0] elements == 6
s[].workFactor == [30]
s[].workFactor elements == 30
s[].state_in_ch == [58]
s[].state_in_ch elements == 58
s[].state_in_len == [1]
s[].state_in_len elements == 1
s[].nblock == [899982]
s[].nblock elements == 899982
s[].nblockMAX == [899981]
s[].nblockMAX elements == 899981
s[].numZ == [0]
s[].numZ elements == 0
s[].inUse contains no nulls and has only one value, of length 1
s[].inUse elements has only one value
s[].inUse[0] == [1]
s[].inUse[0] elements == 1
s[].bsBuff == [0]
s[].bsBuff elements == 0
s[].blockCRC == [4044990084]
s[].blockCRC elements == 4044990084L
s[].blockSize100k == [9]
s[].blockSize100k elements == 9
size(::incs[]) == 14
size(::bzerrorstrings[]) == 16
size(::BZ2_rNums[]) == 512
size(::BZ2_crc32Table[]) == 256
size(::zSuffix[]) == 4
::incs[::blockSize100k] == 29524
::incs[::blockSize100k-1] == 9841
::incs[::srcMode] == 40
::BZ2_rNums[::verbosity] == 619
::BZ2_rNums[::numFileNames] == 720
::BZ2_rNums[::blockSize100k] == 247
::BZ2_rNums[::blockSize100k-1] == 566
::BZ2_rNums[::srcMode] == 481
::BZ2_rNums[::srcMode-1] == 127
::BZ2_rNums[::longestFileName] == 733
::BZ2_rNums[::longestFileName-1] == 214
::BZ2_rNums[::workFactor] == 419
::BZ2_rNums[::workFactor-1] == 472
::BZ2_crc32Table[::verbosity] == 0
::BZ2_crc32Table[::numFileNames] == 79764919
::BZ2_crc32Table[::blockSize100k] == 583659535
::BZ2_crc32Table[::blockSize100k-1] == 638119352
::BZ2_crc32Table[::srcMode] == 222504665
::BZ2_crc32Table[::srcMode-1] == 159529838
::BZ2_crc32Table[::longestFileName] == 1595256236
::BZ2_crc32Table[::longestFileName-1] == 1095957929
::BZ2_crc32Table[::workFactor] == 1889500026
::BZ2_crc32Table[::workFactor-1] == 2111593891
::fileMetaInfo.__glibc_reserved[] elements == ::verbosity
size(::BZ2_rNums[])-1 in ::BZ2_rNums[]
s[].numZ elements == ::verbosity
s[].inUse[0] elements == ::keepInputFiles
s[].state_in_len elements == ::numFileNames
s[].blockSize100k elements == ::blockSize100k
::inName == orig(::inName)
::outName == orig(::outName)
::tmpName in ::unzSuffix[]
::tmpName == orig(::tmpName)
::progName == orig(::progName)
::progNameReally == orig(::progNameReally)
s[].workFactor elements == ::workFactor
s[] elements == s[::verbosity]
s[].strm elements == s[::verbosity].strm
s[].strm[0] elements == s[::verbosity].strm[0]
s[].strm->avail_in elements == s[::verbosity].strm->avail_in
s[].strm->total_in_lo32 elements == s[::verbosity].strm->total_in_lo32
s[].strm->avail_out elements == s[::verbosity].strm->avail_out
s[].strm->state elements == s[::verbosity].strm->state
s[].strm->bzalloc elements == s[::verbosity].strm->bzalloc
s[].strm->bzfree elements == s[::verbosity].strm->bzfree
s[].strm->opaque elements == s[::verbosity].strm->opaque
s[].mode elements == size(::fileMetaInfo.__glibc_reserved[])-1
s[].arr1 elements == s[::verbosity].arr1
s[].arr1[0] elements == s[::verbosity].arr1[0]
s[].arr2 elements == s[::verbosity].arr2
s[].arr2[0] elements == s[::verbosity].arr2[0]
s[].ftab elements == s[::verbosity].ftab
s[].ftab[0] elements == s[::verbosity].ftab[0]
s[].origPtr elements == s[::verbosity].origPtr
s[].block elements == s[::verbosity].block
s[].block[0] elements == s[::verbosity].block[0]
s[].mtfv elements == s[::verbosity].mtfv
s[].mtfv[0] elements == s[::verbosity].mtfv[0]
s[].zbits elements == s[::verbosity].zbits
s[].zbits[0] elements == s[::verbosity].zbits[0]
s[].state_in_ch elements == s[::verbosity].state_in_ch
s[].nblock elements == s[::verbosity].nblock
s[].nblockMAX elements == s[::verbosity].nblockMAX
s[].inUse elements == s[::verbosity].inUse
s[].bsBuff elements == ::BZ2_crc32Table[::verbosity]
s[].blockCRC elements == s[::verbosity].blockCRC
===========================================================================
..BZ2_bzCompress():::ENTER
::fileMetaInfo.st_uid == ::fileMetaInfo.st_gid
::fileMetaInfo.__pad0 == ::verbosity
::fileMetaInfo.st_mtim.tv_sec == ::fileMetaInfo.st_ctim.tv_sec
::fileMetaInfo.st_mtim.tv_nsec == ::fileMetaInfo.st_ctim.tv_nsec
::verbosity == ::exitValue
::verbosity == size(strm[])-1
::verbosity == ::fileMetaInfo.__glibc_reserved[::fileMetaInfo.__pad0]
::verbosity == ::fileMetaInfo.__glibc_reserved[::verbosity]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::exitValue]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::srcMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[action]
::keepInputFiles == ::deleteOutputOnInterrupt
::keepInputFiles == ::noisy
::smallMode == ::forceOverwrite
::smallMode == ::testFailsExist
::smallMode == ::unzFailsExist
::numFileNames == ::numFilesProcessed
::numFileNames == ::opMode
::numFileNames == size(strm[])
::numFileNames == ::incs[::fileMetaInfo.__pad0]
::numFileNames == ::incs[::verbosity]
::numFileNames == ::incs[::numFileNames-1]
::numFileNames == ::incs[::numFilesProcessed-1]
::numFileNames == ::incs[::exitValue]
::numFileNames == ::incs[::opMode-1]
::srcMode == size(::fileMetaInfo.__glibc_reserved[])
::srcMode == size(::zSuffix[])-1
::srcMode == size(::unzSuffix[])-1
strm[].total_in_hi32 == strm[].total_out_hi32
size(::incs[])-1 == ::incs[::srcMode-1]
size(::zSuffix[]) == size(::unzSuffix[])
size(::zSuffix[]) == ::incs[::numFileNames]
size(::zSuffix[]) == ::incs[::numFilesProcessed]
size(::zSuffix[]) == ::incs[::opMode]
strm[::fileMetaInfo.__pad0].total_in_hi32 == ::BZ2_crc32Table[::verbosity]
strm[::fileMetaInfo.__pad0].total_out_hi32 == ::BZ2_crc32Table[::verbosity]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFileNames-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFilesProcessed-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::opMode-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFileNames-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFilesProcessed-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::opMode-1]
::BZ2_crc32Table[::verbosity] == strm[::verbosity].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[::verbosity].total_out_hi32
::BZ2_crc32Table[::verbosity] == strm[::numFileNames-1].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[::numFileNames-1].total_out_hi32
::BZ2_crc32Table[::verbosity] == strm[::numFilesProcessed-1].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[::numFilesProcessed-1].total_out_hi32
::BZ2_crc32Table[::verbosity] == strm[::exitValue].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[::exitValue].total_out_hi32
::BZ2_crc32Table[::verbosity] == strm[::opMode-1].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[::opMode-1].total_out_hi32
strm[::verbosity] == strm[::numFileNames-1]
strm[::verbosity] == strm[::numFilesProcessed-1]
strm[::verbosity] == strm[::opMode-1]
strm[::verbosity].avail_in == strm[::numFileNames-1].avail_in
strm[::verbosity].avail_in == strm[::numFilesProcessed-1].avail_in
strm[::verbosity].avail_in == strm[::opMode-1].avail_in
strm[::verbosity].total_in_lo32 == strm[::numFileNames-1].total_in_lo32
strm[::verbosity].total_in_lo32 == strm[::numFilesProcessed-1].total_in_lo32
strm[::verbosity].total_in_lo32 == strm[::opMode-1].total_in_lo32
strm[::verbosity].avail_out == strm[::numFileNames-1].avail_out
strm[::verbosity].avail_out == strm[::numFilesProcessed-1].avail_out
strm[::verbosity].avail_out == strm[::opMode-1].avail_out
strm[::verbosity].total_out_lo32 == strm[::numFileNames-1].total_out_lo32
strm[::verbosity].total_out_lo32 == strm[::numFilesProcessed-1].total_out_lo32
strm[::verbosity].total_out_lo32 == strm[::opMode-1].total_out_lo32
strm[::verbosity].state == strm[::numFileNames-1].state
strm[::verbosity].state == strm[::numFilesProcessed-1].state
strm[::verbosity].state == strm[::opMode-1].state
strm[::verbosity].bzalloc == strm[::numFileNames-1].bzalloc
strm[::verbosity].bzalloc == strm[::numFilesProcessed-1].bzalloc
strm[::verbosity].bzalloc == strm[::opMode-1].bzalloc
strm[::verbosity].bzfree == strm[::numFileNames-1].bzfree
strm[::verbosity].bzfree == strm[::numFilesProcessed-1].bzfree
strm[::verbosity].bzfree == strm[::opMode-1].bzfree
strm[::verbosity].opaque == strm[::numFileNames-1].opaque
strm[::verbosity].opaque == strm[::numFilesProcessed-1].opaque
strm[::verbosity].opaque == strm[::opMode-1].opaque
::incs has only one value
::incs[] == [1, 4, 13, 40, 121, 364, 1093, 3280, 9841, 29524, 88573, 265720, 797161, 2391484]
::incs[] elements >= 1
::incs[] sorted by <
::bzerrorstrings has only one value
::bzerrorstrings[] == [OK, SEQUENCE_ERROR, PARAM_ERROR, MEM_ERROR, DATA_ERROR, DATA_ERROR_MAGIC, IO_ERROR, UNEXPECTED_EOF, OUTBUFF_FULL, CONFIG_ERROR, ???, ???, ???, ???, ???, ???]
::fileMetaInfo has only one value
::fileMetaInfo != null
::fileMetaInfo.st_dev == 2049
::fileMetaInfo.st_ino == 936492
::fileMetaInfo.st_nlink == 1
::fileMetaInfo.st_mode == 33277
::fileMetaInfo.st_uid == 1000
::fileMetaInfo.st_rdev == 0
::fileMetaInfo.st_size == 5738700
::fileMetaInfo.st_blksize == 4096
::fileMetaInfo.st_blocks == 11216
::fileMetaInfo.st_atim has only one value
::fileMetaInfo.st_atim != null
::fileMetaInfo.st_atim.tv_sec == 1496096467
::fileMetaInfo.st_atim.tv_nsec == 709424920
::fileMetaInfo.st_mtim has only one value
::fileMetaInfo.st_mtim != null
::fileMetaInfo.st_mtim.tv_sec == 1483563943
::fileMetaInfo.st_mtim.tv_nsec == 421335644
::fileMetaInfo.st_ctim has only one value
::fileMetaInfo.st_ctim != null
::fileMetaInfo.__glibc_reserved has only one value
::fileMetaInfo.__glibc_reserved[] == [0, 0, 0]
::fileMetaInfo.__glibc_reserved[] elements == 0
::BZ2_rNums has only one value
::BZ2_rNums[] == [619, 720, 127, 481, 931, 816, 813, 233, 566, 247, 985, 724, 205, 454, 863, 491, 741, 242, 949, 214, 733, 859, 335, 708, 621, 574, 73, 654, 730, 472, 419, 436, 278, 496, 867, 210, 399, 680, 480, 51, 878, 465, 811, 169, 869, 675, 611, 697, 867, 561, 862, 687, 507, 283, 482, 129, 807, 591, 733, 623, 150, 238, 59, 379, 684, 877, 625, 169, 643, 105, 170, 607, 520, 932, 727, 476, 693, 425, 174, 647, 73, 122, 335, 530, 442, 853, 695, 249, 445, 515, 909, 545, 703, 919, 874, 474, 882, 500, 594, 612, 641, 801, 220, 162, 819, 984, 589, 513, 495, 799, 161, 604, 958, 533, 221, 400, 386, 867, 600, 782, 382, 596, 414, 171, 516, 375, 682, 485, 911, 276, 98, 553, 163, 354, 666, 933, 424, 341, 533, 870, 227, 730, 475, 186, 263, 647, 537, 686, 600, 224, 469, 68, 770, 919, 190, 373, 294, 822, 808, 206, 184, 943, 795, 384, 383, 461, 404, 758, 839, 887, 715, 67, 618, 276, 204, 918, 873, 777, 604, 560, 951, 160, 578, 722, 79, 804, 96, 409, 713, 940, 652, 934, 970, 447, 318, 353, 859, 672, 112, 785, 645, 863, 803, 350, 139, 93, 354, 99, 820, 908, 609, 772, 154, 274, 580, 184, 79, 626, 630, 742, 653, 282, 762, 623, 680, 81, 927, 626, 789, 125, 411, 521, 938, 300, 821, 78, 343, 175, 128, 250, 170, 774, 972, 275, 999, 639, 495, 78, 352, 126, 857, 956, 358, 619, 580, 124, 737, 594, 701, 612, 669, 112, 134, 694, 363, 992, 809, 743, 168, 974, 944, 375, 748, 52, 600, 747, 642, 182, 862, 81, 344, 805, 988, 739, 511, 655, 814, 334, 249, 515, 897, 955, 664, 981, 649, 113, 974, 459, 893, 228, 433, 837, 553, 268, 926, 240, 102, 654, 459, 51, 686, 754, 806, 760, 493, 403, 415, 394, 687, 700, 946, 670, 656, 610, 738, 392, 760, 799, 887, 653, 978, 321, 576, 617, 626, 502, 894, 679, 243, 440, 680, 879, 194, 572, 640, 724, 926, 56, 204, 700, 707, 151, 457, 449, 797, 195, 791, 558, 945, 679, 297, 59, 87, 824, 713, 663, 412, 693, 342, 606, 134, 108, 571, 364, 631, 212, 174, 643, 304, 329, 343, 97, 430, 751, 497, 314, 983, 374, 822, 928, 140, 206, 73, 263, 980, 736, 876, 478, 430, 305, 170, 514, 364, 692, 829, 82, 855, 953, 676, 246, 369, 970, 294, 750, 807, 827, 150, 790, 288, 923, 804, 378, 215, 828, 592, 281, 565, 555, 710, 82, 896, 831, 547, 261, 524, 462, 293, 465, 502, 56, 661, 821, 976, 991, 658, 869, 905, 758, 745, 193, 768, 550, 608, 933, 378, 286, 215, 979, 792, 961, 61, 688, 793, 644, 986, 403, 106, 366, 905, 644, 372, 567, 466, 434, 645, 210, 389, 550, 919, 135, 780, 773, 635, 389, 707, 100, 626, 958, 165, 504, 920, 176, 193, 713, 857, 265, 203, 50, 668, 108, 645, 990, 626, 197, 510, 357, 358, 850, 858, 364, 936, 638]
::BZ2_crc32Table has only one value
::BZ2_crc32Table[] == [0, 79764919, 159529838, 222504665, 319059676, 398814059, 445009330, 507990021, 638119352, 583659535, 797628118, 726387553, 890018660, 835552979, 1015980042, 944750013, 1276238704, 1221641927, 1167319070, 1095957929, 1595256236, 1540665371, 1452775106, 1381403509, 1780037320, 1859660671, 1671105958, 1733955601, 2031960084, 2111593891, 1889500026, 1952343757, 2552477408, 2632100695, 2443283854, 2506133561, 2334638140, 2414271883, 2191915858, 2254759653, 3190512472, 3135915759, 3081330742, 3009969537, 2905550212, 2850959411, 2762807018, 2691435357, 3560074640, 3505614887, 3719321342, 3648080713, 3342211916, 3287746299, 3467911202, 3396681109, 4063920168, 4143685023, 4223187782, 4286162673, 3779000052, 3858754371, 3904687514, 3967668269, 881225847, 809987520, 1023691545, 969234094, 662832811, 591600412, 771767749, 717299826, 311336399, 374308984, 453813921, 533576470, 25881363, 88864420, 134795389, 214552010, 2023205639, 2086057648, 1897238633, 1976864222, 1804852699, 1867694188, 1645340341, 1724971778, 1587496639, 1516133128, 1461550545, 1406951526, 1302016099, 1230646740, 1142491917, 1087903418, 2896545431, 2825181984, 2770861561, 2716262478, 3215044683, 3143675388, 3055782693, 3001194130, 2326604591, 2389456536, 2200899649, 2280525302, 2578013683, 2640855108, 2418763421, 2498394922, 3769900519, 3832873040, 3912640137, 3992402750, 4088425275, 4151408268, 4197601365, 4277358050, 3334271071, 3263032808, 3476998961, 3422541446, 3585640067, 3514407732, 3694837229, 3640369242, 1762451694, 1842216281, 1619975040, 1682949687, 2047383090, 2127137669, 1938468188, 2001449195, 1325665622, 1271206113, 1183200824, 1111960463, 1543535498, 1489069629, 1434599652, 1363369299, 622672798, 568075817, 748617968, 677256519, 907627842, 853037301, 1067152940, 995781531, 51762726, 131386257, 177728840, 240578815, 269590778, 349224269, 429104020, 491947555, 4046411278, 4126034873, 4172115296, 4234965207, 3794477266, 3874110821, 3953728444, 4016571915, 3609705398, 3555108353, 3735388376, 3664026991, 3290680682, 3236090077, 3449943556, 3378572211, 3174993278, 3120533705, 3032266256, 2961025959, 2923101090, 2868635157, 2813903052, 2742672763, 2604032198, 2683796849, 2461293480, 2524268063, 2284983834, 2364738477, 2175806836, 2238787779, 1569362073, 1498123566, 1409854455, 1355396672, 1317987909, 1246755826, 1192025387, 1137557660, 2072149281, 2135122070, 1912620623, 1992383480, 1753615357, 1816598090, 1627664531, 1707420964, 295390185, 358241886, 404320391, 483945776, 43990325, 106832002, 186451547, 266083308, 932423249, 861060070, 1041341759, 986742920, 613929101, 542559546, 756411363, 701822548, 3316196985, 3244833742, 3425377559, 3370778784, 3601682597, 3530312978, 3744426955, 3689838204, 3819031489, 3881883254, 3928223919, 4007849240, 4037393693, 4100235434, 4180117107, 4259748804, 2310601993, 2373574846, 2151335527, 2231098320, 2596047829, 2659030626, 2470359227, 2550115596, 2947551409, 2876312838, 2788305887, 2733848168, 3165939309, 3094707162, 3040238851, 2985771188]
::BZ2_crc32Table[] elements >= 0
::mammamia == 3216
::keepInputFiles == 1
::smallMode == 0
::numFileNames == 1
::blockSize100k == 9
::longestFileName == 20
::inName == "../inputs/in_big.txt"
::outName == "../inputs/in_big.txt.bz2"
::tmpName == ""
::progName == "zip-injected"
::progNameReally == "./zip-injected"
::outputHandleJustInCase has only one value
::outputHandleJustInCase != null
::workFactor == 30
::zSuffix has only one value
::zSuffix[] == [.bz2, .bz, .tbz2, .tbz]
::unzSuffix has only one value
::unzSuffix[] == [, , .tar, .tar]
::unzSuffix[] elements one of { "", ".tar" }
strm has only one value
strm != null
strm[] contains no nulls and has only one value, of length 1
strm[] elements has only one value
strm[] elements != null
strm[].avail_in elements one of { 0, 3700, 5000 }
strm[].avail_in one of { [0], [3700], [5000] }
strm[].total_in_hi32 == [0]
strm[].total_in_hi32 elements == 0
strm[].next_out elements one of { "BZh91AY&SY\361\031\246\204", "\177\346(+$\312k%jvM\340\307\267\217 \017\3069@\r\260\240\003\010", "\376\030\240\254\223)\254\324\211\360\243\002~\321\374\200?\030\345" }
strm[].avail_out == [5000]
strm[].avail_out elements == 5000
strm[].total_out_lo32 elements >= 0
strm[].state contains no nulls and has only one value, of length 1
strm[].state elements has only one value
strm[].state elements != null
strm[].bzalloc contains no nulls and has only one value, of length 1
strm[].bzalloc elements has only one value
strm[].bzalloc elements != null
strm[].bzfree contains no nulls and has only one value, of length 1
strm[].bzfree elements has only one value
strm[].bzfree elements != null
strm[].opaque == [null]
strm[].opaque elements == null
action one of { 0, 2 }
size(::incs[]) == 14
size(::bzerrorstrings[]) == 16
size(::BZ2_rNums[]) == 512
size(::BZ2_crc32Table[]) == 256
size(::zSuffix[]) == 4
::incs[::blockSize100k] == 29524
::incs[::blockSize100k-1] == 9841
::incs[::srcMode] == 40
::incs[action] one of { 1, 13 }
::BZ2_rNums[::verbosity] == 619
::BZ2_rNums[::numFileNames] == 720
::BZ2_rNums[::blockSize100k] == 247
::BZ2_rNums[::blockSize100k-1] == 566
::BZ2_rNums[::srcMode] == 481
::BZ2_rNums[::srcMode-1] == 127
::BZ2_rNums[::longestFileName] == 733
::BZ2_rNums[::longestFileName-1] == 214
::BZ2_rNums[::workFactor] == 419
::BZ2_rNums[::workFactor-1] == 472
::BZ2_rNums[action] one of { 127, 619 }
::BZ2_crc32Table[::verbosity] == 0
::BZ2_crc32Table[::numFileNames] == 79764919
::BZ2_crc32Table[::blockSize100k] == 583659535
::BZ2_crc32Table[::blockSize100k-1] == 638119352
::BZ2_crc32Table[::srcMode] == 222504665
::BZ2_crc32Table[::srcMode-1] == 159529838
::BZ2_crc32Table[::longestFileName] == 1595256236
::BZ2_crc32Table[::longestFileName-1] == 1095957929
::BZ2_crc32Table[::workFactor] == 1889500026
::BZ2_crc32Table[::workFactor-1] == 2111593891
::BZ2_crc32Table[action] one of { 0, 159529838 }
::incs[] elements < ::fileMetaInfo.st_size
::incs[] elements < ::fileMetaInfo.st_atim.tv_sec
::incs[] elements < ::fileMetaInfo.st_atim.tv_nsec
::incs[] elements < ::fileMetaInfo.st_mtim.tv_sec
::incs[] elements < ::fileMetaInfo.st_mtim.tv_nsec
::incs[] elements >= ::numFileNames
::fileMetaInfo.st_mode != ::BZ2_crc32Table[action]
::fileMetaInfo.st_mode > strm[::verbosity].avail_in
::fileMetaInfo.st_mode != strm[::verbosity].total_in_lo32
::fileMetaInfo.st_mode > strm[::verbosity].total_out_lo32
::fileMetaInfo.st_uid != ::BZ2_crc32Table[action]
::fileMetaInfo.st_uid != strm[::verbosity].avail_in
::fileMetaInfo.st_uid != strm[::verbosity].total_in_lo32
::fileMetaInfo.st_uid != strm[::verbosity].total_out_lo32
::BZ2_rNums[] elements < ::fileMetaInfo.st_size
::fileMetaInfo.st_size > action
::fileMetaInfo.st_size > ::incs[action]
::fileMetaInfo.st_size > ::BZ2_rNums[action]
::BZ2_rNums[] elements < ::fileMetaInfo.st_blksize
::fileMetaInfo.st_blksize > action
::fileMetaInfo.st_blksize > ::incs[action]
::fileMetaInfo.st_blksize > ::BZ2_rNums[action]
::BZ2_rNums[] elements < ::fileMetaInfo.st_blocks
::fileMetaInfo.st_blocks > action
::fileMetaInfo.st_blocks > ::incs[action]
::fileMetaInfo.st_blocks > ::BZ2_rNums[action]
::BZ2_rNums[] elements < ::fileMetaInfo.st_atim.tv_sec
::fileMetaInfo.st_atim.tv_sec > action
::fileMetaInfo.st_atim.tv_sec > ::incs[action]
::fileMetaInfo.st_atim.tv_sec > ::BZ2_rNums[action]
::BZ2_rNums[] elements < ::fileMetaInfo.st_atim.tv_nsec
::fileMetaInfo.st_atim.tv_nsec > action
::fileMetaInfo.st_atim.tv_nsec > ::incs[action]
::fileMetaInfo.st_atim.tv_nsec > ::BZ2_rNums[action]
::BZ2_rNums[] elements < ::fileMetaInfo.st_mtim.tv_sec
::fileMetaInfo.st_mtim.tv_sec > action
::fileMetaInfo.st_mtim.tv_sec > ::incs[action]
::fileMetaInfo.st_mtim.tv_sec > ::BZ2_rNums[action]
::BZ2_rNums[] elements < ::fileMetaInfo.st_mtim.tv_nsec
::fileMetaInfo.st_mtim.tv_nsec > action
::fileMetaInfo.st_mtim.tv_nsec > ::incs[action]
::fileMetaInfo.st_mtim.tv_nsec > ::BZ2_rNums[action]
::fileMetaInfo.__glibc_reserved[] elements == ::verbosity
::BZ2_rNums[] elements < ::mammamia
::BZ2_rNums[] elements > ::numFileNames
::BZ2_rNums[] elements > ::blockSize100k
::BZ2_rNums[] elements > ::longestFileName
::BZ2_rNums[] elements > ::workFactor
::BZ2_rNums[] elements > action
::BZ2_rNums[] elements > size(::incs[])
::BZ2_rNums[] elements > size(::bzerrorstrings[])
size(::BZ2_rNums[])-1 in ::BZ2_rNums[]
::BZ2_rNums[] elements > size(::zSuffix[])
::BZ2_rNums[] elements < ::incs[::blockSize100k]
::BZ2_rNums[] elements < ::incs[::blockSize100k-1]
::BZ2_rNums[] elements > ::incs[::srcMode]
::BZ2_rNums[] elements > ::incs[action]
::mammamia > action
::mammamia > ::incs[action]
::mammamia > ::BZ2_rNums[action]
::verbosity <= action
::numFileNames != action
::numFileNames <= ::incs[action]
::numFileNames < ::BZ2_rNums[action]
::blockSize100k > action
::blockSize100k != ::incs[action]
::blockSize100k < ::BZ2_rNums[action]
::srcMode != ::incs[action]
::longestFileName > action
::longestFileName > ::incs[action]
::longestFileName < ::BZ2_rNums[action]
::inName < ::outName
::inName > ::tmpName
::inName < ::progName
::inName < ::progNameReally
::outName > ::tmpName
::outName < ::progName
::outName < ::progNameReally
::tmpName < ::progName
::tmpName < ::progNameReally
::tmpName in ::unzSuffix[]
::progName > ::progNameReally
::workFactor > action
::workFactor > ::incs[action]
::workFactor < ::BZ2_rNums[action]
strm[] elements == strm[::verbosity]
strm[].avail_in elements == strm[::verbosity].avail_in
strm[].total_in_lo32 elements == strm[::verbosity].total_in_lo32
strm[].total_in_hi32 elements == ::BZ2_crc32Table[::verbosity]
strm[].avail_out elements == strm[::verbosity].avail_out
strm[].total_out_lo32 elements == strm[::verbosity].total_out_lo32
strm[].state elements == strm[::verbosity].state
strm[].bzalloc elements == strm[::verbosity].bzalloc
strm[].bzfree elements == strm[::verbosity].bzfree
strm[].opaque elements == strm[::verbosity].opaque
action < size(::incs[])-1
action < size(::bzerrorstrings[])-1
action <= size(::fileMetaInfo.__glibc_reserved[])-1
action < size(::BZ2_rNums[])-1
action < size(::BZ2_crc32Table[])-1
action < ::incs[::blockSize100k]
action < ::incs[::blockSize100k-1]
action < ::incs[::srcMode]
action < ::incs[action]
action < ::BZ2_rNums[::verbosity]
action < ::BZ2_rNums[::numFileNames]
action < ::BZ2_rNums[::blockSize100k]
action < ::BZ2_rNums[::blockSize100k-1]
action < ::BZ2_rNums[::srcMode]
action < ::BZ2_rNums[::srcMode-1]
action < ::BZ2_rNums[::longestFileName]
action < ::BZ2_rNums[::longestFileName-1]
action < ::BZ2_rNums[::workFactor]
action < ::BZ2_rNums[::workFactor-1]
action < ::BZ2_rNums[action]
size(::incs[]) < ::BZ2_rNums[action]
size(::incs[])-1 >= ::incs[action]
size(::bzerrorstrings[]) < ::BZ2_rNums[action]
size(::bzerrorstrings[])-1 > ::incs[action]
size(::fileMetaInfo.__glibc_reserved[])-1 != ::incs[action]
size(::BZ2_rNums[]) != ::BZ2_rNums[action]
size(::BZ2_rNums[])-1 > ::incs[action]
size(::BZ2_rNums[])-1 != ::BZ2_rNums[action]
size(::BZ2_crc32Table[]) != ::BZ2_rNums[action]
size(::BZ2_crc32Table[])-1 > ::incs[action]
size(::BZ2_crc32Table[])-1 != ::BZ2_rNums[action]
size(::zSuffix[]) != ::incs[action]
size(::zSuffix[]) < ::BZ2_rNums[action]
::incs[::blockSize100k] > ::incs[action]
::incs[::blockSize100k] > ::BZ2_rNums[action]
::incs[::blockSize100k-1] > ::incs[action]
::incs[::blockSize100k-1] > ::BZ2_rNums[action]
::incs[::srcMode] > ::incs[action]
::incs[::srcMode] < ::BZ2_rNums[action]
::incs[action] < ::BZ2_rNums[::verbosity]
::incs[action] < ::BZ2_rNums[::numFileNames]
::incs[action] < ::BZ2_rNums[::blockSize100k]
::incs[action] < ::BZ2_rNums[::blockSize100k-1]
::incs[action] < ::BZ2_rNums[::srcMode]
::incs[action] < ::BZ2_rNums[::srcMode-1]
::incs[action] < ::BZ2_rNums[::longestFileName]
::incs[action] < ::BZ2_rNums[::longestFileName-1]
::incs[action] < ::BZ2_rNums[::workFactor]
::incs[action] < ::BZ2_rNums[::workFactor-1]
::incs[action] < ::BZ2_rNums[action]
::BZ2_rNums[::verbosity] >= ::BZ2_rNums[action]
::BZ2_rNums[::numFileNames] > ::BZ2_rNums[action]
::BZ2_rNums[::blockSize100k] != ::BZ2_rNums[action]
::BZ2_rNums[::blockSize100k-1] != ::BZ2_rNums[action]
::BZ2_rNums[::srcMode] != ::BZ2_rNums[action]
::BZ2_rNums[::srcMode-1] <= ::BZ2_rNums[action]
::BZ2_rNums[::longestFileName] > ::BZ2_rNums[action]
::BZ2_rNums[::longestFileName-1] != ::BZ2_rNums[action]
::BZ2_rNums[::workFactor] != ::BZ2_rNums[action]
::BZ2_rNums[::workFactor-1] != ::BZ2_rNums[action]
::BZ2_crc32Table[::verbosity] <= ::BZ2_crc32Table[action]
::BZ2_crc32Table[::verbosity] <= strm[::verbosity].avail_in
::BZ2_crc32Table[::verbosity] <= strm[::verbosity].total_in_lo32
::BZ2_crc32Table[::verbosity] <= strm[::verbosity].total_out_lo32
::BZ2_crc32Table[::numFileNames] != ::BZ2_crc32Table[action]
::BZ2_crc32Table[::numFileNames] > strm[::verbosity].avail_in
::BZ2_crc32Table[::numFileNames] > strm[::verbosity].total_in_lo32
::BZ2_crc32Table[::numFileNames] > strm[::verbosity].total_out_lo32
::BZ2_crc32Table[::blockSize100k] > ::BZ2_crc32Table[action]
::BZ2_crc32Table[::blockSize100k] > strm[::verbosity].avail_in
::BZ2_crc32Table[::blockSize100k] > strm[::verbosity].total_in_lo32
::BZ2_crc32Table[::blockSize100k] > strm[::verbosity].total_out_lo32
::BZ2_crc32Table[::blockSize100k-1] > ::BZ2_crc32Table[action]
::BZ2_crc32Table[::blockSize100k-1] > strm[::verbosity].avail_in
::BZ2_crc32Table[::blockSize100k-1] > strm[::verbosity].total_in_lo32
::BZ2_crc32Table[::blockSize100k-1] > strm[::verbosity].total_out_lo32
::BZ2_crc32Table[::srcMode] > ::BZ2_crc32Table[action]
::BZ2_crc32Table[::srcMode] > strm[::verbosity].avail_in
::BZ2_crc32Table[::srcMode] > strm[::verbosity].total_in_lo32
::BZ2_crc32Table[::srcMode] > strm[::verbosity].total_out_lo32
::BZ2_crc32Table[::srcMode-1] >= ::BZ2_crc32Table[action]
::BZ2_crc32Table[::srcMode-1] > strm[::verbosity].avail_in
::BZ2_crc32Table[::srcMode-1] > strm[::verbosity].total_in_lo32
::BZ2_crc32Table[::srcMode-1] > strm[::verbosity].total_out_lo32
::BZ2_crc32Table[::longestFileName] > ::BZ2_crc32Table[action]
::BZ2_crc32Table[::longestFileName] > strm[::verbosity].avail_in
::BZ2_crc32Table[::longestFileName] > strm[::verbosity].total_in_lo32
::BZ2_crc32Table[::longestFileName] > strm[::verbosity].total_out_lo32
::BZ2_crc32Table[::longestFileName-1] > ::BZ2_crc32Table[action]
::BZ2_crc32Table[::longestFileName-1] > strm[::verbosity].avail_in
::BZ2_crc32Table[::longestFileName-1] > strm[::verbosity].total_in_lo32
::BZ2_crc32Table[::longestFileName-1] > strm[::verbosity].total_out_lo32
::BZ2_crc32Table[::workFactor] > ::BZ2_crc32Table[action]
::BZ2_crc32Table[::workFactor] > strm[::verbosity].avail_in
::BZ2_crc32Table[::workFactor] > strm[::verbosity].total_in_lo32
::BZ2_crc32Table[::workFactor] > strm[::verbosity].total_out_lo32
::BZ2_crc32Table[::workFactor-1] > ::BZ2_crc32Table[action]
::BZ2_crc32Table[::workFactor-1] > strm[::verbosity].avail_in
::BZ2_crc32Table[::workFactor-1] > strm[::verbosity].total_in_lo32
::BZ2_crc32Table[::workFactor-1] > strm[::verbosity].total_out_lo32
::BZ2_crc32Table[action] != strm[::verbosity].avail_in
::BZ2_crc32Table[action] != strm[::verbosity].avail_out
strm[::verbosity].avail_in <= strm[::verbosity].avail_out
strm[::verbosity].avail_in != strm[::verbosity].total_out_lo32
strm[::verbosity].total_in_lo32 >= strm[::verbosity].total_out_lo32
strm[::verbosity].avail_out > strm[::verbosity].total_out_lo32
===========================================================================
..BZ2_bzCompress():::EXIT
::incs == orig(::incs)
::incs[] == orig(::incs[])
::bzerrorstrings == orig(::bzerrorstrings)
::fileMetaInfo == orig(::fileMetaInfo)
::fileMetaInfo.st_dev == orig(::fileMetaInfo.st_dev)
::fileMetaInfo.st_ino == orig(::fileMetaInfo.st_ino)
::fileMetaInfo.st_nlink == orig(::fileMetaInfo.st_nlink)
::fileMetaInfo.st_mode == orig(::fileMetaInfo.st_mode)
::fileMetaInfo.st_uid == ::fileMetaInfo.st_gid
::fileMetaInfo.st_uid == orig(::fileMetaInfo.st_uid)
::fileMetaInfo.st_uid == orig(::fileMetaInfo.st_gid)
::fileMetaInfo.__pad0 == ::verbosity
::fileMetaInfo.st_rdev == orig(::fileMetaInfo.st_rdev)
::fileMetaInfo.st_size == orig(::fileMetaInfo.st_size)
::fileMetaInfo.st_blksize == orig(::fileMetaInfo.st_blksize)
::fileMetaInfo.st_blocks == orig(::fileMetaInfo.st_blocks)
::fileMetaInfo.st_atim == orig(::fileMetaInfo.st_atim)
::fileMetaInfo.st_atim.tv_sec == orig(::fileMetaInfo.st_atim.tv_sec)
::fileMetaInfo.st_atim.tv_nsec == orig(::fileMetaInfo.st_atim.tv_nsec)
::fileMetaInfo.st_mtim == orig(::fileMetaInfo.st_mtim)
::fileMetaInfo.st_mtim.tv_sec == ::fileMetaInfo.st_ctim.tv_sec
::fileMetaInfo.st_mtim.tv_sec == orig(::fileMetaInfo.st_mtim.tv_sec)
::fileMetaInfo.st_mtim.tv_sec == orig(::fileMetaInfo.st_ctim.tv_sec)
::fileMetaInfo.st_mtim.tv_nsec == ::fileMetaInfo.st_ctim.tv_nsec
::fileMetaInfo.st_mtim.tv_nsec == orig(::fileMetaInfo.st_mtim.tv_nsec)
::fileMetaInfo.st_mtim.tv_nsec == orig(::fileMetaInfo.st_ctim.tv_nsec)
::fileMetaInfo.st_ctim == orig(::fileMetaInfo.st_ctim)
::fileMetaInfo.__glibc_reserved == orig(::fileMetaInfo.__glibc_reserved)
::fileMetaInfo.__glibc_reserved[] == orig(::fileMetaInfo.__glibc_reserved[])
::BZ2_rNums == orig(::BZ2_rNums)
::BZ2_rNums[] == orig(::BZ2_rNums[])
::BZ2_crc32Table == orig(::BZ2_crc32Table)
::BZ2_crc32Table[] == orig(::BZ2_crc32Table[])
::mammamia == orig(::mammamia)
::verbosity == ::exitValue
::verbosity == orig(::fileMetaInfo.__pad0)
::verbosity == orig(::verbosity)
::verbosity == orig(::exitValue)
::verbosity == size(strm[])-1
::verbosity == orig(size(strm[]))-1
::verbosity == ::fileMetaInfo.__glibc_reserved[::fileMetaInfo.__pad0]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::fileMetaInfo.__pad0)])
::verbosity == ::fileMetaInfo.__glibc_reserved[::verbosity]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::exitValue]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::srcMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::fileMetaInfo.__pad0)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::verbosity)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFileNames)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFileNames)-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFilesProcessed)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFilesProcessed)-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::exitValue)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::opMode)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::opMode)-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::srcMode)-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(action)]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::verbosity)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFileNames)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFileNames)-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFilesProcessed)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFilesProcessed)-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::exitValue)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::opMode)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::opMode)-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::srcMode)-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(action)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::fileMetaInfo.__pad0])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::verbosity])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFileNames])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFileNames-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFilesProcessed])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFilesProcessed-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::exitValue])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::opMode])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::opMode-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::srcMode-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[action])
::keepInputFiles == ::deleteOutputOnInterrupt
::keepInputFiles == ::noisy
::keepInputFiles == orig(::keepInputFiles)
::keepInputFiles == orig(::deleteOutputOnInterrupt)
::keepInputFiles == orig(::noisy)
::smallMode == ::forceOverwrite
::smallMode == ::testFailsExist
::smallMode == ::unzFailsExist
::smallMode == orig(::smallMode)
::smallMode == orig(::forceOverwrite)
::smallMode == orig(::testFailsExist)
::smallMode == orig(::unzFailsExist)
::numFileNames == ::numFilesProcessed
::numFileNames == ::opMode
::numFileNames == orig(::numFileNames)
::numFileNames == orig(::numFilesProcessed)
::numFileNames == orig(::opMode)
::numFileNames == orig(size(strm[]))
::numFileNames == ::incs[::fileMetaInfo.__pad0]
::numFileNames == ::incs[::verbosity]
::numFileNames == ::incs[::numFileNames-1]
::numFileNames == ::incs[::numFilesProcessed-1]
::numFileNames == ::incs[::exitValue]
::numFileNames == ::incs[::opMode-1]
::numFileNames == ::incs[orig(::fileMetaInfo.__pad0)]
::numFileNames == ::incs[orig(::verbosity)]
::numFileNames == ::incs[orig(::numFileNames)-1]
::numFileNames == ::incs[orig(::numFilesProcessed)-1]
::numFileNames == ::incs[orig(::exitValue)]
::numFileNames == ::incs[orig(::opMode)-1]
::numFileNames == orig(::incs[post(::fileMetaInfo.__pad0)])
::numFileNames == orig(::incs[post(::verbosity)])
::numFileNames == orig(::incs[post(::numFileNames)-1])
::numFileNames == orig(::incs[post(::numFilesProcessed)-1])
::numFileNames == orig(::incs[post(::exitValue)])
::numFileNames == orig(::incs[post(::opMode)-1])
::numFileNames == orig(::incs[::fileMetaInfo.__pad0])
::numFileNames == orig(::incs[::verbosity])
::numFileNames == orig(::incs[::numFileNames-1])
::numFileNames == orig(::incs[::numFilesProcessed-1])
::numFileNames == orig(::incs[::exitValue])
::numFileNames == orig(::incs[::opMode-1])
::blockSize100k == orig(::blockSize100k)
::srcMode == orig(::srcMode)
::srcMode == size(::fileMetaInfo.__glibc_reserved[])
::srcMode == size(::zSuffix[])-1
::srcMode == size(::unzSuffix[])-1
::srcMode == orig(size(::fileMetaInfo.__glibc_reserved[]))
::srcMode == orig(size(::zSuffix[]))-1
::srcMode == orig(size(::unzSuffix[]))-1
::longestFileName == orig(::longestFileName)
::outputHandleJustInCase == orig(::outputHandleJustInCase)
::workFactor == orig(::workFactor)
::zSuffix == orig(::zSuffix)
::unzSuffix == orig(::unzSuffix)
strm[] == orig(strm[])
strm[].avail_in == strm[].total_in_hi32
strm[].avail_in == strm[].total_out_hi32
strm[].avail_in == orig(strm[].total_in_hi32)
strm[].avail_in == orig(strm[].total_out_hi32)
strm[].next_out == orig(strm[].next_out)
strm[].state == orig(strm[].state)
strm[].bzalloc == orig(strm[].bzalloc)
strm[].bzfree == orig(strm[].bzfree)
strm[].opaque == orig(strm[].opaque)
size(::incs[])-1 == ::incs[::srcMode-1]
size(::incs[])-1 == ::incs[orig(::srcMode)-1]
size(::incs[])-1 == orig(::incs[post(::srcMode)-1])
size(::incs[])-1 == orig(::incs[::srcMode-1])
size(::zSuffix[]) == size(::unzSuffix[])
size(::zSuffix[]) == orig(size(::unzSuffix[]))
size(::zSuffix[]) == ::incs[::numFileNames]
size(::zSuffix[]) == ::incs[::numFilesProcessed]
size(::zSuffix[]) == ::incs[::opMode]
size(::zSuffix[]) == ::incs[orig(::numFileNames)]
size(::zSuffix[]) == ::incs[orig(::numFilesProcessed)]
size(::zSuffix[]) == ::incs[orig(::opMode)]
size(::zSuffix[]) == orig(::incs[post(::numFileNames)])
size(::zSuffix[]) == orig(::incs[post(::numFilesProcessed)])
size(::zSuffix[]) == orig(::incs[post(::opMode)])
size(::zSuffix[]) == orig(::incs[::numFileNames])
size(::zSuffix[]) == orig(::incs[::numFilesProcessed])
size(::zSuffix[]) == orig(::incs[::opMode])
strm[::fileMetaInfo.__pad0].avail_in == ::BZ2_crc32Table[::verbosity]
strm[::fileMetaInfo.__pad0].total_in_hi32 == ::BZ2_crc32Table[::verbosity]
strm[::fileMetaInfo.__pad0].total_out_hi32 == ::BZ2_crc32Table[::verbosity]
orig(strm[post(::fileMetaInfo.__pad0)].total_in_hi32) == ::BZ2_crc32Table[::verbosity]
orig(strm[post(::fileMetaInfo.__pad0)].total_out_hi32) == ::BZ2_crc32Table[::verbosity]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFileNames-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFilesProcessed-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::opMode-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[orig(::numFileNames)-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[orig(::numFilesProcessed)-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[orig(::opMode)-1]
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[post(::numFileNames)-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[post(::numFilesProcessed)-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[post(::opMode)-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[::numFileNames-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[::numFilesProcessed-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[::opMode-1])
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFileNames-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFilesProcessed-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::opMode-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[orig(::numFileNames)-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[orig(::numFilesProcessed)-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[orig(::opMode)-1]
::BZ2_crc32Table[::verbosity] == strm[::verbosity].avail_in
::BZ2_crc32Table[::verbosity] == strm[::verbosity].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[::verbosity].total_out_hi32
::BZ2_crc32Table[::verbosity] == orig(strm[post(::verbosity)].total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(strm[post(::verbosity)].total_out_hi32)
::BZ2_crc32Table[::verbosity] == strm[::numFileNames-1].avail_in
::BZ2_crc32Table[::verbosity] == strm[::numFileNames-1].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[::numFileNames-1].total_out_hi32
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[post(::numFileNames)-1])
::BZ2_crc32Table[::verbosity] == orig(strm[post(::numFileNames)-1].total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(strm[post(::numFileNames)-1].total_out_hi32)
::BZ2_crc32Table[::verbosity] == strm[::numFilesProcessed-1].avail_in
::BZ2_crc32Table[::verbosity] == strm[::numFilesProcessed-1].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[::numFilesProcessed-1].total_out_hi32
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[post(::numFilesProcessed)-1])
::BZ2_crc32Table[::verbosity] == orig(strm[post(::numFilesProcessed)-1].total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(strm[post(::numFilesProcessed)-1].total_out_hi32)
::BZ2_crc32Table[::verbosity] == strm[::exitValue].avail_in
::BZ2_crc32Table[::verbosity] == strm[::exitValue].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[::exitValue].total_out_hi32
::BZ2_crc32Table[::verbosity] == orig(strm[post(::exitValue)].total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(strm[post(::exitValue)].total_out_hi32)
::BZ2_crc32Table[::verbosity] == strm[::opMode-1].avail_in
::BZ2_crc32Table[::verbosity] == strm[::opMode-1].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[::opMode-1].total_out_hi32
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[post(::opMode)-1])
::BZ2_crc32Table[::verbosity] == orig(strm[post(::opMode)-1].total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(strm[post(::opMode)-1].total_out_hi32)
::BZ2_crc32Table[::verbosity] == strm[orig(::fileMetaInfo.__pad0)].avail_in
::BZ2_crc32Table[::verbosity] == strm[orig(::verbosity)].avail_in
::BZ2_crc32Table[::verbosity] == strm[orig(::numFileNames)-1].avail_in
::BZ2_crc32Table[::verbosity] == strm[orig(::numFilesProcessed)-1].avail_in
::BZ2_crc32Table[::verbosity] == strm[orig(::exitValue)].avail_in
::BZ2_crc32Table[::verbosity] == strm[orig(::opMode)-1].avail_in
::BZ2_crc32Table[::verbosity] == strm[orig(::fileMetaInfo.__pad0)].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[orig(::verbosity)].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[orig(::numFileNames)-1].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[orig(::numFilesProcessed)-1].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[orig(::exitValue)].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[orig(::opMode)-1].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[orig(::fileMetaInfo.__pad0)].total_out_hi32
::BZ2_crc32Table[::verbosity] == strm[orig(::verbosity)].total_out_hi32
::BZ2_crc32Table[::verbosity] == strm[orig(::numFileNames)-1].total_out_hi32
::BZ2_crc32Table[::verbosity] == strm[orig(::numFilesProcessed)-1].total_out_hi32
::BZ2_crc32Table[::verbosity] == strm[orig(::exitValue)].total_out_hi32
::BZ2_crc32Table[::verbosity] == strm[orig(::opMode)-1].total_out_hi32
::BZ2_crc32Table[::verbosity] == orig(strm[::fileMetaInfo.__pad0].total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(strm[::fileMetaInfo.__pad0].total_out_hi32)
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[::numFileNames-1])
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[::numFilesProcessed-1])
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[::opMode-1])
::BZ2_crc32Table[::verbosity] == orig(strm[::verbosity].total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(strm[::verbosity].total_out_hi32)
::BZ2_crc32Table[::verbosity] == orig(strm[::numFileNames-1].total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(strm[::numFileNames-1].total_out_hi32)
::BZ2_crc32Table[::verbosity] == orig(strm[::numFilesProcessed-1].total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(strm[::numFilesProcessed-1].total_out_hi32)
::BZ2_crc32Table[::verbosity] == orig(strm[::exitValue].total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(strm[::exitValue].total_out_hi32)
::BZ2_crc32Table[::verbosity] == orig(strm[::opMode-1].total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(strm[::opMode-1].total_out_hi32)
strm[::verbosity] == strm[::numFileNames-1]
strm[::verbosity] == orig(strm[post(::numFileNames)-1])
strm[::verbosity] == strm[::numFilesProcessed-1]
strm[::verbosity] == orig(strm[post(::numFilesProcessed)-1])
strm[::verbosity] == strm[::opMode-1]
strm[::verbosity] == orig(strm[post(::opMode)-1])
strm[::verbosity] == strm[orig(::numFileNames)-1]
strm[::verbosity] == strm[orig(::numFilesProcessed)-1]
strm[::verbosity] == strm[orig(::opMode)-1]
strm[::verbosity] == orig(strm[::numFileNames-1])
strm[::verbosity] == orig(strm[::numFilesProcessed-1])
strm[::verbosity] == orig(strm[::opMode-1])
strm[::verbosity].total_in_lo32 == strm[::numFileNames-1].total_in_lo32
strm[::verbosity].total_in_lo32 == strm[::numFilesProcessed-1].total_in_lo32
strm[::verbosity].total_in_lo32 == strm[::opMode-1].total_in_lo32
strm[::verbosity].total_in_lo32 == strm[orig(::numFileNames)-1].total_in_lo32
strm[::verbosity].total_in_lo32 == strm[orig(::numFilesProcessed)-1].total_in_lo32
strm[::verbosity].total_in_lo32 == strm[orig(::opMode)-1].total_in_lo32
strm[::verbosity].avail_out == strm[::numFileNames-1].avail_out
strm[::verbosity].avail_out == strm[::numFilesProcessed-1].avail_out
strm[::verbosity].avail_out == strm[::opMode-1].avail_out
strm[::verbosity].avail_out == strm[orig(::numFileNames)-1].avail_out
strm[::verbosity].avail_out == strm[orig(::numFilesProcessed)-1].avail_out
strm[::verbosity].avail_out == strm[orig(::opMode)-1].avail_out
strm[::verbosity].total_out_lo32 == strm[::numFileNames-1].total_out_lo32
strm[::verbosity].total_out_lo32 == strm[::numFilesProcessed-1].total_out_lo32
strm[::verbosity].total_out_lo32 == strm[::opMode-1].total_out_lo32
strm[::verbosity].total_out_lo32 == strm[orig(::numFileNames)-1].total_out_lo32
strm[::verbosity].total_out_lo32 == strm[orig(::numFilesProcessed)-1].total_out_lo32
strm[::verbosity].total_out_lo32 == strm[orig(::opMode)-1].total_out_lo32
strm[::verbosity].state == strm[::numFileNames-1].state
strm[::verbosity].state == orig(strm[post(::numFileNames)-1].state)
strm[::verbosity].state == strm[::numFilesProcessed-1].state
strm[::verbosity].state == orig(strm[post(::numFilesProcessed)-1].state)
strm[::verbosity].state == strm[::opMode-1].state
strm[::verbosity].state == orig(strm[post(::opMode)-1].state)
strm[::verbosity].state == strm[orig(::numFileNames)-1].state
strm[::verbosity].state == strm[orig(::numFilesProcessed)-1].state
strm[::verbosity].state == strm[orig(::opMode)-1].state
strm[::verbosity].state == orig(strm[::numFileNames-1].state)
strm[::verbosity].state == orig(strm[::numFilesProcessed-1].state)
strm[::verbosity].state == orig(strm[::opMode-1].state)
strm[::verbosity].bzalloc == strm[::numFileNames-1].bzalloc
strm[::verbosity].bzalloc == orig(strm[post(::numFileNames)-1].bzalloc)
strm[::verbosity].bzalloc == strm[::numFilesProcessed-1].bzalloc
strm[::verbosity].bzalloc == orig(strm[post(::numFilesProcessed)-1].bzalloc)
strm[::verbosity].bzalloc == strm[::opMode-1].bzalloc
strm[::verbosity].bzalloc == orig(strm[post(::opMode)-1].bzalloc)
strm[::verbosity].bzalloc == strm[orig(::numFileNames)-1].bzalloc
strm[::verbosity].bzalloc == strm[orig(::numFilesProcessed)-1].bzalloc
strm[::verbosity].bzalloc == strm[orig(::opMode)-1].bzalloc
strm[::verbosity].bzalloc == orig(strm[::numFileNames-1].bzalloc)
strm[::verbosity].bzalloc == orig(strm[::numFilesProcessed-1].bzalloc)
strm[::verbosity].bzalloc == orig(strm[::opMode-1].bzalloc)
strm[::verbosity].bzfree == strm[::numFileNames-1].bzfree
strm[::verbosity].bzfree == orig(strm[post(::numFileNames)-1].bzfree)
strm[::verbosity].bzfree == strm[::numFilesProcessed-1].bzfree
strm[::verbosity].bzfree == orig(strm[post(::numFilesProcessed)-1].bzfree)
strm[::verbosity].bzfree == strm[::opMode-1].bzfree
strm[::verbosity].bzfree == orig(strm[post(::opMode)-1].bzfree)
strm[::verbosity].bzfree == strm[orig(::numFileNames)-1].bzfree
strm[::verbosity].bzfree == strm[orig(::numFilesProcessed)-1].bzfree
strm[::verbosity].bzfree == strm[orig(::opMode)-1].bzfree
strm[::verbosity].bzfree == orig(strm[::numFileNames-1].bzfree)
strm[::verbosity].bzfree == orig(strm[::numFilesProcessed-1].bzfree)
strm[::verbosity].bzfree == orig(strm[::opMode-1].bzfree)
strm[::verbosity].opaque == strm[::numFileNames-1].opaque
strm[::verbosity].opaque == orig(strm[post(::numFileNames)-1].opaque)
strm[::verbosity].opaque == strm[::numFilesProcessed-1].opaque
strm[::verbosity].opaque == orig(strm[post(::numFilesProcessed)-1].opaque)
strm[::verbosity].opaque == strm[::opMode-1].opaque
strm[::verbosity].opaque == orig(strm[post(::opMode)-1].opaque)
strm[::verbosity].opaque == strm[orig(::numFileNames)-1].opaque
strm[::verbosity].opaque == strm[orig(::numFilesProcessed)-1].opaque
strm[::verbosity].opaque == strm[orig(::opMode)-1].opaque
strm[::verbosity].opaque == orig(strm[::numFileNames-1].opaque)
strm[::verbosity].opaque == orig(strm[::numFilesProcessed-1].opaque)
strm[::verbosity].opaque == orig(strm[::opMode-1].opaque)
orig(strm[post(::numFileNames)-1].avail_in) == orig(strm[::verbosity].avail_in)
orig(strm[post(::numFileNames)-1].total_in_lo32) == orig(strm[::verbosity].total_in_lo32)
orig(strm[post(::numFileNames)-1].avail_out) == orig(strm[::verbosity].avail_out)
orig(strm[post(::numFileNames)-1].total_out_lo32) == orig(strm[::verbosity].total_out_lo32)
orig(strm[post(::numFilesProcessed)-1].avail_in) == orig(strm[::verbosity].avail_in)
orig(strm[post(::numFilesProcessed)-1].total_in_lo32) == orig(strm[::verbosity].total_in_lo32)
orig(strm[post(::numFilesProcessed)-1].avail_out) == orig(strm[::verbosity].avail_out)
orig(strm[post(::numFilesProcessed)-1].total_out_lo32) == orig(strm[::verbosity].total_out_lo32)
orig(strm[post(::opMode)-1].avail_in) == orig(strm[::verbosity].avail_in)
orig(strm[post(::opMode)-1].total_in_lo32) == orig(strm[::verbosity].total_in_lo32)
orig(strm[post(::opMode)-1].avail_out) == orig(strm[::verbosity].avail_out)
orig(strm[post(::opMode)-1].total_out_lo32) == orig(strm[::verbosity].total_out_lo32)
::incs has only one value
::incs[] == [1, 4, 13, 40, 121, 364, 1093, 3280, 9841, 29524, 88573, 265720, 797161, 2391484]
::incs[] elements >= 1
::incs[] sorted by <
::bzerrorstrings has only one value
::bzerrorstrings[] == [OK, SEQUENCE_ERROR, PARAM_ERROR, MEM_ERROR, DATA_ERROR, DATA_ERROR_MAGIC, IO_ERROR, UNEXPECTED_EOF, OUTBUFF_FULL, CONFIG_ERROR, ???, ???, ???, ???, ???, ???]
::fileMetaInfo has only one value
::fileMetaInfo != null
::fileMetaInfo.st_dev == 2049
::fileMetaInfo.st_ino == 936492
::fileMetaInfo.st_nlink == 1
::fileMetaInfo.st_mode == 33277
::fileMetaInfo.st_uid == 1000
::fileMetaInfo.st_rdev == 0
::fileMetaInfo.st_size == 5738700
::fileMetaInfo.st_blksize == 4096
::fileMetaInfo.st_blocks == 11216
::fileMetaInfo.st_atim has only one value
::fileMetaInfo.st_atim != null
::fileMetaInfo.st_atim.tv_sec == 1496096467
::fileMetaInfo.st_atim.tv_nsec == 709424920
::fileMetaInfo.st_mtim has only one value
::fileMetaInfo.st_mtim != null
::fileMetaInfo.st_mtim.tv_sec == 1483563943
::fileMetaInfo.st_mtim.tv_nsec == 421335644
::fileMetaInfo.st_ctim has only one value
::fileMetaInfo.st_ctim != null
::fileMetaInfo.__glibc_reserved has only one value
::fileMetaInfo.__glibc_reserved[] == [0, 0, 0]
::fileMetaInfo.__glibc_reserved[] elements == 0
::BZ2_rNums has only one value
::BZ2_rNums[] == [619, 720, 127, 481, 931, 816, 813, 233, 566, 247, 985, 724, 205, 454, 863, 491, 741, 242, 949, 214, 733, 859, 335, 708, 621, 574, 73, 654, 730, 472, 419, 436, 278, 496, 867, 210, 399, 680, 480, 51, 878, 465, 811, 169, 869, 675, 611, 697, 867, 561, 862, 687, 507, 283, 482, 129, 807, 591, 733, 623, 150, 238, 59, 379, 684, 877, 625, 169, 643, 105, 170, 607, 520, 932, 727, 476, 693, 425, 174, 647, 73, 122, 335, 530, 442, 853, 695, 249, 445, 515, 909, 545, 703, 919, 874, 474, 882, 500, 594, 612, 641, 801, 220, 162, 819, 984, 589, 513, 495, 799, 161, 604, 958, 533, 221, 400, 386, 867, 600, 782, 382, 596, 414, 171, 516, 375, 682, 485, 911, 276, 98, 553, 163, 354, 666, 933, 424, 341, 533, 870, 227, 730, 475, 186, 263, 647, 537, 686, 600, 224, 469, 68, 770, 919, 190, 373, 294, 822, 808, 206, 184, 943, 795, 384, 383, 461, 404, 758, 839, 887, 715, 67, 618, 276, 204, 918, 873, 777, 604, 560, 951, 160, 578, 722, 79, 804, 96, 409, 713, 940, 652, 934, 970, 447, 318, 353, 859, 672, 112, 785, 645, 863, 803, 350, 139, 93, 354, 99, 820, 908, 609, 772, 154, 274, 580, 184, 79, 626, 630, 742, 653, 282, 762, 623, 680, 81, 927, 626, 789, 125, 411, 521, 938, 300, 821, 78, 343, 175, 128, 250, 170, 774, 972, 275, 999, 639, 495, 78, 352, 126, 857, 956, 358, 619, 580, 124, 737, 594, 701, 612, 669, 112, 134, 694, 363, 992, 809, 743, 168, 974, 944, 375, 748, 52, 600, 747, 642, 182, 862, 81, 344, 805, 988, 739, 511, 655, 814, 334, 249, 515, 897, 955, 664, 981, 649, 113, 974, 459, 893, 228, 433, 837, 553, 268, 926, 240, 102, 654, 459, 51, 686, 754, 806, 760, 493, 403, 415, 394, 687, 700, 946, 670, 656, 610, 738, 392, 760, 799, 887, 653, 978, 321, 576, 617, 626, 502, 894, 679, 243, 440, 680, 879, 194, 572, 640, 724, 926, 56, 204, 700, 707, 151, 457, 449, 797, 195, 791, 558, 945, 679, 297, 59, 87, 824, 713, 663, 412, 693, 342, 606, 134, 108, 571, 364, 631, 212, 174, 643, 304, 329, 343, 97, 430, 751, 497, 314, 983, 374, 822, 928, 140, 206, 73, 263, 980, 736, 876, 478, 430, 305, 170, 514, 364, 692, 829, 82, 855, 953, 676, 246, 369, 970, 294, 750, 807, 827, 150, 790, 288, 923, 804, 378, 215, 828, 592, 281, 565, 555, 710, 82, 896, 831, 547, 261, 524, 462, 293, 465, 502, 56, 661, 821, 976, 991, 658, 869, 905, 758, 745, 193, 768, 550, 608, 933, 378, 286, 215, 979, 792, 961, 61, 688, 793, 644, 986, 403, 106, 366, 905, 644, 372, 567, 466, 434, 645, 210, 389, 550, 919, 135, 780, 773, 635, 389, 707, 100, 626, 958, 165, 504, 920, 176, 193, 713, 857, 265, 203, 50, 668, 108, 645, 990, 626, 197, 510, 357, 358, 850, 858, 364, 936, 638]
::BZ2_crc32Table has only one value
::BZ2_crc32Table[] == [0, 79764919, 159529838, 222504665, 319059676, 398814059, 445009330, 507990021, 638119352, 583659535, 797628118, 726387553, 890018660, 835552979, 1015980042, 944750013, 1276238704, 1221641927, 1167319070, 1095957929, 1595256236, 1540665371, 1452775106, 1381403509, 1780037320, 1859660671, 1671105958, 1733955601, 2031960084, 2111593891, 1889500026, 1952343757, 2552477408, 2632100695, 2443283854, 2506133561, 2334638140, 2414271883, 2191915858, 2254759653, 3190512472, 3135915759, 3081330742, 3009969537, 2905550212, 2850959411, 2762807018, 2691435357, 3560074640, 3505614887, 3719321342, 3648080713, 3342211916, 3287746299, 3467911202, 3396681109, 4063920168, 4143685023, 4223187782, 4286162673, 3779000052, 3858754371, 3904687514, 3967668269, 881225847, 809987520, 1023691545, 969234094, 662832811, 591600412, 771767749, 717299826, 311336399, 374308984, 453813921, 533576470, 25881363, 88864420, 134795389, 214552010, 2023205639, 2086057648, 1897238633, 1976864222, 1804852699, 1867694188, 1645340341, 1724971778, 1587496639, 1516133128, 1461550545, 1406951526, 1302016099, 1230646740, 1142491917, 1087903418, 2896545431, 2825181984, 2770861561, 2716262478, 3215044683, 3143675388, 3055782693, 3001194130, 2326604591, 2389456536, 2200899649, 2280525302, 2578013683, 2640855108, 2418763421, 2498394922, 3769900519, 3832873040, 3912640137, 3992402750, 4088425275, 4151408268, 4197601365, 4277358050, 3334271071, 3263032808, 3476998961, 3422541446, 3585640067, 3514407732, 3694837229, 3640369242, 1762451694, 1842216281, 1619975040, 1682949687, 2047383090, 2127137669, 1938468188, 2001449195, 1325665622, 1271206113, 1183200824, 1111960463, 1543535498, 1489069629, 1434599652, 1363369299, 622672798, 568075817, 748617968, 677256519, 907627842, 853037301, 1067152940, 995781531, 51762726, 131386257, 177728840, 240578815, 269590778, 349224269, 429104020, 491947555, 4046411278, 4126034873, 4172115296, 4234965207, 3794477266, 3874110821, 3953728444, 4016571915, 3609705398, 3555108353, 3735388376, 3664026991, 3290680682, 3236090077, 3449943556, 3378572211, 3174993278, 3120533705, 3032266256, 2961025959, 2923101090, 2868635157, 2813903052, 2742672763, 2604032198, 2683796849, 2461293480, 2524268063, 2284983834, 2364738477, 2175806836, 2238787779, 1569362073, 1498123566, 1409854455, 1355396672, 1317987909, 1246755826, 1192025387, 1137557660, 2072149281, 2135122070, 1912620623, 1992383480, 1753615357, 1816598090, 1627664531, 1707420964, 295390185, 358241886, 404320391, 483945776, 43990325, 106832002, 186451547, 266083308, 932423249, 861060070, 1041341759, 986742920, 613929101, 542559546, 756411363, 701822548, 3316196985, 3244833742, 3425377559, 3370778784, 3601682597, 3530312978, 3744426955, 3689838204, 3819031489, 3881883254, 3928223919, 4007849240, 4037393693, 4100235434, 4180117107, 4259748804, 2310601993, 2373574846, 2151335527, 2231098320, 2596047829, 2659030626, 2470359227, 2550115596, 2947551409, 2876312838, 2788305887, 2733848168, 3165939309, 3094707162, 3040238851, 2985771188]
::BZ2_crc32Table[] elements >= 0
::mammamia == 3216
::keepInputFiles == 1
::smallMode == 0
::numFileNames == 1
::blockSize100k == 9
::longestFileName == 20
::inName == "../inputs/in_big.txt"
::outName == "../inputs/in_big.txt.bz2"
::tmpName == ""
::progName == "zip-injected"
::progNameReally == "./zip-injected"
::outputHandleJustInCase has only one value
::outputHandleJustInCase != null
::workFactor == 30
::zSuffix has only one value
::zSuffix[] == [.bz2, .bz, .tbz2, .tbz]
::unzSuffix has only one value
::unzSuffix[] == [, , .tar, .tar]
::unzSuffix[] elements one of { "", ".tar" }
strm[] contains no nulls and has only one value, of length 1
strm[] elements has only one value
strm[] elements != null
strm[].next_in elements one of { "", ";;      ;.,;`   .; ;;,   ,; `; ;.   ;;    ;:\n      ;;      ;. ;;;;;;: ;:;;:;;. `; ;.    ;;;;;; \n                  `,,,   ;, :::   `, ,`     `,,   \n                         ;,                       \n                         ;,                       \n                         ;,                       \n\n\n                                                  \n      `::::                                       \n     :::,``                                       \n    ::.                                           \n   ::  `:::                                       \n  ::  :::.                                        \n `:` ::`                                          \n :: .:` `;;;;                                     \n :. :, .;;.,;;                    :;`             \n`:  :  ;;    ;:                   :;`             \n.: `:  ;`    :;     `        `                    \n             :;  ,;;;;;    ;;;;;  `;  .;;: ,;;;;` \n      `````` :; `;,  `;;  ;;` `;; `; `;, `,;`  ,;`\n      ;;;;;;;;;..;       .;     ;.`; ;:   ;`    ,;\n      ;;      ;. ;;;;,`  ;:     ::`; ;.  `;;;;;;;;\n      ;;      ;.  ,:;;;; ;,     :;`; ;.  .;```````\n      ;;      ;.      `;`;;     ;:`; ;.   ;       \n      ;;      ;.,;`   .; ;;,   ,; `; ;.   ;;    ;:\n      ;;      ;. ;;;;;;: ;:;;:;;. `; ;.    ;;;;;; \n                  `,,,   ;, :" }
strm[].next_in one of { [], [;;      ;.,;`   .; ;;,   ,; `; ;.   ;;    ;:
      ;;      ;. ;;;;;;: ;:;;:;;. `; ;.    ;;;;;; 
                  `,,,   ;, :::   `, ,`     `,,   
                         ;,                       
                         ;,                       
                         ;,                       


                                                  
      `::::                                       
     :::,``                                       
    ::.                                           
   ::  `:::                                       
  ::  :::.                                        
 `:` ::`                                          
 :: .:` `;;;;                                     
 :. :, .;;.,;;                    :;`             
`:  :  ;;    ;:                   :;`             
.: `:  ;`    :;     `        `                    
             :;  ,;;;;;    ;;;;;  `;  .;;: ,;;;;` 
      `````` :; `;,  `;;  ;;` `;; `; `;, `,;`  ,;`
      ;;;;;;;;;..;       .;     ;.`; ;:   ;`    ,;
      ;;      ;. ;;;;,`  ;:     ::`; ;.  `;;;;;;;;
      ;;      ;.  ,:;;;; ;,     :;`; ;.  .;```````
      ;;      ;.      `;`;;     ;:`; ;.   ;       
      ;;      ;.,;`   .; ;;,   ,; `; ;.   ;;    ;:
      ;;      ;. ;;;;;;: ;:;;:;;. `; ;.    ;;;;;; 
                  `,,,   ;, :] }
strm[].avail_in == [0]
strm[].avail_in elements == 0
strm[].next_out elements one of { "BZh91AY&SY\361\031\246\204", "\177\346(+$\312k%jvM\340\307\267\217 \017\3069@\r\260\240\003\010", "\376\030\240\254\223)\254\324\211\360\243\002~\321\374\200?\030\345" }
strm[].total_out_lo32 elements >= 0
strm[].state contains no nulls and has only one value, of length 1
strm[].state elements has only one value
strm[].state elements != null
strm[].bzalloc contains no nulls and has only one value, of length 1
strm[].bzalloc elements has only one value
strm[].bzalloc elements != null
strm[].bzfree contains no nulls and has only one value, of length 1
strm[].bzfree elements has only one value
strm[].bzfree elements != null
strm[].opaque == [null]
strm[].opaque elements == null
return one of { 1, 4 }
size(::incs[]) == 14
size(::bzerrorstrings[]) == 16
size(::BZ2_rNums[]) == 512
size(::BZ2_crc32Table[]) == 256
size(::zSuffix[]) == 4
::incs[::blockSize100k] == 29524
::incs[::blockSize100k-1] == 9841
::incs[::srcMode] == 40
::incs[return] one of { 4, 121 }
::incs[return-1] one of { 1, 40 }
::incs[orig(action)] one of { 1, 13 }
::BZ2_rNums[::verbosity] == 619
::BZ2_rNums[::numFileNames] == 720
::BZ2_rNums[::blockSize100k] == 247
::BZ2_rNums[::blockSize100k-1] == 566
::BZ2_rNums[::srcMode] == 481
::BZ2_rNums[::srcMode-1] == 127
::BZ2_rNums[::longestFileName] == 733
::BZ2_rNums[::longestFileName-1] == 214
::BZ2_rNums[::workFactor] == 419
::BZ2_rNums[::workFactor-1] == 472
::BZ2_rNums[return] one of { 720, 931 }
::BZ2_rNums[return-1] one of { 481, 619 }
::BZ2_rNums[orig(action)] one of { 127, 619 }
::BZ2_crc32Table[::verbosity] == 0
::BZ2_crc32Table[::numFileNames] == 79764919
::BZ2_crc32Table[::blockSize100k] == 583659535
::BZ2_crc32Table[::blockSize100k-1] == 638119352
::BZ2_crc32Table[::srcMode] == 222504665
::BZ2_crc32Table[::srcMode-1] == 159529838
::BZ2_crc32Table[::longestFileName] == 1595256236
::BZ2_crc32Table[::longestFileName-1] == 1095957929
::BZ2_crc32Table[::workFactor] == 1889500026
::BZ2_crc32Table[::workFactor-1] == 2111593891
::BZ2_crc32Table[return] one of { 79764919, 319059676 }
::BZ2_crc32Table[return-1] one of { 0, 222504665 }
::BZ2_crc32Table[orig(action)] one of { 0, 159529838 }
::incs[] elements < ::fileMetaInfo.st_size
::incs[] elements < ::fileMetaInfo.st_atim.tv_sec
::incs[] elements < ::fileMetaInfo.st_atim.tv_nsec
::incs[] elements < ::fileMetaInfo.st_mtim.tv_sec
::incs[] elements < ::fileMetaInfo.st_mtim.tv_nsec
::incs[] elements >= ::numFileNames
return in ::incs[]
::fileMetaInfo.st_mode < ::BZ2_crc32Table[return]
::fileMetaInfo.st_mode != ::BZ2_crc32Table[return-1]
::fileMetaInfo.st_mode != ::BZ2_crc32Table[orig(action)]
::fileMetaInfo.st_mode != strm[::verbosity].total_in_lo32
::fileMetaInfo.st_mode > strm[::verbosity].avail_out
::fileMetaInfo.st_mode > strm[::verbosity].total_out_lo32
::fileMetaInfo.st_mode > orig(strm[::verbosity].avail_in)
::fileMetaInfo.st_mode != orig(strm[::verbosity].total_in_lo32)
::fileMetaInfo.st_mode > orig(strm[::verbosity].total_out_lo32)
::fileMetaInfo.st_uid < ::BZ2_crc32Table[return]
::fileMetaInfo.st_uid != ::BZ2_crc32Table[return-1]
::fileMetaInfo.st_uid != ::BZ2_crc32Table[orig(action)]
::fileMetaInfo.st_uid < strm[::verbosity].total_in_lo32
::fileMetaInfo.st_uid < strm[::verbosity].avail_out
::fileMetaInfo.st_uid != strm[::verbosity].total_out_lo32
::fileMetaInfo.st_uid != orig(strm[::verbosity].avail_in)
::fileMetaInfo.st_uid != orig(strm[::verbosity].total_in_lo32)
::fileMetaInfo.st_uid != orig(strm[::verbosity].total_out_lo32)
::BZ2_rNums[] elements < ::fileMetaInfo.st_size
::fileMetaInfo.st_size > return
::fileMetaInfo.st_size > orig(action)
::fileMetaInfo.st_size > ::incs[return]
::fileMetaInfo.st_size > ::incs[return-1]
::fileMetaInfo.st_size > ::incs[orig(action)]
::fileMetaInfo.st_size > ::BZ2_rNums[return]
::fileMetaInfo.st_size > ::BZ2_rNums[return-1]
::fileMetaInfo.st_size > ::BZ2_rNums[orig(action)]
::BZ2_rNums[] elements < ::fileMetaInfo.st_blksize
::fileMetaInfo.st_blksize > return
::fileMetaInfo.st_blksize > orig(action)
::fileMetaInfo.st_blksize > ::incs[return]
::fileMetaInfo.st_blksize > ::incs[return-1]
::fileMetaInfo.st_blksize > ::incs[orig(action)]
::fileMetaInfo.st_blksize > ::BZ2_rNums[return]
::fileMetaInfo.st_blksize > ::BZ2_rNums[return-1]
::fileMetaInfo.st_blksize > ::BZ2_rNums[orig(action)]
::BZ2_rNums[] elements < ::fileMetaInfo.st_blocks
::fileMetaInfo.st_blocks > return
::fileMetaInfo.st_blocks > orig(action)
::fileMetaInfo.st_blocks > ::incs[return]
::fileMetaInfo.st_blocks > ::incs[return-1]
::fileMetaInfo.st_blocks > ::incs[orig(action)]
::fileMetaInfo.st_blocks > ::BZ2_rNums[return]
::fileMetaInfo.st_blocks > ::BZ2_rNums[return-1]
::fileMetaInfo.st_blocks > ::BZ2_rNums[orig(action)]
::BZ2_rNums[] elements < ::fileMetaInfo.st_atim.tv_sec
::fileMetaInfo.st_atim.tv_sec > return
::fileMetaInfo.st_atim.tv_sec > orig(action)
::fileMetaInfo.st_atim.tv_sec > ::incs[return]
::fileMetaInfo.st_atim.tv_sec > ::incs[return-1]
::fileMetaInfo.st_atim.tv_sec > ::incs[orig(action)]
::fileMetaInfo.st_atim.tv_sec > ::BZ2_rNums[return]
::fileMetaInfo.st_atim.tv_sec > ::BZ2_rNums[return-1]
::fileMetaInfo.st_atim.tv_sec > ::BZ2_rNums[orig(action)]
::BZ2_rNums[] elements < ::fileMetaInfo.st_atim.tv_nsec
::fileMetaInfo.st_atim.tv_nsec > return
::fileMetaInfo.st_atim.tv_nsec > orig(action)
::fileMetaInfo.st_atim.tv_nsec > ::incs[return]
::fileMetaInfo.st_atim.tv_nsec > ::incs[return-1]
::fileMetaInfo.st_atim.tv_nsec > ::incs[orig(action)]
::fileMetaInfo.st_atim.tv_nsec > ::BZ2_rNums[return]
::fileMetaInfo.st_atim.tv_nsec > ::BZ2_rNums[return-1]
::fileMetaInfo.st_atim.tv_nsec > ::BZ2_rNums[orig(action)]
::BZ2_rNums[] elements < ::fileMetaInfo.st_mtim.tv_sec
::fileMetaInfo.st_mtim.tv_sec > return
::fileMetaInfo.st_mtim.tv_sec > orig(action)
::fileMetaInfo.st_mtim.tv_sec > ::incs[return]
::fileMetaInfo.st_mtim.tv_sec > ::incs[return-1]
::fileMetaInfo.st_mtim.tv_sec > ::incs[orig(action)]
::fileMetaInfo.st_mtim.tv_sec > ::BZ2_rNums[return]
::fileMetaInfo.st_mtim.tv_sec > ::BZ2_rNums[return-1]
::fileMetaInfo.st_mtim.tv_sec > ::BZ2_rNums[orig(action)]
::BZ2_rNums[] elements < ::fileMetaInfo.st_mtim.tv_nsec
::fileMetaInfo.st_mtim.tv_nsec > return
::fileMetaInfo.st_mtim.tv_nsec > orig(action)
::fileMetaInfo.st_mtim.tv_nsec > ::incs[return]
::fileMetaInfo.st_mtim.tv_nsec > ::incs[return-1]
::fileMetaInfo.st_mtim.tv_nsec > ::incs[orig(action)]
::fileMetaInfo.st_mtim.tv_nsec > ::BZ2_rNums[return]
::fileMetaInfo.st_mtim.tv_nsec > ::BZ2_rNums[return-1]
::fileMetaInfo.st_mtim.tv_nsec > ::BZ2_rNums[orig(action)]
::fileMetaInfo.__glibc_reserved[] elements == ::verbosity
::BZ2_rNums[] elements < ::mammamia
::BZ2_rNums[] elements > ::numFileNames
::BZ2_rNums[] elements > ::blockSize100k
::BZ2_rNums[] elements > ::longestFileName
::BZ2_rNums[] elements > ::workFactor
::BZ2_rNums[] elements > return
::BZ2_rNums[] elements > orig(action)
::BZ2_rNums[] elements > size(::incs[])
::BZ2_rNums[] elements > size(::bzerrorstrings[])
size(::BZ2_rNums[])-1 in ::BZ2_rNums[]
::BZ2_rNums[] elements > size(::zSuffix[])
::BZ2_rNums[] elements < ::incs[::blockSize100k]
::BZ2_rNums[] elements < ::incs[::blockSize100k-1]
::BZ2_rNums[] elements > ::incs[::srcMode]
::BZ2_rNums[] elements > ::incs[return-1]
::BZ2_rNums[] elements > ::incs[orig(action)]
::mammamia > return
::mammamia > orig(action)
::mammamia > ::incs[return]
::mammamia > ::incs[return-1]
::mammamia > ::incs[orig(action)]
::mammamia > ::BZ2_rNums[return]
::mammamia > ::BZ2_rNums[return-1]
::mammamia > ::BZ2_rNums[orig(action)]
::verbosity <= orig(action)
::numFileNames <= return
::numFileNames != orig(action)
::numFileNames < ::incs[return]
::numFileNames <= ::incs[return-1]
::numFileNames <= ::incs[orig(action)]
::numFileNames < ::BZ2_rNums[return]
::numFileNames < ::BZ2_rNums[return-1]
::numFileNames < ::BZ2_rNums[orig(action)]
::blockSize100k > return
::blockSize100k > orig(action)
::blockSize100k != ::incs[return]
::blockSize100k != ::incs[return-1]
::blockSize100k != ::incs[orig(action)]
::blockSize100k < ::BZ2_rNums[return]
::blockSize100k < ::BZ2_rNums[return-1]
::blockSize100k < ::BZ2_rNums[orig(action)]
::srcMode != return
::srcMode != ::incs[return-1]
::srcMode != ::incs[orig(action)]
::longestFileName > return
::longestFileName > orig(action)
::longestFileName != ::incs[return]
::longestFileName != ::incs[return-1]
::longestFileName > ::incs[orig(action)]
::longestFileName < ::BZ2_rNums[return]
::longestFileName < ::BZ2_rNums[return-1]
::longestFileName < ::BZ2_rNums[orig(action)]
::inName < ::outName
::inName > ::tmpName
::inName < ::progName
::inName < ::progNameReally
::inName == orig(::inName)
::outName > ::tmpName
::outName < ::progName
::outName < ::progNameReally
::outName == orig(::outName)
::tmpName < ::progName
::tmpName < ::progNameReally
::tmpName in ::unzSuffix[]
::tmpName == orig(::tmpName)
::progName > ::progNameReally
::progName == orig(::progName)
::progNameReally == orig(::progNameReally)
::workFactor > return
::workFactor > orig(action)
::workFactor != ::incs[return]
::workFactor != ::incs[return-1]
::workFactor > ::incs[orig(action)]
::workFactor < ::BZ2_rNums[return]
::workFactor < ::BZ2_rNums[return-1]
::workFactor < ::BZ2_rNums[orig(action)]
strm[] elements == strm[::verbosity]
strm[].avail_in elements == ::BZ2_crc32Table[::verbosity]
strm[].total_in_lo32 elements == strm[::verbosity].total_in_lo32
strm[].next_out == orig(strm[].next_out) (elementwise)
strm[].avail_out elements == strm[::verbosity].avail_out
strm[].total_out_lo32 elements == strm[::verbosity].total_out_lo32
strm[].state elements == strm[::verbosity].state
strm[].bzalloc elements == strm[::verbosity].bzalloc
strm[].bzfree elements == strm[::verbosity].bzfree
strm[].opaque elements == strm[::verbosity].opaque
return > orig(action)
return < size(::incs[])-1
return < size(::bzerrorstrings[])-1
return != size(::fileMetaInfo.__glibc_reserved[])-1
return < size(::BZ2_rNums[])-1
return < size(::BZ2_crc32Table[])-1
return <= size(::zSuffix[])
return < ::incs[::blockSize100k]
return < ::incs[::blockSize100k-1]
return < ::incs[::srcMode]
return < ::incs[return]
return <= ::incs[return-1]
return <= ::incs[orig(action)]
return < ::BZ2_rNums[::verbosity]
return < ::BZ2_rNums[::numFileNames]
return < ::BZ2_rNums[::blockSize100k]
return < ::BZ2_rNums[::blockSize100k-1]
return < ::BZ2_rNums[::srcMode]
return < ::BZ2_rNums[::srcMode-1]
return < ::BZ2_rNums[::longestFileName]
return < ::BZ2_rNums[::longestFileName-1]
return < ::BZ2_rNums[::workFactor]
return < ::BZ2_rNums[::workFactor-1]
return < ::BZ2_rNums[return]
return < ::BZ2_rNums[return-1]
return < ::BZ2_rNums[orig(action)]
orig(action) < size(::incs[])-1
orig(action) < size(::bzerrorstrings[])-1
orig(action) <= size(::fileMetaInfo.__glibc_reserved[])-1
orig(action) < size(::BZ2_rNums[])-1
orig(action) < size(::BZ2_crc32Table[])-1
orig(action) < ::incs[::blockSize100k]
orig(action) < ::incs[::blockSize100k-1]
orig(action) < ::incs[::srcMode]
orig(action) < ::incs[return]
orig(action) < ::incs[return-1]
orig(action) < ::incs[orig(action)]
orig(action) < ::BZ2_rNums[::verbosity]
orig(action) < ::BZ2_rNums[::numFileNames]
orig(action) < ::BZ2_rNums[::blockSize100k]
orig(action) < ::BZ2_rNums[::blockSize100k-1]
orig(action) < ::BZ2_rNums[::srcMode]
orig(action) < ::BZ2_rNums[::srcMode-1]
orig(action) < ::BZ2_rNums[::longestFileName]
orig(action) < ::BZ2_rNums[::longestFileName-1]
orig(action) < ::BZ2_rNums[::workFactor]
orig(action) < ::BZ2_rNums[::workFactor-1]
orig(action) < ::BZ2_rNums[return]
orig(action) < ::BZ2_rNums[return-1]
orig(action) < ::BZ2_rNums[orig(action)]
size(::incs[]) != ::incs[return]
size(::incs[]) != ::incs[return-1]
size(::incs[]) < ::BZ2_rNums[return]
size(::incs[]) < ::BZ2_rNums[return-1]
size(::incs[]) < ::BZ2_rNums[orig(action)]
size(::incs[])-1 != ::incs[return]
size(::incs[])-1 != ::incs[return-1]
size(::incs[])-1 >= ::incs[orig(action)]
size(::bzerrorstrings[]) != ::incs[return]
size(::bzerrorstrings[]) != ::incs[return-1]
size(::bzerrorstrings[]) < ::BZ2_rNums[return]
size(::bzerrorstrings[]) < ::BZ2_rNums[return-1]
size(::bzerrorstrings[]) < ::BZ2_rNums[orig(action)]
size(::bzerrorstrings[])-1 != ::incs[return]
size(::bzerrorstrings[])-1 != ::incs[return-1]
size(::bzerrorstrings[])-1 > ::incs[orig(action)]
size(::fileMetaInfo.__glibc_reserved[])-1 != ::incs[return-1]
size(::fileMetaInfo.__glibc_reserved[])-1 != ::incs[orig(action)]
size(::BZ2_rNums[]) < ::BZ2_rNums[return]
size(::BZ2_rNums[]) != ::BZ2_rNums[return-1]
size(::BZ2_rNums[]) != ::BZ2_rNums[orig(action)]
size(::BZ2_rNums[])-1 > ::incs[return]
size(::BZ2_rNums[])-1 > ::incs[return-1]
size(::BZ2_rNums[])-1 > ::incs[orig(action)]
size(::BZ2_rNums[])-1 != ::BZ2_rNums[return-1]
size(::BZ2_rNums[])-1 != ::BZ2_rNums[orig(action)]
size(::BZ2_crc32Table[]) < ::BZ2_rNums[return]
size(::BZ2_crc32Table[]) < ::BZ2_rNums[return-1]
size(::BZ2_crc32Table[]) != ::BZ2_rNums[orig(action)]
size(::BZ2_crc32Table[])-1 > ::incs[return]
size(::BZ2_crc32Table[])-1 > ::incs[return-1]
size(::BZ2_crc32Table[])-1 > ::incs[orig(action)]
size(::BZ2_crc32Table[])-1 != ::BZ2_rNums[orig(action)]
size(::zSuffix[]) <= ::incs[return]
size(::zSuffix[]) != ::incs[return-1]
size(::zSuffix[]) != ::incs[orig(action)]
size(::zSuffix[]) < ::BZ2_rNums[return]
size(::zSuffix[]) < ::BZ2_rNums[return-1]
size(::zSuffix[]) < ::BZ2_rNums[orig(action)]
::incs[::blockSize100k] > ::incs[return]
::incs[::blockSize100k] > ::incs[return-1]
::incs[::blockSize100k] > ::incs[orig(action)]
::incs[::blockSize100k] > ::BZ2_rNums[return]
::incs[::blockSize100k] > ::BZ2_rNums[return-1]
::incs[::blockSize100k] > ::BZ2_rNums[orig(action)]
::incs[::blockSize100k-1] > ::incs[return]
::incs[::blockSize100k-1] > ::incs[return-1]
::incs[::blockSize100k-1] > ::incs[orig(action)]
::incs[::blockSize100k-1] > ::BZ2_rNums[return]
::incs[::blockSize100k-1] > ::BZ2_rNums[return-1]
::incs[::blockSize100k-1] > ::BZ2_rNums[orig(action)]
::incs[::srcMode] != ::incs[return]
::incs[::srcMode] >= ::incs[return-1]
::incs[::srcMode] > ::incs[orig(action)]
::incs[::srcMode] < ::BZ2_rNums[return]
::incs[::srcMode] < ::BZ2_rNums[return-1]
::incs[::srcMode] < ::BZ2_rNums[orig(action)]
::incs[return] > ::incs[return-1]
::incs[return] > ::incs[orig(action)]
::incs[return] < ::BZ2_rNums[::verbosity]
::incs[return] < ::BZ2_rNums[::numFileNames]
::incs[return] < ::BZ2_rNums[::blockSize100k]
::incs[return] < ::BZ2_rNums[::blockSize100k-1]
::incs[return] < ::BZ2_rNums[::srcMode]
::incs[return] < ::BZ2_rNums[::srcMode-1]
::incs[return] < ::BZ2_rNums[::longestFileName]
::incs[return] < ::BZ2_rNums[::longestFileName-1]
::incs[return] < ::BZ2_rNums[::workFactor]
::incs[return] < ::BZ2_rNums[::workFactor-1]
::incs[return] < ::BZ2_rNums[return]
::incs[return] < ::BZ2_rNums[return-1]
::incs[return] < ::BZ2_rNums[orig(action)]
::incs[return-1] >= ::incs[orig(action)]
::incs[return-1] < ::BZ2_rNums[::verbosity]
::incs[return-1] < ::BZ2_rNums[::numFileNames]
::incs[return-1] < ::BZ2_rNums[::blockSize100k]
::incs[return-1] < ::BZ2_rNums[::blockSize100k-1]
::incs[return-1] < ::BZ2_rNums[::srcMode]
::incs[return-1] < ::BZ2_rNums[::srcMode-1]
::incs[return-1] < ::BZ2_rNums[::longestFileName]
::incs[return-1] < ::BZ2_rNums[::longestFileName-1]
::incs[return-1] < ::BZ2_rNums[::workFactor]
::incs[return-1] < ::BZ2_rNums[::workFactor-1]
::incs[return-1] < ::BZ2_rNums[return]
::incs[return-1] < ::BZ2_rNums[return-1]
::incs[return-1] < ::BZ2_rNums[orig(action)]
::incs[orig(action)] < ::BZ2_rNums[::verbosity]
::incs[orig(action)] < ::BZ2_rNums[::numFileNames]
::incs[orig(action)] < ::BZ2_rNums[::blockSize100k]
::incs[orig(action)] < ::BZ2_rNums[::blockSize100k-1]
::incs[orig(action)] < ::BZ2_rNums[::srcMode]
::incs[orig(action)] < ::BZ2_rNums[::srcMode-1]
::incs[orig(action)] < ::BZ2_rNums[::longestFileName]
::incs[orig(action)] < ::BZ2_rNums[::longestFileName-1]
::incs[orig(action)] < ::BZ2_rNums[::workFactor]
::incs[orig(action)] < ::BZ2_rNums[::workFactor-1]
::incs[orig(action)] < ::BZ2_rNums[return]
::incs[orig(action)] < ::BZ2_rNums[return-1]
::incs[orig(action)] < ::BZ2_rNums[orig(action)]
::BZ2_rNums[::verbosity] < ::BZ2_rNums[return]
::BZ2_rNums[::verbosity] >= ::BZ2_rNums[return-1]
::BZ2_rNums[::verbosity] >= ::BZ2_rNums[orig(action)]
::BZ2_rNums[::numFileNames] <= ::BZ2_rNums[return]
::BZ2_rNums[::numFileNames] > ::BZ2_rNums[return-1]
::BZ2_rNums[::numFileNames] > ::BZ2_rNums[orig(action)]
::BZ2_rNums[::blockSize100k] < ::BZ2_rNums[return]
::BZ2_rNums[::blockSize100k] < ::BZ2_rNums[return-1]
::BZ2_rNums[::blockSize100k] != ::BZ2_rNums[orig(action)]
::BZ2_rNums[::blockSize100k-1] < ::BZ2_rNums[return]
::BZ2_rNums[::blockSize100k-1] != ::BZ2_rNums[return-1]
::BZ2_rNums[::blockSize100k-1] != ::BZ2_rNums[orig(action)]
::BZ2_rNums[::srcMode] < ::BZ2_rNums[return]
::BZ2_rNums[::srcMode] <= ::BZ2_rNums[return-1]
::BZ2_rNums[::srcMode] != ::BZ2_rNums[orig(action)]
::BZ2_rNums[::srcMode-1] < ::BZ2_rNums[return]
::BZ2_rNums[::srcMode-1] < ::BZ2_rNums[return-1]
::BZ2_rNums[::srcMode-1] <= ::BZ2_rNums[orig(action)]
::BZ2_rNums[::longestFileName] != ::BZ2_rNums[return]
::BZ2_rNums[::longestFileName] > ::BZ2_rNums[return-1]
::BZ2_rNums[::longestFileName] > ::BZ2_rNums[orig(action)]
::BZ2_rNums[::longestFileName-1] < ::BZ2_rNums[return]
::BZ2_rNums[::longestFileName-1] < ::BZ2_rNums[return-1]
::BZ2_rNums[::longestFileName-1] != ::BZ2_rNums[orig(action)]
::BZ2_rNums[::workFactor] < ::BZ2_rNums[return]
::BZ2_rNums[::workFactor] < ::BZ2_rNums[return-1]
::BZ2_rNums[::workFactor] != ::BZ2_rNums[orig(action)]
::BZ2_rNums[::workFactor-1] < ::BZ2_rNums[return]
::BZ2_rNums[::workFactor-1] < ::BZ2_rNums[return-1]
::BZ2_rNums[::workFactor-1] != ::BZ2_rNums[orig(action)]
::BZ2_rNums[return] > ::BZ2_rNums[return-1]
::BZ2_rNums[return] > ::BZ2_rNums[orig(action)]
::BZ2_rNums[return-1] >= ::BZ2_rNums[orig(action)]
::BZ2_crc32Table[::verbosity] < ::BZ2_crc32Table[return]
::BZ2_crc32Table[::verbosity] <= ::BZ2_crc32Table[return-1]
::BZ2_crc32Table[::verbosity] <= ::BZ2_crc32Table[orig(action)]
::BZ2_crc32Table[::verbosity] < strm[::verbosity].total_in_lo32
::BZ2_crc32Table[::verbosity] < strm[::verbosity].avail_out
::BZ2_crc32Table[::verbosity] <= strm[::verbosity].total_out_lo32
::BZ2_crc32Table[::verbosity] <= orig(strm[::verbosity].avail_in)
::BZ2_crc32Table[::verbosity] <= orig(strm[::verbosity].total_in_lo32)
::BZ2_crc32Table[::verbosity] <= orig(strm[::verbosity].total_out_lo32)
::BZ2_crc32Table[::numFileNames] <= ::BZ2_crc32Table[return]
::BZ2_crc32Table[::numFileNames] != ::BZ2_crc32Table[return-1]
::BZ2_crc32Table[::numFileNames] != ::BZ2_crc32Table[orig(action)]
::BZ2_crc32Table[::numFileNames] > strm[::verbosity].total_in_lo32
::BZ2_crc32Table[::numFileNames] > strm[::verbosity].avail_out
::BZ2_crc32Table[::numFileNames] > strm[::verbosity].total_out_lo32
::BZ2_crc32Table[::numFileNames] > orig(strm[::verbosity].avail_in)
::BZ2_crc32Table[::numFileNames] > orig(strm[::verbosity].total_in_lo32)
::BZ2_crc32Table[::numFileNames] > orig(strm[::verbosity].total_out_lo32)
::BZ2_crc32Table[::blockSize100k] > ::BZ2_crc32Table[return]
::BZ2_crc32Table[::blockSize100k] > ::BZ2_crc32Table[return-1]
::BZ2_crc32Table[::blockSize100k] > ::BZ2_crc32Table[orig(action)]
::BZ2_crc32Table[::blockSize100k] > strm[::verbosity].total_in_lo32
::BZ2_crc32Table[::blockSize100k] > strm[::verbosity].avail_out
::BZ2_crc32Table[::blockSize100k] > strm[::verbosity].total_out_lo32
::BZ2_crc32Table[::blockSize100k] > orig(strm[::verbosity].avail_in)
::BZ2_crc32Table[::blockSize100k] > orig(strm[::verbosity].total_in_lo32)
::BZ2_crc32Table[::blockSize100k] > orig(strm[::verbosity].total_out_lo32)
::BZ2_crc32Table[::blockSize100k-1] > ::BZ2_crc32Table[return]
::BZ2_crc32Table[::blockSize100k-1] > ::BZ2_crc32Table[return-1]
::BZ2_crc32Table[::blockSize100k-1] > ::BZ2_crc32Table[orig(action)]
::BZ2_crc32Table[::blockSize100k-1] > strm[::verbosity].total_in_lo32
::BZ2_crc32Table[::blockSize100k-1] > strm[::verbosity].avail_out
::BZ2_crc32Table[::blockSize100k-1] > strm[::verbosity].total_out_lo32
::BZ2_crc32Table[::blockSize100k-1] > orig(strm[::verbosity].avail_in)
::BZ2_crc32Table[::blockSize100k-1] > orig(strm[::verbosity].total_in_lo32)
::BZ2_crc32Table[::blockSize100k-1] > orig(strm[::verbosity].total_out_lo32)
::BZ2_crc32Table[::srcMode] != ::BZ2_crc32Table[return]
::BZ2_crc32Table[::srcMode] >= ::BZ2_crc32Table[return-1]
::BZ2_crc32Table[::srcMode] > ::BZ2_crc32Table[orig(action)]
::BZ2_crc32Table[::srcMode] > strm[::verbosity].total_in_lo32
::BZ2_crc32Table[::srcMode] > strm[::verbosity].avail_out
::BZ2_crc32Table[::srcMode] > strm[::verbosity].total_out_lo32
::BZ2_crc32Table[::srcMode] > orig(strm[::verbosity].avail_in)
::BZ2_crc32Table[::srcMode] > orig(strm[::verbosity].total_in_lo32)
::BZ2_crc32Table[::srcMode] > orig(strm[::verbosity].total_out_lo32)
::BZ2_crc32Table[::srcMode-1] != ::BZ2_crc32Table[return]
::BZ2_crc32Table[::srcMode-1] != ::BZ2_crc32Table[return-1]
::BZ2_crc32Table[::srcMode-1] >= ::BZ2_crc32Table[orig(action)]
::BZ2_crc32Table[::srcMode-1] > strm[::verbosity].total_in_lo32
::BZ2_crc32Table[::srcMode-1] > strm[::verbosity].avail_out
::BZ2_crc32Table[::srcMode-1] > strm[::verbosity].total_out_lo32
::BZ2_crc32Table[::srcMode-1] > orig(strm[::verbosity].avail_in)
::BZ2_crc32Table[::srcMode-1] > orig(strm[::verbosity].total_in_lo32)
::BZ2_crc32Table[::srcMode-1] > orig(strm[::verbosity].total_out_lo32)
::BZ2_crc32Table[::longestFileName] > ::BZ2_crc32Table[return]
::BZ2_crc32Table[::longestFileName] > ::BZ2_crc32Table[return-1]
::BZ2_crc32Table[::longestFileName] > ::BZ2_crc32Table[orig(action)]
::BZ2_crc32Table[::longestFileName] > strm[::verbosity].total_in_lo32
::BZ2_crc32Table[::longestFileName] > strm[::verbosity].avail_out
::BZ2_crc32Table[::longestFileName] > strm[::verbosity].total_out_lo32
::BZ2_crc32Table[::longestFileName] > orig(strm[::verbosity].avail_in)
::BZ2_crc32Table[::longestFileName] > orig(strm[::verbosity].total_in_lo32)
::BZ2_crc32Table[::longestFileName] > orig(strm[::verbosity].total_out_lo32)
::BZ2_crc32Table[::longestFileName-1] > ::BZ2_crc32Table[return]
::BZ2_crc32Table[::longestFileName-1] > ::BZ2_crc32Table[return-1]
::BZ2_crc32Table[::longestFileName-1] > ::BZ2_crc32Table[orig(action)]
::BZ2_crc32Table[::longestFileName-1] > strm[::verbosity].total_in_lo32
::BZ2_crc32Table[::longestFileName-1] > strm[::verbosity].avail_out
::BZ2_crc32Table[::longestFileName-1] > strm[::verbosity].total_out_lo32
::BZ2_crc32Table[::longestFileName-1] > orig(strm[::verbosity].avail_in)
::BZ2_crc32Table[::longestFileName-1] > orig(strm[::verbosity].total_in_lo32)
::BZ2_crc32Table[::longestFileName-1] > orig(strm[::verbosity].total_out_lo32)
::BZ2_crc32Table[::workFactor] > ::BZ2_crc32Table[return]
::BZ2_crc32Table[::workFactor] > ::BZ2_crc32Table[return-1]
::BZ2_crc32Table[::workFactor] > ::BZ2_crc32Table[orig(action)]
::BZ2_crc32Table[::workFactor] > strm[::verbosity].total_in_lo32
::BZ2_crc32Table[::workFactor] > strm[::verbosity].avail_out
::BZ2_crc32Table[::workFactor] > strm[::verbosity].total_out_lo32
::BZ2_crc32Table[::workFactor] > orig(strm[::verbosity].avail_in)
::BZ2_crc32Table[::workFactor] > orig(strm[::verbosity].total_in_lo32)
::BZ2_crc32Table[::workFactor] > orig(strm[::verbosity].total_out_lo32)
::BZ2_crc32Table[::workFactor-1] > ::BZ2_crc32Table[return]
::BZ2_crc32Table[::workFactor-1] > ::BZ2_crc32Table[return-1]
::BZ2_crc32Table[::workFactor-1] > ::BZ2_crc32Table[orig(action)]
::BZ2_crc32Table[::workFactor-1] > strm[::verbosity].total_in_lo32
::BZ2_crc32Table[::workFactor-1] > strm[::verbosity].avail_out
::BZ2_crc32Table[::workFactor-1] > strm[::verbosity].total_out_lo32
::BZ2_crc32Table[::workFactor-1] > orig(strm[::verbosity].avail_in)
::BZ2_crc32Table[::workFactor-1] > orig(strm[::verbosity].total_in_lo32)
::BZ2_crc32Table[::workFactor-1] > orig(strm[::verbosity].total_out_lo32)
::BZ2_crc32Table[return] > ::BZ2_crc32Table[return-1]
::BZ2_crc32Table[return] > ::BZ2_crc32Table[orig(action)]
::BZ2_crc32Table[return] > strm[::verbosity].total_in_lo32
::BZ2_crc32Table[return] > strm[::verbosity].avail_out
::BZ2_crc32Table[return] > strm[::verbosity].total_out_lo32
::BZ2_crc32Table[return] > orig(strm[::verbosity].avail_in)
::BZ2_crc32Table[return] > orig(strm[::verbosity].total_in_lo32)
::BZ2_crc32Table[return] > orig(strm[::verbosity].avail_out)
::BZ2_crc32Table[return] > orig(strm[::verbosity].total_out_lo32)
::BZ2_crc32Table[return-1] >= ::BZ2_crc32Table[orig(action)]
::BZ2_crc32Table[return-1] != strm[::verbosity].total_in_lo32
::BZ2_crc32Table[return-1] != strm[::verbosity].avail_out
::BZ2_crc32Table[return-1] != orig(strm[::verbosity].avail_in)
::BZ2_crc32Table[return-1] != orig(strm[::verbosity].avail_out)
::BZ2_crc32Table[orig(action)] != strm[::verbosity].total_in_lo32
::BZ2_crc32Table[orig(action)] != strm[::verbosity].avail_out
::BZ2_crc32Table[orig(action)] != orig(strm[::verbosity].avail_in)
::BZ2_crc32Table[orig(action)] != orig(strm[::verbosity].avail_out)
strm[::verbosity].total_in_lo32 >= strm[::verbosity].avail_out
strm[::verbosity].total_in_lo32 > strm[::verbosity].total_out_lo32
strm[::verbosity].total_in_lo32 >= orig(strm[::verbosity].avail_in)
strm[::verbosity].total_in_lo32 >= orig(strm[::verbosity].total_in_lo32)
strm[::verbosity].total_in_lo32 >= orig(strm[::verbosity].avail_out)
strm[::verbosity].total_in_lo32 > orig(strm[::verbosity].total_out_lo32)
strm[::verbosity].avail_out > strm[::verbosity].total_out_lo32
strm[::verbosity].avail_out <= orig(strm[::verbosity].avail_out)
strm[::verbosity].avail_out > orig(strm[::verbosity].total_out_lo32)
strm[::verbosity].total_out_lo32 != orig(strm[::verbosity].avail_in)
strm[::verbosity].total_out_lo32 <= orig(strm[::verbosity].total_in_lo32)
strm[::verbosity].total_out_lo32 < orig(strm[::verbosity].avail_out)
strm[::verbosity].total_out_lo32 >= orig(strm[::verbosity].total_out_lo32)
strm[::verbosity].total_in_lo32 - orig(strm[::verbosity].avail_in) - orig(strm[::verbosity].total_in_lo32) == 0
strm[::verbosity].avail_out + strm[::verbosity].total_out_lo32 - orig(strm[::verbosity].total_out_lo32) - 5000 == 0
===========================================================================
..BZ2_bzCompressEnd():::ENTER
::fileMetaInfo.st_uid == ::fileMetaInfo.st_gid
::fileMetaInfo.__pad0 == ::verbosity
::fileMetaInfo.st_mtim.tv_sec == ::fileMetaInfo.st_ctim.tv_sec
::fileMetaInfo.st_mtim.tv_nsec == ::fileMetaInfo.st_ctim.tv_nsec
::verbosity == ::exitValue
::verbosity == size(strm[])-1
::verbosity == ::fileMetaInfo.__glibc_reserved[::fileMetaInfo.__pad0]
::verbosity == ::fileMetaInfo.__glibc_reserved[::verbosity]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::exitValue]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::srcMode-1]
::keepInputFiles == ::deleteOutputOnInterrupt
::keepInputFiles == ::noisy
::smallMode == ::forceOverwrite
::smallMode == ::testFailsExist
::smallMode == ::unzFailsExist
::numFileNames == ::numFilesProcessed
::numFileNames == ::opMode
::numFileNames == size(strm[])
::numFileNames == ::incs[::fileMetaInfo.__pad0]
::numFileNames == ::incs[::verbosity]
::numFileNames == ::incs[::numFileNames-1]
::numFileNames == ::incs[::numFilesProcessed-1]
::numFileNames == ::incs[::exitValue]
::numFileNames == ::incs[::opMode-1]
::srcMode == size(::fileMetaInfo.__glibc_reserved[])
::srcMode == size(::zSuffix[])-1
::srcMode == size(::unzSuffix[])-1
strm[].avail_in == strm[].total_in_hi32
strm[].avail_in == strm[].total_out_hi32
size(::incs[])-1 == ::incs[::srcMode-1]
size(::zSuffix[]) == size(::unzSuffix[])
size(::zSuffix[]) == ::incs[::numFileNames]
size(::zSuffix[]) == ::incs[::numFilesProcessed]
size(::zSuffix[]) == ::incs[::opMode]
strm[::fileMetaInfo.__pad0].avail_in == ::BZ2_crc32Table[::verbosity]
strm[::fileMetaInfo.__pad0].total_in_hi32 == ::BZ2_crc32Table[::verbosity]
strm[::fileMetaInfo.__pad0].total_out_hi32 == ::BZ2_crc32Table[::verbosity]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFileNames-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFilesProcessed-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::opMode-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFileNames-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFilesProcessed-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::opMode-1]
::BZ2_crc32Table[::verbosity] == strm[::verbosity].avail_in
::BZ2_crc32Table[::verbosity] == strm[::verbosity].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[::verbosity].total_out_hi32
::BZ2_crc32Table[::verbosity] == strm[::numFileNames-1].avail_in
::BZ2_crc32Table[::verbosity] == strm[::numFileNames-1].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[::numFileNames-1].total_out_hi32
::BZ2_crc32Table[::verbosity] == strm[::numFilesProcessed-1].avail_in
::BZ2_crc32Table[::verbosity] == strm[::numFilesProcessed-1].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[::numFilesProcessed-1].total_out_hi32
::BZ2_crc32Table[::verbosity] == strm[::exitValue].avail_in
::BZ2_crc32Table[::verbosity] == strm[::exitValue].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[::exitValue].total_out_hi32
::BZ2_crc32Table[::verbosity] == strm[::opMode-1].avail_in
::BZ2_crc32Table[::verbosity] == strm[::opMode-1].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[::opMode-1].total_out_hi32
strm[::verbosity] == strm[::numFileNames-1]
strm[::verbosity] == strm[::numFilesProcessed-1]
strm[::verbosity] == strm[::opMode-1]
strm[::verbosity].total_in_lo32 == strm[::numFileNames-1].total_in_lo32
strm[::verbosity].total_in_lo32 == strm[::numFilesProcessed-1].total_in_lo32
strm[::verbosity].total_in_lo32 == strm[::opMode-1].total_in_lo32
strm[::verbosity].avail_out == strm[::numFileNames-1].avail_out
strm[::verbosity].avail_out == strm[::numFilesProcessed-1].avail_out
strm[::verbosity].avail_out == strm[::opMode-1].avail_out
strm[::verbosity].total_out_lo32 == strm[::numFileNames-1].total_out_lo32
strm[::verbosity].total_out_lo32 == strm[::numFilesProcessed-1].total_out_lo32
strm[::verbosity].total_out_lo32 == strm[::opMode-1].total_out_lo32
strm[::verbosity].state == strm[::numFileNames-1].state
strm[::verbosity].state == strm[::numFilesProcessed-1].state
strm[::verbosity].state == strm[::opMode-1].state
strm[::verbosity].bzalloc == strm[::numFileNames-1].bzalloc
strm[::verbosity].bzalloc == strm[::numFilesProcessed-1].bzalloc
strm[::verbosity].bzalloc == strm[::opMode-1].bzalloc
strm[::verbosity].bzfree == strm[::numFileNames-1].bzfree
strm[::verbosity].bzfree == strm[::numFilesProcessed-1].bzfree
strm[::verbosity].bzfree == strm[::opMode-1].bzfree
strm[::verbosity].opaque == strm[::numFileNames-1].opaque
strm[::verbosity].opaque == strm[::numFilesProcessed-1].opaque
strm[::verbosity].opaque == strm[::opMode-1].opaque
::incs has only one value
::incs[] == [1, 4, 13, 40, 121, 364, 1093, 3280, 9841, 29524, 88573, 265720, 797161, 2391484]
::bzerrorstrings has only one value
::bzerrorstrings[] == [OK, SEQUENCE_ERROR, PARAM_ERROR, MEM_ERROR, DATA_ERROR, DATA_ERROR_MAGIC, IO_ERROR, UNEXPECTED_EOF, OUTBUFF_FULL, CONFIG_ERROR, ???, ???, ???, ???, ???, ???]
::fileMetaInfo has only one value
::fileMetaInfo.st_dev == 2049
::fileMetaInfo.st_ino == 936492
::fileMetaInfo.st_nlink == 1
::fileMetaInfo.st_mode == 33277
::fileMetaInfo.st_uid == 1000
::fileMetaInfo.st_rdev == 0
::fileMetaInfo.st_size == 5738700
::fileMetaInfo.st_blksize == 4096
::fileMetaInfo.st_blocks == 11216
::fileMetaInfo.st_atim has only one value
::fileMetaInfo.st_atim.tv_sec == 1496096467
::fileMetaInfo.st_atim.tv_nsec == 709424920
::fileMetaInfo.st_mtim has only one value
::fileMetaInfo.st_mtim.tv_sec == 1483563943
::fileMetaInfo.st_mtim.tv_nsec == 421335644
::fileMetaInfo.st_ctim has only one value
::fileMetaInfo.__glibc_reserved has only one value
::fileMetaInfo.__glibc_reserved[] == [0, 0, 0]
::fileMetaInfo.__glibc_reserved[] elements == 0
::BZ2_rNums has only one value
::BZ2_rNums[] == [619, 720, 127, 481, 931, 816, 813, 233, 566, 247, 985, 724, 205, 454, 863, 491, 741, 242, 949, 214, 733, 859, 335, 708, 621, 574, 73, 654, 730, 472, 419, 436, 278, 496, 867, 210, 399, 680, 480, 51, 878, 465, 811, 169, 869, 675, 611, 697, 867, 561, 862, 687, 507, 283, 482, 129, 807, 591, 733, 623, 150, 238, 59, 379, 684, 877, 625, 169, 643, 105, 170, 607, 520, 932, 727, 476, 693, 425, 174, 647, 73, 122, 335, 530, 442, 853, 695, 249, 445, 515, 909, 545, 703, 919, 874, 474, 882, 500, 594, 612, 641, 801, 220, 162, 819, 984, 589, 513, 495, 799, 161, 604, 958, 533, 221, 400, 386, 867, 600, 782, 382, 596, 414, 171, 516, 375, 682, 485, 911, 276, 98, 553, 163, 354, 666, 933, 424, 341, 533, 870, 227, 730, 475, 186, 263, 647, 537, 686, 600, 224, 469, 68, 770, 919, 190, 373, 294, 822, 808, 206, 184, 943, 795, 384, 383, 461, 404, 758, 839, 887, 715, 67, 618, 276, 204, 918, 873, 777, 604, 560, 951, 160, 578, 722, 79, 804, 96, 409, 713, 940, 652, 934, 970, 447, 318, 353, 859, 672, 112, 785, 645, 863, 803, 350, 139, 93, 354, 99, 820, 908, 609, 772, 154, 274, 580, 184, 79, 626, 630, 742, 653, 282, 762, 623, 680, 81, 927, 626, 789, 125, 411, 521, 938, 300, 821, 78, 343, 175, 128, 250, 170, 774, 972, 275, 999, 639, 495, 78, 352, 126, 857, 956, 358, 619, 580, 124, 737, 594, 701, 612, 669, 112, 134, 694, 363, 992, 809, 743, 168, 974, 944, 375, 748, 52, 600, 747, 642, 182, 862, 81, 344, 805, 988, 739, 511, 655, 814, 334, 249, 515, 897, 955, 664, 981, 649, 113, 974, 459, 893, 228, 433, 837, 553, 268, 926, 240, 102, 654, 459, 51, 686, 754, 806, 760, 493, 403, 415, 394, 687, 700, 946, 670, 656, 610, 738, 392, 760, 799, 887, 653, 978, 321, 576, 617, 626, 502, 894, 679, 243, 440, 680, 879, 194, 572, 640, 724, 926, 56, 204, 700, 707, 151, 457, 449, 797, 195, 791, 558, 945, 679, 297, 59, 87, 824, 713, 663, 412, 693, 342, 606, 134, 108, 571, 364, 631, 212, 174, 643, 304, 329, 343, 97, 430, 751, 497, 314, 983, 374, 822, 928, 140, 206, 73, 263, 980, 736, 876, 478, 430, 305, 170, 514, 364, 692, 829, 82, 855, 953, 676, 246, 369, 970, 294, 750, 807, 827, 150, 790, 288, 923, 804, 378, 215, 828, 592, 281, 565, 555, 710, 82, 896, 831, 547, 261, 524, 462, 293, 465, 502, 56, 661, 821, 976, 991, 658, 869, 905, 758, 745, 193, 768, 550, 608, 933, 378, 286, 215, 979, 792, 961, 61, 688, 793, 644, 986, 403, 106, 366, 905, 644, 372, 567, 466, 434, 645, 210, 389, 550, 919, 135, 780, 773, 635, 389, 707, 100, 626, 958, 165, 504, 920, 176, 193, 713, 857, 265, 203, 50, 668, 108, 645, 990, 626, 197, 510, 357, 358, 850, 858, 364, 936, 638]
::BZ2_crc32Table has only one value
::BZ2_crc32Table[] == [0, 79764919, 159529838, 222504665, 319059676, 398814059, 445009330, 507990021, 638119352, 583659535, 797628118, 726387553, 890018660, 835552979, 1015980042, 944750013, 1276238704, 1221641927, 1167319070, 1095957929, 1595256236, 1540665371, 1452775106, 1381403509, 1780037320, 1859660671, 1671105958, 1733955601, 2031960084, 2111593891, 1889500026, 1952343757, 2552477408, 2632100695, 2443283854, 2506133561, 2334638140, 2414271883, 2191915858, 2254759653, 3190512472, 3135915759, 3081330742, 3009969537, 2905550212, 2850959411, 2762807018, 2691435357, 3560074640, 3505614887, 3719321342, 3648080713, 3342211916, 3287746299, 3467911202, 3396681109, 4063920168, 4143685023, 4223187782, 4286162673, 3779000052, 3858754371, 3904687514, 3967668269, 881225847, 809987520, 1023691545, 969234094, 662832811, 591600412, 771767749, 717299826, 311336399, 374308984, 453813921, 533576470, 25881363, 88864420, 134795389, 214552010, 2023205639, 2086057648, 1897238633, 1976864222, 1804852699, 1867694188, 1645340341, 1724971778, 1587496639, 1516133128, 1461550545, 1406951526, 1302016099, 1230646740, 1142491917, 1087903418, 2896545431, 2825181984, 2770861561, 2716262478, 3215044683, 3143675388, 3055782693, 3001194130, 2326604591, 2389456536, 2200899649, 2280525302, 2578013683, 2640855108, 2418763421, 2498394922, 3769900519, 3832873040, 3912640137, 3992402750, 4088425275, 4151408268, 4197601365, 4277358050, 3334271071, 3263032808, 3476998961, 3422541446, 3585640067, 3514407732, 3694837229, 3640369242, 1762451694, 1842216281, 1619975040, 1682949687, 2047383090, 2127137669, 1938468188, 2001449195, 1325665622, 1271206113, 1183200824, 1111960463, 1543535498, 1489069629, 1434599652, 1363369299, 622672798, 568075817, 748617968, 677256519, 907627842, 853037301, 1067152940, 995781531, 51762726, 131386257, 177728840, 240578815, 269590778, 349224269, 429104020, 491947555, 4046411278, 4126034873, 4172115296, 4234965207, 3794477266, 3874110821, 3953728444, 4016571915, 3609705398, 3555108353, 3735388376, 3664026991, 3290680682, 3236090077, 3449943556, 3378572211, 3174993278, 3120533705, 3032266256, 2961025959, 2923101090, 2868635157, 2813903052, 2742672763, 2604032198, 2683796849, 2461293480, 2524268063, 2284983834, 2364738477, 2175806836, 2238787779, 1569362073, 1498123566, 1409854455, 1355396672, 1317987909, 1246755826, 1192025387, 1137557660, 2072149281, 2135122070, 1912620623, 1992383480, 1753615357, 1816598090, 1627664531, 1707420964, 295390185, 358241886, 404320391, 483945776, 43990325, 106832002, 186451547, 266083308, 932423249, 861060070, 1041341759, 986742920, 613929101, 542559546, 756411363, 701822548, 3316196985, 3244833742, 3425377559, 3370778784, 3601682597, 3530312978, 3744426955, 3689838204, 3819031489, 3881883254, 3928223919, 4007849240, 4037393693, 4100235434, 4180117107, 4259748804, 2310601993, 2373574846, 2151335527, 2231098320, 2596047829, 2659030626, 2470359227, 2550115596, 2947551409, 2876312838, 2788305887, 2733848168, 3165939309, 3094707162, 3040238851, 2985771188]
::mammamia == 3216
::keepInputFiles == 1
::smallMode == 0
::numFileNames == 1
::blockSize100k == 9
::longestFileName == 20
::inName == "../inputs/in_big.txt"
::outName == "../inputs/in_big.txt.bz2"
::tmpName == ""
::progName == "zip-injected"
::progNameReally == "./zip-injected"
::outputHandleJustInCase has only one value
::workFactor == 30
::zSuffix has only one value
::zSuffix[] == [.bz2, .bz, .tbz2, .tbz]
::unzSuffix has only one value
::unzSuffix[] == [, , .tar, .tar]
::unzSuffix[] elements one of { "", ".tar" }
strm has only one value
strm[] contains no nulls and has only one value, of length 1
strm[] elements has only one value
strm[].next_in == [;;      ;.,;`   .; ;;,   ,; `; ;.   ;;    ;:
      ;;      ;. ;;;;;;: ;:;;:;;. `; ;.    ;;;;;; 
                  `,,,   ;, :::   `, ,`     `,,   
                         ;,                       
                         ;,                       
                         ;,                       


                                                  
      `::::                                       
     :::,``                                       
    ::.                                           
   ::  `:::                                       
  ::  :::.                                        
 `:` ::`                                          
 :: .:` `;;;;                                     
 :. :, .;;.,;;                    :;`             
`:  :  ;;    ;:                   :;`             
.: `:  ;`    :;     `        `                    
             :;  ,;;;;;    ;;;;;  `;  .;;: ,;;;;` 
      `````` :; `;,  `;;  ;;` `;; `; `;, `,;`  ,;`
      ;;;;;;;;;..;       .;     ;.`; ;:   ;`    ,;
      ;;      ;. ;;;;,`  ;:     ::`; ;.  `;;;;;;;;
      ;;      ;.  ,:;;;; ;,     :;`; ;.  .;```````
      ;;      ;.      `;`;;     ;:`; ;.   ;       
      ;;      ;.,;`   .; ;;,   ,; `; ;.   ;;    ;:
      ;;      ;. ;;;;;;: ;:;;:;;. `; ;.    ;;;;;; 
                  `,,,   ;, :]
strm[].next_in elements == ";;      ;.,;`   .; ;;,   ,; `; ;.   ;;    ;:\n      ;;      ;. ;;;;;;: ;:;;:;;. `; ;.    ;;;;;; \n                  `,,,   ;, :::   `, ,`     `,,   \n                         ;,                       \n                         ;,                       \n                         ;,                       \n\n\n                                                  \n      `::::                                       \n     :::,``                                       \n    ::.                                           \n   ::  `:::                                       \n  ::  :::.                                        \n `:` ::`                                          \n :: .:` `;;;;                                     \n :. :, .;;.,;;                    :;`             \n`:  :  ;;    ;:                   :;`             \n.: `:  ;`    :;     `        `                    \n             :;  ,;;;;;    ;;;;;  `;  .;;: ,;;;;` \n      `````` :; `;,  `;;  ;;` `;; `; `;, `,;`  ,;`\n      ;;;;;;;;;..;       .;     ;.`; ;:   ;`    ,;\n      ;;      ;. ;;;;,`  ;:     ::`; ;.  `;;;;;;;;\n      ;;      ;.  ,:;;;; ;,     :;`; ;.  .;```````\n      ;;      ;.      `;`;;     ;:`; ;.   ;       \n      ;;      ;.,;`   .; ;;,   ,; `; ;.   ;;    ;:\n      ;;      ;. ;;;;;;: ;:;;:;;. `; ;.    ;;;;;; \n                  `,,,   ;, :"
strm[].avail_in == [0]
strm[].avail_in elements == 0
strm[].total_in_lo32 == [5738700]
strm[].total_in_lo32 elements == 5738700
strm[].avail_out == [4111]
strm[].avail_out elements == 4111
strm[].total_out_lo32 == [3596]
strm[].total_out_lo32 elements == 3596
strm[].state contains no nulls and has only one value, of length 1
strm[].state elements has only one value
strm[].bzalloc contains no nulls and has only one value, of length 1
strm[].bzalloc elements has only one value
strm[].bzfree contains no nulls and has only one value, of length 1
strm[].bzfree elements has only one value
strm[].opaque == [null]
strm[].opaque elements == null
size(::incs[]) == 14
size(::bzerrorstrings[]) == 16
size(::BZ2_rNums[]) == 512
size(::BZ2_crc32Table[]) == 256
size(::zSuffix[]) == 4
::incs[::blockSize100k] == 29524
::incs[::blockSize100k-1] == 9841
::incs[::srcMode] == 40
::BZ2_rNums[::verbosity] == 619
::BZ2_rNums[::numFileNames] == 720
::BZ2_rNums[::blockSize100k] == 247
::BZ2_rNums[::blockSize100k-1] == 566
::BZ2_rNums[::srcMode] == 481
::BZ2_rNums[::srcMode-1] == 127
::BZ2_rNums[::longestFileName] == 733
::BZ2_rNums[::longestFileName-1] == 214
::BZ2_rNums[::workFactor] == 419
::BZ2_rNums[::workFactor-1] == 472
::BZ2_crc32Table[::verbosity] == 0
::BZ2_crc32Table[::numFileNames] == 79764919
::BZ2_crc32Table[::blockSize100k] == 583659535
::BZ2_crc32Table[::blockSize100k-1] == 638119352
::BZ2_crc32Table[::srcMode] == 222504665
::BZ2_crc32Table[::srcMode-1] == 159529838
::BZ2_crc32Table[::longestFileName] == 1595256236
::BZ2_crc32Table[::longestFileName-1] == 1095957929
::BZ2_crc32Table[::workFactor] == 1889500026
::BZ2_crc32Table[::workFactor-1] == 2111593891
::fileMetaInfo.__glibc_reserved[] elements == ::verbosity
size(::BZ2_rNums[])-1 in ::BZ2_rNums[]
::tmpName in ::unzSuffix[]
strm[] elements == strm[::verbosity]
strm[].avail_in elements == ::BZ2_crc32Table[::verbosity]
strm[].total_in_lo32 elements == strm[::verbosity].total_in_lo32
strm[].avail_out elements == strm[::verbosity].avail_out
strm[].total_out_lo32 elements == strm[::verbosity].total_out_lo32
strm[].state elements == strm[::verbosity].state
strm[].bzalloc elements == strm[::verbosity].bzalloc
strm[].bzfree elements == strm[::verbosity].bzfree
strm[].opaque elements == strm[::verbosity].opaque
===========================================================================
..BZ2_bzCompressEnd():::EXIT
::incs == orig(::incs)
::incs[] == orig(::incs[])
::bzerrorstrings == orig(::bzerrorstrings)
::fileMetaInfo == orig(::fileMetaInfo)
::fileMetaInfo.st_dev == orig(::fileMetaInfo.st_dev)
::fileMetaInfo.st_ino == orig(::fileMetaInfo.st_ino)
::fileMetaInfo.st_nlink == orig(::fileMetaInfo.st_nlink)
::fileMetaInfo.st_mode == orig(::fileMetaInfo.st_mode)
::fileMetaInfo.st_uid == ::fileMetaInfo.st_gid
::fileMetaInfo.st_uid == orig(::fileMetaInfo.st_uid)
::fileMetaInfo.st_uid == orig(::fileMetaInfo.st_gid)
::fileMetaInfo.__pad0 == ::verbosity
::fileMetaInfo.st_rdev == orig(::fileMetaInfo.st_rdev)
::fileMetaInfo.st_size == orig(::fileMetaInfo.st_size)
::fileMetaInfo.st_blksize == orig(::fileMetaInfo.st_blksize)
::fileMetaInfo.st_blocks == orig(::fileMetaInfo.st_blocks)
::fileMetaInfo.st_atim == orig(::fileMetaInfo.st_atim)
::fileMetaInfo.st_atim.tv_sec == orig(::fileMetaInfo.st_atim.tv_sec)
::fileMetaInfo.st_atim.tv_nsec == orig(::fileMetaInfo.st_atim.tv_nsec)
::fileMetaInfo.st_mtim == orig(::fileMetaInfo.st_mtim)
::fileMetaInfo.st_mtim.tv_sec == ::fileMetaInfo.st_ctim.tv_sec
::fileMetaInfo.st_mtim.tv_sec == orig(::fileMetaInfo.st_mtim.tv_sec)
::fileMetaInfo.st_mtim.tv_sec == orig(::fileMetaInfo.st_ctim.tv_sec)
::fileMetaInfo.st_mtim.tv_nsec == ::fileMetaInfo.st_ctim.tv_nsec
::fileMetaInfo.st_mtim.tv_nsec == orig(::fileMetaInfo.st_mtim.tv_nsec)
::fileMetaInfo.st_mtim.tv_nsec == orig(::fileMetaInfo.st_ctim.tv_nsec)
::fileMetaInfo.st_ctim == orig(::fileMetaInfo.st_ctim)
::fileMetaInfo.__glibc_reserved == orig(::fileMetaInfo.__glibc_reserved)
::fileMetaInfo.__glibc_reserved[] == orig(::fileMetaInfo.__glibc_reserved[])
::BZ2_rNums == orig(::BZ2_rNums)
::BZ2_rNums[] == orig(::BZ2_rNums[])
::BZ2_crc32Table == orig(::BZ2_crc32Table)
::BZ2_crc32Table[] == orig(::BZ2_crc32Table[])
::mammamia == orig(::mammamia)
::verbosity == ::exitValue
::verbosity == return
::verbosity == orig(::fileMetaInfo.__pad0)
::verbosity == orig(::verbosity)
::verbosity == orig(::exitValue)
::verbosity == size(strm[])-1
::verbosity == orig(size(strm[]))-1
::verbosity == ::fileMetaInfo.__glibc_reserved[::fileMetaInfo.__pad0]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::fileMetaInfo.__pad0)])
::verbosity == ::fileMetaInfo.__glibc_reserved[::verbosity]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::exitValue]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::srcMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[return]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::fileMetaInfo.__pad0)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::verbosity)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFileNames)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFileNames)-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFilesProcessed)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFilesProcessed)-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::exitValue)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::opMode)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::opMode)-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::srcMode)-1]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::verbosity)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFileNames)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFileNames)-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFilesProcessed)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFilesProcessed)-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::exitValue)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::opMode)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::opMode)-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::srcMode)-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(return)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::fileMetaInfo.__pad0])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::verbosity])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFileNames])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFileNames-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFilesProcessed])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFilesProcessed-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::exitValue])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::opMode])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::opMode-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::srcMode-1])
::keepInputFiles == ::deleteOutputOnInterrupt
::keepInputFiles == ::noisy
::keepInputFiles == orig(::keepInputFiles)
::keepInputFiles == orig(::deleteOutputOnInterrupt)
::keepInputFiles == orig(::noisy)
::smallMode == ::forceOverwrite
::smallMode == ::testFailsExist
::smallMode == ::unzFailsExist
::smallMode == orig(::smallMode)
::smallMode == orig(::forceOverwrite)
::smallMode == orig(::testFailsExist)
::smallMode == orig(::unzFailsExist)
::numFileNames == ::numFilesProcessed
::numFileNames == ::opMode
::numFileNames == orig(::numFileNames)
::numFileNames == orig(::numFilesProcessed)
::numFileNames == orig(::opMode)
::numFileNames == orig(size(strm[]))
::numFileNames == ::incs[::fileMetaInfo.__pad0]
::numFileNames == ::incs[::verbosity]
::numFileNames == ::incs[::numFileNames-1]
::numFileNames == ::incs[::numFilesProcessed-1]
::numFileNames == ::incs[::exitValue]
::numFileNames == ::incs[::opMode-1]
::numFileNames == ::incs[return]
::numFileNames == ::incs[orig(::fileMetaInfo.__pad0)]
::numFileNames == ::incs[orig(::verbosity)]
::numFileNames == ::incs[orig(::numFileNames)-1]
::numFileNames == ::incs[orig(::numFilesProcessed)-1]
::numFileNames == ::incs[orig(::exitValue)]
::numFileNames == ::incs[orig(::opMode)-1]
::numFileNames == orig(::incs[post(::fileMetaInfo.__pad0)])
::numFileNames == orig(::incs[post(::verbosity)])
::numFileNames == orig(::incs[post(::numFileNames)-1])
::numFileNames == orig(::incs[post(::numFilesProcessed)-1])
::numFileNames == orig(::incs[post(::exitValue)])
::numFileNames == orig(::incs[post(::opMode)-1])
::numFileNames == orig(::incs[post(return)])
::numFileNames == orig(::incs[::fileMetaInfo.__pad0])
::numFileNames == orig(::incs[::verbosity])
::numFileNames == orig(::incs[::numFileNames-1])
::numFileNames == orig(::incs[::numFilesProcessed-1])
::numFileNames == orig(::incs[::exitValue])
::numFileNames == orig(::incs[::opMode-1])
::blockSize100k == orig(::blockSize100k)
::srcMode == orig(::srcMode)
::srcMode == size(::fileMetaInfo.__glibc_reserved[])
::srcMode == size(::zSuffix[])-1
::srcMode == size(::unzSuffix[])-1
::srcMode == orig(size(::fileMetaInfo.__glibc_reserved[]))
::srcMode == orig(size(::zSuffix[]))-1
::srcMode == orig(size(::unzSuffix[]))-1
::longestFileName == orig(::longestFileName)
::outputHandleJustInCase == orig(::outputHandleJustInCase)
::workFactor == orig(::workFactor)
::zSuffix == orig(::zSuffix)
::unzSuffix == orig(::unzSuffix)
strm[] == orig(strm[])
strm[].avail_in == strm[].total_in_hi32
strm[].avail_in == strm[].total_out_hi32
strm[].avail_in == orig(strm[].avail_in)
strm[].avail_in == orig(strm[].total_in_hi32)
strm[].avail_in == orig(strm[].total_out_hi32)
strm[].total_in_lo32 == orig(strm[].total_in_lo32)
strm[].avail_out == orig(strm[].avail_out)
strm[].total_out_lo32 == orig(strm[].total_out_lo32)
strm[].state == strm[].opaque
strm[].state == orig(strm[].opaque)
strm[].bzalloc == orig(strm[].bzalloc)
strm[].bzfree == orig(strm[].bzfree)
size(::incs[])-1 == ::incs[::srcMode-1]
size(::incs[])-1 == ::incs[orig(::srcMode)-1]
size(::incs[])-1 == orig(::incs[post(::srcMode)-1])
size(::incs[])-1 == orig(::incs[::srcMode-1])
size(::zSuffix[]) == size(::unzSuffix[])
size(::zSuffix[]) == orig(size(::unzSuffix[]))
size(::zSuffix[]) == ::incs[::numFileNames]
size(::zSuffix[]) == ::incs[::numFilesProcessed]
size(::zSuffix[]) == ::incs[::opMode]
size(::zSuffix[]) == ::incs[orig(::numFileNames)]
size(::zSuffix[]) == ::incs[orig(::numFilesProcessed)]
size(::zSuffix[]) == ::incs[orig(::opMode)]
size(::zSuffix[]) == orig(::incs[post(::numFileNames)])
size(::zSuffix[]) == orig(::incs[post(::numFilesProcessed)])
size(::zSuffix[]) == orig(::incs[post(::opMode)])
size(::zSuffix[]) == orig(::incs[::numFileNames])
size(::zSuffix[]) == orig(::incs[::numFilesProcessed])
size(::zSuffix[]) == orig(::incs[::opMode])
strm[::fileMetaInfo.__pad0].avail_in == ::BZ2_crc32Table[::verbosity]
strm[::fileMetaInfo.__pad0].total_in_hi32 == ::BZ2_crc32Table[::verbosity]
strm[::fileMetaInfo.__pad0].total_out_hi32 == ::BZ2_crc32Table[::verbosity]
orig(strm[post(::fileMetaInfo.__pad0)].avail_in) == ::BZ2_crc32Table[::verbosity]
orig(strm[post(::fileMetaInfo.__pad0)].total_in_hi32) == ::BZ2_crc32Table[::verbosity]
orig(strm[post(::fileMetaInfo.__pad0)].total_out_hi32) == ::BZ2_crc32Table[::verbosity]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFileNames-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFilesProcessed-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::opMode-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[orig(::numFileNames)-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[orig(::numFilesProcessed)-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[orig(::opMode)-1]
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[post(::numFileNames)-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[post(::numFilesProcessed)-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[post(::opMode)-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[::numFileNames-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[::numFilesProcessed-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[::opMode-1])
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFileNames-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFilesProcessed-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::opMode-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[orig(::numFileNames)-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[orig(::numFilesProcessed)-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[orig(::opMode)-1]
::BZ2_crc32Table[::verbosity] == strm[::verbosity].avail_in
::BZ2_crc32Table[::verbosity] == strm[::verbosity].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[::verbosity].total_out_hi32
::BZ2_crc32Table[::verbosity] == orig(strm[post(::verbosity)].avail_in)
::BZ2_crc32Table[::verbosity] == orig(strm[post(::verbosity)].total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(strm[post(::verbosity)].total_out_hi32)
::BZ2_crc32Table[::verbosity] == strm[::numFileNames-1].avail_in
::BZ2_crc32Table[::verbosity] == strm[::numFileNames-1].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[::numFileNames-1].total_out_hi32
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[post(::numFileNames)-1])
::BZ2_crc32Table[::verbosity] == orig(strm[post(::numFileNames)-1].avail_in)
::BZ2_crc32Table[::verbosity] == orig(strm[post(::numFileNames)-1].total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(strm[post(::numFileNames)-1].total_out_hi32)
::BZ2_crc32Table[::verbosity] == strm[::numFilesProcessed-1].avail_in
::BZ2_crc32Table[::verbosity] == strm[::numFilesProcessed-1].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[::numFilesProcessed-1].total_out_hi32
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[post(::numFilesProcessed)-1])
::BZ2_crc32Table[::verbosity] == orig(strm[post(::numFilesProcessed)-1].avail_in)
::BZ2_crc32Table[::verbosity] == orig(strm[post(::numFilesProcessed)-1].total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(strm[post(::numFilesProcessed)-1].total_out_hi32)
::BZ2_crc32Table[::verbosity] == strm[::exitValue].avail_in
::BZ2_crc32Table[::verbosity] == strm[::exitValue].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[::exitValue].total_out_hi32
::BZ2_crc32Table[::verbosity] == orig(strm[post(::exitValue)].avail_in)
::BZ2_crc32Table[::verbosity] == orig(strm[post(::exitValue)].total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(strm[post(::exitValue)].total_out_hi32)
::BZ2_crc32Table[::verbosity] == strm[::opMode-1].avail_in
::BZ2_crc32Table[::verbosity] == strm[::opMode-1].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[::opMode-1].total_out_hi32
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[post(::opMode)-1])
::BZ2_crc32Table[::verbosity] == orig(strm[post(::opMode)-1].avail_in)
::BZ2_crc32Table[::verbosity] == orig(strm[post(::opMode)-1].total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(strm[post(::opMode)-1].total_out_hi32)
::BZ2_crc32Table[::verbosity] == strm[return].avail_in
::BZ2_crc32Table[::verbosity] == strm[orig(::fileMetaInfo.__pad0)].avail_in
::BZ2_crc32Table[::verbosity] == strm[orig(::verbosity)].avail_in
::BZ2_crc32Table[::verbosity] == strm[orig(::numFileNames)-1].avail_in
::BZ2_crc32Table[::verbosity] == strm[orig(::numFilesProcessed)-1].avail_in
::BZ2_crc32Table[::verbosity] == strm[orig(::exitValue)].avail_in
::BZ2_crc32Table[::verbosity] == strm[orig(::opMode)-1].avail_in
::BZ2_crc32Table[::verbosity] == strm[return].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[orig(::fileMetaInfo.__pad0)].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[orig(::verbosity)].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[orig(::numFileNames)-1].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[orig(::numFilesProcessed)-1].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[orig(::exitValue)].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[orig(::opMode)-1].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[return].total_out_hi32
::BZ2_crc32Table[::verbosity] == strm[orig(::fileMetaInfo.__pad0)].total_out_hi32
::BZ2_crc32Table[::verbosity] == strm[orig(::verbosity)].total_out_hi32
::BZ2_crc32Table[::verbosity] == strm[orig(::numFileNames)-1].total_out_hi32
::BZ2_crc32Table[::verbosity] == strm[orig(::numFilesProcessed)-1].total_out_hi32
::BZ2_crc32Table[::verbosity] == strm[orig(::exitValue)].total_out_hi32
::BZ2_crc32Table[::verbosity] == strm[orig(::opMode)-1].total_out_hi32
::BZ2_crc32Table[::verbosity] == orig(strm[post(return)].avail_in)
::BZ2_crc32Table[::verbosity] == orig(strm[post(return)].total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(strm[post(return)].total_out_hi32)
::BZ2_crc32Table[::verbosity] == orig(strm[::fileMetaInfo.__pad0].avail_in)
::BZ2_crc32Table[::verbosity] == orig(strm[::fileMetaInfo.__pad0].total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(strm[::fileMetaInfo.__pad0].total_out_hi32)
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[::numFileNames-1])
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[::numFilesProcessed-1])
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[::opMode-1])
::BZ2_crc32Table[::verbosity] == orig(strm[::verbosity].avail_in)
::BZ2_crc32Table[::verbosity] == orig(strm[::verbosity].total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(strm[::verbosity].total_out_hi32)
::BZ2_crc32Table[::verbosity] == orig(strm[::numFileNames-1].avail_in)
::BZ2_crc32Table[::verbosity] == orig(strm[::numFileNames-1].total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(strm[::numFileNames-1].total_out_hi32)
::BZ2_crc32Table[::verbosity] == orig(strm[::numFilesProcessed-1].avail_in)
::BZ2_crc32Table[::verbosity] == orig(strm[::numFilesProcessed-1].total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(strm[::numFilesProcessed-1].total_out_hi32)
::BZ2_crc32Table[::verbosity] == orig(strm[::exitValue].avail_in)
::BZ2_crc32Table[::verbosity] == orig(strm[::exitValue].total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(strm[::exitValue].total_out_hi32)
::BZ2_crc32Table[::verbosity] == orig(strm[::opMode-1].avail_in)
::BZ2_crc32Table[::verbosity] == orig(strm[::opMode-1].total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(strm[::opMode-1].total_out_hi32)
strm[::verbosity] == strm[::numFileNames-1]
strm[::verbosity] == orig(strm[post(::numFileNames)-1])
strm[::verbosity] == strm[::numFilesProcessed-1]
strm[::verbosity] == orig(strm[post(::numFilesProcessed)-1])
strm[::verbosity] == strm[::opMode-1]
strm[::verbosity] == orig(strm[post(::opMode)-1])
strm[::verbosity] == strm[orig(::numFileNames)-1]
strm[::verbosity] == strm[orig(::numFilesProcessed)-1]
strm[::verbosity] == strm[orig(::opMode)-1]
strm[::verbosity] == orig(strm[::numFileNames-1])
strm[::verbosity] == orig(strm[::numFilesProcessed-1])
strm[::verbosity] == orig(strm[::opMode-1])
strm[::verbosity].total_in_lo32 == strm[::numFileNames-1].total_in_lo32
strm[::verbosity].total_in_lo32 == orig(strm[post(::numFileNames)-1].total_in_lo32)
strm[::verbosity].total_in_lo32 == strm[::numFilesProcessed-1].total_in_lo32
strm[::verbosity].total_in_lo32 == orig(strm[post(::numFilesProcessed)-1].total_in_lo32)
strm[::verbosity].total_in_lo32 == strm[::opMode-1].total_in_lo32
strm[::verbosity].total_in_lo32 == orig(strm[post(::opMode)-1].total_in_lo32)
strm[::verbosity].total_in_lo32 == strm[orig(::numFileNames)-1].total_in_lo32
strm[::verbosity].total_in_lo32 == strm[orig(::numFilesProcessed)-1].total_in_lo32
strm[::verbosity].total_in_lo32 == strm[orig(::opMode)-1].total_in_lo32
strm[::verbosity].total_in_lo32 == orig(strm[::numFileNames-1].total_in_lo32)
strm[::verbosity].total_in_lo32 == orig(strm[::numFilesProcessed-1].total_in_lo32)
strm[::verbosity].total_in_lo32 == orig(strm[::opMode-1].total_in_lo32)
strm[::verbosity].avail_out == strm[::numFileNames-1].avail_out
strm[::verbosity].avail_out == orig(strm[post(::numFileNames)-1].avail_out)
strm[::verbosity].avail_out == strm[::numFilesProcessed-1].avail_out
strm[::verbosity].avail_out == orig(strm[post(::numFilesProcessed)-1].avail_out)
strm[::verbosity].avail_out == strm[::opMode-1].avail_out
strm[::verbosity].avail_out == orig(strm[post(::opMode)-1].avail_out)
strm[::verbosity].avail_out == strm[orig(::numFileNames)-1].avail_out
strm[::verbosity].avail_out == strm[orig(::numFilesProcessed)-1].avail_out
strm[::verbosity].avail_out == strm[orig(::opMode)-1].avail_out
strm[::verbosity].avail_out == orig(strm[::numFileNames-1].avail_out)
strm[::verbosity].avail_out == orig(strm[::numFilesProcessed-1].avail_out)
strm[::verbosity].avail_out == orig(strm[::opMode-1].avail_out)
strm[::verbosity].total_out_lo32 == strm[::numFileNames-1].total_out_lo32
strm[::verbosity].total_out_lo32 == orig(strm[post(::numFileNames)-1].total_out_lo32)
strm[::verbosity].total_out_lo32 == strm[::numFilesProcessed-1].total_out_lo32
strm[::verbosity].total_out_lo32 == orig(strm[post(::numFilesProcessed)-1].total_out_lo32)
strm[::verbosity].total_out_lo32 == strm[::opMode-1].total_out_lo32
strm[::verbosity].total_out_lo32 == orig(strm[post(::opMode)-1].total_out_lo32)
strm[::verbosity].total_out_lo32 == strm[orig(::numFileNames)-1].total_out_lo32
strm[::verbosity].total_out_lo32 == strm[orig(::numFilesProcessed)-1].total_out_lo32
strm[::verbosity].total_out_lo32 == strm[orig(::opMode)-1].total_out_lo32
strm[::verbosity].total_out_lo32 == orig(strm[::numFileNames-1].total_out_lo32)
strm[::verbosity].total_out_lo32 == orig(strm[::numFilesProcessed-1].total_out_lo32)
strm[::verbosity].total_out_lo32 == orig(strm[::opMode-1].total_out_lo32)
strm[::verbosity].state == strm[::numFileNames-1].state
strm[::verbosity].state == strm[::numFileNames-1].opaque
strm[::verbosity].state == orig(strm[post(::numFileNames)-1].opaque)
strm[::verbosity].state == strm[::numFilesProcessed-1].state
strm[::verbosity].state == strm[::numFilesProcessed-1].opaque
strm[::verbosity].state == orig(strm[post(::numFilesProcessed)-1].opaque)
strm[::verbosity].state == strm[::opMode-1].state
strm[::verbosity].state == strm[::opMode-1].opaque
strm[::verbosity].state == orig(strm[post(::opMode)-1].opaque)
strm[::verbosity].state == strm[orig(::numFileNames)-1].state
strm[::verbosity].state == strm[orig(::numFilesProcessed)-1].state
strm[::verbosity].state == strm[orig(::opMode)-1].state
strm[::verbosity].state == strm[orig(::numFileNames)-1].opaque
strm[::verbosity].state == strm[orig(::numFilesProcessed)-1].opaque
strm[::verbosity].state == strm[orig(::opMode)-1].opaque
strm[::verbosity].state == orig(strm[::numFileNames-1].opaque)
strm[::verbosity].state == orig(strm[::numFilesProcessed-1].opaque)
strm[::verbosity].state == orig(strm[::opMode-1].opaque)
strm[::verbosity].bzalloc == strm[::numFileNames-1].bzalloc
strm[::verbosity].bzalloc == orig(strm[post(::numFileNames)-1].bzalloc)
strm[::verbosity].bzalloc == strm[::numFilesProcessed-1].bzalloc
strm[::verbosity].bzalloc == orig(strm[post(::numFilesProcessed)-1].bzalloc)
strm[::verbosity].bzalloc == strm[::opMode-1].bzalloc
strm[::verbosity].bzalloc == orig(strm[post(::opMode)-1].bzalloc)
strm[::verbosity].bzalloc == strm[orig(::numFileNames)-1].bzalloc
strm[::verbosity].bzalloc == strm[orig(::numFilesProcessed)-1].bzalloc
strm[::verbosity].bzalloc == strm[orig(::opMode)-1].bzalloc
strm[::verbosity].bzalloc == orig(strm[::numFileNames-1].bzalloc)
strm[::verbosity].bzalloc == orig(strm[::numFilesProcessed-1].bzalloc)
strm[::verbosity].bzalloc == orig(strm[::opMode-1].bzalloc)
strm[::verbosity].bzfree == strm[::numFileNames-1].bzfree
strm[::verbosity].bzfree == orig(strm[post(::numFileNames)-1].bzfree)
strm[::verbosity].bzfree == strm[::numFilesProcessed-1].bzfree
strm[::verbosity].bzfree == orig(strm[post(::numFilesProcessed)-1].bzfree)
strm[::verbosity].bzfree == strm[::opMode-1].bzfree
strm[::verbosity].bzfree == orig(strm[post(::opMode)-1].bzfree)
strm[::verbosity].bzfree == strm[orig(::numFileNames)-1].bzfree
strm[::verbosity].bzfree == strm[orig(::numFilesProcessed)-1].bzfree
strm[::verbosity].bzfree == strm[orig(::opMode)-1].bzfree
strm[::verbosity].bzfree == orig(strm[::numFileNames-1].bzfree)
strm[::verbosity].bzfree == orig(strm[::numFilesProcessed-1].bzfree)
strm[::verbosity].bzfree == orig(strm[::opMode-1].bzfree)
orig(strm[post(::numFileNames)-1].state) == orig(strm[::verbosity].state)
orig(strm[post(::numFilesProcessed)-1].state) == orig(strm[::verbosity].state)
orig(strm[post(::opMode)-1].state) == orig(strm[::verbosity].state)
::incs has only one value
::incs[] == [1, 4, 13, 40, 121, 364, 1093, 3280, 9841, 29524, 88573, 265720, 797161, 2391484]
::bzerrorstrings has only one value
::bzerrorstrings[] == [OK, SEQUENCE_ERROR, PARAM_ERROR, MEM_ERROR, DATA_ERROR, DATA_ERROR_MAGIC, IO_ERROR, UNEXPECTED_EOF, OUTBUFF_FULL, CONFIG_ERROR, ???, ???, ???, ???, ???, ???]
::fileMetaInfo has only one value
::fileMetaInfo.st_dev == 2049
::fileMetaInfo.st_ino == 936492
::fileMetaInfo.st_nlink == 1
::fileMetaInfo.st_mode == 33277
::fileMetaInfo.st_uid == 1000
::fileMetaInfo.st_rdev == 0
::fileMetaInfo.st_size == 5738700
::fileMetaInfo.st_blksize == 4096
::fileMetaInfo.st_blocks == 11216
::fileMetaInfo.st_atim has only one value
::fileMetaInfo.st_atim.tv_sec == 1496096467
::fileMetaInfo.st_atim.tv_nsec == 709424920
::fileMetaInfo.st_mtim has only one value
::fileMetaInfo.st_mtim.tv_sec == 1483563943
::fileMetaInfo.st_mtim.tv_nsec == 421335644
::fileMetaInfo.st_ctim has only one value
::fileMetaInfo.__glibc_reserved has only one value
::fileMetaInfo.__glibc_reserved[] == [0, 0, 0]
::fileMetaInfo.__glibc_reserved[] elements == 0
::BZ2_rNums has only one value
::BZ2_rNums[] == [619, 720, 127, 481, 931, 816, 813, 233, 566, 247, 985, 724, 205, 454, 863, 491, 741, 242, 949, 214, 733, 859, 335, 708, 621, 574, 73, 654, 730, 472, 419, 436, 278, 496, 867, 210, 399, 680, 480, 51, 878, 465, 811, 169, 869, 675, 611, 697, 867, 561, 862, 687, 507, 283, 482, 129, 807, 591, 733, 623, 150, 238, 59, 379, 684, 877, 625, 169, 643, 105, 170, 607, 520, 932, 727, 476, 693, 425, 174, 647, 73, 122, 335, 530, 442, 853, 695, 249, 445, 515, 909, 545, 703, 919, 874, 474, 882, 500, 594, 612, 641, 801, 220, 162, 819, 984, 589, 513, 495, 799, 161, 604, 958, 533, 221, 400, 386, 867, 600, 782, 382, 596, 414, 171, 516, 375, 682, 485, 911, 276, 98, 553, 163, 354, 666, 933, 424, 341, 533, 870, 227, 730, 475, 186, 263, 647, 537, 686, 600, 224, 469, 68, 770, 919, 190, 373, 294, 822, 808, 206, 184, 943, 795, 384, 383, 461, 404, 758, 839, 887, 715, 67, 618, 276, 204, 918, 873, 777, 604, 560, 951, 160, 578, 722, 79, 804, 96, 409, 713, 940, 652, 934, 970, 447, 318, 353, 859, 672, 112, 785, 645, 863, 803, 350, 139, 93, 354, 99, 820, 908, 609, 772, 154, 274, 580, 184, 79, 626, 630, 742, 653, 282, 762, 623, 680, 81, 927, 626, 789, 125, 411, 521, 938, 300, 821, 78, 343, 175, 128, 250, 170, 774, 972, 275, 999, 639, 495, 78, 352, 126, 857, 956, 358, 619, 580, 124, 737, 594, 701, 612, 669, 112, 134, 694, 363, 992, 809, 743, 168, 974, 944, 375, 748, 52, 600, 747, 642, 182, 862, 81, 344, 805, 988, 739, 511, 655, 814, 334, 249, 515, 897, 955, 664, 981, 649, 113, 974, 459, 893, 228, 433, 837, 553, 268, 926, 240, 102, 654, 459, 51, 686, 754, 806, 760, 493, 403, 415, 394, 687, 700, 946, 670, 656, 610, 738, 392, 760, 799, 887, 653, 978, 321, 576, 617, 626, 502, 894, 679, 243, 440, 680, 879, 194, 572, 640, 724, 926, 56, 204, 700, 707, 151, 457, 449, 797, 195, 791, 558, 945, 679, 297, 59, 87, 824, 713, 663, 412, 693, 342, 606, 134, 108, 571, 364, 631, 212, 174, 643, 304, 329, 343, 97, 430, 751, 497, 314, 983, 374, 822, 928, 140, 206, 73, 263, 980, 736, 876, 478, 430, 305, 170, 514, 364, 692, 829, 82, 855, 953, 676, 246, 369, 970, 294, 750, 807, 827, 150, 790, 288, 923, 804, 378, 215, 828, 592, 281, 565, 555, 710, 82, 896, 831, 547, 261, 524, 462, 293, 465, 502, 56, 661, 821, 976, 991, 658, 869, 905, 758, 745, 193, 768, 550, 608, 933, 378, 286, 215, 979, 792, 961, 61, 688, 793, 644, 986, 403, 106, 366, 905, 644, 372, 567, 466, 434, 645, 210, 389, 550, 919, 135, 780, 773, 635, 389, 707, 100, 626, 958, 165, 504, 920, 176, 193, 713, 857, 265, 203, 50, 668, 108, 645, 990, 626, 197, 510, 357, 358, 850, 858, 364, 936, 638]
::BZ2_crc32Table has only one value
::BZ2_crc32Table[] == [0, 79764919, 159529838, 222504665, 319059676, 398814059, 445009330, 507990021, 638119352, 583659535, 797628118, 726387553, 890018660, 835552979, 1015980042, 944750013, 1276238704, 1221641927, 1167319070, 1095957929, 1595256236, 1540665371, 1452775106, 1381403509, 1780037320, 1859660671, 1671105958, 1733955601, 2031960084, 2111593891, 1889500026, 1952343757, 2552477408, 2632100695, 2443283854, 2506133561, 2334638140, 2414271883, 2191915858, 2254759653, 3190512472, 3135915759, 3081330742, 3009969537, 2905550212, 2850959411, 2762807018, 2691435357, 3560074640, 3505614887, 3719321342, 3648080713, 3342211916, 3287746299, 3467911202, 3396681109, 4063920168, 4143685023, 4223187782, 4286162673, 3779000052, 3858754371, 3904687514, 3967668269, 881225847, 809987520, 1023691545, 969234094, 662832811, 591600412, 771767749, 717299826, 311336399, 374308984, 453813921, 533576470, 25881363, 88864420, 134795389, 214552010, 2023205639, 2086057648, 1897238633, 1976864222, 1804852699, 1867694188, 1645340341, 1724971778, 1587496639, 1516133128, 1461550545, 1406951526, 1302016099, 1230646740, 1142491917, 1087903418, 2896545431, 2825181984, 2770861561, 2716262478, 3215044683, 3143675388, 3055782693, 3001194130, 2326604591, 2389456536, 2200899649, 2280525302, 2578013683, 2640855108, 2418763421, 2498394922, 3769900519, 3832873040, 3912640137, 3992402750, 4088425275, 4151408268, 4197601365, 4277358050, 3334271071, 3263032808, 3476998961, 3422541446, 3585640067, 3514407732, 3694837229, 3640369242, 1762451694, 1842216281, 1619975040, 1682949687, 2047383090, 2127137669, 1938468188, 2001449195, 1325665622, 1271206113, 1183200824, 1111960463, 1543535498, 1489069629, 1434599652, 1363369299, 622672798, 568075817, 748617968, 677256519, 907627842, 853037301, 1067152940, 995781531, 51762726, 131386257, 177728840, 240578815, 269590778, 349224269, 429104020, 491947555, 4046411278, 4126034873, 4172115296, 4234965207, 3794477266, 3874110821, 3953728444, 4016571915, 3609705398, 3555108353, 3735388376, 3664026991, 3290680682, 3236090077, 3449943556, 3378572211, 3174993278, 3120533705, 3032266256, 2961025959, 2923101090, 2868635157, 2813903052, 2742672763, 2604032198, 2683796849, 2461293480, 2524268063, 2284983834, 2364738477, 2175806836, 2238787779, 1569362073, 1498123566, 1409854455, 1355396672, 1317987909, 1246755826, 1192025387, 1137557660, 2072149281, 2135122070, 1912620623, 1992383480, 1753615357, 1816598090, 1627664531, 1707420964, 295390185, 358241886, 404320391, 483945776, 43990325, 106832002, 186451547, 266083308, 932423249, 861060070, 1041341759, 986742920, 613929101, 542559546, 756411363, 701822548, 3316196985, 3244833742, 3425377559, 3370778784, 3601682597, 3530312978, 3744426955, 3689838204, 3819031489, 3881883254, 3928223919, 4007849240, 4037393693, 4100235434, 4180117107, 4259748804, 2310601993, 2373574846, 2151335527, 2231098320, 2596047829, 2659030626, 2470359227, 2550115596, 2947551409, 2876312838, 2788305887, 2733848168, 3165939309, 3094707162, 3040238851, 2985771188]
::mammamia == 3216
::keepInputFiles == 1
::smallMode == 0
::numFileNames == 1
::blockSize100k == 9
::longestFileName == 20
::inName == "../inputs/in_big.txt"
::outName == "../inputs/in_big.txt.bz2"
::tmpName == ""
::progName == "zip-injected"
::progNameReally == "./zip-injected"
::outputHandleJustInCase has only one value
::workFactor == 30
::zSuffix has only one value
::zSuffix[] == [.bz2, .bz, .tbz2, .tbz]
::unzSuffix has only one value
::unzSuffix[] == [, , .tar, .tar]
::unzSuffix[] elements one of { "", ".tar" }
strm[] contains no nulls and has only one value, of length 1
strm[] elements has only one value
strm[].next_in == [;;      ;.,;`   .; ;;,   ,; `; ;.   ;;    ;:
      ;;      ;. ;;;;;;: ;:;;:;;. `; ;.    ;;;;;; 
                  `,,,   ;, :::   `, ,`     `,,   
                         ;,                       
                         ;,                       
                         ;,                       


                                                  
      `::::                                       
     :::,``                                       
    ::.                                           
   ::  `:::                                       
  ::  :::.                                        
 `:` ::`                                          
 :: .:` `;;;;                                     
 :. :, .;;.,;;                    :;`             
`:  :  ;;    ;:                   :;`             
.: `:  ;`    :;     `        `                    
             :;  ,;;;;;    ;;;;;  `;  .;;: ,;;;;` 
      `````` :; `;,  `;;  ;;` `;; `; `;, `,;`  ,;`
      ;;;;;;;;;..;       .;     ;.`; ;:   ;`    ,;
      ;;      ;. ;;;;,`  ;:     ::`; ;.  `;;;;;;;;
      ;;      ;.  ,:;;;; ;,     :;`; ;.  .;```````
      ;;      ;.      `;`;;     ;:`; ;.   ;       
      ;;      ;.,;`   .; ;;,   ,; `; ;.   ;;    ;:
      ;;      ;. ;;;;;;: ;:;;:;;. `; ;.    ;;;;;; 
                  `,,,   ;, :]
strm[].next_in elements == ";;      ;.,;`   .; ;;,   ,; `; ;.   ;;    ;:\n      ;;      ;. ;;;;;;: ;:;;:;;. `; ;.    ;;;;;; \n                  `,,,   ;, :::   `, ,`     `,,   \n                         ;,                       \n                         ;,                       \n                         ;,                       \n\n\n                                                  \n      `::::                                       \n     :::,``                                       \n    ::.                                           \n   ::  `:::                                       \n  ::  :::.                                        \n `:` ::`                                          \n :: .:` `;;;;                                     \n :. :, .;;.,;;                    :;`             \n`:  :  ;;    ;:                   :;`             \n.: `:  ;`    :;     `        `                    \n             :;  ,;;;;;    ;;;;;  `;  .;;: ,;;;;` \n      `````` :; `;,  `;;  ;;` `;; `; `;, `,;`  ,;`\n      ;;;;;;;;;..;       .;     ;.`; ;:   ;`    ,;\n      ;;      ;. ;;;;,`  ;:     ::`; ;.  `;;;;;;;;\n      ;;      ;.  ,:;;;; ;,     :;`; ;.  .;```````\n      ;;      ;.      `;`;;     ;:`; ;.   ;       \n      ;;      ;.,;`   .; ;;,   ,; `; ;.   ;;    ;:\n      ;;      ;. ;;;;;;: ;:;;:;;. `; ;.    ;;;;;; \n                  `,,,   ;, :"
strm[].avail_in == [0]
strm[].avail_in elements == 0
strm[].total_in_lo32 == [5738700]
strm[].total_in_lo32 elements == 5738700
strm[].avail_out == [4111]
strm[].avail_out elements == 4111
strm[].total_out_lo32 == [3596]
strm[].total_out_lo32 elements == 3596
strm[].state == [null]
strm[].state elements == null
strm[].bzalloc contains no nulls and has only one value, of length 1
strm[].bzalloc elements has only one value
strm[].bzfree contains no nulls and has only one value, of length 1
strm[].bzfree elements has only one value
size(::incs[]) == 14
size(::bzerrorstrings[]) == 16
size(::BZ2_rNums[]) == 512
size(::BZ2_crc32Table[]) == 256
size(::zSuffix[]) == 4
::incs[::blockSize100k] == 29524
::incs[::blockSize100k-1] == 9841
::incs[::srcMode] == 40
::BZ2_rNums[::verbosity] == 619
::BZ2_rNums[::numFileNames] == 720
::BZ2_rNums[::blockSize100k] == 247
::BZ2_rNums[::blockSize100k-1] == 566
::BZ2_rNums[::srcMode] == 481
::BZ2_rNums[::srcMode-1] == 127
::BZ2_rNums[::longestFileName] == 733
::BZ2_rNums[::longestFileName-1] == 214
::BZ2_rNums[::workFactor] == 419
::BZ2_rNums[::workFactor-1] == 472
::BZ2_crc32Table[::verbosity] == 0
::BZ2_crc32Table[::numFileNames] == 79764919
::BZ2_crc32Table[::blockSize100k] == 583659535
::BZ2_crc32Table[::blockSize100k-1] == 638119352
::BZ2_crc32Table[::srcMode] == 222504665
::BZ2_crc32Table[::srcMode-1] == 159529838
::BZ2_crc32Table[::longestFileName] == 1595256236
::BZ2_crc32Table[::longestFileName-1] == 1095957929
::BZ2_crc32Table[::workFactor] == 1889500026
::BZ2_crc32Table[::workFactor-1] == 2111593891
::fileMetaInfo.__glibc_reserved[] elements == ::verbosity
size(::BZ2_rNums[])-1 in ::BZ2_rNums[]
::inName == orig(::inName)
::outName == orig(::outName)
::tmpName in ::unzSuffix[]
::tmpName == orig(::tmpName)
::progName == orig(::progName)
::progNameReally == orig(::progNameReally)
strm[] elements == strm[::verbosity]
strm[].avail_in elements == ::BZ2_crc32Table[::verbosity]
strm[].total_in_lo32 elements == strm[::verbosity].total_in_lo32
strm[].avail_out elements == strm[::verbosity].avail_out
strm[].total_out_lo32 elements == strm[::verbosity].total_out_lo32
strm[].state elements == strm[::verbosity].state
strm[].bzalloc elements == strm[::verbosity].bzalloc
strm[].bzfree elements == strm[::verbosity].bzfree
===========================================================================
..BZ2_bzCompressInit():::ENTER
::fileMetaInfo.st_uid == ::fileMetaInfo.st_gid
::fileMetaInfo.__pad0 == ::verbosity
::fileMetaInfo.st_mtim.tv_sec == ::fileMetaInfo.st_ctim.tv_sec
::fileMetaInfo.st_mtim.tv_nsec == ::fileMetaInfo.st_ctim.tv_nsec
::verbosity == ::exitValue
::verbosity == verbosity
::verbosity == ::fileMetaInfo.__glibc_reserved[::fileMetaInfo.__pad0]
::verbosity == ::fileMetaInfo.__glibc_reserved[::verbosity]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::exitValue]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::srcMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[verbosity]
::keepInputFiles == ::deleteOutputOnInterrupt
::keepInputFiles == ::noisy
::smallMode == ::forceOverwrite
::smallMode == ::testFailsExist
::smallMode == ::unzFailsExist
::numFileNames == ::numFilesProcessed
::numFileNames == ::opMode
::numFileNames == ::incs[::fileMetaInfo.__pad0]
::numFileNames == ::incs[::verbosity]
::numFileNames == ::incs[::numFileNames-1]
::numFileNames == ::incs[::numFilesProcessed-1]
::numFileNames == ::incs[::exitValue]
::numFileNames == ::incs[::opMode-1]
::numFileNames == ::incs[verbosity]
::blockSize100k == blockSize100k
::srcMode == size(::fileMetaInfo.__glibc_reserved[])
::srcMode == size(::zSuffix[])-1
::srcMode == size(::unzSuffix[])-1
::workFactor == workFactor
strm[].bzalloc == strm[].bzfree
size(::incs[])-1 == ::incs[::srcMode-1]
size(::zSuffix[]) == size(::unzSuffix[])
size(::zSuffix[]) == ::incs[::numFileNames]
size(::zSuffix[]) == ::incs[::numFilesProcessed]
size(::zSuffix[]) == ::incs[::opMode]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFileNames-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFilesProcessed-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::opMode-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFileNames-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFilesProcessed-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::opMode-1]
strm[::verbosity].bzalloc == strm[::numFileNames-1].bzalloc
strm[::verbosity].bzalloc == strm[::numFileNames-1].bzfree
strm[::verbosity].bzalloc == strm[::numFilesProcessed-1].bzalloc
strm[::verbosity].bzalloc == strm[::numFilesProcessed-1].bzfree
strm[::verbosity].bzalloc == strm[::opMode-1].bzalloc
strm[::verbosity].bzalloc == strm[::opMode-1].bzfree
strm[::verbosity].opaque == strm[::numFileNames-1].opaque
strm[::verbosity].opaque == strm[::numFilesProcessed-1].opaque
strm[::verbosity].opaque == strm[::opMode-1].opaque
::incs has only one value
::incs[] == [1, 4, 13, 40, 121, 364, 1093, 3280, 9841, 29524, 88573, 265720, 797161, 2391484]
::bzerrorstrings has only one value
::bzerrorstrings[] == [OK, SEQUENCE_ERROR, PARAM_ERROR, MEM_ERROR, DATA_ERROR, DATA_ERROR_MAGIC, IO_ERROR, UNEXPECTED_EOF, OUTBUFF_FULL, CONFIG_ERROR, ???, ???, ???, ???, ???, ???]
::fileMetaInfo has only one value
::fileMetaInfo.st_dev == 2049
::fileMetaInfo.st_ino == 936492
::fileMetaInfo.st_nlink == 1
::fileMetaInfo.st_mode == 33277
::fileMetaInfo.st_uid == 1000
::fileMetaInfo.st_rdev == 0
::fileMetaInfo.st_size == 5738700
::fileMetaInfo.st_blksize == 4096
::fileMetaInfo.st_blocks == 11216
::fileMetaInfo.st_atim has only one value
::fileMetaInfo.st_atim.tv_sec == 1496096467
::fileMetaInfo.st_atim.tv_nsec == 709424920
::fileMetaInfo.st_mtim has only one value
::fileMetaInfo.st_mtim.tv_sec == 1483563943
::fileMetaInfo.st_mtim.tv_nsec == 421335644
::fileMetaInfo.st_ctim has only one value
::fileMetaInfo.__glibc_reserved has only one value
::fileMetaInfo.__glibc_reserved[] == [0, 0, 0]
::fileMetaInfo.__glibc_reserved[] elements == 0
::BZ2_rNums has only one value
::BZ2_rNums[] == [619, 720, 127, 481, 931, 816, 813, 233, 566, 247, 985, 724, 205, 454, 863, 491, 741, 242, 949, 214, 733, 859, 335, 708, 621, 574, 73, 654, 730, 472, 419, 436, 278, 496, 867, 210, 399, 680, 480, 51, 878, 465, 811, 169, 869, 675, 611, 697, 867, 561, 862, 687, 507, 283, 482, 129, 807, 591, 733, 623, 150, 238, 59, 379, 684, 877, 625, 169, 643, 105, 170, 607, 520, 932, 727, 476, 693, 425, 174, 647, 73, 122, 335, 530, 442, 853, 695, 249, 445, 515, 909, 545, 703, 919, 874, 474, 882, 500, 594, 612, 641, 801, 220, 162, 819, 984, 589, 513, 495, 799, 161, 604, 958, 533, 221, 400, 386, 867, 600, 782, 382, 596, 414, 171, 516, 375, 682, 485, 911, 276, 98, 553, 163, 354, 666, 933, 424, 341, 533, 870, 227, 730, 475, 186, 263, 647, 537, 686, 600, 224, 469, 68, 770, 919, 190, 373, 294, 822, 808, 206, 184, 943, 795, 384, 383, 461, 404, 758, 839, 887, 715, 67, 618, 276, 204, 918, 873, 777, 604, 560, 951, 160, 578, 722, 79, 804, 96, 409, 713, 940, 652, 934, 970, 447, 318, 353, 859, 672, 112, 785, 645, 863, 803, 350, 139, 93, 354, 99, 820, 908, 609, 772, 154, 274, 580, 184, 79, 626, 630, 742, 653, 282, 762, 623, 680, 81, 927, 626, 789, 125, 411, 521, 938, 300, 821, 78, 343, 175, 128, 250, 170, 774, 972, 275, 999, 639, 495, 78, 352, 126, 857, 956, 358, 619, 580, 124, 737, 594, 701, 612, 669, 112, 134, 694, 363, 992, 809, 743, 168, 974, 944, 375, 748, 52, 600, 747, 642, 182, 862, 81, 344, 805, 988, 739, 511, 655, 814, 334, 249, 515, 897, 955, 664, 981, 649, 113, 974, 459, 893, 228, 433, 837, 553, 268, 926, 240, 102, 654, 459, 51, 686, 754, 806, 760, 493, 403, 415, 394, 687, 700, 946, 670, 656, 610, 738, 392, 760, 799, 887, 653, 978, 321, 576, 617, 626, 502, 894, 679, 243, 440, 680, 879, 194, 572, 640, 724, 926, 56, 204, 700, 707, 151, 457, 449, 797, 195, 791, 558, 945, 679, 297, 59, 87, 824, 713, 663, 412, 693, 342, 606, 134, 108, 571, 364, 631, 212, 174, 643, 304, 329, 343, 97, 430, 751, 497, 314, 983, 374, 822, 928, 140, 206, 73, 263, 980, 736, 876, 478, 430, 305, 170, 514, 364, 692, 829, 82, 855, 953, 676, 246, 369, 970, 294, 750, 807, 827, 150, 790, 288, 923, 804, 378, 215, 828, 592, 281, 565, 555, 710, 82, 896, 831, 547, 261, 524, 462, 293, 465, 502, 56, 661, 821, 976, 991, 658, 869, 905, 758, 745, 193, 768, 550, 608, 933, 378, 286, 215, 979, 792, 961, 61, 688, 793, 644, 986, 403, 106, 366, 905, 644, 372, 567, 466, 434, 645, 210, 389, 550, 919, 135, 780, 773, 635, 389, 707, 100, 626, 958, 165, 504, 920, 176, 193, 713, 857, 265, 203, 50, 668, 108, 645, 990, 626, 197, 510, 357, 358, 850, 858, 364, 936, 638]
::BZ2_crc32Table has only one value
::BZ2_crc32Table[] == [0, 79764919, 159529838, 222504665, 319059676, 398814059, 445009330, 507990021, 638119352, 583659535, 797628118, 726387553, 890018660, 835552979, 1015980042, 944750013, 1276238704, 1221641927, 1167319070, 1095957929, 1595256236, 1540665371, 1452775106, 1381403509, 1780037320, 1859660671, 1671105958, 1733955601, 2031960084, 2111593891, 1889500026, 1952343757, 2552477408, 2632100695, 2443283854, 2506133561, 2334638140, 2414271883, 2191915858, 2254759653, 3190512472, 3135915759, 3081330742, 3009969537, 2905550212, 2850959411, 2762807018, 2691435357, 3560074640, 3505614887, 3719321342, 3648080713, 3342211916, 3287746299, 3467911202, 3396681109, 4063920168, 4143685023, 4223187782, 4286162673, 3779000052, 3858754371, 3904687514, 3967668269, 881225847, 809987520, 1023691545, 969234094, 662832811, 591600412, 771767749, 717299826, 311336399, 374308984, 453813921, 533576470, 25881363, 88864420, 134795389, 214552010, 2023205639, 2086057648, 1897238633, 1976864222, 1804852699, 1867694188, 1645340341, 1724971778, 1587496639, 1516133128, 1461550545, 1406951526, 1302016099, 1230646740, 1142491917, 1087903418, 2896545431, 2825181984, 2770861561, 2716262478, 3215044683, 3143675388, 3055782693, 3001194130, 2326604591, 2389456536, 2200899649, 2280525302, 2578013683, 2640855108, 2418763421, 2498394922, 3769900519, 3832873040, 3912640137, 3992402750, 4088425275, 4151408268, 4197601365, 4277358050, 3334271071, 3263032808, 3476998961, 3422541446, 3585640067, 3514407732, 3694837229, 3640369242, 1762451694, 1842216281, 1619975040, 1682949687, 2047383090, 2127137669, 1938468188, 2001449195, 1325665622, 1271206113, 1183200824, 1111960463, 1543535498, 1489069629, 1434599652, 1363369299, 622672798, 568075817, 748617968, 677256519, 907627842, 853037301, 1067152940, 995781531, 51762726, 131386257, 177728840, 240578815, 269590778, 349224269, 429104020, 491947555, 4046411278, 4126034873, 4172115296, 4234965207, 3794477266, 3874110821, 3953728444, 4016571915, 3609705398, 3555108353, 3735388376, 3664026991, 3290680682, 3236090077, 3449943556, 3378572211, 3174993278, 3120533705, 3032266256, 2961025959, 2923101090, 2868635157, 2813903052, 2742672763, 2604032198, 2683796849, 2461293480, 2524268063, 2284983834, 2364738477, 2175806836, 2238787779, 1569362073, 1498123566, 1409854455, 1355396672, 1317987909, 1246755826, 1192025387, 1137557660, 2072149281, 2135122070, 1912620623, 1992383480, 1753615357, 1816598090, 1627664531, 1707420964, 295390185, 358241886, 404320391, 483945776, 43990325, 106832002, 186451547, 266083308, 932423249, 861060070, 1041341759, 986742920, 613929101, 542559546, 756411363, 701822548, 3316196985, 3244833742, 3425377559, 3370778784, 3601682597, 3530312978, 3744426955, 3689838204, 3819031489, 3881883254, 3928223919, 4007849240, 4037393693, 4100235434, 4180117107, 4259748804, 2310601993, 2373574846, 2151335527, 2231098320, 2596047829, 2659030626, 2470359227, 2550115596, 2947551409, 2876312838, 2788305887, 2733848168, 3165939309, 3094707162, 3040238851, 2985771188]
::mammamia == 3216
::verbosity == 0
::keepInputFiles == 1
::smallMode == 0
::numFileNames == 1
::blockSize100k == 9
::longestFileName == 20
::inName == "../inputs/in_big.txt"
::outName == "../inputs/in_big.txt.bz2"
::tmpName == ""
::progName == "zip-injected"
::progNameReally == "./zip-injected"
::outputHandleJustInCase has only one value
::workFactor == 30
::zSuffix has only one value
::zSuffix[] == [.bz2, .bz, .tbz2, .tbz]
::unzSuffix has only one value
::unzSuffix[] == [, , .tar, .tar]
::unzSuffix[] elements one of { "", ".tar" }
strm has only one value
strm[].bzalloc == [null]
strm[].bzalloc elements == null
strm[].opaque == [null]
strm[].opaque elements == null
size(::incs[]) == 14
size(::bzerrorstrings[]) == 16
size(::BZ2_rNums[]) == 512
size(::BZ2_crc32Table[]) == 256
size(::zSuffix[]) == 4
::incs[::blockSize100k] == 29524
::incs[::blockSize100k-1] == 9841
::incs[::srcMode] == 40
::BZ2_rNums[::verbosity] == 619
::BZ2_rNums[::numFileNames] == 720
::BZ2_rNums[::blockSize100k] == 247
::BZ2_rNums[::blockSize100k-1] == 566
::BZ2_rNums[::srcMode] == 481
::BZ2_rNums[::srcMode-1] == 127
::BZ2_rNums[::longestFileName] == 733
::BZ2_rNums[::longestFileName-1] == 214
::BZ2_rNums[::workFactor] == 419
::BZ2_rNums[::workFactor-1] == 472
::BZ2_crc32Table[::verbosity] == 0
::BZ2_crc32Table[::numFileNames] == 79764919
::BZ2_crc32Table[::blockSize100k] == 583659535
::BZ2_crc32Table[::blockSize100k-1] == 638119352
::BZ2_crc32Table[::srcMode] == 222504665
::BZ2_crc32Table[::srcMode-1] == 159529838
::BZ2_crc32Table[::longestFileName] == 1595256236
::BZ2_crc32Table[::longestFileName-1] == 1095957929
::BZ2_crc32Table[::workFactor] == 1889500026
::BZ2_crc32Table[::workFactor-1] == 2111593891
::fileMetaInfo.__glibc_reserved[] elements == ::verbosity
size(::BZ2_rNums[])-1 in ::BZ2_rNums[]
::tmpName in ::unzSuffix[]
strm[].bzalloc elements == strm[::verbosity].bzalloc
strm[].opaque elements == strm[::verbosity].opaque
===========================================================================
..BZ2_bzCompressInit():::EXIT
::incs == orig(::incs)
::incs[] == orig(::incs[])
::bzerrorstrings == orig(::bzerrorstrings)
::fileMetaInfo == orig(::fileMetaInfo)
::fileMetaInfo.st_dev == orig(::fileMetaInfo.st_dev)
::fileMetaInfo.st_ino == orig(::fileMetaInfo.st_ino)
::fileMetaInfo.st_nlink == orig(::fileMetaInfo.st_nlink)
::fileMetaInfo.st_mode == orig(::fileMetaInfo.st_mode)
::fileMetaInfo.st_uid == ::fileMetaInfo.st_gid
::fileMetaInfo.st_uid == orig(::fileMetaInfo.st_uid)
::fileMetaInfo.st_uid == orig(::fileMetaInfo.st_gid)
::fileMetaInfo.__pad0 == ::verbosity
::fileMetaInfo.st_rdev == orig(::fileMetaInfo.st_rdev)
::fileMetaInfo.st_size == orig(::fileMetaInfo.st_size)
::fileMetaInfo.st_blksize == orig(::fileMetaInfo.st_blksize)
::fileMetaInfo.st_blocks == orig(::fileMetaInfo.st_blocks)
::fileMetaInfo.st_atim == orig(::fileMetaInfo.st_atim)
::fileMetaInfo.st_atim.tv_sec == orig(::fileMetaInfo.st_atim.tv_sec)
::fileMetaInfo.st_atim.tv_nsec == orig(::fileMetaInfo.st_atim.tv_nsec)
::fileMetaInfo.st_mtim == orig(::fileMetaInfo.st_mtim)
::fileMetaInfo.st_mtim.tv_sec == ::fileMetaInfo.st_ctim.tv_sec
::fileMetaInfo.st_mtim.tv_sec == orig(::fileMetaInfo.st_mtim.tv_sec)
::fileMetaInfo.st_mtim.tv_sec == orig(::fileMetaInfo.st_ctim.tv_sec)
::fileMetaInfo.st_mtim.tv_nsec == ::fileMetaInfo.st_ctim.tv_nsec
::fileMetaInfo.st_mtim.tv_nsec == orig(::fileMetaInfo.st_mtim.tv_nsec)
::fileMetaInfo.st_mtim.tv_nsec == orig(::fileMetaInfo.st_ctim.tv_nsec)
::fileMetaInfo.st_ctim == orig(::fileMetaInfo.st_ctim)
::fileMetaInfo.__glibc_reserved == orig(::fileMetaInfo.__glibc_reserved)
::fileMetaInfo.__glibc_reserved[] == orig(::fileMetaInfo.__glibc_reserved[])
::BZ2_rNums == orig(::BZ2_rNums)
::BZ2_rNums[] == orig(::BZ2_rNums[])
::BZ2_crc32Table == orig(::BZ2_crc32Table)
::BZ2_crc32Table[] == orig(::BZ2_crc32Table[])
::mammamia == orig(::mammamia)
::verbosity == ::exitValue
::verbosity == return
::verbosity == orig(::fileMetaInfo.__pad0)
::verbosity == orig(::verbosity)
::verbosity == orig(::exitValue)
::verbosity == orig(verbosity)
::verbosity == ::fileMetaInfo.__glibc_reserved[::fileMetaInfo.__pad0]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::fileMetaInfo.__pad0)])
::verbosity == ::fileMetaInfo.__glibc_reserved[::verbosity]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::exitValue]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::srcMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[return]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::fileMetaInfo.__pad0)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::verbosity)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFileNames)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFileNames)-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFilesProcessed)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFilesProcessed)-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::exitValue)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::opMode)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::opMode)-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::srcMode)-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(verbosity)]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::verbosity)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFileNames)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFileNames)-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFilesProcessed)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFilesProcessed)-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::exitValue)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::opMode)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::opMode)-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::srcMode)-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(verbosity)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(return)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::fileMetaInfo.__pad0])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::verbosity])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFileNames])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFileNames-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFilesProcessed])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFilesProcessed-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::exitValue])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::opMode])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::opMode-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::srcMode-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[verbosity])
::keepInputFiles == ::deleteOutputOnInterrupt
::keepInputFiles == ::noisy
::keepInputFiles == orig(::keepInputFiles)
::keepInputFiles == orig(::deleteOutputOnInterrupt)
::keepInputFiles == orig(::noisy)
::smallMode == ::forceOverwrite
::smallMode == ::testFailsExist
::smallMode == ::unzFailsExist
::smallMode == orig(::smallMode)
::smallMode == orig(::forceOverwrite)
::smallMode == orig(::testFailsExist)
::smallMode == orig(::unzFailsExist)
::numFileNames == ::numFilesProcessed
::numFileNames == ::opMode
::numFileNames == orig(::numFileNames)
::numFileNames == orig(::numFilesProcessed)
::numFileNames == orig(::opMode)
::numFileNames == ::incs[::fileMetaInfo.__pad0]
::numFileNames == ::incs[::verbosity]
::numFileNames == ::incs[::numFileNames-1]
::numFileNames == ::incs[::numFilesProcessed-1]
::numFileNames == ::incs[::exitValue]
::numFileNames == ::incs[::opMode-1]
::numFileNames == ::incs[return]
::numFileNames == ::incs[orig(::fileMetaInfo.__pad0)]
::numFileNames == ::incs[orig(::verbosity)]
::numFileNames == ::incs[orig(::numFileNames)-1]
::numFileNames == ::incs[orig(::numFilesProcessed)-1]
::numFileNames == ::incs[orig(::exitValue)]
::numFileNames == ::incs[orig(::opMode)-1]
::numFileNames == ::incs[orig(verbosity)]
::numFileNames == orig(::incs[post(::fileMetaInfo.__pad0)])
::numFileNames == orig(::incs[post(::verbosity)])
::numFileNames == orig(::incs[post(::numFileNames)-1])
::numFileNames == orig(::incs[post(::numFilesProcessed)-1])
::numFileNames == orig(::incs[post(::exitValue)])
::numFileNames == orig(::incs[post(::opMode)-1])
::numFileNames == orig(::incs[post(verbosity)])
::numFileNames == orig(::incs[post(return)])
::numFileNames == orig(::incs[::fileMetaInfo.__pad0])
::numFileNames == orig(::incs[::verbosity])
::numFileNames == orig(::incs[::numFileNames-1])
::numFileNames == orig(::incs[::numFilesProcessed-1])
::numFileNames == orig(::incs[::exitValue])
::numFileNames == orig(::incs[::opMode-1])
::numFileNames == orig(::incs[verbosity])
::blockSize100k == orig(::blockSize100k)
::blockSize100k == orig(blockSize100k)
::srcMode == orig(::srcMode)
::srcMode == size(::fileMetaInfo.__glibc_reserved[])
::srcMode == size(::zSuffix[])-1
::srcMode == size(::unzSuffix[])-1
::srcMode == orig(size(::fileMetaInfo.__glibc_reserved[]))
::srcMode == orig(size(::zSuffix[]))-1
::srcMode == orig(size(::unzSuffix[]))-1
::longestFileName == orig(::longestFileName)
::outputHandleJustInCase == orig(::outputHandleJustInCase)
::workFactor == orig(::workFactor)
::workFactor == orig(workFactor)
::zSuffix == orig(::zSuffix)
::unzSuffix == orig(::unzSuffix)
strm[].total_in_lo32 == strm[].total_in_hi32
strm[].total_in_lo32 == strm[].total_out_lo32
strm[].total_in_lo32 == strm[].total_out_hi32
strm[].opaque == orig(strm[].opaque)
size(::incs[])-1 == ::incs[::srcMode-1]
size(::incs[])-1 == ::incs[orig(::srcMode)-1]
size(::incs[])-1 == orig(::incs[post(::srcMode)-1])
size(::incs[])-1 == orig(::incs[::srcMode-1])
size(::zSuffix[]) == size(::unzSuffix[])
size(::zSuffix[]) == orig(size(::unzSuffix[]))
size(::zSuffix[]) == ::incs[::numFileNames]
size(::zSuffix[]) == ::incs[::numFilesProcessed]
size(::zSuffix[]) == ::incs[::opMode]
size(::zSuffix[]) == ::incs[orig(::numFileNames)]
size(::zSuffix[]) == ::incs[orig(::numFilesProcessed)]
size(::zSuffix[]) == ::incs[orig(::opMode)]
size(::zSuffix[]) == orig(::incs[post(::numFileNames)])
size(::zSuffix[]) == orig(::incs[post(::numFilesProcessed)])
size(::zSuffix[]) == orig(::incs[post(::opMode)])
size(::zSuffix[]) == orig(::incs[::numFileNames])
size(::zSuffix[]) == orig(::incs[::numFilesProcessed])
size(::zSuffix[]) == orig(::incs[::opMode])
strm[::fileMetaInfo.__pad0].total_in_lo32 == ::BZ2_crc32Table[::verbosity]
strm[::fileMetaInfo.__pad0].total_in_hi32 == ::BZ2_crc32Table[::verbosity]
strm[::fileMetaInfo.__pad0].total_out_lo32 == ::BZ2_crc32Table[::verbosity]
strm[::fileMetaInfo.__pad0].total_out_hi32 == ::BZ2_crc32Table[::verbosity]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFileNames-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFilesProcessed-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::opMode-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[orig(::numFileNames)-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[orig(::numFilesProcessed)-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[orig(::opMode)-1]
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[post(::numFileNames)-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[post(::numFilesProcessed)-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[post(::opMode)-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[::numFileNames-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[::numFilesProcessed-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[::opMode-1])
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFileNames-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFilesProcessed-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::opMode-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[orig(::numFileNames)-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[orig(::numFilesProcessed)-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[orig(::opMode)-1]
::BZ2_crc32Table[::verbosity] == strm[::verbosity].total_in_lo32
::BZ2_crc32Table[::verbosity] == strm[::verbosity].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[::verbosity].total_out_lo32
::BZ2_crc32Table[::verbosity] == strm[::verbosity].total_out_hi32
::BZ2_crc32Table[::verbosity] == strm[::numFileNames-1].total_in_lo32
::BZ2_crc32Table[::verbosity] == strm[::numFileNames-1].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[::numFileNames-1].total_out_lo32
::BZ2_crc32Table[::verbosity] == strm[::numFileNames-1].total_out_hi32
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[post(::numFileNames)-1])
::BZ2_crc32Table[::verbosity] == strm[::numFilesProcessed-1].total_in_lo32
::BZ2_crc32Table[::verbosity] == strm[::numFilesProcessed-1].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[::numFilesProcessed-1].total_out_lo32
::BZ2_crc32Table[::verbosity] == strm[::numFilesProcessed-1].total_out_hi32
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[post(::numFilesProcessed)-1])
::BZ2_crc32Table[::verbosity] == strm[::exitValue].total_in_lo32
::BZ2_crc32Table[::verbosity] == strm[::exitValue].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[::exitValue].total_out_lo32
::BZ2_crc32Table[::verbosity] == strm[::exitValue].total_out_hi32
::BZ2_crc32Table[::verbosity] == strm[::opMode-1].total_in_lo32
::BZ2_crc32Table[::verbosity] == strm[::opMode-1].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[::opMode-1].total_out_lo32
::BZ2_crc32Table[::verbosity] == strm[::opMode-1].total_out_hi32
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[post(::opMode)-1])
::BZ2_crc32Table[::verbosity] == strm[return].total_in_lo32
::BZ2_crc32Table[::verbosity] == strm[orig(::fileMetaInfo.__pad0)].total_in_lo32
::BZ2_crc32Table[::verbosity] == strm[orig(::verbosity)].total_in_lo32
::BZ2_crc32Table[::verbosity] == strm[orig(::numFileNames)-1].total_in_lo32
::BZ2_crc32Table[::verbosity] == strm[orig(::numFilesProcessed)-1].total_in_lo32
::BZ2_crc32Table[::verbosity] == strm[orig(::exitValue)].total_in_lo32
::BZ2_crc32Table[::verbosity] == strm[orig(::opMode)-1].total_in_lo32
::BZ2_crc32Table[::verbosity] == strm[orig(verbosity)].total_in_lo32
::BZ2_crc32Table[::verbosity] == strm[return].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[orig(::fileMetaInfo.__pad0)].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[orig(::verbosity)].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[orig(::numFileNames)-1].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[orig(::numFilesProcessed)-1].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[orig(::exitValue)].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[orig(::opMode)-1].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[orig(verbosity)].total_in_hi32
::BZ2_crc32Table[::verbosity] == strm[return].total_out_lo32
::BZ2_crc32Table[::verbosity] == strm[orig(::fileMetaInfo.__pad0)].total_out_lo32
::BZ2_crc32Table[::verbosity] == strm[orig(::verbosity)].total_out_lo32
::BZ2_crc32Table[::verbosity] == strm[orig(::numFileNames)-1].total_out_lo32
::BZ2_crc32Table[::verbosity] == strm[orig(::numFilesProcessed)-1].total_out_lo32
::BZ2_crc32Table[::verbosity] == strm[orig(::exitValue)].total_out_lo32
::BZ2_crc32Table[::verbosity] == strm[orig(::opMode)-1].total_out_lo32
::BZ2_crc32Table[::verbosity] == strm[orig(verbosity)].total_out_lo32
::BZ2_crc32Table[::verbosity] == strm[return].total_out_hi32
::BZ2_crc32Table[::verbosity] == strm[orig(::fileMetaInfo.__pad0)].total_out_hi32
::BZ2_crc32Table[::verbosity] == strm[orig(::verbosity)].total_out_hi32
::BZ2_crc32Table[::verbosity] == strm[orig(::numFileNames)-1].total_out_hi32
::BZ2_crc32Table[::verbosity] == strm[orig(::numFilesProcessed)-1].total_out_hi32
::BZ2_crc32Table[::verbosity] == strm[orig(::exitValue)].total_out_hi32
::BZ2_crc32Table[::verbosity] == strm[orig(::opMode)-1].total_out_hi32
::BZ2_crc32Table[::verbosity] == strm[orig(verbosity)].total_out_hi32
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[::numFileNames-1])
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[::numFilesProcessed-1])
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[::opMode-1])
strm[::verbosity].state == strm[::numFileNames-1].state
strm[::verbosity].state == strm[::numFilesProcessed-1].state
strm[::verbosity].state == strm[::opMode-1].state
strm[::verbosity].state == strm[orig(::numFileNames)-1].state
strm[::verbosity].state == strm[orig(::numFilesProcessed)-1].state
strm[::verbosity].state == strm[orig(::opMode)-1].state
strm[::verbosity].bzalloc == strm[::numFileNames-1].bzalloc
strm[::verbosity].bzalloc == strm[::numFilesProcessed-1].bzalloc
strm[::verbosity].bzalloc == strm[::opMode-1].bzalloc
strm[::verbosity].bzalloc == strm[orig(::numFileNames)-1].bzalloc
strm[::verbosity].bzalloc == strm[orig(::numFilesProcessed)-1].bzalloc
strm[::verbosity].bzalloc == strm[orig(::opMode)-1].bzalloc
strm[::verbosity].bzfree == strm[::numFileNames-1].bzfree
strm[::verbosity].bzfree == strm[::numFilesProcessed-1].bzfree
strm[::verbosity].bzfree == strm[::opMode-1].bzfree
strm[::verbosity].bzfree == strm[orig(::numFileNames)-1].bzfree
strm[::verbosity].bzfree == strm[orig(::numFilesProcessed)-1].bzfree
strm[::verbosity].bzfree == strm[orig(::opMode)-1].bzfree
strm[::verbosity].opaque == strm[::numFileNames-1].opaque
strm[::verbosity].opaque == orig(strm[post(::numFileNames)-1].opaque)
strm[::verbosity].opaque == strm[::numFilesProcessed-1].opaque
strm[::verbosity].opaque == orig(strm[post(::numFilesProcessed)-1].opaque)
strm[::verbosity].opaque == strm[::opMode-1].opaque
strm[::verbosity].opaque == orig(strm[post(::opMode)-1].opaque)
strm[::verbosity].opaque == strm[orig(::numFileNames)-1].opaque
strm[::verbosity].opaque == strm[orig(::numFilesProcessed)-1].opaque
strm[::verbosity].opaque == strm[orig(::opMode)-1].opaque
strm[::verbosity].opaque == orig(strm[::numFileNames-1].opaque)
strm[::verbosity].opaque == orig(strm[::numFilesProcessed-1].opaque)
strm[::verbosity].opaque == orig(strm[::opMode-1].opaque)
orig(strm[post(::numFileNames)-1].bzalloc) == orig(strm[::verbosity].bzalloc)
orig(strm[post(::numFileNames)-1].bzfree) == orig(strm[::verbosity].bzalloc)
orig(strm[post(::numFilesProcessed)-1].bzalloc) == orig(strm[::verbosity].bzalloc)
orig(strm[post(::numFilesProcessed)-1].bzfree) == orig(strm[::verbosity].bzalloc)
orig(strm[post(::opMode)-1].bzalloc) == orig(strm[::verbosity].bzalloc)
orig(strm[post(::opMode)-1].bzfree) == orig(strm[::verbosity].bzalloc)
::incs has only one value
::incs[] == [1, 4, 13, 40, 121, 364, 1093, 3280, 9841, 29524, 88573, 265720, 797161, 2391484]
::bzerrorstrings has only one value
::bzerrorstrings[] == [OK, SEQUENCE_ERROR, PARAM_ERROR, MEM_ERROR, DATA_ERROR, DATA_ERROR_MAGIC, IO_ERROR, UNEXPECTED_EOF, OUTBUFF_FULL, CONFIG_ERROR, ???, ???, ???, ???, ???, ???]
::fileMetaInfo has only one value
::fileMetaInfo.st_dev == 2049
::fileMetaInfo.st_ino == 936492
::fileMetaInfo.st_nlink == 1
::fileMetaInfo.st_mode == 33277
::fileMetaInfo.st_uid == 1000
::fileMetaInfo.st_rdev == 0
::fileMetaInfo.st_size == 5738700
::fileMetaInfo.st_blksize == 4096
::fileMetaInfo.st_blocks == 11216
::fileMetaInfo.st_atim has only one value
::fileMetaInfo.st_atim.tv_sec == 1496096467
::fileMetaInfo.st_atim.tv_nsec == 709424920
::fileMetaInfo.st_mtim has only one value
::fileMetaInfo.st_mtim.tv_sec == 1483563943
::fileMetaInfo.st_mtim.tv_nsec == 421335644
::fileMetaInfo.st_ctim has only one value
::fileMetaInfo.__glibc_reserved has only one value
::fileMetaInfo.__glibc_reserved[] == [0, 0, 0]
::fileMetaInfo.__glibc_reserved[] elements == 0
::BZ2_rNums has only one value
::BZ2_rNums[] == [619, 720, 127, 481, 931, 816, 813, 233, 566, 247, 985, 724, 205, 454, 863, 491, 741, 242, 949, 214, 733, 859, 335, 708, 621, 574, 73, 654, 730, 472, 419, 436, 278, 496, 867, 210, 399, 680, 480, 51, 878, 465, 811, 169, 869, 675, 611, 697, 867, 561, 862, 687, 507, 283, 482, 129, 807, 591, 733, 623, 150, 238, 59, 379, 684, 877, 625, 169, 643, 105, 170, 607, 520, 932, 727, 476, 693, 425, 174, 647, 73, 122, 335, 530, 442, 853, 695, 249, 445, 515, 909, 545, 703, 919, 874, 474, 882, 500, 594, 612, 641, 801, 220, 162, 819, 984, 589, 513, 495, 799, 161, 604, 958, 533, 221, 400, 386, 867, 600, 782, 382, 596, 414, 171, 516, 375, 682, 485, 911, 276, 98, 553, 163, 354, 666, 933, 424, 341, 533, 870, 227, 730, 475, 186, 263, 647, 537, 686, 600, 224, 469, 68, 770, 919, 190, 373, 294, 822, 808, 206, 184, 943, 795, 384, 383, 461, 404, 758, 839, 887, 715, 67, 618, 276, 204, 918, 873, 777, 604, 560, 951, 160, 578, 722, 79, 804, 96, 409, 713, 940, 652, 934, 970, 447, 318, 353, 859, 672, 112, 785, 645, 863, 803, 350, 139, 93, 354, 99, 820, 908, 609, 772, 154, 274, 580, 184, 79, 626, 630, 742, 653, 282, 762, 623, 680, 81, 927, 626, 789, 125, 411, 521, 938, 300, 821, 78, 343, 175, 128, 250, 170, 774, 972, 275, 999, 639, 495, 78, 352, 126, 857, 956, 358, 619, 580, 124, 737, 594, 701, 612, 669, 112, 134, 694, 363, 992, 809, 743, 168, 974, 944, 375, 748, 52, 600, 747, 642, 182, 862, 81, 344, 805, 988, 739, 511, 655, 814, 334, 249, 515, 897, 955, 664, 981, 649, 113, 974, 459, 893, 228, 433, 837, 553, 268, 926, 240, 102, 654, 459, 51, 686, 754, 806, 760, 493, 403, 415, 394, 687, 700, 946, 670, 656, 610, 738, 392, 760, 799, 887, 653, 978, 321, 576, 617, 626, 502, 894, 679, 243, 440, 680, 879, 194, 572, 640, 724, 926, 56, 204, 700, 707, 151, 457, 449, 797, 195, 791, 558, 945, 679, 297, 59, 87, 824, 713, 663, 412, 693, 342, 606, 134, 108, 571, 364, 631, 212, 174, 643, 304, 329, 343, 97, 430, 751, 497, 314, 983, 374, 822, 928, 140, 206, 73, 263, 980, 736, 876, 478, 430, 305, 170, 514, 364, 692, 829, 82, 855, 953, 676, 246, 369, 970, 294, 750, 807, 827, 150, 790, 288, 923, 804, 378, 215, 828, 592, 281, 565, 555, 710, 82, 896, 831, 547, 261, 524, 462, 293, 465, 502, 56, 661, 821, 976, 991, 658, 869, 905, 758, 745, 193, 768, 550, 608, 933, 378, 286, 215, 979, 792, 961, 61, 688, 793, 644, 986, 403, 106, 366, 905, 644, 372, 567, 466, 434, 645, 210, 389, 550, 919, 135, 780, 773, 635, 389, 707, 100, 626, 958, 165, 504, 920, 176, 193, 713, 857, 265, 203, 50, 668, 108, 645, 990, 626, 197, 510, 357, 358, 850, 858, 364, 936, 638]
::BZ2_crc32Table has only one value
::BZ2_crc32Table[] == [0, 79764919, 159529838, 222504665, 319059676, 398814059, 445009330, 507990021, 638119352, 583659535, 797628118, 726387553, 890018660, 835552979, 1015980042, 944750013, 1276238704, 1221641927, 1167319070, 1095957929, 1595256236, 1540665371, 1452775106, 1381403509, 1780037320, 1859660671, 1671105958, 1733955601, 2031960084, 2111593891, 1889500026, 1952343757, 2552477408, 2632100695, 2443283854, 2506133561, 2334638140, 2414271883, 2191915858, 2254759653, 3190512472, 3135915759, 3081330742, 3009969537, 2905550212, 2850959411, 2762807018, 2691435357, 3560074640, 3505614887, 3719321342, 3648080713, 3342211916, 3287746299, 3467911202, 3396681109, 4063920168, 4143685023, 4223187782, 4286162673, 3779000052, 3858754371, 3904687514, 3967668269, 881225847, 809987520, 1023691545, 969234094, 662832811, 591600412, 771767749, 717299826, 311336399, 374308984, 453813921, 533576470, 25881363, 88864420, 134795389, 214552010, 2023205639, 2086057648, 1897238633, 1976864222, 1804852699, 1867694188, 1645340341, 1724971778, 1587496639, 1516133128, 1461550545, 1406951526, 1302016099, 1230646740, 1142491917, 1087903418, 2896545431, 2825181984, 2770861561, 2716262478, 3215044683, 3143675388, 3055782693, 3001194130, 2326604591, 2389456536, 2200899649, 2280525302, 2578013683, 2640855108, 2418763421, 2498394922, 3769900519, 3832873040, 3912640137, 3992402750, 4088425275, 4151408268, 4197601365, 4277358050, 3334271071, 3263032808, 3476998961, 3422541446, 3585640067, 3514407732, 3694837229, 3640369242, 1762451694, 1842216281, 1619975040, 1682949687, 2047383090, 2127137669, 1938468188, 2001449195, 1325665622, 1271206113, 1183200824, 1111960463, 1543535498, 1489069629, 1434599652, 1363369299, 622672798, 568075817, 748617968, 677256519, 907627842, 853037301, 1067152940, 995781531, 51762726, 131386257, 177728840, 240578815, 269590778, 349224269, 429104020, 491947555, 4046411278, 4126034873, 4172115296, 4234965207, 3794477266, 3874110821, 3953728444, 4016571915, 3609705398, 3555108353, 3735388376, 3664026991, 3290680682, 3236090077, 3449943556, 3378572211, 3174993278, 3120533705, 3032266256, 2961025959, 2923101090, 2868635157, 2813903052, 2742672763, 2604032198, 2683796849, 2461293480, 2524268063, 2284983834, 2364738477, 2175806836, 2238787779, 1569362073, 1498123566, 1409854455, 1355396672, 1317987909, 1246755826, 1192025387, 1137557660, 2072149281, 2135122070, 1912620623, 1992383480, 1753615357, 1816598090, 1627664531, 1707420964, 295390185, 358241886, 404320391, 483945776, 43990325, 106832002, 186451547, 266083308, 932423249, 861060070, 1041341759, 986742920, 613929101, 542559546, 756411363, 701822548, 3316196985, 3244833742, 3425377559, 3370778784, 3601682597, 3530312978, 3744426955, 3689838204, 3819031489, 3881883254, 3928223919, 4007849240, 4037393693, 4100235434, 4180117107, 4259748804, 2310601993, 2373574846, 2151335527, 2231098320, 2596047829, 2659030626, 2470359227, 2550115596, 2947551409, 2876312838, 2788305887, 2733848168, 3165939309, 3094707162, 3040238851, 2985771188]
::mammamia == 3216
::verbosity == 0
::keepInputFiles == 1
::smallMode == 0
::numFileNames == 1
::blockSize100k == 9
::longestFileName == 20
::inName == "../inputs/in_big.txt"
::outName == "../inputs/in_big.txt.bz2"
::tmpName == ""
::progName == "zip-injected"
::progNameReally == "./zip-injected"
::outputHandleJustInCase has only one value
::workFactor == 30
::zSuffix has only one value
::zSuffix[] == [.bz2, .bz, .tbz2, .tbz]
::unzSuffix has only one value
::unzSuffix[] == [, , .tar, .tar]
::unzSuffix[] elements one of { "", ".tar" }
strm[].total_in_lo32 == [0]
strm[].total_in_lo32 elements == 0
strm[].state contains no nulls and has only one value, of length 1
strm[].state elements has only one value
strm[].bzalloc contains no nulls and has only one value, of length 1
strm[].bzalloc elements has only one value
strm[].bzfree contains no nulls and has only one value, of length 1
strm[].bzfree elements has only one value
strm[].opaque == [null]
strm[].opaque elements == null
size(::incs[]) == 14
size(::bzerrorstrings[]) == 16
size(::BZ2_rNums[]) == 512
size(::BZ2_crc32Table[]) == 256
size(::zSuffix[]) == 4
::incs[::blockSize100k] == 29524
::incs[::blockSize100k-1] == 9841
::incs[::srcMode] == 40
::BZ2_rNums[::verbosity] == 619
::BZ2_rNums[::numFileNames] == 720
::BZ2_rNums[::blockSize100k] == 247
::BZ2_rNums[::blockSize100k-1] == 566
::BZ2_rNums[::srcMode] == 481
::BZ2_rNums[::srcMode-1] == 127
::BZ2_rNums[::longestFileName] == 733
::BZ2_rNums[::longestFileName-1] == 214
::BZ2_rNums[::workFactor] == 419
::BZ2_rNums[::workFactor-1] == 472
::BZ2_crc32Table[::verbosity] == 0
::BZ2_crc32Table[::numFileNames] == 79764919
::BZ2_crc32Table[::blockSize100k] == 583659535
::BZ2_crc32Table[::blockSize100k-1] == 638119352
::BZ2_crc32Table[::srcMode] == 222504665
::BZ2_crc32Table[::srcMode-1] == 159529838
::BZ2_crc32Table[::longestFileName] == 1595256236
::BZ2_crc32Table[::longestFileName-1] == 1095957929
::BZ2_crc32Table[::workFactor] == 1889500026
::BZ2_crc32Table[::workFactor-1] == 2111593891
::fileMetaInfo.__glibc_reserved[] elements == ::verbosity
size(::BZ2_rNums[])-1 in ::BZ2_rNums[]
::inName == orig(::inName)
::outName == orig(::outName)
::tmpName in ::unzSuffix[]
::tmpName == orig(::tmpName)
::progName == orig(::progName)
::progNameReally == orig(::progNameReally)
strm[].total_in_lo32 elements == ::BZ2_crc32Table[::verbosity]
strm[].state elements == strm[::verbosity].state
strm[].bzalloc elements == strm[::verbosity].bzalloc
strm[].bzfree elements == strm[::verbosity].bzfree
strm[].opaque elements == strm[::verbosity].opaque
===========================================================================
..BZ2_bzWrite():::ENTER
::fileMetaInfo.st_uid == ::fileMetaInfo.st_gid
::fileMetaInfo.__pad0 == ::verbosity
::fileMetaInfo.st_mtim.tv_sec == ::fileMetaInfo.st_ctim.tv_sec
::fileMetaInfo.st_mtim.tv_nsec == ::fileMetaInfo.st_ctim.tv_nsec
::verbosity == ::exitValue
::verbosity == size(bzerror[])-1
::verbosity == ::fileMetaInfo.__glibc_reserved[::fileMetaInfo.__pad0]
::verbosity == bzerror[::fileMetaInfo.__pad0]
::verbosity == ::fileMetaInfo.__glibc_reserved[::verbosity]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::exitValue]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::srcMode-1]
::verbosity == bzerror[::verbosity]
::verbosity == bzerror[::numFileNames-1]
::verbosity == bzerror[::numFilesProcessed-1]
::verbosity == bzerror[::exitValue]
::verbosity == bzerror[::opMode-1]
::keepInputFiles == ::deleteOutputOnInterrupt
::keepInputFiles == ::noisy
::smallMode == ::forceOverwrite
::smallMode == ::testFailsExist
::smallMode == ::unzFailsExist
::numFileNames == ::numFilesProcessed
::numFileNames == ::opMode
::numFileNames == size(bzerror[])
::numFileNames == ::incs[::fileMetaInfo.__pad0]
::numFileNames == ::incs[::verbosity]
::numFileNames == ::incs[::numFileNames-1]
::numFileNames == ::incs[::numFilesProcessed-1]
::numFileNames == ::incs[::exitValue]
::numFileNames == ::incs[::opMode-1]
::srcMode == size(::fileMetaInfo.__glibc_reserved[])
::srcMode == size(::zSuffix[])-1
::srcMode == size(::unzSuffix[])-1
size(::incs[])-1 == ::incs[::srcMode-1]
size(::zSuffix[]) == size(::unzSuffix[])
size(::zSuffix[]) == ::incs[::numFileNames]
size(::zSuffix[]) == ::incs[::numFilesProcessed]
size(::zSuffix[]) == ::incs[::opMode]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFileNames-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFilesProcessed-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::opMode-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFileNames-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFilesProcessed-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::opMode-1]
::incs has only one value
::incs[] == [1, 4, 13, 40, 121, 364, 1093, 3280, 9841, 29524, 88573, 265720, 797161, 2391484]
::incs[] elements >= 1
::incs[] sorted by <
::bzerrorstrings has only one value
::bzerrorstrings[] == [OK, SEQUENCE_ERROR, PARAM_ERROR, MEM_ERROR, DATA_ERROR, DATA_ERROR_MAGIC, IO_ERROR, UNEXPECTED_EOF, OUTBUFF_FULL, CONFIG_ERROR, ???, ???, ???, ???, ???, ???]
::fileMetaInfo has only one value
::fileMetaInfo != null
::fileMetaInfo.st_dev == 2049
::fileMetaInfo.st_ino == 936492
::fileMetaInfo.st_nlink == 1
::fileMetaInfo.st_mode == 33277
::fileMetaInfo.st_uid == 1000
::fileMetaInfo.st_rdev == 0
::fileMetaInfo.st_size == 5738700
::fileMetaInfo.st_blksize == 4096
::fileMetaInfo.st_blocks == 11216
::fileMetaInfo.st_atim has only one value
::fileMetaInfo.st_atim != null
::fileMetaInfo.st_atim.tv_sec == 1496096467
::fileMetaInfo.st_atim.tv_nsec == 709424920
::fileMetaInfo.st_mtim has only one value
::fileMetaInfo.st_mtim != null
::fileMetaInfo.st_mtim.tv_sec == 1483563943
::fileMetaInfo.st_mtim.tv_nsec == 421335644
::fileMetaInfo.st_ctim has only one value
::fileMetaInfo.st_ctim != null
::fileMetaInfo.__glibc_reserved has only one value
::fileMetaInfo.__glibc_reserved[] == [0, 0, 0]
::fileMetaInfo.__glibc_reserved[] elements == 0
::BZ2_rNums has only one value
::BZ2_rNums[] == [619, 720, 127, 481, 931, 816, 813, 233, 566, 247, 985, 724, 205, 454, 863, 491, 741, 242, 949, 214, 733, 859, 335, 708, 621, 574, 73, 654, 730, 472, 419, 436, 278, 496, 867, 210, 399, 680, 480, 51, 878, 465, 811, 169, 869, 675, 611, 697, 867, 561, 862, 687, 507, 283, 482, 129, 807, 591, 733, 623, 150, 238, 59, 379, 684, 877, 625, 169, 643, 105, 170, 607, 520, 932, 727, 476, 693, 425, 174, 647, 73, 122, 335, 530, 442, 853, 695, 249, 445, 515, 909, 545, 703, 919, 874, 474, 882, 500, 594, 612, 641, 801, 220, 162, 819, 984, 589, 513, 495, 799, 161, 604, 958, 533, 221, 400, 386, 867, 600, 782, 382, 596, 414, 171, 516, 375, 682, 485, 911, 276, 98, 553, 163, 354, 666, 933, 424, 341, 533, 870, 227, 730, 475, 186, 263, 647, 537, 686, 600, 224, 469, 68, 770, 919, 190, 373, 294, 822, 808, 206, 184, 943, 795, 384, 383, 461, 404, 758, 839, 887, 715, 67, 618, 276, 204, 918, 873, 777, 604, 560, 951, 160, 578, 722, 79, 804, 96, 409, 713, 940, 652, 934, 970, 447, 318, 353, 859, 672, 112, 785, 645, 863, 803, 350, 139, 93, 354, 99, 820, 908, 609, 772, 154, 274, 580, 184, 79, 626, 630, 742, 653, 282, 762, 623, 680, 81, 927, 626, 789, 125, 411, 521, 938, 300, 821, 78, 343, 175, 128, 250, 170, 774, 972, 275, 999, 639, 495, 78, 352, 126, 857, 956, 358, 619, 580, 124, 737, 594, 701, 612, 669, 112, 134, 694, 363, 992, 809, 743, 168, 974, 944, 375, 748, 52, 600, 747, 642, 182, 862, 81, 344, 805, 988, 739, 511, 655, 814, 334, 249, 515, 897, 955, 664, 981, 649, 113, 974, 459, 893, 228, 433, 837, 553, 268, 926, 240, 102, 654, 459, 51, 686, 754, 806, 760, 493, 403, 415, 394, 687, 700, 946, 670, 656, 610, 738, 392, 760, 799, 887, 653, 978, 321, 576, 617, 626, 502, 894, 679, 243, 440, 680, 879, 194, 572, 640, 724, 926, 56, 204, 700, 707, 151, 457, 449, 797, 195, 791, 558, 945, 679, 297, 59, 87, 824, 713, 663, 412, 693, 342, 606, 134, 108, 571, 364, 631, 212, 174, 643, 304, 329, 343, 97, 430, 751, 497, 314, 983, 374, 822, 928, 140, 206, 73, 263, 980, 736, 876, 478, 430, 305, 170, 514, 364, 692, 829, 82, 855, 953, 676, 246, 369, 970, 294, 750, 807, 827, 150, 790, 288, 923, 804, 378, 215, 828, 592, 281, 565, 555, 710, 82, 896, 831, 547, 261, 524, 462, 293, 465, 502, 56, 661, 821, 976, 991, 658, 869, 905, 758, 745, 193, 768, 550, 608, 933, 378, 286, 215, 979, 792, 961, 61, 688, 793, 644, 986, 403, 106, 366, 905, 644, 372, 567, 466, 434, 645, 210, 389, 550, 919, 135, 780, 773, 635, 389, 707, 100, 626, 958, 165, 504, 920, 176, 193, 713, 857, 265, 203, 50, 668, 108, 645, 990, 626, 197, 510, 357, 358, 850, 858, 364, 936, 638]
::BZ2_crc32Table has only one value
::BZ2_crc32Table[] == [0, 79764919, 159529838, 222504665, 319059676, 398814059, 445009330, 507990021, 638119352, 583659535, 797628118, 726387553, 890018660, 835552979, 1015980042, 944750013, 1276238704, 1221641927, 1167319070, 1095957929, 1595256236, 1540665371, 1452775106, 1381403509, 1780037320, 1859660671, 1671105958, 1733955601, 2031960084, 2111593891, 1889500026, 1952343757, 2552477408, 2632100695, 2443283854, 2506133561, 2334638140, 2414271883, 2191915858, 2254759653, 3190512472, 3135915759, 3081330742, 3009969537, 2905550212, 2850959411, 2762807018, 2691435357, 3560074640, 3505614887, 3719321342, 3648080713, 3342211916, 3287746299, 3467911202, 3396681109, 4063920168, 4143685023, 4223187782, 4286162673, 3779000052, 3858754371, 3904687514, 3967668269, 881225847, 809987520, 1023691545, 969234094, 662832811, 591600412, 771767749, 717299826, 311336399, 374308984, 453813921, 533576470, 25881363, 88864420, 134795389, 214552010, 2023205639, 2086057648, 1897238633, 1976864222, 1804852699, 1867694188, 1645340341, 1724971778, 1587496639, 1516133128, 1461550545, 1406951526, 1302016099, 1230646740, 1142491917, 1087903418, 2896545431, 2825181984, 2770861561, 2716262478, 3215044683, 3143675388, 3055782693, 3001194130, 2326604591, 2389456536, 2200899649, 2280525302, 2578013683, 2640855108, 2418763421, 2498394922, 3769900519, 3832873040, 3912640137, 3992402750, 4088425275, 4151408268, 4197601365, 4277358050, 3334271071, 3263032808, 3476998961, 3422541446, 3585640067, 3514407732, 3694837229, 3640369242, 1762451694, 1842216281, 1619975040, 1682949687, 2047383090, 2127137669, 1938468188, 2001449195, 1325665622, 1271206113, 1183200824, 1111960463, 1543535498, 1489069629, 1434599652, 1363369299, 622672798, 568075817, 748617968, 677256519, 907627842, 853037301, 1067152940, 995781531, 51762726, 131386257, 177728840, 240578815, 269590778, 349224269, 429104020, 491947555, 4046411278, 4126034873, 4172115296, 4234965207, 3794477266, 3874110821, 3953728444, 4016571915, 3609705398, 3555108353, 3735388376, 3664026991, 3290680682, 3236090077, 3449943556, 3378572211, 3174993278, 3120533705, 3032266256, 2961025959, 2923101090, 2868635157, 2813903052, 2742672763, 2604032198, 2683796849, 2461293480, 2524268063, 2284983834, 2364738477, 2175806836, 2238787779, 1569362073, 1498123566, 1409854455, 1355396672, 1317987909, 1246755826, 1192025387, 1137557660, 2072149281, 2135122070, 1912620623, 1992383480, 1753615357, 1816598090, 1627664531, 1707420964, 295390185, 358241886, 404320391, 483945776, 43990325, 106832002, 186451547, 266083308, 932423249, 861060070, 1041341759, 986742920, 613929101, 542559546, 756411363, 701822548, 3316196985, 3244833742, 3425377559, 3370778784, 3601682597, 3530312978, 3744426955, 3689838204, 3819031489, 3881883254, 3928223919, 4007849240, 4037393693, 4100235434, 4180117107, 4259748804, 2310601993, 2373574846, 2151335527, 2231098320, 2596047829, 2659030626, 2470359227, 2550115596, 2947551409, 2876312838, 2788305887, 2733848168, 3165939309, 3094707162, 3040238851, 2985771188]
::BZ2_crc32Table[] elements >= 0
::mammamia == 3216
::keepInputFiles == 1
::smallMode == 0
::numFileNames == 1
::blockSize100k == 9
::longestFileName == 20
::inName == "../inputs/in_big.txt"
::outName == "../inputs/in_big.txt.bz2"
::tmpName == ""
::progName == "zip-injected"
::progNameReally == "./zip-injected"
::outputHandleJustInCase has only one value
::outputHandleJustInCase != null
::workFactor == 30
::zSuffix has only one value
::zSuffix[] == [.bz2, .bz, .tbz2, .tbz]
::unzSuffix has only one value
::unzSuffix[] == [, , .tar, .tar]
::unzSuffix[] elements one of { "", ".tar" }
bzerror has only one value
bzerror != null
bzerror[] == [0]
bzerror[] elements == 0
b has only one value
b != null
buf has only one value
buf != null
len one of { 3700, 5000 }
size(::incs[]) == 14
size(::bzerrorstrings[]) == 16
size(::BZ2_rNums[]) == 512
size(::BZ2_crc32Table[]) == 256
size(::zSuffix[]) == 4
::incs[::blockSize100k] == 29524
::incs[::blockSize100k-1] == 9841
::incs[::srcMode] == 40
::BZ2_rNums[::verbosity] == 619
::BZ2_rNums[::numFileNames] == 720
::BZ2_rNums[::blockSize100k] == 247
::BZ2_rNums[::blockSize100k-1] == 566
::BZ2_rNums[::srcMode] == 481
::BZ2_rNums[::srcMode-1] == 127
::BZ2_rNums[::longestFileName] == 733
::BZ2_rNums[::longestFileName-1] == 214
::BZ2_rNums[::workFactor] == 419
::BZ2_rNums[::workFactor-1] == 472
::BZ2_crc32Table[::verbosity] == 0
::BZ2_crc32Table[::numFileNames] == 79764919
::BZ2_crc32Table[::blockSize100k] == 583659535
::BZ2_crc32Table[::blockSize100k-1] == 638119352
::BZ2_crc32Table[::srcMode] == 222504665
::BZ2_crc32Table[::srcMode-1] == 159529838
::BZ2_crc32Table[::longestFileName] == 1595256236
::BZ2_crc32Table[::longestFileName-1] == 1095957929
::BZ2_crc32Table[::workFactor] == 1889500026
::BZ2_crc32Table[::workFactor-1] == 2111593891
::incs[] elements < ::fileMetaInfo.st_size
::incs[] elements < ::fileMetaInfo.st_atim.tv_sec
::incs[] elements < ::fileMetaInfo.st_atim.tv_nsec
::incs[] elements < ::fileMetaInfo.st_mtim.tv_sec
::incs[] elements < ::fileMetaInfo.st_mtim.tv_nsec
::incs[] elements >= ::numFileNames
::BZ2_rNums[] elements < ::fileMetaInfo.st_size
::fileMetaInfo.st_size > len
::BZ2_rNums[] elements < ::fileMetaInfo.st_blksize
::fileMetaInfo.st_blksize != len
::BZ2_rNums[] elements < ::fileMetaInfo.st_blocks
::fileMetaInfo.st_blocks > len
::BZ2_rNums[] elements < ::fileMetaInfo.st_atim.tv_sec
::fileMetaInfo.st_atim.tv_sec > len
::BZ2_rNums[] elements < ::fileMetaInfo.st_atim.tv_nsec
::fileMetaInfo.st_atim.tv_nsec > len
::BZ2_rNums[] elements < ::fileMetaInfo.st_mtim.tv_sec
::fileMetaInfo.st_mtim.tv_sec > len
::BZ2_rNums[] elements < ::fileMetaInfo.st_mtim.tv_nsec
::fileMetaInfo.st_mtim.tv_nsec > len
::fileMetaInfo.__glibc_reserved[] elements == ::verbosity
::BZ2_rNums[] elements < ::mammamia
::BZ2_rNums[] elements > ::numFileNames
::BZ2_rNums[] elements > ::blockSize100k
::BZ2_rNums[] elements > ::longestFileName
::BZ2_rNums[] elements > ::workFactor
::BZ2_rNums[] elements < len
::BZ2_rNums[] elements > size(::incs[])
::BZ2_rNums[] elements > size(::bzerrorstrings[])
size(::BZ2_rNums[])-1 in ::BZ2_rNums[]
::BZ2_rNums[] elements > size(::zSuffix[])
::BZ2_rNums[] elements < ::incs[::blockSize100k]
::BZ2_rNums[] elements < ::incs[::blockSize100k-1]
::BZ2_rNums[] elements > ::incs[::srcMode]
::mammamia < len
bzerror[] elements == ::verbosity
::numFileNames < len
::blockSize100k < len
::longestFileName < len
::inName < ::outName
::inName > ::tmpName
::inName < ::progName
::inName < ::progNameReally
::outName > ::tmpName
::outName < ::progName
::outName < ::progNameReally
::tmpName < ::progName
::tmpName < ::progNameReally
::tmpName in ::unzSuffix[]
::progName > ::progNameReally
::workFactor < len
len > size(::incs[])
len > size(::bzerrorstrings[])
len > size(::BZ2_rNums[])
len > size(::BZ2_crc32Table[])
len > size(::zSuffix[])
len < ::incs[::blockSize100k]
len < ::incs[::blockSize100k-1]
len > ::incs[::srcMode]
len > ::BZ2_rNums[::verbosity]
len > ::BZ2_rNums[::numFileNames]
len > ::BZ2_rNums[::blockSize100k]
len > ::BZ2_rNums[::blockSize100k-1]
len > ::BZ2_rNums[::srcMode]
len > ::BZ2_rNums[::srcMode-1]
len > ::BZ2_rNums[::longestFileName]
len > ::BZ2_rNums[::longestFileName-1]
len > ::BZ2_rNums[::workFactor]
len > ::BZ2_rNums[::workFactor-1]
===========================================================================
..BZ2_bzWrite():::EXIT
::incs == orig(::incs)
::incs[] == orig(::incs[])
::bzerrorstrings == orig(::bzerrorstrings)
::fileMetaInfo == orig(::fileMetaInfo)
::fileMetaInfo.st_dev == orig(::fileMetaInfo.st_dev)
::fileMetaInfo.st_ino == orig(::fileMetaInfo.st_ino)
::fileMetaInfo.st_nlink == orig(::fileMetaInfo.st_nlink)
::fileMetaInfo.st_mode == orig(::fileMetaInfo.st_mode)
::fileMetaInfo.st_uid == ::fileMetaInfo.st_gid
::fileMetaInfo.st_uid == orig(::fileMetaInfo.st_uid)
::fileMetaInfo.st_uid == orig(::fileMetaInfo.st_gid)
::fileMetaInfo.__pad0 == ::verbosity
::fileMetaInfo.st_rdev == orig(::fileMetaInfo.st_rdev)
::fileMetaInfo.st_size == orig(::fileMetaInfo.st_size)
::fileMetaInfo.st_blksize == orig(::fileMetaInfo.st_blksize)
::fileMetaInfo.st_blocks == orig(::fileMetaInfo.st_blocks)
::fileMetaInfo.st_atim == orig(::fileMetaInfo.st_atim)
::fileMetaInfo.st_atim.tv_sec == orig(::fileMetaInfo.st_atim.tv_sec)
::fileMetaInfo.st_atim.tv_nsec == orig(::fileMetaInfo.st_atim.tv_nsec)
::fileMetaInfo.st_mtim == orig(::fileMetaInfo.st_mtim)
::fileMetaInfo.st_mtim.tv_sec == ::fileMetaInfo.st_ctim.tv_sec
::fileMetaInfo.st_mtim.tv_sec == orig(::fileMetaInfo.st_mtim.tv_sec)
::fileMetaInfo.st_mtim.tv_sec == orig(::fileMetaInfo.st_ctim.tv_sec)
::fileMetaInfo.st_mtim.tv_nsec == ::fileMetaInfo.st_ctim.tv_nsec
::fileMetaInfo.st_mtim.tv_nsec == orig(::fileMetaInfo.st_mtim.tv_nsec)
::fileMetaInfo.st_mtim.tv_nsec == orig(::fileMetaInfo.st_ctim.tv_nsec)
::fileMetaInfo.st_ctim == orig(::fileMetaInfo.st_ctim)
::fileMetaInfo.__glibc_reserved == orig(::fileMetaInfo.__glibc_reserved)
::fileMetaInfo.__glibc_reserved[] == orig(::fileMetaInfo.__glibc_reserved[])
::BZ2_rNums == orig(::BZ2_rNums)
::BZ2_rNums[] == orig(::BZ2_rNums[])
::BZ2_crc32Table == orig(::BZ2_crc32Table)
::BZ2_crc32Table[] == orig(::BZ2_crc32Table[])
::mammamia == orig(::mammamia)
::verbosity == ::exitValue
::verbosity == orig(::fileMetaInfo.__pad0)
::verbosity == orig(::verbosity)
::verbosity == orig(::exitValue)
::verbosity == size(bzerror[])-1
::verbosity == orig(size(bzerror[]))-1
::verbosity == ::fileMetaInfo.__glibc_reserved[::fileMetaInfo.__pad0]
::verbosity == bzerror[::fileMetaInfo.__pad0]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::fileMetaInfo.__pad0)])
::verbosity == orig(bzerror[post(::fileMetaInfo.__pad0)])
::verbosity == ::fileMetaInfo.__glibc_reserved[::verbosity]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::exitValue]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::srcMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::fileMetaInfo.__pad0)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::verbosity)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFileNames)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFileNames)-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFilesProcessed)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFilesProcessed)-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::exitValue)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::opMode)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::opMode)-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::srcMode)-1]
::verbosity == bzerror[::verbosity]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::verbosity)])
::verbosity == orig(bzerror[post(::verbosity)])
::verbosity == bzerror[::numFileNames-1]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFileNames)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFileNames)-1])
::verbosity == orig(bzerror[post(::numFileNames)-1])
::verbosity == bzerror[::numFilesProcessed-1]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFilesProcessed)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFilesProcessed)-1])
::verbosity == orig(bzerror[post(::numFilesProcessed)-1])
::verbosity == bzerror[::exitValue]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::exitValue)])
::verbosity == orig(bzerror[post(::exitValue)])
::verbosity == bzerror[::opMode-1]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::opMode)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::opMode)-1])
::verbosity == orig(bzerror[post(::opMode)-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::srcMode)-1])
::verbosity == bzerror[orig(::fileMetaInfo.__pad0)]
::verbosity == bzerror[orig(::verbosity)]
::verbosity == bzerror[orig(::numFileNames)-1]
::verbosity == bzerror[orig(::numFilesProcessed)-1]
::verbosity == bzerror[orig(::exitValue)]
::verbosity == bzerror[orig(::opMode)-1]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::fileMetaInfo.__pad0])
::verbosity == orig(bzerror[::fileMetaInfo.__pad0])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::verbosity])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFileNames])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFileNames-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFilesProcessed])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFilesProcessed-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::exitValue])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::opMode])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::opMode-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::srcMode-1])
::verbosity == orig(bzerror[::verbosity])
::verbosity == orig(bzerror[::numFileNames-1])
::verbosity == orig(bzerror[::numFilesProcessed-1])
::verbosity == orig(bzerror[::exitValue])
::verbosity == orig(bzerror[::opMode-1])
::keepInputFiles == ::deleteOutputOnInterrupt
::keepInputFiles == ::noisy
::keepInputFiles == orig(::keepInputFiles)
::keepInputFiles == orig(::deleteOutputOnInterrupt)
::keepInputFiles == orig(::noisy)
::smallMode == ::forceOverwrite
::smallMode == ::testFailsExist
::smallMode == ::unzFailsExist
::smallMode == orig(::smallMode)
::smallMode == orig(::forceOverwrite)
::smallMode == orig(::testFailsExist)
::smallMode == orig(::unzFailsExist)
::numFileNames == ::numFilesProcessed
::numFileNames == ::opMode
::numFileNames == orig(::numFileNames)
::numFileNames == orig(::numFilesProcessed)
::numFileNames == orig(::opMode)
::numFileNames == orig(size(bzerror[]))
::numFileNames == ::incs[::fileMetaInfo.__pad0]
::numFileNames == ::incs[::verbosity]
::numFileNames == ::incs[::numFileNames-1]
::numFileNames == ::incs[::numFilesProcessed-1]
::numFileNames == ::incs[::exitValue]
::numFileNames == ::incs[::opMode-1]
::numFileNames == ::incs[orig(::fileMetaInfo.__pad0)]
::numFileNames == ::incs[orig(::verbosity)]
::numFileNames == ::incs[orig(::numFileNames)-1]
::numFileNames == ::incs[orig(::numFilesProcessed)-1]
::numFileNames == ::incs[orig(::exitValue)]
::numFileNames == ::incs[orig(::opMode)-1]
::numFileNames == orig(::incs[post(::fileMetaInfo.__pad0)])
::numFileNames == orig(::incs[post(::verbosity)])
::numFileNames == orig(::incs[post(::numFileNames)-1])
::numFileNames == orig(::incs[post(::numFilesProcessed)-1])
::numFileNames == orig(::incs[post(::exitValue)])
::numFileNames == orig(::incs[post(::opMode)-1])
::numFileNames == orig(::incs[::fileMetaInfo.__pad0])
::numFileNames == orig(::incs[::verbosity])
::numFileNames == orig(::incs[::numFileNames-1])
::numFileNames == orig(::incs[::numFilesProcessed-1])
::numFileNames == orig(::incs[::exitValue])
::numFileNames == orig(::incs[::opMode-1])
::blockSize100k == orig(::blockSize100k)
::srcMode == orig(::srcMode)
::srcMode == size(::fileMetaInfo.__glibc_reserved[])
::srcMode == size(::zSuffix[])-1
::srcMode == size(::unzSuffix[])-1
::srcMode == orig(size(::fileMetaInfo.__glibc_reserved[]))
::srcMode == orig(size(::zSuffix[]))-1
::srcMode == orig(size(::unzSuffix[]))-1
::longestFileName == orig(::longestFileName)
::outputHandleJustInCase == orig(::outputHandleJustInCase)
::workFactor == orig(::workFactor)
::zSuffix == orig(::zSuffix)
::unzSuffix == orig(::unzSuffix)
bzerror[] == orig(bzerror[])
size(::incs[])-1 == ::incs[::srcMode-1]
size(::incs[])-1 == ::incs[orig(::srcMode)-1]
size(::incs[])-1 == orig(::incs[post(::srcMode)-1])
size(::incs[])-1 == orig(::incs[::srcMode-1])
size(::zSuffix[]) == size(::unzSuffix[])
size(::zSuffix[]) == orig(size(::unzSuffix[]))
size(::zSuffix[]) == ::incs[::numFileNames]
size(::zSuffix[]) == ::incs[::numFilesProcessed]
size(::zSuffix[]) == ::incs[::opMode]
size(::zSuffix[]) == ::incs[orig(::numFileNames)]
size(::zSuffix[]) == ::incs[orig(::numFilesProcessed)]
size(::zSuffix[]) == ::incs[orig(::opMode)]
size(::zSuffix[]) == orig(::incs[post(::numFileNames)])
size(::zSuffix[]) == orig(::incs[post(::numFilesProcessed)])
size(::zSuffix[]) == orig(::incs[post(::opMode)])
size(::zSuffix[]) == orig(::incs[::numFileNames])
size(::zSuffix[]) == orig(::incs[::numFilesProcessed])
size(::zSuffix[]) == orig(::incs[::opMode])
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFileNames-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFilesProcessed-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::opMode-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[orig(::numFileNames)-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[orig(::numFilesProcessed)-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[orig(::opMode)-1]
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[post(::numFileNames)-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[post(::numFilesProcessed)-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[post(::opMode)-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[::numFileNames-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[::numFilesProcessed-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[::opMode-1])
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFileNames-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFilesProcessed-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::opMode-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[orig(::numFileNames)-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[orig(::numFilesProcessed)-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[orig(::opMode)-1]
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[post(::numFileNames)-1])
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[post(::numFilesProcessed)-1])
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[post(::opMode)-1])
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[::numFileNames-1])
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[::numFilesProcessed-1])
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[::opMode-1])
::incs has only one value
::incs[] == [1, 4, 13, 40, 121, 364, 1093, 3280, 9841, 29524, 88573, 265720, 797161, 2391484]
::incs[] elements >= 1
::incs[] sorted by <
::bzerrorstrings has only one value
::bzerrorstrings[] == [OK, SEQUENCE_ERROR, PARAM_ERROR, MEM_ERROR, DATA_ERROR, DATA_ERROR_MAGIC, IO_ERROR, UNEXPECTED_EOF, OUTBUFF_FULL, CONFIG_ERROR, ???, ???, ???, ???, ???, ???]
::fileMetaInfo has only one value
::fileMetaInfo != null
::fileMetaInfo.st_dev == 2049
::fileMetaInfo.st_ino == 936492
::fileMetaInfo.st_nlink == 1
::fileMetaInfo.st_mode == 33277
::fileMetaInfo.st_uid == 1000
::fileMetaInfo.st_rdev == 0
::fileMetaInfo.st_size == 5738700
::fileMetaInfo.st_blksize == 4096
::fileMetaInfo.st_blocks == 11216
::fileMetaInfo.st_atim has only one value
::fileMetaInfo.st_atim != null
::fileMetaInfo.st_atim.tv_sec == 1496096467
::fileMetaInfo.st_atim.tv_nsec == 709424920
::fileMetaInfo.st_mtim has only one value
::fileMetaInfo.st_mtim != null
::fileMetaInfo.st_mtim.tv_sec == 1483563943
::fileMetaInfo.st_mtim.tv_nsec == 421335644
::fileMetaInfo.st_ctim has only one value
::fileMetaInfo.st_ctim != null
::fileMetaInfo.__glibc_reserved has only one value
::fileMetaInfo.__glibc_reserved[] == [0, 0, 0]
::fileMetaInfo.__glibc_reserved[] elements == 0
::BZ2_rNums has only one value
::BZ2_rNums[] == [619, 720, 127, 481, 931, 816, 813, 233, 566, 247, 985, 724, 205, 454, 863, 491, 741, 242, 949, 214, 733, 859, 335, 708, 621, 574, 73, 654, 730, 472, 419, 436, 278, 496, 867, 210, 399, 680, 480, 51, 878, 465, 811, 169, 869, 675, 611, 697, 867, 561, 862, 687, 507, 283, 482, 129, 807, 591, 733, 623, 150, 238, 59, 379, 684, 877, 625, 169, 643, 105, 170, 607, 520, 932, 727, 476, 693, 425, 174, 647, 73, 122, 335, 530, 442, 853, 695, 249, 445, 515, 909, 545, 703, 919, 874, 474, 882, 500, 594, 612, 641, 801, 220, 162, 819, 984, 589, 513, 495, 799, 161, 604, 958, 533, 221, 400, 386, 867, 600, 782, 382, 596, 414, 171, 516, 375, 682, 485, 911, 276, 98, 553, 163, 354, 666, 933, 424, 341, 533, 870, 227, 730, 475, 186, 263, 647, 537, 686, 600, 224, 469, 68, 770, 919, 190, 373, 294, 822, 808, 206, 184, 943, 795, 384, 383, 461, 404, 758, 839, 887, 715, 67, 618, 276, 204, 918, 873, 777, 604, 560, 951, 160, 578, 722, 79, 804, 96, 409, 713, 940, 652, 934, 970, 447, 318, 353, 859, 672, 112, 785, 645, 863, 803, 350, 139, 93, 354, 99, 820, 908, 609, 772, 154, 274, 580, 184, 79, 626, 630, 742, 653, 282, 762, 623, 680, 81, 927, 626, 789, 125, 411, 521, 938, 300, 821, 78, 343, 175, 128, 250, 170, 774, 972, 275, 999, 639, 495, 78, 352, 126, 857, 956, 358, 619, 580, 124, 737, 594, 701, 612, 669, 112, 134, 694, 363, 992, 809, 743, 168, 974, 944, 375, 748, 52, 600, 747, 642, 182, 862, 81, 344, 805, 988, 739, 511, 655, 814, 334, 249, 515, 897, 955, 664, 981, 649, 113, 974, 459, 893, 228, 433, 837, 553, 268, 926, 240, 102, 654, 459, 51, 686, 754, 806, 760, 493, 403, 415, 394, 687, 700, 946, 670, 656, 610, 738, 392, 760, 799, 887, 653, 978, 321, 576, 617, 626, 502, 894, 679, 243, 440, 680, 879, 194, 572, 640, 724, 926, 56, 204, 700, 707, 151, 457, 449, 797, 195, 791, 558, 945, 679, 297, 59, 87, 824, 713, 663, 412, 693, 342, 606, 134, 108, 571, 364, 631, 212, 174, 643, 304, 329, 343, 97, 430, 751, 497, 314, 983, 374, 822, 928, 140, 206, 73, 263, 980, 736, 876, 478, 430, 305, 170, 514, 364, 692, 829, 82, 855, 953, 676, 246, 369, 970, 294, 750, 807, 827, 150, 790, 288, 923, 804, 378, 215, 828, 592, 281, 565, 555, 710, 82, 896, 831, 547, 261, 524, 462, 293, 465, 502, 56, 661, 821, 976, 991, 658, 869, 905, 758, 745, 193, 768, 550, 608, 933, 378, 286, 215, 979, 792, 961, 61, 688, 793, 644, 986, 403, 106, 366, 905, 644, 372, 567, 466, 434, 645, 210, 389, 550, 919, 135, 780, 773, 635, 389, 707, 100, 626, 958, 165, 504, 920, 176, 193, 713, 857, 265, 203, 50, 668, 108, 645, 990, 626, 197, 510, 357, 358, 850, 858, 364, 936, 638]
::BZ2_crc32Table has only one value
::BZ2_crc32Table[] == [0, 79764919, 159529838, 222504665, 319059676, 398814059, 445009330, 507990021, 638119352, 583659535, 797628118, 726387553, 890018660, 835552979, 1015980042, 944750013, 1276238704, 1221641927, 1167319070, 1095957929, 1595256236, 1540665371, 1452775106, 1381403509, 1780037320, 1859660671, 1671105958, 1733955601, 2031960084, 2111593891, 1889500026, 1952343757, 2552477408, 2632100695, 2443283854, 2506133561, 2334638140, 2414271883, 2191915858, 2254759653, 3190512472, 3135915759, 3081330742, 3009969537, 2905550212, 2850959411, 2762807018, 2691435357, 3560074640, 3505614887, 3719321342, 3648080713, 3342211916, 3287746299, 3467911202, 3396681109, 4063920168, 4143685023, 4223187782, 4286162673, 3779000052, 3858754371, 3904687514, 3967668269, 881225847, 809987520, 1023691545, 969234094, 662832811, 591600412, 771767749, 717299826, 311336399, 374308984, 453813921, 533576470, 25881363, 88864420, 134795389, 214552010, 2023205639, 2086057648, 1897238633, 1976864222, 1804852699, 1867694188, 1645340341, 1724971778, 1587496639, 1516133128, 1461550545, 1406951526, 1302016099, 1230646740, 1142491917, 1087903418, 2896545431, 2825181984, 2770861561, 2716262478, 3215044683, 3143675388, 3055782693, 3001194130, 2326604591, 2389456536, 2200899649, 2280525302, 2578013683, 2640855108, 2418763421, 2498394922, 3769900519, 3832873040, 3912640137, 3992402750, 4088425275, 4151408268, 4197601365, 4277358050, 3334271071, 3263032808, 3476998961, 3422541446, 3585640067, 3514407732, 3694837229, 3640369242, 1762451694, 1842216281, 1619975040, 1682949687, 2047383090, 2127137669, 1938468188, 2001449195, 1325665622, 1271206113, 1183200824, 1111960463, 1543535498, 1489069629, 1434599652, 1363369299, 622672798, 568075817, 748617968, 677256519, 907627842, 853037301, 1067152940, 995781531, 51762726, 131386257, 177728840, 240578815, 269590778, 349224269, 429104020, 491947555, 4046411278, 4126034873, 4172115296, 4234965207, 3794477266, 3874110821, 3953728444, 4016571915, 3609705398, 3555108353, 3735388376, 3664026991, 3290680682, 3236090077, 3449943556, 3378572211, 3174993278, 3120533705, 3032266256, 2961025959, 2923101090, 2868635157, 2813903052, 2742672763, 2604032198, 2683796849, 2461293480, 2524268063, 2284983834, 2364738477, 2175806836, 2238787779, 1569362073, 1498123566, 1409854455, 1355396672, 1317987909, 1246755826, 1192025387, 1137557660, 2072149281, 2135122070, 1912620623, 1992383480, 1753615357, 1816598090, 1627664531, 1707420964, 295390185, 358241886, 404320391, 483945776, 43990325, 106832002, 186451547, 266083308, 932423249, 861060070, 1041341759, 986742920, 613929101, 542559546, 756411363, 701822548, 3316196985, 3244833742, 3425377559, 3370778784, 3601682597, 3530312978, 3744426955, 3689838204, 3819031489, 3881883254, 3928223919, 4007849240, 4037393693, 4100235434, 4180117107, 4259748804, 2310601993, 2373574846, 2151335527, 2231098320, 2596047829, 2659030626, 2470359227, 2550115596, 2947551409, 2876312838, 2788305887, 2733848168, 3165939309, 3094707162, 3040238851, 2985771188]
::BZ2_crc32Table[] elements >= 0
::mammamia == 3216
::keepInputFiles == 1
::smallMode == 0
::numFileNames == 1
::blockSize100k == 9
::longestFileName == 20
::inName == "../inputs/in_big.txt"
::outName == "../inputs/in_big.txt.bz2"
::tmpName == ""
::progName == "zip-injected"
::progNameReally == "./zip-injected"
::outputHandleJustInCase has only one value
::outputHandleJustInCase != null
::workFactor == 30
::zSuffix has only one value
::zSuffix[] == [.bz2, .bz, .tbz2, .tbz]
::unzSuffix has only one value
::unzSuffix[] == [, , .tar, .tar]
::unzSuffix[] elements one of { "", ".tar" }
bzerror[] == [0]
bzerror[] elements == 0
size(::incs[]) == 14
size(::bzerrorstrings[]) == 16
size(::BZ2_rNums[]) == 512
size(::BZ2_crc32Table[]) == 256
size(::zSuffix[]) == 4
::incs[::blockSize100k] == 29524
::incs[::blockSize100k-1] == 9841
::incs[::srcMode] == 40
::BZ2_rNums[::verbosity] == 619
::BZ2_rNums[::numFileNames] == 720
::BZ2_rNums[::blockSize100k] == 247
::BZ2_rNums[::blockSize100k-1] == 566
::BZ2_rNums[::srcMode] == 481
::BZ2_rNums[::srcMode-1] == 127
::BZ2_rNums[::longestFileName] == 733
::BZ2_rNums[::longestFileName-1] == 214
::BZ2_rNums[::workFactor] == 419
::BZ2_rNums[::workFactor-1] == 472
::BZ2_crc32Table[::verbosity] == 0
::BZ2_crc32Table[::numFileNames] == 79764919
::BZ2_crc32Table[::blockSize100k] == 583659535
::BZ2_crc32Table[::blockSize100k-1] == 638119352
::BZ2_crc32Table[::srcMode] == 222504665
::BZ2_crc32Table[::srcMode-1] == 159529838
::BZ2_crc32Table[::longestFileName] == 1595256236
::BZ2_crc32Table[::longestFileName-1] == 1095957929
::BZ2_crc32Table[::workFactor] == 1889500026
::BZ2_crc32Table[::workFactor-1] == 2111593891
::incs[] elements < ::fileMetaInfo.st_size
::incs[] elements < ::fileMetaInfo.st_atim.tv_sec
::incs[] elements < ::fileMetaInfo.st_atim.tv_nsec
::incs[] elements < ::fileMetaInfo.st_mtim.tv_sec
::incs[] elements < ::fileMetaInfo.st_mtim.tv_nsec
::incs[] elements >= ::numFileNames
::BZ2_rNums[] elements < ::fileMetaInfo.st_size
::fileMetaInfo.st_size > orig(len)
::BZ2_rNums[] elements < ::fileMetaInfo.st_blksize
::fileMetaInfo.st_blksize != orig(len)
::BZ2_rNums[] elements < ::fileMetaInfo.st_blocks
::fileMetaInfo.st_blocks > orig(len)
::BZ2_rNums[] elements < ::fileMetaInfo.st_atim.tv_sec
::fileMetaInfo.st_atim.tv_sec > orig(len)
::BZ2_rNums[] elements < ::fileMetaInfo.st_atim.tv_nsec
::fileMetaInfo.st_atim.tv_nsec > orig(len)
::BZ2_rNums[] elements < ::fileMetaInfo.st_mtim.tv_sec
::fileMetaInfo.st_mtim.tv_sec > orig(len)
::BZ2_rNums[] elements < ::fileMetaInfo.st_mtim.tv_nsec
::fileMetaInfo.st_mtim.tv_nsec > orig(len)
::fileMetaInfo.__glibc_reserved[] elements == ::verbosity
::BZ2_rNums[] elements < ::mammamia
::BZ2_rNums[] elements > ::numFileNames
::BZ2_rNums[] elements > ::blockSize100k
::BZ2_rNums[] elements > ::longestFileName
::BZ2_rNums[] elements > ::workFactor
::BZ2_rNums[] elements < orig(len)
::BZ2_rNums[] elements > size(::incs[])
::BZ2_rNums[] elements > size(::bzerrorstrings[])
size(::BZ2_rNums[])-1 in ::BZ2_rNums[]
::BZ2_rNums[] elements > size(::zSuffix[])
::BZ2_rNums[] elements < ::incs[::blockSize100k]
::BZ2_rNums[] elements < ::incs[::blockSize100k-1]
::BZ2_rNums[] elements > ::incs[::srcMode]
::mammamia < orig(len)
bzerror[] elements == ::verbosity
::numFileNames < orig(len)
::blockSize100k < orig(len)
::longestFileName < orig(len)
::inName < ::outName
::inName > ::tmpName
::inName < ::progName
::inName < ::progNameReally
::inName == orig(::inName)
::outName > ::tmpName
::outName < ::progName
::outName < ::progNameReally
::outName == orig(::outName)
::tmpName < ::progName
::tmpName < ::progNameReally
::tmpName in ::unzSuffix[]
::tmpName == orig(::tmpName)
::progName > ::progNameReally
::progName == orig(::progName)
::progNameReally == orig(::progNameReally)
::workFactor < orig(len)
orig(len) > size(::incs[])
orig(len) > size(::bzerrorstrings[])
orig(len) > size(::BZ2_rNums[])
orig(len) > size(::BZ2_crc32Table[])
orig(len) > size(::zSuffix[])
orig(len) < ::incs[::blockSize100k]
orig(len) < ::incs[::blockSize100k-1]
orig(len) > ::incs[::srcMode]
orig(len) > ::BZ2_rNums[::verbosity]
orig(len) > ::BZ2_rNums[::numFileNames]
orig(len) > ::BZ2_rNums[::blockSize100k]
orig(len) > ::BZ2_rNums[::blockSize100k-1]
orig(len) > ::BZ2_rNums[::srcMode]
orig(len) > ::BZ2_rNums[::srcMode-1]
orig(len) > ::BZ2_rNums[::longestFileName]
orig(len) > ::BZ2_rNums[::longestFileName-1]
orig(len) > ::BZ2_rNums[::workFactor]
orig(len) > ::BZ2_rNums[::workFactor-1]
===========================================================================
..BZ2_bzWriteClose64():::ENTER
::fileMetaInfo.st_uid == ::fileMetaInfo.st_gid
::fileMetaInfo.__pad0 == ::verbosity
::fileMetaInfo.st_mtim.tv_sec == ::fileMetaInfo.st_ctim.tv_sec
::fileMetaInfo.st_mtim.tv_nsec == ::fileMetaInfo.st_ctim.tv_nsec
::verbosity == ::exitValue
::verbosity == abandon
::verbosity == size(bzerror[])-1
::verbosity == ::fileMetaInfo.__glibc_reserved[::fileMetaInfo.__pad0]
::verbosity == bzerror[::fileMetaInfo.__pad0]
::verbosity == ::fileMetaInfo.__glibc_reserved[::verbosity]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::exitValue]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::srcMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[abandon]
::verbosity == bzerror[::verbosity]
::verbosity == bzerror[::numFileNames-1]
::verbosity == bzerror[::numFilesProcessed-1]
::verbosity == bzerror[::exitValue]
::verbosity == bzerror[::opMode-1]
::verbosity == bzerror[abandon]
::keepInputFiles == ::deleteOutputOnInterrupt
::keepInputFiles == ::noisy
::smallMode == ::forceOverwrite
::smallMode == ::testFailsExist
::smallMode == ::unzFailsExist
::numFileNames == ::numFilesProcessed
::numFileNames == ::opMode
::numFileNames == size(bzerror[])
::numFileNames == ::incs[::fileMetaInfo.__pad0]
::numFileNames == ::incs[::verbosity]
::numFileNames == ::incs[::numFileNames-1]
::numFileNames == ::incs[::numFilesProcessed-1]
::numFileNames == ::incs[::exitValue]
::numFileNames == ::incs[::opMode-1]
::numFileNames == ::incs[abandon]
::srcMode == size(::fileMetaInfo.__glibc_reserved[])
::srcMode == size(::zSuffix[])-1
::srcMode == size(::unzSuffix[])-1
size(::incs[])-1 == ::incs[::srcMode-1]
size(::zSuffix[]) == size(::unzSuffix[])
size(::zSuffix[]) == ::incs[::numFileNames]
size(::zSuffix[]) == ::incs[::numFilesProcessed]
size(::zSuffix[]) == ::incs[::opMode]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFileNames-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFilesProcessed-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::opMode-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFileNames-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFilesProcessed-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::opMode-1]
::incs has only one value
::incs[] == [1, 4, 13, 40, 121, 364, 1093, 3280, 9841, 29524, 88573, 265720, 797161, 2391484]
::bzerrorstrings has only one value
::bzerrorstrings[] == [OK, SEQUENCE_ERROR, PARAM_ERROR, MEM_ERROR, DATA_ERROR, DATA_ERROR_MAGIC, IO_ERROR, UNEXPECTED_EOF, OUTBUFF_FULL, CONFIG_ERROR, ???, ???, ???, ???, ???, ???]
::fileMetaInfo has only one value
::fileMetaInfo.st_dev == 2049
::fileMetaInfo.st_ino == 936492
::fileMetaInfo.st_nlink == 1
::fileMetaInfo.st_mode == 33277
::fileMetaInfo.st_uid == 1000
::fileMetaInfo.st_rdev == 0
::fileMetaInfo.st_size == 5738700
::fileMetaInfo.st_blksize == 4096
::fileMetaInfo.st_blocks == 11216
::fileMetaInfo.st_atim has only one value
::fileMetaInfo.st_atim.tv_sec == 1496096467
::fileMetaInfo.st_atim.tv_nsec == 709424920
::fileMetaInfo.st_mtim has only one value
::fileMetaInfo.st_mtim.tv_sec == 1483563943
::fileMetaInfo.st_mtim.tv_nsec == 421335644
::fileMetaInfo.st_ctim has only one value
::fileMetaInfo.__glibc_reserved has only one value
::fileMetaInfo.__glibc_reserved[] == [0, 0, 0]
::fileMetaInfo.__glibc_reserved[] elements == 0
::BZ2_rNums has only one value
::BZ2_rNums[] == [619, 720, 127, 481, 931, 816, 813, 233, 566, 247, 985, 724, 205, 454, 863, 491, 741, 242, 949, 214, 733, 859, 335, 708, 621, 574, 73, 654, 730, 472, 419, 436, 278, 496, 867, 210, 399, 680, 480, 51, 878, 465, 811, 169, 869, 675, 611, 697, 867, 561, 862, 687, 507, 283, 482, 129, 807, 591, 733, 623, 150, 238, 59, 379, 684, 877, 625, 169, 643, 105, 170, 607, 520, 932, 727, 476, 693, 425, 174, 647, 73, 122, 335, 530, 442, 853, 695, 249, 445, 515, 909, 545, 703, 919, 874, 474, 882, 500, 594, 612, 641, 801, 220, 162, 819, 984, 589, 513, 495, 799, 161, 604, 958, 533, 221, 400, 386, 867, 600, 782, 382, 596, 414, 171, 516, 375, 682, 485, 911, 276, 98, 553, 163, 354, 666, 933, 424, 341, 533, 870, 227, 730, 475, 186, 263, 647, 537, 686, 600, 224, 469, 68, 770, 919, 190, 373, 294, 822, 808, 206, 184, 943, 795, 384, 383, 461, 404, 758, 839, 887, 715, 67, 618, 276, 204, 918, 873, 777, 604, 560, 951, 160, 578, 722, 79, 804, 96, 409, 713, 940, 652, 934, 970, 447, 318, 353, 859, 672, 112, 785, 645, 863, 803, 350, 139, 93, 354, 99, 820, 908, 609, 772, 154, 274, 580, 184, 79, 626, 630, 742, 653, 282, 762, 623, 680, 81, 927, 626, 789, 125, 411, 521, 938, 300, 821, 78, 343, 175, 128, 250, 170, 774, 972, 275, 999, 639, 495, 78, 352, 126, 857, 956, 358, 619, 580, 124, 737, 594, 701, 612, 669, 112, 134, 694, 363, 992, 809, 743, 168, 974, 944, 375, 748, 52, 600, 747, 642, 182, 862, 81, 344, 805, 988, 739, 511, 655, 814, 334, 249, 515, 897, 955, 664, 981, 649, 113, 974, 459, 893, 228, 433, 837, 553, 268, 926, 240, 102, 654, 459, 51, 686, 754, 806, 760, 493, 403, 415, 394, 687, 700, 946, 670, 656, 610, 738, 392, 760, 799, 887, 653, 978, 321, 576, 617, 626, 502, 894, 679, 243, 440, 680, 879, 194, 572, 640, 724, 926, 56, 204, 700, 707, 151, 457, 449, 797, 195, 791, 558, 945, 679, 297, 59, 87, 824, 713, 663, 412, 693, 342, 606, 134, 108, 571, 364, 631, 212, 174, 643, 304, 329, 343, 97, 430, 751, 497, 314, 983, 374, 822, 928, 140, 206, 73, 263, 980, 736, 876, 478, 430, 305, 170, 514, 364, 692, 829, 82, 855, 953, 676, 246, 369, 970, 294, 750, 807, 827, 150, 790, 288, 923, 804, 378, 215, 828, 592, 281, 565, 555, 710, 82, 896, 831, 547, 261, 524, 462, 293, 465, 502, 56, 661, 821, 976, 991, 658, 869, 905, 758, 745, 193, 768, 550, 608, 933, 378, 286, 215, 979, 792, 961, 61, 688, 793, 644, 986, 403, 106, 366, 905, 644, 372, 567, 466, 434, 645, 210, 389, 550, 919, 135, 780, 773, 635, 389, 707, 100, 626, 958, 165, 504, 920, 176, 193, 713, 857, 265, 203, 50, 668, 108, 645, 990, 626, 197, 510, 357, 358, 850, 858, 364, 936, 638]
::BZ2_crc32Table has only one value
::BZ2_crc32Table[] == [0, 79764919, 159529838, 222504665, 319059676, 398814059, 445009330, 507990021, 638119352, 583659535, 797628118, 726387553, 890018660, 835552979, 1015980042, 944750013, 1276238704, 1221641927, 1167319070, 1095957929, 1595256236, 1540665371, 1452775106, 1381403509, 1780037320, 1859660671, 1671105958, 1733955601, 2031960084, 2111593891, 1889500026, 1952343757, 2552477408, 2632100695, 2443283854, 2506133561, 2334638140, 2414271883, 2191915858, 2254759653, 3190512472, 3135915759, 3081330742, 3009969537, 2905550212, 2850959411, 2762807018, 2691435357, 3560074640, 3505614887, 3719321342, 3648080713, 3342211916, 3287746299, 3467911202, 3396681109, 4063920168, 4143685023, 4223187782, 4286162673, 3779000052, 3858754371, 3904687514, 3967668269, 881225847, 809987520, 1023691545, 969234094, 662832811, 591600412, 771767749, 717299826, 311336399, 374308984, 453813921, 533576470, 25881363, 88864420, 134795389, 214552010, 2023205639, 2086057648, 1897238633, 1976864222, 1804852699, 1867694188, 1645340341, 1724971778, 1587496639, 1516133128, 1461550545, 1406951526, 1302016099, 1230646740, 1142491917, 1087903418, 2896545431, 2825181984, 2770861561, 2716262478, 3215044683, 3143675388, 3055782693, 3001194130, 2326604591, 2389456536, 2200899649, 2280525302, 2578013683, 2640855108, 2418763421, 2498394922, 3769900519, 3832873040, 3912640137, 3992402750, 4088425275, 4151408268, 4197601365, 4277358050, 3334271071, 3263032808, 3476998961, 3422541446, 3585640067, 3514407732, 3694837229, 3640369242, 1762451694, 1842216281, 1619975040, 1682949687, 2047383090, 2127137669, 1938468188, 2001449195, 1325665622, 1271206113, 1183200824, 1111960463, 1543535498, 1489069629, 1434599652, 1363369299, 622672798, 568075817, 748617968, 677256519, 907627842, 853037301, 1067152940, 995781531, 51762726, 131386257, 177728840, 240578815, 269590778, 349224269, 429104020, 491947555, 4046411278, 4126034873, 4172115296, 4234965207, 3794477266, 3874110821, 3953728444, 4016571915, 3609705398, 3555108353, 3735388376, 3664026991, 3290680682, 3236090077, 3449943556, 3378572211, 3174993278, 3120533705, 3032266256, 2961025959, 2923101090, 2868635157, 2813903052, 2742672763, 2604032198, 2683796849, 2461293480, 2524268063, 2284983834, 2364738477, 2175806836, 2238787779, 1569362073, 1498123566, 1409854455, 1355396672, 1317987909, 1246755826, 1192025387, 1137557660, 2072149281, 2135122070, 1912620623, 1992383480, 1753615357, 1816598090, 1627664531, 1707420964, 295390185, 358241886, 404320391, 483945776, 43990325, 106832002, 186451547, 266083308, 932423249, 861060070, 1041341759, 986742920, 613929101, 542559546, 756411363, 701822548, 3316196985, 3244833742, 3425377559, 3370778784, 3601682597, 3530312978, 3744426955, 3689838204, 3819031489, 3881883254, 3928223919, 4007849240, 4037393693, 4100235434, 4180117107, 4259748804, 2310601993, 2373574846, 2151335527, 2231098320, 2596047829, 2659030626, 2470359227, 2550115596, 2947551409, 2876312838, 2788305887, 2733848168, 3165939309, 3094707162, 3040238851, 2985771188]
::mammamia == 3216
::keepInputFiles == 1
::smallMode == 0
::numFileNames == 1
::blockSize100k == 9
::longestFileName == 20
::inName == "../inputs/in_big.txt"
::outName == "../inputs/in_big.txt.bz2"
::tmpName == ""
::progName == "zip-injected"
::progNameReally == "./zip-injected"
::outputHandleJustInCase has only one value
::workFactor == 30
::zSuffix has only one value
::zSuffix[] == [.bz2, .bz, .tbz2, .tbz]
::unzSuffix has only one value
::unzSuffix[] == [, , .tar, .tar]
::unzSuffix[] elements one of { "", ".tar" }
bzerror has only one value
bzerror[] == [0]
bzerror[] elements == 0
b has only one value
nbytes_in_lo32 has only one value
nbytes_in_hi32 has only one value
nbytes_out_lo32 has only one value
nbytes_out_hi32 has only one value
size(::incs[]) == 14
size(::bzerrorstrings[]) == 16
size(::BZ2_rNums[]) == 512
size(::BZ2_crc32Table[]) == 256
size(::zSuffix[]) == 4
::incs[::blockSize100k] == 29524
::incs[::blockSize100k-1] == 9841
::incs[::srcMode] == 40
::BZ2_rNums[::verbosity] == 619
::BZ2_rNums[::numFileNames] == 720
::BZ2_rNums[::blockSize100k] == 247
::BZ2_rNums[::blockSize100k-1] == 566
::BZ2_rNums[::srcMode] == 481
::BZ2_rNums[::srcMode-1] == 127
::BZ2_rNums[::longestFileName] == 733
::BZ2_rNums[::longestFileName-1] == 214
::BZ2_rNums[::workFactor] == 419
::BZ2_rNums[::workFactor-1] == 472
::BZ2_crc32Table[::verbosity] == 0
::BZ2_crc32Table[::numFileNames] == 79764919
::BZ2_crc32Table[::blockSize100k] == 583659535
::BZ2_crc32Table[::blockSize100k-1] == 638119352
::BZ2_crc32Table[::srcMode] == 222504665
::BZ2_crc32Table[::srcMode-1] == 159529838
::BZ2_crc32Table[::longestFileName] == 1595256236
::BZ2_crc32Table[::longestFileName-1] == 1095957929
::BZ2_crc32Table[::workFactor] == 1889500026
::BZ2_crc32Table[::workFactor-1] == 2111593891
::fileMetaInfo.__glibc_reserved[] elements == ::verbosity
size(::BZ2_rNums[])-1 in ::BZ2_rNums[]
bzerror[] elements == ::verbosity
::tmpName in ::unzSuffix[]
===========================================================================
..BZ2_bzWriteClose64():::EXIT
::incs == orig(::incs)
::incs[] == orig(::incs[])
::bzerrorstrings == orig(::bzerrorstrings)
::fileMetaInfo == orig(::fileMetaInfo)
::fileMetaInfo.st_dev == orig(::fileMetaInfo.st_dev)
::fileMetaInfo.st_ino == orig(::fileMetaInfo.st_ino)
::fileMetaInfo.st_nlink == orig(::fileMetaInfo.st_nlink)
::fileMetaInfo.st_mode == orig(::fileMetaInfo.st_mode)
::fileMetaInfo.st_uid == ::fileMetaInfo.st_gid
::fileMetaInfo.st_uid == orig(::fileMetaInfo.st_uid)
::fileMetaInfo.st_uid == orig(::fileMetaInfo.st_gid)
::fileMetaInfo.__pad0 == ::verbosity
::fileMetaInfo.st_rdev == orig(::fileMetaInfo.st_rdev)
::fileMetaInfo.st_size == orig(::fileMetaInfo.st_size)
::fileMetaInfo.st_blksize == orig(::fileMetaInfo.st_blksize)
::fileMetaInfo.st_blocks == orig(::fileMetaInfo.st_blocks)
::fileMetaInfo.st_atim == orig(::fileMetaInfo.st_atim)
::fileMetaInfo.st_atim.tv_sec == orig(::fileMetaInfo.st_atim.tv_sec)
::fileMetaInfo.st_atim.tv_nsec == orig(::fileMetaInfo.st_atim.tv_nsec)
::fileMetaInfo.st_mtim == orig(::fileMetaInfo.st_mtim)
::fileMetaInfo.st_mtim.tv_sec == ::fileMetaInfo.st_ctim.tv_sec
::fileMetaInfo.st_mtim.tv_sec == orig(::fileMetaInfo.st_mtim.tv_sec)
::fileMetaInfo.st_mtim.tv_sec == orig(::fileMetaInfo.st_ctim.tv_sec)
::fileMetaInfo.st_mtim.tv_nsec == ::fileMetaInfo.st_ctim.tv_nsec
::fileMetaInfo.st_mtim.tv_nsec == orig(::fileMetaInfo.st_mtim.tv_nsec)
::fileMetaInfo.st_mtim.tv_nsec == orig(::fileMetaInfo.st_ctim.tv_nsec)
::fileMetaInfo.st_ctim == orig(::fileMetaInfo.st_ctim)
::fileMetaInfo.__glibc_reserved == orig(::fileMetaInfo.__glibc_reserved)
::fileMetaInfo.__glibc_reserved[] == orig(::fileMetaInfo.__glibc_reserved[])
::BZ2_rNums == orig(::BZ2_rNums)
::BZ2_rNums[] == orig(::BZ2_rNums[])
::BZ2_crc32Table == orig(::BZ2_crc32Table)
::BZ2_crc32Table[] == orig(::BZ2_crc32Table[])
::mammamia == orig(::mammamia)
::verbosity == ::exitValue
::verbosity == orig(::fileMetaInfo.__pad0)
::verbosity == orig(::verbosity)
::verbosity == orig(::exitValue)
::verbosity == orig(abandon)
::verbosity == size(bzerror[])-1
::verbosity == size(nbytes_in_lo32[])-1
::verbosity == size(nbytes_in_hi32[])-1
::verbosity == size(nbytes_out_lo32[])-1
::verbosity == size(nbytes_out_hi32[])-1
::verbosity == orig(size(bzerror[]))-1
::verbosity == ::fileMetaInfo.__glibc_reserved[::fileMetaInfo.__pad0]
::verbosity == bzerror[::fileMetaInfo.__pad0]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::fileMetaInfo.__pad0)])
::verbosity == orig(bzerror[post(::fileMetaInfo.__pad0)])
::verbosity == ::fileMetaInfo.__glibc_reserved[::verbosity]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::exitValue]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::srcMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::fileMetaInfo.__pad0)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::verbosity)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFileNames)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFileNames)-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFilesProcessed)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFilesProcessed)-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::exitValue)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::opMode)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::opMode)-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::srcMode)-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(abandon)]
::verbosity == bzerror[::verbosity]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::verbosity)])
::verbosity == orig(bzerror[post(::verbosity)])
::verbosity == bzerror[::numFileNames-1]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFileNames)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFileNames)-1])
::verbosity == orig(bzerror[post(::numFileNames)-1])
::verbosity == bzerror[::numFilesProcessed-1]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFilesProcessed)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFilesProcessed)-1])
::verbosity == orig(bzerror[post(::numFilesProcessed)-1])
::verbosity == bzerror[::exitValue]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::exitValue)])
::verbosity == orig(bzerror[post(::exitValue)])
::verbosity == bzerror[::opMode-1]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::opMode)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::opMode)-1])
::verbosity == orig(bzerror[post(::opMode)-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::srcMode)-1])
::verbosity == bzerror[orig(::fileMetaInfo.__pad0)]
::verbosity == bzerror[orig(::verbosity)]
::verbosity == bzerror[orig(::numFileNames)-1]
::verbosity == bzerror[orig(::numFilesProcessed)-1]
::verbosity == bzerror[orig(::exitValue)]
::verbosity == bzerror[orig(::opMode)-1]
::verbosity == bzerror[orig(abandon)]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(abandon)])
::verbosity == orig(bzerror[post(abandon)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::fileMetaInfo.__pad0])
::verbosity == orig(bzerror[::fileMetaInfo.__pad0])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::verbosity])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFileNames])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFileNames-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFilesProcessed])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFilesProcessed-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::exitValue])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::opMode])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::opMode-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::srcMode-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[abandon])
::verbosity == orig(bzerror[::verbosity])
::verbosity == orig(bzerror[::numFileNames-1])
::verbosity == orig(bzerror[::numFilesProcessed-1])
::verbosity == orig(bzerror[::exitValue])
::verbosity == orig(bzerror[::opMode-1])
::verbosity == orig(bzerror[abandon])
::keepInputFiles == ::deleteOutputOnInterrupt
::keepInputFiles == ::noisy
::keepInputFiles == orig(::keepInputFiles)
::keepInputFiles == orig(::deleteOutputOnInterrupt)
::keepInputFiles == orig(::noisy)
::smallMode == ::forceOverwrite
::smallMode == ::testFailsExist
::smallMode == ::unzFailsExist
::smallMode == orig(::smallMode)
::smallMode == orig(::forceOverwrite)
::smallMode == orig(::testFailsExist)
::smallMode == orig(::unzFailsExist)
::numFileNames == ::numFilesProcessed
::numFileNames == ::opMode
::numFileNames == orig(::numFileNames)
::numFileNames == orig(::numFilesProcessed)
::numFileNames == orig(::opMode)
::numFileNames == orig(size(bzerror[]))
::numFileNames == ::incs[::fileMetaInfo.__pad0]
::numFileNames == ::incs[::verbosity]
::numFileNames == ::incs[::numFileNames-1]
::numFileNames == ::incs[::numFilesProcessed-1]
::numFileNames == ::incs[::exitValue]
::numFileNames == ::incs[::opMode-1]
::numFileNames == ::incs[orig(::fileMetaInfo.__pad0)]
::numFileNames == ::incs[orig(::verbosity)]
::numFileNames == ::incs[orig(::numFileNames)-1]
::numFileNames == ::incs[orig(::numFilesProcessed)-1]
::numFileNames == ::incs[orig(::exitValue)]
::numFileNames == ::incs[orig(::opMode)-1]
::numFileNames == ::incs[orig(abandon)]
::numFileNames == orig(::incs[post(::fileMetaInfo.__pad0)])
::numFileNames == orig(::incs[post(::verbosity)])
::numFileNames == orig(::incs[post(::numFileNames)-1])
::numFileNames == orig(::incs[post(::numFilesProcessed)-1])
::numFileNames == orig(::incs[post(::exitValue)])
::numFileNames == orig(::incs[post(::opMode)-1])
::numFileNames == orig(::incs[post(abandon)])
::numFileNames == orig(::incs[::fileMetaInfo.__pad0])
::numFileNames == orig(::incs[::verbosity])
::numFileNames == orig(::incs[::numFileNames-1])
::numFileNames == orig(::incs[::numFilesProcessed-1])
::numFileNames == orig(::incs[::exitValue])
::numFileNames == orig(::incs[::opMode-1])
::numFileNames == orig(::incs[abandon])
::blockSize100k == orig(::blockSize100k)
::srcMode == orig(::srcMode)
::srcMode == size(::fileMetaInfo.__glibc_reserved[])
::srcMode == size(::zSuffix[])-1
::srcMode == size(::unzSuffix[])-1
::srcMode == orig(size(::fileMetaInfo.__glibc_reserved[]))
::srcMode == orig(size(::zSuffix[]))-1
::srcMode == orig(size(::unzSuffix[]))-1
::longestFileName == orig(::longestFileName)
::outputHandleJustInCase == orig(::outputHandleJustInCase)
::workFactor == orig(::workFactor)
::zSuffix == orig(::zSuffix)
::unzSuffix == orig(::unzSuffix)
bzerror[] == orig(bzerror[])
nbytes_in_hi32[] == nbytes_out_hi32[]
size(::incs[])-1 == ::incs[::srcMode-1]
size(::incs[])-1 == ::incs[orig(::srcMode)-1]
size(::incs[])-1 == orig(::incs[post(::srcMode)-1])
size(::incs[])-1 == orig(::incs[::srcMode-1])
size(::zSuffix[]) == size(::unzSuffix[])
size(::zSuffix[]) == orig(size(::unzSuffix[]))
size(::zSuffix[]) == ::incs[::numFileNames]
size(::zSuffix[]) == ::incs[::numFilesProcessed]
size(::zSuffix[]) == ::incs[::opMode]
size(::zSuffix[]) == ::incs[orig(::numFileNames)]
size(::zSuffix[]) == ::incs[orig(::numFilesProcessed)]
size(::zSuffix[]) == ::incs[orig(::opMode)]
size(::zSuffix[]) == orig(::incs[post(::numFileNames)])
size(::zSuffix[]) == orig(::incs[post(::numFilesProcessed)])
size(::zSuffix[]) == orig(::incs[post(::opMode)])
size(::zSuffix[]) == orig(::incs[::numFileNames])
size(::zSuffix[]) == orig(::incs[::numFilesProcessed])
size(::zSuffix[]) == orig(::incs[::opMode])
nbytes_in_hi32[::fileMetaInfo.__pad0] == ::BZ2_crc32Table[::verbosity]
nbytes_out_hi32[::fileMetaInfo.__pad0] == ::BZ2_crc32Table[::verbosity]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFileNames-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFilesProcessed-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::opMode-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[orig(::numFileNames)-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[orig(::numFilesProcessed)-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[orig(::opMode)-1]
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[post(::numFileNames)-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[post(::numFilesProcessed)-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[post(::opMode)-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[::numFileNames-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[::numFilesProcessed-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[::opMode-1])
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFileNames-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFilesProcessed-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::opMode-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[orig(::numFileNames)-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[orig(::numFilesProcessed)-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[orig(::opMode)-1]
::BZ2_crc32Table[::verbosity] == nbytes_in_hi32[::verbosity]
::BZ2_crc32Table[::verbosity] == nbytes_out_hi32[::verbosity]
::BZ2_crc32Table[::verbosity] == nbytes_in_hi32[::numFileNames-1]
::BZ2_crc32Table[::verbosity] == nbytes_out_hi32[::numFileNames-1]
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[post(::numFileNames)-1])
::BZ2_crc32Table[::verbosity] == nbytes_in_hi32[::numFilesProcessed-1]
::BZ2_crc32Table[::verbosity] == nbytes_out_hi32[::numFilesProcessed-1]
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[post(::numFilesProcessed)-1])
::BZ2_crc32Table[::verbosity] == nbytes_in_hi32[::exitValue]
::BZ2_crc32Table[::verbosity] == nbytes_out_hi32[::exitValue]
::BZ2_crc32Table[::verbosity] == nbytes_in_hi32[::opMode-1]
::BZ2_crc32Table[::verbosity] == nbytes_out_hi32[::opMode-1]
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[post(::opMode)-1])
::BZ2_crc32Table[::verbosity] == nbytes_in_hi32[orig(::fileMetaInfo.__pad0)]
::BZ2_crc32Table[::verbosity] == nbytes_in_hi32[orig(::verbosity)]
::BZ2_crc32Table[::verbosity] == nbytes_in_hi32[orig(::numFileNames)-1]
::BZ2_crc32Table[::verbosity] == nbytes_in_hi32[orig(::numFilesProcessed)-1]
::BZ2_crc32Table[::verbosity] == nbytes_in_hi32[orig(::exitValue)]
::BZ2_crc32Table[::verbosity] == nbytes_in_hi32[orig(::opMode)-1]
::BZ2_crc32Table[::verbosity] == nbytes_in_hi32[orig(abandon)]
::BZ2_crc32Table[::verbosity] == nbytes_out_hi32[orig(::fileMetaInfo.__pad0)]
::BZ2_crc32Table[::verbosity] == nbytes_out_hi32[orig(::verbosity)]
::BZ2_crc32Table[::verbosity] == nbytes_out_hi32[orig(::numFileNames)-1]
::BZ2_crc32Table[::verbosity] == nbytes_out_hi32[orig(::numFilesProcessed)-1]
::BZ2_crc32Table[::verbosity] == nbytes_out_hi32[orig(::exitValue)]
::BZ2_crc32Table[::verbosity] == nbytes_out_hi32[orig(::opMode)-1]
::BZ2_crc32Table[::verbosity] == nbytes_out_hi32[orig(abandon)]
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[::numFileNames-1])
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[::numFilesProcessed-1])
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[::opMode-1])
nbytes_in_lo32[::verbosity] == nbytes_in_lo32[::numFileNames-1]
nbytes_in_lo32[::verbosity] == nbytes_in_lo32[::numFilesProcessed-1]
nbytes_in_lo32[::verbosity] == nbytes_in_lo32[::opMode-1]
nbytes_in_lo32[::verbosity] == nbytes_in_lo32[orig(::numFileNames)-1]
nbytes_in_lo32[::verbosity] == nbytes_in_lo32[orig(::numFilesProcessed)-1]
nbytes_in_lo32[::verbosity] == nbytes_in_lo32[orig(::opMode)-1]
nbytes_out_lo32[::verbosity] == nbytes_out_lo32[::numFileNames-1]
nbytes_out_lo32[::verbosity] == nbytes_out_lo32[::numFilesProcessed-1]
nbytes_out_lo32[::verbosity] == nbytes_out_lo32[::opMode-1]
nbytes_out_lo32[::verbosity] == nbytes_out_lo32[orig(::numFileNames)-1]
nbytes_out_lo32[::verbosity] == nbytes_out_lo32[orig(::numFilesProcessed)-1]
nbytes_out_lo32[::verbosity] == nbytes_out_lo32[orig(::opMode)-1]
::incs has only one value
::incs[] == [1, 4, 13, 40, 121, 364, 1093, 3280, 9841, 29524, 88573, 265720, 797161, 2391484]
::bzerrorstrings has only one value
::bzerrorstrings[] == [OK, SEQUENCE_ERROR, PARAM_ERROR, MEM_ERROR, DATA_ERROR, DATA_ERROR_MAGIC, IO_ERROR, UNEXPECTED_EOF, OUTBUFF_FULL, CONFIG_ERROR, ???, ???, ???, ???, ???, ???]
::fileMetaInfo has only one value
::fileMetaInfo.st_dev == 2049
::fileMetaInfo.st_ino == 936492
::fileMetaInfo.st_nlink == 1
::fileMetaInfo.st_mode == 33277
::fileMetaInfo.st_uid == 1000
::fileMetaInfo.st_rdev == 0
::fileMetaInfo.st_size == 5738700
::fileMetaInfo.st_blksize == 4096
::fileMetaInfo.st_blocks == 11216
::fileMetaInfo.st_atim has only one value
::fileMetaInfo.st_atim.tv_sec == 1496096467
::fileMetaInfo.st_atim.tv_nsec == 709424920
::fileMetaInfo.st_mtim has only one value
::fileMetaInfo.st_mtim.tv_sec == 1483563943
::fileMetaInfo.st_mtim.tv_nsec == 421335644
::fileMetaInfo.st_ctim has only one value
::fileMetaInfo.__glibc_reserved has only one value
::fileMetaInfo.__glibc_reserved[] == [0, 0, 0]
::fileMetaInfo.__glibc_reserved[] elements == 0
::BZ2_rNums has only one value
::BZ2_rNums[] == [619, 720, 127, 481, 931, 816, 813, 233, 566, 247, 985, 724, 205, 454, 863, 491, 741, 242, 949, 214, 733, 859, 335, 708, 621, 574, 73, 654, 730, 472, 419, 436, 278, 496, 867, 210, 399, 680, 480, 51, 878, 465, 811, 169, 869, 675, 611, 697, 867, 561, 862, 687, 507, 283, 482, 129, 807, 591, 733, 623, 150, 238, 59, 379, 684, 877, 625, 169, 643, 105, 170, 607, 520, 932, 727, 476, 693, 425, 174, 647, 73, 122, 335, 530, 442, 853, 695, 249, 445, 515, 909, 545, 703, 919, 874, 474, 882, 500, 594, 612, 641, 801, 220, 162, 819, 984, 589, 513, 495, 799, 161, 604, 958, 533, 221, 400, 386, 867, 600, 782, 382, 596, 414, 171, 516, 375, 682, 485, 911, 276, 98, 553, 163, 354, 666, 933, 424, 341, 533, 870, 227, 730, 475, 186, 263, 647, 537, 686, 600, 224, 469, 68, 770, 919, 190, 373, 294, 822, 808, 206, 184, 943, 795, 384, 383, 461, 404, 758, 839, 887, 715, 67, 618, 276, 204, 918, 873, 777, 604, 560, 951, 160, 578, 722, 79, 804, 96, 409, 713, 940, 652, 934, 970, 447, 318, 353, 859, 672, 112, 785, 645, 863, 803, 350, 139, 93, 354, 99, 820, 908, 609, 772, 154, 274, 580, 184, 79, 626, 630, 742, 653, 282, 762, 623, 680, 81, 927, 626, 789, 125, 411, 521, 938, 300, 821, 78, 343, 175, 128, 250, 170, 774, 972, 275, 999, 639, 495, 78, 352, 126, 857, 956, 358, 619, 580, 124, 737, 594, 701, 612, 669, 112, 134, 694, 363, 992, 809, 743, 168, 974, 944, 375, 748, 52, 600, 747, 642, 182, 862, 81, 344, 805, 988, 739, 511, 655, 814, 334, 249, 515, 897, 955, 664, 981, 649, 113, 974, 459, 893, 228, 433, 837, 553, 268, 926, 240, 102, 654, 459, 51, 686, 754, 806, 760, 493, 403, 415, 394, 687, 700, 946, 670, 656, 610, 738, 392, 760, 799, 887, 653, 978, 321, 576, 617, 626, 502, 894, 679, 243, 440, 680, 879, 194, 572, 640, 724, 926, 56, 204, 700, 707, 151, 457, 449, 797, 195, 791, 558, 945, 679, 297, 59, 87, 824, 713, 663, 412, 693, 342, 606, 134, 108, 571, 364, 631, 212, 174, 643, 304, 329, 343, 97, 430, 751, 497, 314, 983, 374, 822, 928, 140, 206, 73, 263, 980, 736, 876, 478, 430, 305, 170, 514, 364, 692, 829, 82, 855, 953, 676, 246, 369, 970, 294, 750, 807, 827, 150, 790, 288, 923, 804, 378, 215, 828, 592, 281, 565, 555, 710, 82, 896, 831, 547, 261, 524, 462, 293, 465, 502, 56, 661, 821, 976, 991, 658, 869, 905, 758, 745, 193, 768, 550, 608, 933, 378, 286, 215, 979, 792, 961, 61, 688, 793, 644, 986, 403, 106, 366, 905, 644, 372, 567, 466, 434, 645, 210, 389, 550, 919, 135, 780, 773, 635, 389, 707, 100, 626, 958, 165, 504, 920, 176, 193, 713, 857, 265, 203, 50, 668, 108, 645, 990, 626, 197, 510, 357, 358, 850, 858, 364, 936, 638]
::BZ2_crc32Table has only one value
::BZ2_crc32Table[] == [0, 79764919, 159529838, 222504665, 319059676, 398814059, 445009330, 507990021, 638119352, 583659535, 797628118, 726387553, 890018660, 835552979, 1015980042, 944750013, 1276238704, 1221641927, 1167319070, 1095957929, 1595256236, 1540665371, 1452775106, 1381403509, 1780037320, 1859660671, 1671105958, 1733955601, 2031960084, 2111593891, 1889500026, 1952343757, 2552477408, 2632100695, 2443283854, 2506133561, 2334638140, 2414271883, 2191915858, 2254759653, 3190512472, 3135915759, 3081330742, 3009969537, 2905550212, 2850959411, 2762807018, 2691435357, 3560074640, 3505614887, 3719321342, 3648080713, 3342211916, 3287746299, 3467911202, 3396681109, 4063920168, 4143685023, 4223187782, 4286162673, 3779000052, 3858754371, 3904687514, 3967668269, 881225847, 809987520, 1023691545, 969234094, 662832811, 591600412, 771767749, 717299826, 311336399, 374308984, 453813921, 533576470, 25881363, 88864420, 134795389, 214552010, 2023205639, 2086057648, 1897238633, 1976864222, 1804852699, 1867694188, 1645340341, 1724971778, 1587496639, 1516133128, 1461550545, 1406951526, 1302016099, 1230646740, 1142491917, 1087903418, 2896545431, 2825181984, 2770861561, 2716262478, 3215044683, 3143675388, 3055782693, 3001194130, 2326604591, 2389456536, 2200899649, 2280525302, 2578013683, 2640855108, 2418763421, 2498394922, 3769900519, 3832873040, 3912640137, 3992402750, 4088425275, 4151408268, 4197601365, 4277358050, 3334271071, 3263032808, 3476998961, 3422541446, 3585640067, 3514407732, 3694837229, 3640369242, 1762451694, 1842216281, 1619975040, 1682949687, 2047383090, 2127137669, 1938468188, 2001449195, 1325665622, 1271206113, 1183200824, 1111960463, 1543535498, 1489069629, 1434599652, 1363369299, 622672798, 568075817, 748617968, 677256519, 907627842, 853037301, 1067152940, 995781531, 51762726, 131386257, 177728840, 240578815, 269590778, 349224269, 429104020, 491947555, 4046411278, 4126034873, 4172115296, 4234965207, 3794477266, 3874110821, 3953728444, 4016571915, 3609705398, 3555108353, 3735388376, 3664026991, 3290680682, 3236090077, 3449943556, 3378572211, 3174993278, 3120533705, 3032266256, 2961025959, 2923101090, 2868635157, 2813903052, 2742672763, 2604032198, 2683796849, 2461293480, 2524268063, 2284983834, 2364738477, 2175806836, 2238787779, 1569362073, 1498123566, 1409854455, 1355396672, 1317987909, 1246755826, 1192025387, 1137557660, 2072149281, 2135122070, 1912620623, 1992383480, 1753615357, 1816598090, 1627664531, 1707420964, 295390185, 358241886, 404320391, 483945776, 43990325, 106832002, 186451547, 266083308, 932423249, 861060070, 1041341759, 986742920, 613929101, 542559546, 756411363, 701822548, 3316196985, 3244833742, 3425377559, 3370778784, 3601682597, 3530312978, 3744426955, 3689838204, 3819031489, 3881883254, 3928223919, 4007849240, 4037393693, 4100235434, 4180117107, 4259748804, 2310601993, 2373574846, 2151335527, 2231098320, 2596047829, 2659030626, 2470359227, 2550115596, 2947551409, 2876312838, 2788305887, 2733848168, 3165939309, 3094707162, 3040238851, 2985771188]
::mammamia == 3216
::keepInputFiles == 1
::smallMode == 0
::numFileNames == 1
::blockSize100k == 9
::longestFileName == 20
::inName == "../inputs/in_big.txt"
::outName == "../inputs/in_big.txt.bz2"
::tmpName == ""
::progName == "zip-injected"
::progNameReally == "./zip-injected"
::outputHandleJustInCase has only one value
::workFactor == 30
::zSuffix has only one value
::zSuffix[] == [.bz2, .bz, .tbz2, .tbz]
::unzSuffix has only one value
::unzSuffix[] == [, , .tar, .tar]
::unzSuffix[] elements one of { "", ".tar" }
bzerror[] == [0]
bzerror[] elements == 0
nbytes_in_lo32[] == [5738700]
nbytes_in_lo32[] elements == 5738700
nbytes_in_hi32[] == [0]
nbytes_in_hi32[] elements == 0
nbytes_out_lo32[] == [3596]
nbytes_out_lo32[] elements == 3596
size(::incs[]) == 14
size(::bzerrorstrings[]) == 16
size(::BZ2_rNums[]) == 512
size(::BZ2_crc32Table[]) == 256
size(::zSuffix[]) == 4
::incs[::blockSize100k] == 29524
::incs[::blockSize100k-1] == 9841
::incs[::srcMode] == 40
::BZ2_rNums[::verbosity] == 619
::BZ2_rNums[::numFileNames] == 720
::BZ2_rNums[::blockSize100k] == 247
::BZ2_rNums[::blockSize100k-1] == 566
::BZ2_rNums[::srcMode] == 481
::BZ2_rNums[::srcMode-1] == 127
::BZ2_rNums[::longestFileName] == 733
::BZ2_rNums[::longestFileName-1] == 214
::BZ2_rNums[::workFactor] == 419
::BZ2_rNums[::workFactor-1] == 472
::BZ2_crc32Table[::verbosity] == 0
::BZ2_crc32Table[::numFileNames] == 79764919
::BZ2_crc32Table[::blockSize100k] == 583659535
::BZ2_crc32Table[::blockSize100k-1] == 638119352
::BZ2_crc32Table[::srcMode] == 222504665
::BZ2_crc32Table[::srcMode-1] == 159529838
::BZ2_crc32Table[::longestFileName] == 1595256236
::BZ2_crc32Table[::longestFileName-1] == 1095957929
::BZ2_crc32Table[::workFactor] == 1889500026
::BZ2_crc32Table[::workFactor-1] == 2111593891
::fileMetaInfo.__glibc_reserved[] elements == ::verbosity
size(::BZ2_rNums[])-1 in ::BZ2_rNums[]
bzerror[] elements == ::verbosity
::inName == orig(::inName)
::outName == orig(::outName)
::tmpName in ::unzSuffix[]
::tmpName == orig(::tmpName)
::progName == orig(::progName)
::progNameReally == orig(::progNameReally)
nbytes_in_lo32[] elements == nbytes_in_lo32[::verbosity]
nbytes_in_hi32[] elements == ::BZ2_crc32Table[::verbosity]
nbytes_out_lo32[] elements == nbytes_out_lo32[::verbosity]
===========================================================================
..BZ2_bzWriteOpen():::ENTER
::fileMetaInfo.st_uid == ::fileMetaInfo.st_gid
::fileMetaInfo.__pad0 == ::verbosity
::fileMetaInfo.st_mtim.tv_sec == ::fileMetaInfo.st_ctim.tv_sec
::fileMetaInfo.st_mtim.tv_nsec == ::fileMetaInfo.st_ctim.tv_nsec
::verbosity == ::exitValue
::verbosity == verbosity
::verbosity == ::fileMetaInfo.__glibc_reserved[::fileMetaInfo.__pad0]
::verbosity == ::fileMetaInfo.__glibc_reserved[::verbosity]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::exitValue]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::srcMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[verbosity]
::keepInputFiles == ::deleteOutputOnInterrupt
::keepInputFiles == ::noisy
::smallMode == ::forceOverwrite
::smallMode == ::testFailsExist
::smallMode == ::unzFailsExist
::numFileNames == ::numFilesProcessed
::numFileNames == ::opMode
::numFileNames == ::incs[::fileMetaInfo.__pad0]
::numFileNames == ::incs[::verbosity]
::numFileNames == ::incs[::numFileNames-1]
::numFileNames == ::incs[::numFilesProcessed-1]
::numFileNames == ::incs[::exitValue]
::numFileNames == ::incs[::opMode-1]
::numFileNames == ::incs[verbosity]
::blockSize100k == blockSize100k
::srcMode == size(::fileMetaInfo.__glibc_reserved[])
::srcMode == size(::zSuffix[])-1
::srcMode == size(::unzSuffix[])-1
::outputHandleJustInCase == f
::workFactor == workFactor
size(::incs[])-1 == ::incs[::srcMode-1]
size(::zSuffix[]) == size(::unzSuffix[])
size(::zSuffix[]) == ::incs[::numFileNames]
size(::zSuffix[]) == ::incs[::numFilesProcessed]
size(::zSuffix[]) == ::incs[::opMode]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFileNames-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFilesProcessed-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::opMode-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFileNames-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFilesProcessed-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::opMode-1]
::incs has only one value
::incs[] == [1, 4, 13, 40, 121, 364, 1093, 3280, 9841, 29524, 88573, 265720, 797161, 2391484]
::bzerrorstrings has only one value
::bzerrorstrings[] == [OK, SEQUENCE_ERROR, PARAM_ERROR, MEM_ERROR, DATA_ERROR, DATA_ERROR_MAGIC, IO_ERROR, UNEXPECTED_EOF, OUTBUFF_FULL, CONFIG_ERROR, ???, ???, ???, ???, ???, ???]
::fileMetaInfo has only one value
::fileMetaInfo.st_dev == 2049
::fileMetaInfo.st_ino == 936492
::fileMetaInfo.st_nlink == 1
::fileMetaInfo.st_mode == 33277
::fileMetaInfo.st_uid == 1000
::fileMetaInfo.st_rdev == 0
::fileMetaInfo.st_size == 5738700
::fileMetaInfo.st_blksize == 4096
::fileMetaInfo.st_blocks == 11216
::fileMetaInfo.st_atim has only one value
::fileMetaInfo.st_atim.tv_sec == 1496096467
::fileMetaInfo.st_atim.tv_nsec == 709424920
::fileMetaInfo.st_mtim has only one value
::fileMetaInfo.st_mtim.tv_sec == 1483563943
::fileMetaInfo.st_mtim.tv_nsec == 421335644
::fileMetaInfo.st_ctim has only one value
::fileMetaInfo.__glibc_reserved has only one value
::fileMetaInfo.__glibc_reserved[] == [0, 0, 0]
::fileMetaInfo.__glibc_reserved[] elements == 0
::BZ2_rNums has only one value
::BZ2_rNums[] == [619, 720, 127, 481, 931, 816, 813, 233, 566, 247, 985, 724, 205, 454, 863, 491, 741, 242, 949, 214, 733, 859, 335, 708, 621, 574, 73, 654, 730, 472, 419, 436, 278, 496, 867, 210, 399, 680, 480, 51, 878, 465, 811, 169, 869, 675, 611, 697, 867, 561, 862, 687, 507, 283, 482, 129, 807, 591, 733, 623, 150, 238, 59, 379, 684, 877, 625, 169, 643, 105, 170, 607, 520, 932, 727, 476, 693, 425, 174, 647, 73, 122, 335, 530, 442, 853, 695, 249, 445, 515, 909, 545, 703, 919, 874, 474, 882, 500, 594, 612, 641, 801, 220, 162, 819, 984, 589, 513, 495, 799, 161, 604, 958, 533, 221, 400, 386, 867, 600, 782, 382, 596, 414, 171, 516, 375, 682, 485, 911, 276, 98, 553, 163, 354, 666, 933, 424, 341, 533, 870, 227, 730, 475, 186, 263, 647, 537, 686, 600, 224, 469, 68, 770, 919, 190, 373, 294, 822, 808, 206, 184, 943, 795, 384, 383, 461, 404, 758, 839, 887, 715, 67, 618, 276, 204, 918, 873, 777, 604, 560, 951, 160, 578, 722, 79, 804, 96, 409, 713, 940, 652, 934, 970, 447, 318, 353, 859, 672, 112, 785, 645, 863, 803, 350, 139, 93, 354, 99, 820, 908, 609, 772, 154, 274, 580, 184, 79, 626, 630, 742, 653, 282, 762, 623, 680, 81, 927, 626, 789, 125, 411, 521, 938, 300, 821, 78, 343, 175, 128, 250, 170, 774, 972, 275, 999, 639, 495, 78, 352, 126, 857, 956, 358, 619, 580, 124, 737, 594, 701, 612, 669, 112, 134, 694, 363, 992, 809, 743, 168, 974, 944, 375, 748, 52, 600, 747, 642, 182, 862, 81, 344, 805, 988, 739, 511, 655, 814, 334, 249, 515, 897, 955, 664, 981, 649, 113, 974, 459, 893, 228, 433, 837, 553, 268, 926, 240, 102, 654, 459, 51, 686, 754, 806, 760, 493, 403, 415, 394, 687, 700, 946, 670, 656, 610, 738, 392, 760, 799, 887, 653, 978, 321, 576, 617, 626, 502, 894, 679, 243, 440, 680, 879, 194, 572, 640, 724, 926, 56, 204, 700, 707, 151, 457, 449, 797, 195, 791, 558, 945, 679, 297, 59, 87, 824, 713, 663, 412, 693, 342, 606, 134, 108, 571, 364, 631, 212, 174, 643, 304, 329, 343, 97, 430, 751, 497, 314, 983, 374, 822, 928, 140, 206, 73, 263, 980, 736, 876, 478, 430, 305, 170, 514, 364, 692, 829, 82, 855, 953, 676, 246, 369, 970, 294, 750, 807, 827, 150, 790, 288, 923, 804, 378, 215, 828, 592, 281, 565, 555, 710, 82, 896, 831, 547, 261, 524, 462, 293, 465, 502, 56, 661, 821, 976, 991, 658, 869, 905, 758, 745, 193, 768, 550, 608, 933, 378, 286, 215, 979, 792, 961, 61, 688, 793, 644, 986, 403, 106, 366, 905, 644, 372, 567, 466, 434, 645, 210, 389, 550, 919, 135, 780, 773, 635, 389, 707, 100, 626, 958, 165, 504, 920, 176, 193, 713, 857, 265, 203, 50, 668, 108, 645, 990, 626, 197, 510, 357, 358, 850, 858, 364, 936, 638]
::BZ2_crc32Table has only one value
::BZ2_crc32Table[] == [0, 79764919, 159529838, 222504665, 319059676, 398814059, 445009330, 507990021, 638119352, 583659535, 797628118, 726387553, 890018660, 835552979, 1015980042, 944750013, 1276238704, 1221641927, 1167319070, 1095957929, 1595256236, 1540665371, 1452775106, 1381403509, 1780037320, 1859660671, 1671105958, 1733955601, 2031960084, 2111593891, 1889500026, 1952343757, 2552477408, 2632100695, 2443283854, 2506133561, 2334638140, 2414271883, 2191915858, 2254759653, 3190512472, 3135915759, 3081330742, 3009969537, 2905550212, 2850959411, 2762807018, 2691435357, 3560074640, 3505614887, 3719321342, 3648080713, 3342211916, 3287746299, 3467911202, 3396681109, 4063920168, 4143685023, 4223187782, 4286162673, 3779000052, 3858754371, 3904687514, 3967668269, 881225847, 809987520, 1023691545, 969234094, 662832811, 591600412, 771767749, 717299826, 311336399, 374308984, 453813921, 533576470, 25881363, 88864420, 134795389, 214552010, 2023205639, 2086057648, 1897238633, 1976864222, 1804852699, 1867694188, 1645340341, 1724971778, 1587496639, 1516133128, 1461550545, 1406951526, 1302016099, 1230646740, 1142491917, 1087903418, 2896545431, 2825181984, 2770861561, 2716262478, 3215044683, 3143675388, 3055782693, 3001194130, 2326604591, 2389456536, 2200899649, 2280525302, 2578013683, 2640855108, 2418763421, 2498394922, 3769900519, 3832873040, 3912640137, 3992402750, 4088425275, 4151408268, 4197601365, 4277358050, 3334271071, 3263032808, 3476998961, 3422541446, 3585640067, 3514407732, 3694837229, 3640369242, 1762451694, 1842216281, 1619975040, 1682949687, 2047383090, 2127137669, 1938468188, 2001449195, 1325665622, 1271206113, 1183200824, 1111960463, 1543535498, 1489069629, 1434599652, 1363369299, 622672798, 568075817, 748617968, 677256519, 907627842, 853037301, 1067152940, 995781531, 51762726, 131386257, 177728840, 240578815, 269590778, 349224269, 429104020, 491947555, 4046411278, 4126034873, 4172115296, 4234965207, 3794477266, 3874110821, 3953728444, 4016571915, 3609705398, 3555108353, 3735388376, 3664026991, 3290680682, 3236090077, 3449943556, 3378572211, 3174993278, 3120533705, 3032266256, 2961025959, 2923101090, 2868635157, 2813903052, 2742672763, 2604032198, 2683796849, 2461293480, 2524268063, 2284983834, 2364738477, 2175806836, 2238787779, 1569362073, 1498123566, 1409854455, 1355396672, 1317987909, 1246755826, 1192025387, 1137557660, 2072149281, 2135122070, 1912620623, 1992383480, 1753615357, 1816598090, 1627664531, 1707420964, 295390185, 358241886, 404320391, 483945776, 43990325, 106832002, 186451547, 266083308, 932423249, 861060070, 1041341759, 986742920, 613929101, 542559546, 756411363, 701822548, 3316196985, 3244833742, 3425377559, 3370778784, 3601682597, 3530312978, 3744426955, 3689838204, 3819031489, 3881883254, 3928223919, 4007849240, 4037393693, 4100235434, 4180117107, 4259748804, 2310601993, 2373574846, 2151335527, 2231098320, 2596047829, 2659030626, 2470359227, 2550115596, 2947551409, 2876312838, 2788305887, 2733848168, 3165939309, 3094707162, 3040238851, 2985771188]
::mammamia == 3216
::verbosity == 0
::keepInputFiles == 1
::smallMode == 0
::numFileNames == 1
::blockSize100k == 9
::longestFileName == 20
::inName == "../inputs/in_big.txt"
::outName == "../inputs/in_big.txt.bz2"
::tmpName == ""
::progName == "zip-injected"
::progNameReally == "./zip-injected"
::outputHandleJustInCase has only one value
::workFactor == 30
::zSuffix has only one value
::zSuffix[] == [.bz2, .bz, .tbz2, .tbz]
::unzSuffix has only one value
::unzSuffix[] == [, , .tar, .tar]
::unzSuffix[] elements one of { "", ".tar" }
bzerror has only one value
size(::incs[]) == 14
size(::bzerrorstrings[]) == 16
size(::BZ2_rNums[]) == 512
size(::BZ2_crc32Table[]) == 256
size(::zSuffix[]) == 4
::incs[::blockSize100k] == 29524
::incs[::blockSize100k-1] == 9841
::incs[::srcMode] == 40
::BZ2_rNums[::verbosity] == 619
::BZ2_rNums[::numFileNames] == 720
::BZ2_rNums[::blockSize100k] == 247
::BZ2_rNums[::blockSize100k-1] == 566
::BZ2_rNums[::srcMode] == 481
::BZ2_rNums[::srcMode-1] == 127
::BZ2_rNums[::longestFileName] == 733
::BZ2_rNums[::longestFileName-1] == 214
::BZ2_rNums[::workFactor] == 419
::BZ2_rNums[::workFactor-1] == 472
::BZ2_crc32Table[::verbosity] == 0
::BZ2_crc32Table[::numFileNames] == 79764919
::BZ2_crc32Table[::blockSize100k] == 583659535
::BZ2_crc32Table[::blockSize100k-1] == 638119352
::BZ2_crc32Table[::srcMode] == 222504665
::BZ2_crc32Table[::srcMode-1] == 159529838
::BZ2_crc32Table[::longestFileName] == 1595256236
::BZ2_crc32Table[::longestFileName-1] == 1095957929
::BZ2_crc32Table[::workFactor] == 1889500026
::BZ2_crc32Table[::workFactor-1] == 2111593891
::fileMetaInfo.__glibc_reserved[] elements == ::verbosity
size(::BZ2_rNums[])-1 in ::BZ2_rNums[]
::tmpName in ::unzSuffix[]
===========================================================================
..BZ2_bzWriteOpen():::EXIT
::incs == orig(::incs)
::incs[] == orig(::incs[])
::bzerrorstrings == orig(::bzerrorstrings)
::fileMetaInfo == orig(::fileMetaInfo)
::fileMetaInfo.st_dev == orig(::fileMetaInfo.st_dev)
::fileMetaInfo.st_ino == orig(::fileMetaInfo.st_ino)
::fileMetaInfo.st_nlink == orig(::fileMetaInfo.st_nlink)
::fileMetaInfo.st_mode == orig(::fileMetaInfo.st_mode)
::fileMetaInfo.st_uid == ::fileMetaInfo.st_gid
::fileMetaInfo.st_uid == orig(::fileMetaInfo.st_uid)
::fileMetaInfo.st_uid == orig(::fileMetaInfo.st_gid)
::fileMetaInfo.__pad0 == ::verbosity
::fileMetaInfo.st_rdev == orig(::fileMetaInfo.st_rdev)
::fileMetaInfo.st_size == orig(::fileMetaInfo.st_size)
::fileMetaInfo.st_blksize == orig(::fileMetaInfo.st_blksize)
::fileMetaInfo.st_blocks == orig(::fileMetaInfo.st_blocks)
::fileMetaInfo.st_atim == orig(::fileMetaInfo.st_atim)
::fileMetaInfo.st_atim.tv_sec == orig(::fileMetaInfo.st_atim.tv_sec)
::fileMetaInfo.st_atim.tv_nsec == orig(::fileMetaInfo.st_atim.tv_nsec)
::fileMetaInfo.st_mtim == orig(::fileMetaInfo.st_mtim)
::fileMetaInfo.st_mtim.tv_sec == ::fileMetaInfo.st_ctim.tv_sec
::fileMetaInfo.st_mtim.tv_sec == orig(::fileMetaInfo.st_mtim.tv_sec)
::fileMetaInfo.st_mtim.tv_sec == orig(::fileMetaInfo.st_ctim.tv_sec)
::fileMetaInfo.st_mtim.tv_nsec == ::fileMetaInfo.st_ctim.tv_nsec
::fileMetaInfo.st_mtim.tv_nsec == orig(::fileMetaInfo.st_mtim.tv_nsec)
::fileMetaInfo.st_mtim.tv_nsec == orig(::fileMetaInfo.st_ctim.tv_nsec)
::fileMetaInfo.st_ctim == orig(::fileMetaInfo.st_ctim)
::fileMetaInfo.__glibc_reserved == orig(::fileMetaInfo.__glibc_reserved)
::fileMetaInfo.__glibc_reserved[] == orig(::fileMetaInfo.__glibc_reserved[])
::BZ2_rNums == orig(::BZ2_rNums)
::BZ2_rNums[] == orig(::BZ2_rNums[])
::BZ2_crc32Table == orig(::BZ2_crc32Table)
::BZ2_crc32Table[] == orig(::BZ2_crc32Table[])
::mammamia == orig(::mammamia)
::verbosity == ::exitValue
::verbosity == orig(::fileMetaInfo.__pad0)
::verbosity == orig(::verbosity)
::verbosity == orig(::exitValue)
::verbosity == orig(verbosity)
::verbosity == size(bzerror[])-1
::verbosity == ::fileMetaInfo.__glibc_reserved[::fileMetaInfo.__pad0]
::verbosity == bzerror[::fileMetaInfo.__pad0]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::fileMetaInfo.__pad0)])
::verbosity == ::fileMetaInfo.__glibc_reserved[::verbosity]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::exitValue]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::srcMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::fileMetaInfo.__pad0)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::verbosity)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFileNames)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFileNames)-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFilesProcessed)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFilesProcessed)-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::exitValue)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::opMode)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::opMode)-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::srcMode)-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(verbosity)]
::verbosity == bzerror[::verbosity]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::verbosity)])
::verbosity == bzerror[::numFileNames-1]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFileNames)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFileNames)-1])
::verbosity == bzerror[::numFilesProcessed-1]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFilesProcessed)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFilesProcessed)-1])
::verbosity == bzerror[::exitValue]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::exitValue)])
::verbosity == bzerror[::opMode-1]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::opMode)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::opMode)-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::srcMode)-1])
::verbosity == bzerror[orig(::fileMetaInfo.__pad0)]
::verbosity == bzerror[orig(::verbosity)]
::verbosity == bzerror[orig(::numFileNames)-1]
::verbosity == bzerror[orig(::numFilesProcessed)-1]
::verbosity == bzerror[orig(::exitValue)]
::verbosity == bzerror[orig(::opMode)-1]
::verbosity == bzerror[orig(verbosity)]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(verbosity)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::fileMetaInfo.__pad0])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::verbosity])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFileNames])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFileNames-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFilesProcessed])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFilesProcessed-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::exitValue])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::opMode])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::opMode-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::srcMode-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[verbosity])
::keepInputFiles == ::deleteOutputOnInterrupt
::keepInputFiles == ::noisy
::keepInputFiles == orig(::keepInputFiles)
::keepInputFiles == orig(::deleteOutputOnInterrupt)
::keepInputFiles == orig(::noisy)
::smallMode == ::forceOverwrite
::smallMode == ::testFailsExist
::smallMode == ::unzFailsExist
::smallMode == orig(::smallMode)
::smallMode == orig(::forceOverwrite)
::smallMode == orig(::testFailsExist)
::smallMode == orig(::unzFailsExist)
::numFileNames == ::numFilesProcessed
::numFileNames == ::opMode
::numFileNames == orig(::numFileNames)
::numFileNames == orig(::numFilesProcessed)
::numFileNames == orig(::opMode)
::numFileNames == ::incs[::fileMetaInfo.__pad0]
::numFileNames == ::incs[::verbosity]
::numFileNames == ::incs[::numFileNames-1]
::numFileNames == ::incs[::numFilesProcessed-1]
::numFileNames == ::incs[::exitValue]
::numFileNames == ::incs[::opMode-1]
::numFileNames == ::incs[orig(::fileMetaInfo.__pad0)]
::numFileNames == ::incs[orig(::verbosity)]
::numFileNames == ::incs[orig(::numFileNames)-1]
::numFileNames == ::incs[orig(::numFilesProcessed)-1]
::numFileNames == ::incs[orig(::exitValue)]
::numFileNames == ::incs[orig(::opMode)-1]
::numFileNames == ::incs[orig(verbosity)]
::numFileNames == orig(::incs[post(::fileMetaInfo.__pad0)])
::numFileNames == orig(::incs[post(::verbosity)])
::numFileNames == orig(::incs[post(::numFileNames)-1])
::numFileNames == orig(::incs[post(::numFilesProcessed)-1])
::numFileNames == orig(::incs[post(::exitValue)])
::numFileNames == orig(::incs[post(::opMode)-1])
::numFileNames == orig(::incs[post(verbosity)])
::numFileNames == orig(::incs[::fileMetaInfo.__pad0])
::numFileNames == orig(::incs[::verbosity])
::numFileNames == orig(::incs[::numFileNames-1])
::numFileNames == orig(::incs[::numFilesProcessed-1])
::numFileNames == orig(::incs[::exitValue])
::numFileNames == orig(::incs[::opMode-1])
::numFileNames == orig(::incs[verbosity])
::blockSize100k == orig(::blockSize100k)
::blockSize100k == orig(blockSize100k)
::srcMode == orig(::srcMode)
::srcMode == size(::fileMetaInfo.__glibc_reserved[])
::srcMode == size(::zSuffix[])-1
::srcMode == size(::unzSuffix[])-1
::srcMode == orig(size(::fileMetaInfo.__glibc_reserved[]))
::srcMode == orig(size(::zSuffix[]))-1
::srcMode == orig(size(::unzSuffix[]))-1
::longestFileName == orig(::longestFileName)
::outputHandleJustInCase == orig(::outputHandleJustInCase)
::outputHandleJustInCase == orig(f)
::workFactor == orig(::workFactor)
::workFactor == orig(workFactor)
::zSuffix == orig(::zSuffix)
::unzSuffix == orig(::unzSuffix)
size(::incs[])-1 == ::incs[::srcMode-1]
size(::incs[])-1 == ::incs[orig(::srcMode)-1]
size(::incs[])-1 == orig(::incs[post(::srcMode)-1])
size(::incs[])-1 == orig(::incs[::srcMode-1])
size(::zSuffix[]) == size(::unzSuffix[])
size(::zSuffix[]) == orig(size(::unzSuffix[]))
size(::zSuffix[]) == ::incs[::numFileNames]
size(::zSuffix[]) == ::incs[::numFilesProcessed]
size(::zSuffix[]) == ::incs[::opMode]
size(::zSuffix[]) == ::incs[orig(::numFileNames)]
size(::zSuffix[]) == ::incs[orig(::numFilesProcessed)]
size(::zSuffix[]) == ::incs[orig(::opMode)]
size(::zSuffix[]) == orig(::incs[post(::numFileNames)])
size(::zSuffix[]) == orig(::incs[post(::numFilesProcessed)])
size(::zSuffix[]) == orig(::incs[post(::opMode)])
size(::zSuffix[]) == orig(::incs[::numFileNames])
size(::zSuffix[]) == orig(::incs[::numFilesProcessed])
size(::zSuffix[]) == orig(::incs[::opMode])
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFileNames-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFilesProcessed-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::opMode-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[orig(::numFileNames)-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[orig(::numFilesProcessed)-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[orig(::opMode)-1]
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[post(::numFileNames)-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[post(::numFilesProcessed)-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[post(::opMode)-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[::numFileNames-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[::numFilesProcessed-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[::opMode-1])
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFileNames-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFilesProcessed-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::opMode-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[orig(::numFileNames)-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[orig(::numFilesProcessed)-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[orig(::opMode)-1]
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[post(::numFileNames)-1])
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[post(::numFilesProcessed)-1])
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[post(::opMode)-1])
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[::numFileNames-1])
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[::numFilesProcessed-1])
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[::opMode-1])
::incs has only one value
::incs[] == [1, 4, 13, 40, 121, 364, 1093, 3280, 9841, 29524, 88573, 265720, 797161, 2391484]
::bzerrorstrings has only one value
::bzerrorstrings[] == [OK, SEQUENCE_ERROR, PARAM_ERROR, MEM_ERROR, DATA_ERROR, DATA_ERROR_MAGIC, IO_ERROR, UNEXPECTED_EOF, OUTBUFF_FULL, CONFIG_ERROR, ???, ???, ???, ???, ???, ???]
::fileMetaInfo has only one value
::fileMetaInfo.st_dev == 2049
::fileMetaInfo.st_ino == 936492
::fileMetaInfo.st_nlink == 1
::fileMetaInfo.st_mode == 33277
::fileMetaInfo.st_uid == 1000
::fileMetaInfo.st_rdev == 0
::fileMetaInfo.st_size == 5738700
::fileMetaInfo.st_blksize == 4096
::fileMetaInfo.st_blocks == 11216
::fileMetaInfo.st_atim has only one value
::fileMetaInfo.st_atim.tv_sec == 1496096467
::fileMetaInfo.st_atim.tv_nsec == 709424920
::fileMetaInfo.st_mtim has only one value
::fileMetaInfo.st_mtim.tv_sec == 1483563943
::fileMetaInfo.st_mtim.tv_nsec == 421335644
::fileMetaInfo.st_ctim has only one value
::fileMetaInfo.__glibc_reserved has only one value
::fileMetaInfo.__glibc_reserved[] == [0, 0, 0]
::fileMetaInfo.__glibc_reserved[] elements == 0
::BZ2_rNums has only one value
::BZ2_rNums[] == [619, 720, 127, 481, 931, 816, 813, 233, 566, 247, 985, 724, 205, 454, 863, 491, 741, 242, 949, 214, 733, 859, 335, 708, 621, 574, 73, 654, 730, 472, 419, 436, 278, 496, 867, 210, 399, 680, 480, 51, 878, 465, 811, 169, 869, 675, 611, 697, 867, 561, 862, 687, 507, 283, 482, 129, 807, 591, 733, 623, 150, 238, 59, 379, 684, 877, 625, 169, 643, 105, 170, 607, 520, 932, 727, 476, 693, 425, 174, 647, 73, 122, 335, 530, 442, 853, 695, 249, 445, 515, 909, 545, 703, 919, 874, 474, 882, 500, 594, 612, 641, 801, 220, 162, 819, 984, 589, 513, 495, 799, 161, 604, 958, 533, 221, 400, 386, 867, 600, 782, 382, 596, 414, 171, 516, 375, 682, 485, 911, 276, 98, 553, 163, 354, 666, 933, 424, 341, 533, 870, 227, 730, 475, 186, 263, 647, 537, 686, 600, 224, 469, 68, 770, 919, 190, 373, 294, 822, 808, 206, 184, 943, 795, 384, 383, 461, 404, 758, 839, 887, 715, 67, 618, 276, 204, 918, 873, 777, 604, 560, 951, 160, 578, 722, 79, 804, 96, 409, 713, 940, 652, 934, 970, 447, 318, 353, 859, 672, 112, 785, 645, 863, 803, 350, 139, 93, 354, 99, 820, 908, 609, 772, 154, 274, 580, 184, 79, 626, 630, 742, 653, 282, 762, 623, 680, 81, 927, 626, 789, 125, 411, 521, 938, 300, 821, 78, 343, 175, 128, 250, 170, 774, 972, 275, 999, 639, 495, 78, 352, 126, 857, 956, 358, 619, 580, 124, 737, 594, 701, 612, 669, 112, 134, 694, 363, 992, 809, 743, 168, 974, 944, 375, 748, 52, 600, 747, 642, 182, 862, 81, 344, 805, 988, 739, 511, 655, 814, 334, 249, 515, 897, 955, 664, 981, 649, 113, 974, 459, 893, 228, 433, 837, 553, 268, 926, 240, 102, 654, 459, 51, 686, 754, 806, 760, 493, 403, 415, 394, 687, 700, 946, 670, 656, 610, 738, 392, 760, 799, 887, 653, 978, 321, 576, 617, 626, 502, 894, 679, 243, 440, 680, 879, 194, 572, 640, 724, 926, 56, 204, 700, 707, 151, 457, 449, 797, 195, 791, 558, 945, 679, 297, 59, 87, 824, 713, 663, 412, 693, 342, 606, 134, 108, 571, 364, 631, 212, 174, 643, 304, 329, 343, 97, 430, 751, 497, 314, 983, 374, 822, 928, 140, 206, 73, 263, 980, 736, 876, 478, 430, 305, 170, 514, 364, 692, 829, 82, 855, 953, 676, 246, 369, 970, 294, 750, 807, 827, 150, 790, 288, 923, 804, 378, 215, 828, 592, 281, 565, 555, 710, 82, 896, 831, 547, 261, 524, 462, 293, 465, 502, 56, 661, 821, 976, 991, 658, 869, 905, 758, 745, 193, 768, 550, 608, 933, 378, 286, 215, 979, 792, 961, 61, 688, 793, 644, 986, 403, 106, 366, 905, 644, 372, 567, 466, 434, 645, 210, 389, 550, 919, 135, 780, 773, 635, 389, 707, 100, 626, 958, 165, 504, 920, 176, 193, 713, 857, 265, 203, 50, 668, 108, 645, 990, 626, 197, 510, 357, 358, 850, 858, 364, 936, 638]
::BZ2_crc32Table has only one value
::BZ2_crc32Table[] == [0, 79764919, 159529838, 222504665, 319059676, 398814059, 445009330, 507990021, 638119352, 583659535, 797628118, 726387553, 890018660, 835552979, 1015980042, 944750013, 1276238704, 1221641927, 1167319070, 1095957929, 1595256236, 1540665371, 1452775106, 1381403509, 1780037320, 1859660671, 1671105958, 1733955601, 2031960084, 2111593891, 1889500026, 1952343757, 2552477408, 2632100695, 2443283854, 2506133561, 2334638140, 2414271883, 2191915858, 2254759653, 3190512472, 3135915759, 3081330742, 3009969537, 2905550212, 2850959411, 2762807018, 2691435357, 3560074640, 3505614887, 3719321342, 3648080713, 3342211916, 3287746299, 3467911202, 3396681109, 4063920168, 4143685023, 4223187782, 4286162673, 3779000052, 3858754371, 3904687514, 3967668269, 881225847, 809987520, 1023691545, 969234094, 662832811, 591600412, 771767749, 717299826, 311336399, 374308984, 453813921, 533576470, 25881363, 88864420, 134795389, 214552010, 2023205639, 2086057648, 1897238633, 1976864222, 1804852699, 1867694188, 1645340341, 1724971778, 1587496639, 1516133128, 1461550545, 1406951526, 1302016099, 1230646740, 1142491917, 1087903418, 2896545431, 2825181984, 2770861561, 2716262478, 3215044683, 3143675388, 3055782693, 3001194130, 2326604591, 2389456536, 2200899649, 2280525302, 2578013683, 2640855108, 2418763421, 2498394922, 3769900519, 3832873040, 3912640137, 3992402750, 4088425275, 4151408268, 4197601365, 4277358050, 3334271071, 3263032808, 3476998961, 3422541446, 3585640067, 3514407732, 3694837229, 3640369242, 1762451694, 1842216281, 1619975040, 1682949687, 2047383090, 2127137669, 1938468188, 2001449195, 1325665622, 1271206113, 1183200824, 1111960463, 1543535498, 1489069629, 1434599652, 1363369299, 622672798, 568075817, 748617968, 677256519, 907627842, 853037301, 1067152940, 995781531, 51762726, 131386257, 177728840, 240578815, 269590778, 349224269, 429104020, 491947555, 4046411278, 4126034873, 4172115296, 4234965207, 3794477266, 3874110821, 3953728444, 4016571915, 3609705398, 3555108353, 3735388376, 3664026991, 3290680682, 3236090077, 3449943556, 3378572211, 3174993278, 3120533705, 3032266256, 2961025959, 2923101090, 2868635157, 2813903052, 2742672763, 2604032198, 2683796849, 2461293480, 2524268063, 2284983834, 2364738477, 2175806836, 2238787779, 1569362073, 1498123566, 1409854455, 1355396672, 1317987909, 1246755826, 1192025387, 1137557660, 2072149281, 2135122070, 1912620623, 1992383480, 1753615357, 1816598090, 1627664531, 1707420964, 295390185, 358241886, 404320391, 483945776, 43990325, 106832002, 186451547, 266083308, 932423249, 861060070, 1041341759, 986742920, 613929101, 542559546, 756411363, 701822548, 3316196985, 3244833742, 3425377559, 3370778784, 3601682597, 3530312978, 3744426955, 3689838204, 3819031489, 3881883254, 3928223919, 4007849240, 4037393693, 4100235434, 4180117107, 4259748804, 2310601993, 2373574846, 2151335527, 2231098320, 2596047829, 2659030626, 2470359227, 2550115596, 2947551409, 2876312838, 2788305887, 2733848168, 3165939309, 3094707162, 3040238851, 2985771188]
::mammamia == 3216
::keepInputFiles == 1
::smallMode == 0
::numFileNames == 1
::blockSize100k == 9
::longestFileName == 20
::inName == "../inputs/in_big.txt"
::outName == "../inputs/in_big.txt.bz2"
::tmpName == ""
::progName == "zip-injected"
::progNameReally == "./zip-injected"
::outputHandleJustInCase has only one value
::workFactor == 30
::zSuffix has only one value
::zSuffix[] == [.bz2, .bz, .tbz2, .tbz]
::unzSuffix has only one value
::unzSuffix[] == [, , .tar, .tar]
::unzSuffix[] elements one of { "", ".tar" }
bzerror[] == [0]
bzerror[] elements == 0
return has only one value
size(::incs[]) == 14
size(::bzerrorstrings[]) == 16
size(::BZ2_rNums[]) == 512
size(::BZ2_crc32Table[]) == 256
size(::zSuffix[]) == 4
::incs[::blockSize100k] == 29524
::incs[::blockSize100k-1] == 9841
::incs[::srcMode] == 40
::BZ2_rNums[::verbosity] == 619
::BZ2_rNums[::numFileNames] == 720
::BZ2_rNums[::blockSize100k] == 247
::BZ2_rNums[::blockSize100k-1] == 566
::BZ2_rNums[::srcMode] == 481
::BZ2_rNums[::srcMode-1] == 127
::BZ2_rNums[::longestFileName] == 733
::BZ2_rNums[::longestFileName-1] == 214
::BZ2_rNums[::workFactor] == 419
::BZ2_rNums[::workFactor-1] == 472
::BZ2_crc32Table[::verbosity] == 0
::BZ2_crc32Table[::numFileNames] == 79764919
::BZ2_crc32Table[::blockSize100k] == 583659535
::BZ2_crc32Table[::blockSize100k-1] == 638119352
::BZ2_crc32Table[::srcMode] == 222504665
::BZ2_crc32Table[::srcMode-1] == 159529838
::BZ2_crc32Table[::longestFileName] == 1595256236
::BZ2_crc32Table[::longestFileName-1] == 1095957929
::BZ2_crc32Table[::workFactor] == 1889500026
::BZ2_crc32Table[::workFactor-1] == 2111593891
::fileMetaInfo.__glibc_reserved[] elements == ::verbosity
size(::BZ2_rNums[])-1 in ::BZ2_rNums[]
bzerror[] elements == ::verbosity
::inName == orig(::inName)
::outName == orig(::outName)
::tmpName in ::unzSuffix[]
::tmpName == orig(::tmpName)
::progName == orig(::progName)
::progNameReally == orig(::progNameReally)
===========================================================================
..BZ2_compressBlock():::ENTER
::fileMetaInfo.st_uid == ::fileMetaInfo.st_gid
::fileMetaInfo.__pad0 == ::verbosity
::fileMetaInfo.st_mtim.tv_sec == ::fileMetaInfo.st_ctim.tv_sec
::fileMetaInfo.st_mtim.tv_nsec == ::fileMetaInfo.st_ctim.tv_nsec
::verbosity == ::exitValue
::verbosity == size(s[])-1
::verbosity == size(s[].strm[0])-1
::verbosity == size(s[].arr2[0])-1
::verbosity == size(s[].block[0])-1
::verbosity == size(s[].inUse[0])-1
::verbosity == ::fileMetaInfo.__glibc_reserved[::fileMetaInfo.__pad0]
::verbosity == s[::fileMetaInfo.__pad0].numZ
::verbosity == s[::fileMetaInfo.__pad0].state_out_pos
::verbosity == s[::fileMetaInfo.__pad0].verbosity
::verbosity == ::fileMetaInfo.__glibc_reserved[::verbosity]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::exitValue]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::srcMode-1]
::verbosity == s[::verbosity].numZ
::verbosity == s[::verbosity].state_out_pos
::verbosity == s[::verbosity].verbosity
::verbosity == s[::numFileNames-1].numZ
::verbosity == s[::numFileNames-1].state_out_pos
::verbosity == s[::numFileNames-1].verbosity
::verbosity == s[::numFilesProcessed-1].numZ
::verbosity == s[::numFilesProcessed-1].state_out_pos
::verbosity == s[::numFilesProcessed-1].verbosity
::verbosity == s[::exitValue].numZ
::verbosity == s[::exitValue].state_out_pos
::verbosity == s[::exitValue].verbosity
::verbosity == s[::opMode-1].numZ
::verbosity == s[::opMode-1].state_out_pos
::verbosity == s[::opMode-1].verbosity
::keepInputFiles == ::deleteOutputOnInterrupt
::keepInputFiles == ::noisy
::keepInputFiles == s[::fileMetaInfo.__pad0].inUse[0]
::keepInputFiles == s[::verbosity].inUse[0]
::keepInputFiles == s[::numFileNames-1].inUse[0]
::keepInputFiles == s[::numFilesProcessed-1].inUse[0]
::keepInputFiles == s[::exitValue].inUse[0]
::keepInputFiles == s[::opMode-1].inUse[0]
::smallMode == ::forceOverwrite
::smallMode == ::testFailsExist
::smallMode == ::unzFailsExist
::smallMode == s[::verbosity].unseqToSeq[0]
::numFileNames == ::numFilesProcessed
::numFileNames == ::opMode
::numFileNames == size(s[])
::numFileNames == size(s[].strm[0])
::numFileNames == size(s[].arr2[0])
::numFileNames == size(s[].block[0])
::numFileNames == size(s[].inUse[0])
::numFileNames == size(s[].len[0])
::numFileNames == ::incs[::fileMetaInfo.__pad0]
::numFileNames == ::incs[::verbosity]
::numFileNames == ::incs[::numFileNames-1]
::numFileNames == ::incs[::numFilesProcessed-1]
::numFileNames == ::incs[::exitValue]
::numFileNames == ::incs[::opMode-1]
::blockSize100k == s[::fileMetaInfo.__pad0].blockSize100k
::blockSize100k == s[::verbosity].blockSize100k
::blockSize100k == s[::numFileNames-1].blockSize100k
::blockSize100k == s[::numFilesProcessed-1].blockSize100k
::blockSize100k == s[::exitValue].blockSize100k
::blockSize100k == s[::opMode-1].blockSize100k
::srcMode == size(::fileMetaInfo.__glibc_reserved[])
::srcMode == size(::zSuffix[])-1
::srcMode == size(::unzSuffix[])-1
::workFactor == s[::fileMetaInfo.__pad0].workFactor
::workFactor == s[::verbosity].workFactor
::workFactor == s[::numFileNames-1].workFactor
::workFactor == s[::numFilesProcessed-1].workFactor
::workFactor == s[::exitValue].workFactor
::workFactor == s[::opMode-1].workFactor
s[].strm->total_in_hi32 == s[].strm->total_out_hi32
s[].arr1 == s[].ptr
s[].arr1[0] == s[].ptr[0]
s[].numZ == s[].state_out_pos
s[].numZ == s[].verbosity
s[].selector[0] == s[].selectorMtf[0]
s[].len[0][0] == s[].len[1][0]
s[].len[0][0] == s[].len[2][0]
s[].len[0][0] == s[].len[3][0]
s[].len[0][0] == s[].len[4][0]
s[].code[5][0] == s[].rfreq[0][0]
s[].code[5][0] == s[].rfreq[1][0]
s[].code[5][0] == s[].rfreq[2][0]
s[].code[5][0] == s[].rfreq[3][0]
s[].code[5][0] == s[].rfreq[4][0]
s[].code[5][0] == s[].rfreq[5][0]
size(::incs[]) == s[::verbosity].code[2][0]
size(::incs[])-1 == ::incs[::srcMode-1]
size(::incs[])-1 == s[::verbosity].code[1][0]
size(::bzerrorstrings[]) == s[::verbosity].code[4][0]
size(::bzerrorstrings[])-1 == s[::verbosity].code[3][0]
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::fileMetaInfo.__pad0].state
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::verbosity].state
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::numFileNames-1].state
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::numFilesProcessed-1].state
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::exitValue].state
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::opMode-1].state
size(::zSuffix[]) == size(::unzSuffix[])
size(::zSuffix[]) == ::incs[::numFileNames]
size(::zSuffix[]) == ::incs[::numFilesProcessed]
size(::zSuffix[]) == ::incs[::opMode]
size(s[].arr1[0]) == size(s[].len[0])
size(s[].ftab[0]) == size(s[].len[0])
size(s[].ptr[0]) == size(s[].len[0])
size(s[].mtfv[0]) == size(s[].len[0])
size(s[].zbits[0]) == size(s[].len[0])
size(s[].unseqToSeq[0]) == size(s[].len[0])
size(s[].mtfFreq[0]) == size(s[].len[0])
size(s[].selector[0]) == size(s[].len[0])
size(s[].selectorMtf[0]) == size(s[].len[0])
size(s[].len[0]) == size(s[].len[0][0])
size(s[].len[0]) == size(s[].len[1])
size(s[].len[0]) == size(s[].len[1][0])
size(s[].len[0]) == size(s[].len[2])
size(s[].len[0]) == size(s[].len[2][0])
size(s[].len[0]) == size(s[].len[3])
size(s[].len[0]) == size(s[].len[3][0])
size(s[].len[0]) == size(s[].len[4])
size(s[].len[0]) == size(s[].len[4][0])
size(s[].len[0]) == size(s[].len[5])
size(s[].len[0]) == size(s[].len[5][0])
size(s[].len[0]) == size(s[].code[0])
size(s[].len[0]) == size(s[].code[0][0])
size(s[].len[0]) == size(s[].code[1])
size(s[].len[0]) == size(s[].code[1][0])
size(s[].len[0]) == size(s[].code[2])
size(s[].len[0]) == size(s[].code[2][0])
size(s[].len[0]) == size(s[].code[3])
size(s[].len[0]) == size(s[].code[3][0])
size(s[].len[0]) == size(s[].code[4])
size(s[].len[0]) == size(s[].code[4][0])
size(s[].len[0]) == size(s[].code[5])
size(s[].len[0]) == size(s[].code[5][0])
size(s[].len[0]) == size(s[].rfreq[0])
size(s[].len[0]) == size(s[].rfreq[0][0])
size(s[].len[0]) == size(s[].rfreq[1])
size(s[].len[0]) == size(s[].rfreq[1][0])
size(s[].len[0]) == size(s[].rfreq[2])
size(s[].len[0]) == size(s[].rfreq[2][0])
size(s[].len[0]) == size(s[].rfreq[3])
size(s[].len[0]) == size(s[].rfreq[3][0])
size(s[].len[0]) == size(s[].rfreq[4])
size(s[].len[0]) == size(s[].rfreq[4][0])
size(s[].len[0]) == size(s[].rfreq[5])
size(s[].len[0]) == size(s[].rfreq[5][0])
size(s[].len[0]) == size(s[].len_pack[0])
size(s[].len[0])-1 == s[::fileMetaInfo.__pad0].code[5][0]
size(s[].len[0])-1 == s[::fileMetaInfo.__pad0].rfreq[0][0]
size(s[].len[0])-1 == s[::fileMetaInfo.__pad0].rfreq[1][0]
size(s[].len[0])-1 == s[::fileMetaInfo.__pad0].rfreq[2][0]
size(s[].len[0])-1 == s[::fileMetaInfo.__pad0].rfreq[3][0]
size(s[].len[0])-1 == s[::fileMetaInfo.__pad0].rfreq[4][0]
size(s[].len[0])-1 == s[::fileMetaInfo.__pad0].rfreq[5][0]
size(s[].len[0])-1 == s[::verbosity].code[5][0]
size(s[].len[0])-1 == s[::verbosity].rfreq[0][0]
size(s[].len[0])-1 == s[::verbosity].rfreq[1][0]
size(s[].len[0])-1 == s[::verbosity].rfreq[2][0]
size(s[].len[0])-1 == s[::verbosity].rfreq[3][0]
size(s[].len[0])-1 == s[::verbosity].rfreq[4][0]
size(s[].len[0])-1 == s[::verbosity].rfreq[5][0]
size(s[].len[0])-1 == s[::numFileNames-1].code[5][0]
size(s[].len[0])-1 == s[::numFileNames-1].rfreq[0][0]
size(s[].len[0])-1 == s[::numFileNames-1].rfreq[1][0]
size(s[].len[0])-1 == s[::numFileNames-1].rfreq[2][0]
size(s[].len[0])-1 == s[::numFileNames-1].rfreq[3][0]
size(s[].len[0])-1 == s[::numFileNames-1].rfreq[4][0]
size(s[].len[0])-1 == s[::numFileNames-1].rfreq[5][0]
size(s[].len[0])-1 == s[::numFilesProcessed-1].code[5][0]
size(s[].len[0])-1 == s[::numFilesProcessed-1].rfreq[0][0]
size(s[].len[0])-1 == s[::numFilesProcessed-1].rfreq[1][0]
size(s[].len[0])-1 == s[::numFilesProcessed-1].rfreq[2][0]
size(s[].len[0])-1 == s[::numFilesProcessed-1].rfreq[3][0]
size(s[].len[0])-1 == s[::numFilesProcessed-1].rfreq[4][0]
size(s[].len[0])-1 == s[::numFilesProcessed-1].rfreq[5][0]
size(s[].len[0])-1 == s[::exitValue].code[5][0]
size(s[].len[0])-1 == s[::exitValue].rfreq[0][0]
size(s[].len[0])-1 == s[::exitValue].rfreq[1][0]
size(s[].len[0])-1 == s[::exitValue].rfreq[2][0]
size(s[].len[0])-1 == s[::exitValue].rfreq[3][0]
size(s[].len[0])-1 == s[::exitValue].rfreq[4][0]
size(s[].len[0])-1 == s[::exitValue].rfreq[5][0]
size(s[].len[0])-1 == s[::opMode-1].code[5][0]
size(s[].len[0])-1 == s[::opMode-1].rfreq[0][0]
size(s[].len[0])-1 == s[::opMode-1].rfreq[1][0]
size(s[].len[0])-1 == s[::opMode-1].rfreq[2][0]
size(s[].len[0])-1 == s[::opMode-1].rfreq[3][0]
size(s[].len[0])-1 == s[::opMode-1].rfreq[4][0]
size(s[].len[0])-1 == s[::opMode-1].rfreq[5][0]
s[::fileMetaInfo.__pad0].strm->total_in_hi32 == ::BZ2_crc32Table[::verbosity]
s[::fileMetaInfo.__pad0].strm->total_out_hi32 == ::BZ2_crc32Table[::verbosity]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFileNames-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFilesProcessed-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::opMode-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFileNames-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFilesProcessed-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::opMode-1]
::BZ2_crc32Table[::verbosity] == s[::verbosity].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[::verbosity].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == s[::numFileNames-1].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[::numFileNames-1].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == s[::numFilesProcessed-1].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[::numFilesProcessed-1].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == s[::exitValue].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[::exitValue].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == s[::opMode-1].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[::opMode-1].strm->total_out_hi32
s[::verbosity] == s[::numFileNames-1]
s[::verbosity] == s[::numFilesProcessed-1]
s[::verbosity] == s[::opMode-1]
s[::verbosity].strm == s[::numFileNames-1].strm
s[::verbosity].strm == s[::numFilesProcessed-1].strm
s[::verbosity].strm == s[::opMode-1].strm
s[::verbosity].strm[0] == s[::numFileNames-1].strm[0]
s[::verbosity].strm[0] == s[::numFilesProcessed-1].strm[0]
s[::verbosity].strm[0] == s[::opMode-1].strm[0]
s[::verbosity].strm->avail_in == s[::numFileNames-1].strm->avail_in
s[::verbosity].strm->avail_in == s[::numFilesProcessed-1].strm->avail_in
s[::verbosity].strm->avail_in == s[::opMode-1].strm->avail_in
s[::verbosity].strm->total_in_lo32 == s[::numFileNames-1].strm->total_in_lo32
s[::verbosity].strm->total_in_lo32 == s[::numFilesProcessed-1].strm->total_in_lo32
s[::verbosity].strm->total_in_lo32 == s[::opMode-1].strm->total_in_lo32
s[::verbosity].strm->avail_out == s[::numFileNames-1].strm->avail_out
s[::verbosity].strm->avail_out == s[::numFilesProcessed-1].strm->avail_out
s[::verbosity].strm->avail_out == s[::opMode-1].strm->avail_out
s[::verbosity].strm->total_out_lo32 == s[::numFileNames-1].strm->total_out_lo32
s[::verbosity].strm->total_out_lo32 == s[::numFilesProcessed-1].strm->total_out_lo32
s[::verbosity].strm->total_out_lo32 == s[::opMode-1].strm->total_out_lo32
s[::verbosity].strm->state == s[::numFileNames-1].strm->state
s[::verbosity].strm->state == s[::numFilesProcessed-1].strm->state
s[::verbosity].strm->state == s[::opMode-1].strm->state
s[::verbosity].strm->bzalloc == s[::numFileNames-1].strm->bzalloc
s[::verbosity].strm->bzalloc == s[::numFilesProcessed-1].strm->bzalloc
s[::verbosity].strm->bzalloc == s[::opMode-1].strm->bzalloc
s[::verbosity].strm->bzfree == s[::numFileNames-1].strm->bzfree
s[::verbosity].strm->bzfree == s[::numFilesProcessed-1].strm->bzfree
s[::verbosity].strm->bzfree == s[::opMode-1].strm->bzfree
s[::verbosity].strm->opaque == s[::numFileNames-1].strm->opaque
s[::verbosity].strm->opaque == s[::numFilesProcessed-1].strm->opaque
s[::verbosity].strm->opaque == s[::opMode-1].strm->opaque
s[::verbosity].mode == s[::numFileNames-1].mode
s[::verbosity].mode == s[::numFilesProcessed-1].mode
s[::verbosity].mode == s[::opMode-1].mode
s[::verbosity].avail_in_expect == s[::numFileNames-1].avail_in_expect
s[::verbosity].avail_in_expect == s[::numFilesProcessed-1].avail_in_expect
s[::verbosity].avail_in_expect == s[::opMode-1].avail_in_expect
s[::verbosity].arr1 == s[::numFileNames-1].arr1
s[::verbosity].arr1 == s[::numFileNames-1].ptr
s[::verbosity].arr1 == s[::numFilesProcessed-1].arr1
s[::verbosity].arr1 == s[::numFilesProcessed-1].ptr
s[::verbosity].arr1 == s[::opMode-1].arr1
s[::verbosity].arr1 == s[::opMode-1].ptr
s[::verbosity].arr1[0] == s[::numFileNames-1].arr1[0]
s[::verbosity].arr1[0] == s[::numFileNames-1].ptr[0]
s[::verbosity].arr1[0] == s[::numFilesProcessed-1].arr1[0]
s[::verbosity].arr1[0] == s[::numFilesProcessed-1].ptr[0]
s[::verbosity].arr1[0] == s[::opMode-1].arr1[0]
s[::verbosity].arr1[0] == s[::opMode-1].ptr[0]
s[::verbosity].arr2 == s[::numFileNames-1].arr2
s[::verbosity].arr2 == s[::numFilesProcessed-1].arr2
s[::verbosity].arr2 == s[::opMode-1].arr2
s[::verbosity].arr2[0] == s[::numFileNames-1].arr2[0]
s[::verbosity].arr2[0] == s[::numFilesProcessed-1].arr2[0]
s[::verbosity].arr2[0] == s[::opMode-1].arr2[0]
s[::verbosity].ftab == s[::numFileNames-1].ftab
s[::verbosity].ftab == s[::numFilesProcessed-1].ftab
s[::verbosity].ftab == s[::opMode-1].ftab
s[::verbosity].ftab[0] == s[::numFileNames-1].ftab[0]
s[::verbosity].ftab[0] == s[::numFilesProcessed-1].ftab[0]
s[::verbosity].ftab[0] == s[::opMode-1].ftab[0]
s[::verbosity].origPtr == s[::numFileNames-1].origPtr
s[::verbosity].origPtr == s[::numFilesProcessed-1].origPtr
s[::verbosity].origPtr == s[::opMode-1].origPtr
s[::verbosity].block == s[::numFileNames-1].block
s[::verbosity].block == s[::numFilesProcessed-1].block
s[::verbosity].block == s[::opMode-1].block
s[::verbosity].block[0] == s[::numFileNames-1].block[0]
s[::verbosity].block[0] == s[::numFilesProcessed-1].block[0]
s[::verbosity].block[0] == s[::opMode-1].block[0]
s[::verbosity].mtfv == s[::numFileNames-1].mtfv
s[::verbosity].mtfv == s[::numFilesProcessed-1].mtfv
s[::verbosity].mtfv == s[::opMode-1].mtfv
s[::verbosity].mtfv[0] == s[::numFileNames-1].mtfv[0]
s[::verbosity].mtfv[0] == s[::numFilesProcessed-1].mtfv[0]
s[::verbosity].mtfv[0] == s[::opMode-1].mtfv[0]
s[::verbosity].zbits == s[::numFileNames-1].zbits
s[::verbosity].zbits == s[::numFilesProcessed-1].zbits
s[::verbosity].zbits == s[::opMode-1].zbits
s[::verbosity].zbits[0] == s[::numFileNames-1].zbits[0]
s[::verbosity].zbits[0] == s[::numFilesProcessed-1].zbits[0]
s[::verbosity].zbits[0] == s[::opMode-1].zbits[0]
s[::verbosity].state_in_ch == s[::numFileNames-1].state_in_ch
s[::verbosity].state_in_ch == s[::numFilesProcessed-1].state_in_ch
s[::verbosity].state_in_ch == s[::opMode-1].state_in_ch
s[::verbosity].state_in_len == s[::numFileNames-1].state_in_len
s[::verbosity].state_in_len == s[::numFilesProcessed-1].state_in_len
s[::verbosity].state_in_len == s[::opMode-1].state_in_len
s[::verbosity].nblock == s[::numFileNames-1].nblock
s[::verbosity].nblock == s[::numFilesProcessed-1].nblock
s[::verbosity].nblock == s[::opMode-1].nblock
s[::verbosity].nblockMAX == s[::numFileNames-1].nblockMAX
s[::verbosity].nblockMAX == s[::numFilesProcessed-1].nblockMAX
s[::verbosity].nblockMAX == s[::opMode-1].nblockMAX
s[::verbosity].nInUse == s[::numFileNames-1].nInUse
s[::verbosity].nInUse == s[::numFilesProcessed-1].nInUse
s[::verbosity].nInUse == s[::opMode-1].nInUse
s[::verbosity].inUse == s[::numFileNames-1].inUse
s[::verbosity].inUse == s[::numFilesProcessed-1].inUse
s[::verbosity].inUse == s[::opMode-1].inUse
s[::verbosity].unseqToSeq[0] == s[::numFileNames-1].unseqToSeq[0]
s[::verbosity].unseqToSeq[0] == s[::numFilesProcessed-1].unseqToSeq[0]
s[::verbosity].unseqToSeq[0] == s[::opMode-1].unseqToSeq[0]
s[::verbosity].bsBuff == s[::numFileNames-1].bsBuff
s[::verbosity].bsBuff == s[::numFilesProcessed-1].bsBuff
s[::verbosity].bsBuff == s[::opMode-1].bsBuff
s[::verbosity].bsLive == s[::numFileNames-1].bsLive
s[::verbosity].bsLive == s[::numFilesProcessed-1].bsLive
s[::verbosity].bsLive == s[::opMode-1].bsLive
s[::verbosity].blockCRC == s[::numFileNames-1].blockCRC
s[::verbosity].blockCRC == s[::numFilesProcessed-1].blockCRC
s[::verbosity].blockCRC == s[::opMode-1].blockCRC
s[::verbosity].combinedCRC == s[::numFileNames-1].combinedCRC
s[::verbosity].combinedCRC == s[::numFilesProcessed-1].combinedCRC
s[::verbosity].combinedCRC == s[::opMode-1].combinedCRC
s[::verbosity].blockNo == s[::numFileNames-1].blockNo
s[::verbosity].blockNo == s[::numFilesProcessed-1].blockNo
s[::verbosity].blockNo == s[::opMode-1].blockNo
s[::verbosity].nMTF == s[::numFileNames-1].nMTF
s[::verbosity].nMTF == s[::numFilesProcessed-1].nMTF
s[::verbosity].nMTF == s[::opMode-1].nMTF
s[::verbosity].mtfFreq == s[::numFileNames-1].mtfFreq
s[::verbosity].mtfFreq == s[::numFilesProcessed-1].mtfFreq
s[::verbosity].mtfFreq == s[::opMode-1].mtfFreq
s[::verbosity].mtfFreq[0] == s[::numFileNames-1].mtfFreq[0]
s[::verbosity].mtfFreq[0] == s[::numFilesProcessed-1].mtfFreq[0]
s[::verbosity].mtfFreq[0] == s[::opMode-1].mtfFreq[0]
s[::verbosity].selector == s[::numFileNames-1].selector
s[::verbosity].selector == s[::numFilesProcessed-1].selector
s[::verbosity].selector == s[::opMode-1].selector
s[::verbosity].selector[0] == s[::numFileNames-1].selector[0]
s[::verbosity].selector[0] == s[::numFileNames-1].selectorMtf[0]
s[::verbosity].selector[0] == s[::numFilesProcessed-1].selector[0]
s[::verbosity].selector[0] == s[::numFilesProcessed-1].selectorMtf[0]
s[::verbosity].selector[0] == s[::opMode-1].selector[0]
s[::verbosity].selector[0] == s[::opMode-1].selectorMtf[0]
s[::verbosity].selectorMtf == s[::numFileNames-1].selectorMtf
s[::verbosity].selectorMtf == s[::numFilesProcessed-1].selectorMtf
s[::verbosity].selectorMtf == s[::opMode-1].selectorMtf
s[::verbosity].len[0] == s[::numFileNames-1].len[0]
s[::verbosity].len[0] == s[::numFilesProcessed-1].len[0]
s[::verbosity].len[0] == s[::opMode-1].len[0]
s[::verbosity].len[0][0] == s[::numFileNames-1].len[0][0]
s[::verbosity].len[0][0] == s[::numFileNames-1].len[1][0]
s[::verbosity].len[0][0] == s[::numFileNames-1].len[2][0]
s[::verbosity].len[0][0] == s[::numFileNames-1].len[3][0]
s[::verbosity].len[0][0] == s[::numFileNames-1].len[4][0]
s[::verbosity].len[0][0] == s[::numFilesProcessed-1].len[0][0]
s[::verbosity].len[0][0] == s[::numFilesProcessed-1].len[1][0]
s[::verbosity].len[0][0] == s[::numFilesProcessed-1].len[2][0]
s[::verbosity].len[0][0] == s[::numFilesProcessed-1].len[3][0]
s[::verbosity].len[0][0] == s[::numFilesProcessed-1].len[4][0]
s[::verbosity].len[0][0] == s[::opMode-1].len[0][0]
s[::verbosity].len[0][0] == s[::opMode-1].len[1][0]
s[::verbosity].len[0][0] == s[::opMode-1].len[2][0]
s[::verbosity].len[0][0] == s[::opMode-1].len[3][0]
s[::verbosity].len[0][0] == s[::opMode-1].len[4][0]
s[::verbosity].len[1] == s[::numFileNames-1].len[1]
s[::verbosity].len[1] == s[::numFilesProcessed-1].len[1]
s[::verbosity].len[1] == s[::opMode-1].len[1]
s[::verbosity].len[2] == s[::numFileNames-1].len[2]
s[::verbosity].len[2] == s[::numFilesProcessed-1].len[2]
s[::verbosity].len[2] == s[::opMode-1].len[2]
s[::verbosity].len[3] == s[::numFileNames-1].len[3]
s[::verbosity].len[3] == s[::numFilesProcessed-1].len[3]
s[::verbosity].len[3] == s[::opMode-1].len[3]
s[::verbosity].len[4] == s[::numFileNames-1].len[4]
s[::verbosity].len[4] == s[::numFilesProcessed-1].len[4]
s[::verbosity].len[4] == s[::opMode-1].len[4]
s[::verbosity].len[5] == s[::numFileNames-1].len[5]
s[::verbosity].len[5] == s[::numFilesProcessed-1].len[5]
s[::verbosity].len[5] == s[::opMode-1].len[5]
s[::verbosity].len[5][0] == s[::numFileNames-1].len[5][0]
s[::verbosity].len[5][0] == s[::numFilesProcessed-1].len[5][0]
s[::verbosity].len[5][0] == s[::opMode-1].len[5][0]
s[::verbosity].code[0] == s[::numFileNames-1].code[0]
s[::verbosity].code[0] == s[::numFilesProcessed-1].code[0]
s[::verbosity].code[0] == s[::opMode-1].code[0]
s[::verbosity].code[0][0] == s[::numFileNames-1].code[0][0]
s[::verbosity].code[0][0] == s[::numFilesProcessed-1].code[0][0]
s[::verbosity].code[0][0] == s[::opMode-1].code[0][0]
s[::verbosity].code[1] == s[::numFileNames-1].code[1]
s[::verbosity].code[1] == s[::numFilesProcessed-1].code[1]
s[::verbosity].code[1] == s[::opMode-1].code[1]
s[::verbosity].code[1][0] == s[::numFileNames-1].code[1][0]
s[::verbosity].code[1][0] == s[::numFilesProcessed-1].code[1][0]
s[::verbosity].code[1][0] == s[::opMode-1].code[1][0]
s[::verbosity].code[2] == s[::numFileNames-1].code[2]
s[::verbosity].code[2] == s[::numFilesProcessed-1].code[2]
s[::verbosity].code[2] == s[::opMode-1].code[2]
s[::verbosity].code[2][0] == s[::numFileNames-1].code[2][0]
s[::verbosity].code[2][0] == s[::numFilesProcessed-1].code[2][0]
s[::verbosity].code[2][0] == s[::opMode-1].code[2][0]
s[::verbosity].code[3] == s[::numFileNames-1].code[3]
s[::verbosity].code[3] == s[::numFilesProcessed-1].code[3]
s[::verbosity].code[3] == s[::opMode-1].code[3]
s[::verbosity].code[3][0] == s[::numFileNames-1].code[3][0]
s[::verbosity].code[3][0] == s[::numFilesProcessed-1].code[3][0]
s[::verbosity].code[3][0] == s[::opMode-1].code[3][0]
s[::verbosity].code[4] == s[::numFileNames-1].code[4]
s[::verbosity].code[4] == s[::numFilesProcessed-1].code[4]
s[::verbosity].code[4] == s[::opMode-1].code[4]
s[::verbosity].code[4][0] == s[::numFileNames-1].code[4][0]
s[::verbosity].code[4][0] == s[::numFilesProcessed-1].code[4][0]
s[::verbosity].code[4][0] == s[::opMode-1].code[4][0]
s[::verbosity].code[5] == s[::numFileNames-1].code[5]
s[::verbosity].code[5] == s[::numFilesProcessed-1].code[5]
s[::verbosity].code[5] == s[::opMode-1].code[5]
s[::verbosity].rfreq[0] == s[::numFileNames-1].rfreq[0]
s[::verbosity].rfreq[0] == s[::numFilesProcessed-1].rfreq[0]
s[::verbosity].rfreq[0] == s[::opMode-1].rfreq[0]
s[::verbosity].rfreq[1] == s[::numFileNames-1].rfreq[1]
s[::verbosity].rfreq[1] == s[::numFilesProcessed-1].rfreq[1]
s[::verbosity].rfreq[1] == s[::opMode-1].rfreq[1]
s[::verbosity].rfreq[2] == s[::numFileNames-1].rfreq[2]
s[::verbosity].rfreq[2] == s[::numFilesProcessed-1].rfreq[2]
s[::verbosity].rfreq[2] == s[::opMode-1].rfreq[2]
s[::verbosity].rfreq[3] == s[::numFileNames-1].rfreq[3]
s[::verbosity].rfreq[3] == s[::numFilesProcessed-1].rfreq[3]
s[::verbosity].rfreq[3] == s[::opMode-1].rfreq[3]
s[::verbosity].rfreq[4] == s[::numFileNames-1].rfreq[4]
s[::verbosity].rfreq[4] == s[::numFilesProcessed-1].rfreq[4]
s[::verbosity].rfreq[4] == s[::opMode-1].rfreq[4]
s[::verbosity].rfreq[5] == s[::numFileNames-1].rfreq[5]
s[::verbosity].rfreq[5] == s[::numFilesProcessed-1].rfreq[5]
s[::verbosity].rfreq[5] == s[::opMode-1].rfreq[5]
s[::verbosity].len_pack == s[::numFileNames-1].len_pack
s[::verbosity].len_pack == s[::numFilesProcessed-1].len_pack
s[::verbosity].len_pack == s[::opMode-1].len_pack
s[::verbosity].len_pack[0] == s[::numFileNames-1].len_pack[0]
s[::verbosity].len_pack[0] == s[::numFilesProcessed-1].len_pack[0]
s[::verbosity].len_pack[0] == s[::opMode-1].len_pack[0]
::incs has only one value
::incs[] == [1, 4, 13, 40, 121, 364, 1093, 3280, 9841, 29524, 88573, 265720, 797161, 2391484]
::incs[] elements >= 1
::bzerrorstrings has only one value
::bzerrorstrings[] == [OK, SEQUENCE_ERROR, PARAM_ERROR, MEM_ERROR, DATA_ERROR, DATA_ERROR_MAGIC, IO_ERROR, UNEXPECTED_EOF, OUTBUFF_FULL, CONFIG_ERROR, ???, ???, ???, ???, ???, ???]
::fileMetaInfo has only one value
::fileMetaInfo.st_dev == 2049
::fileMetaInfo.st_ino == 936492
::fileMetaInfo.st_nlink == 1
::fileMetaInfo.st_mode == 33277
::fileMetaInfo.st_uid == 1000
::fileMetaInfo.st_rdev == 0
::fileMetaInfo.st_size == 5738700
::fileMetaInfo.st_blksize == 4096
::fileMetaInfo.st_blocks == 11216
::fileMetaInfo.st_atim has only one value
::fileMetaInfo.st_atim.tv_sec == 1496096467
::fileMetaInfo.st_atim.tv_nsec == 709424920
::fileMetaInfo.st_mtim has only one value
::fileMetaInfo.st_mtim.tv_sec == 1483563943
::fileMetaInfo.st_mtim.tv_nsec == 421335644
::fileMetaInfo.st_ctim has only one value
::fileMetaInfo.__glibc_reserved has only one value
::fileMetaInfo.__glibc_reserved[] == [0, 0, 0]
::fileMetaInfo.__glibc_reserved[] elements == 0
::BZ2_rNums has only one value
::BZ2_rNums[] == [619, 720, 127, 481, 931, 816, 813, 233, 566, 247, 985, 724, 205, 454, 863, 491, 741, 242, 949, 214, 733, 859, 335, 708, 621, 574, 73, 654, 730, 472, 419, 436, 278, 496, 867, 210, 399, 680, 480, 51, 878, 465, 811, 169, 869, 675, 611, 697, 867, 561, 862, 687, 507, 283, 482, 129, 807, 591, 733, 623, 150, 238, 59, 379, 684, 877, 625, 169, 643, 105, 170, 607, 520, 932, 727, 476, 693, 425, 174, 647, 73, 122, 335, 530, 442, 853, 695, 249, 445, 515, 909, 545, 703, 919, 874, 474, 882, 500, 594, 612, 641, 801, 220, 162, 819, 984, 589, 513, 495, 799, 161, 604, 958, 533, 221, 400, 386, 867, 600, 782, 382, 596, 414, 171, 516, 375, 682, 485, 911, 276, 98, 553, 163, 354, 666, 933, 424, 341, 533, 870, 227, 730, 475, 186, 263, 647, 537, 686, 600, 224, 469, 68, 770, 919, 190, 373, 294, 822, 808, 206, 184, 943, 795, 384, 383, 461, 404, 758, 839, 887, 715, 67, 618, 276, 204, 918, 873, 777, 604, 560, 951, 160, 578, 722, 79, 804, 96, 409, 713, 940, 652, 934, 970, 447, 318, 353, 859, 672, 112, 785, 645, 863, 803, 350, 139, 93, 354, 99, 820, 908, 609, 772, 154, 274, 580, 184, 79, 626, 630, 742, 653, 282, 762, 623, 680, 81, 927, 626, 789, 125, 411, 521, 938, 300, 821, 78, 343, 175, 128, 250, 170, 774, 972, 275, 999, 639, 495, 78, 352, 126, 857, 956, 358, 619, 580, 124, 737, 594, 701, 612, 669, 112, 134, 694, 363, 992, 809, 743, 168, 974, 944, 375, 748, 52, 600, 747, 642, 182, 862, 81, 344, 805, 988, 739, 511, 655, 814, 334, 249, 515, 897, 955, 664, 981, 649, 113, 974, 459, 893, 228, 433, 837, 553, 268, 926, 240, 102, 654, 459, 51, 686, 754, 806, 760, 493, 403, 415, 394, 687, 700, 946, 670, 656, 610, 738, 392, 760, 799, 887, 653, 978, 321, 576, 617, 626, 502, 894, 679, 243, 440, 680, 879, 194, 572, 640, 724, 926, 56, 204, 700, 707, 151, 457, 449, 797, 195, 791, 558, 945, 679, 297, 59, 87, 824, 713, 663, 412, 693, 342, 606, 134, 108, 571, 364, 631, 212, 174, 643, 304, 329, 343, 97, 430, 751, 497, 314, 983, 374, 822, 928, 140, 206, 73, 263, 980, 736, 876, 478, 430, 305, 170, 514, 364, 692, 829, 82, 855, 953, 676, 246, 369, 970, 294, 750, 807, 827, 150, 790, 288, 923, 804, 378, 215, 828, 592, 281, 565, 555, 710, 82, 896, 831, 547, 261, 524, 462, 293, 465, 502, 56, 661, 821, 976, 991, 658, 869, 905, 758, 745, 193, 768, 550, 608, 933, 378, 286, 215, 979, 792, 961, 61, 688, 793, 644, 986, 403, 106, 366, 905, 644, 372, 567, 466, 434, 645, 210, 389, 550, 919, 135, 780, 773, 635, 389, 707, 100, 626, 958, 165, 504, 920, 176, 193, 713, 857, 265, 203, 50, 668, 108, 645, 990, 626, 197, 510, 357, 358, 850, 858, 364, 936, 638]
::BZ2_crc32Table has only one value
::BZ2_crc32Table[] == [0, 79764919, 159529838, 222504665, 319059676, 398814059, 445009330, 507990021, 638119352, 583659535, 797628118, 726387553, 890018660, 835552979, 1015980042, 944750013, 1276238704, 1221641927, 1167319070, 1095957929, 1595256236, 1540665371, 1452775106, 1381403509, 1780037320, 1859660671, 1671105958, 1733955601, 2031960084, 2111593891, 1889500026, 1952343757, 2552477408, 2632100695, 2443283854, 2506133561, 2334638140, 2414271883, 2191915858, 2254759653, 3190512472, 3135915759, 3081330742, 3009969537, 2905550212, 2850959411, 2762807018, 2691435357, 3560074640, 3505614887, 3719321342, 3648080713, 3342211916, 3287746299, 3467911202, 3396681109, 4063920168, 4143685023, 4223187782, 4286162673, 3779000052, 3858754371, 3904687514, 3967668269, 881225847, 809987520, 1023691545, 969234094, 662832811, 591600412, 771767749, 717299826, 311336399, 374308984, 453813921, 533576470, 25881363, 88864420, 134795389, 214552010, 2023205639, 2086057648, 1897238633, 1976864222, 1804852699, 1867694188, 1645340341, 1724971778, 1587496639, 1516133128, 1461550545, 1406951526, 1302016099, 1230646740, 1142491917, 1087903418, 2896545431, 2825181984, 2770861561, 2716262478, 3215044683, 3143675388, 3055782693, 3001194130, 2326604591, 2389456536, 2200899649, 2280525302, 2578013683, 2640855108, 2418763421, 2498394922, 3769900519, 3832873040, 3912640137, 3992402750, 4088425275, 4151408268, 4197601365, 4277358050, 3334271071, 3263032808, 3476998961, 3422541446, 3585640067, 3514407732, 3694837229, 3640369242, 1762451694, 1842216281, 1619975040, 1682949687, 2047383090, 2127137669, 1938468188, 2001449195, 1325665622, 1271206113, 1183200824, 1111960463, 1543535498, 1489069629, 1434599652, 1363369299, 622672798, 568075817, 748617968, 677256519, 907627842, 853037301, 1067152940, 995781531, 51762726, 131386257, 177728840, 240578815, 269590778, 349224269, 429104020, 491947555, 4046411278, 4126034873, 4172115296, 4234965207, 3794477266, 3874110821, 3953728444, 4016571915, 3609705398, 3555108353, 3735388376, 3664026991, 3290680682, 3236090077, 3449943556, 3378572211, 3174993278, 3120533705, 3032266256, 2961025959, 2923101090, 2868635157, 2813903052, 2742672763, 2604032198, 2683796849, 2461293480, 2524268063, 2284983834, 2364738477, 2175806836, 2238787779, 1569362073, 1498123566, 1409854455, 1355396672, 1317987909, 1246755826, 1192025387, 1137557660, 2072149281, 2135122070, 1912620623, 1992383480, 1753615357, 1816598090, 1627664531, 1707420964, 295390185, 358241886, 404320391, 483945776, 43990325, 106832002, 186451547, 266083308, 932423249, 861060070, 1041341759, 986742920, 613929101, 542559546, 756411363, 701822548, 3316196985, 3244833742, 3425377559, 3370778784, 3601682597, 3530312978, 3744426955, 3689838204, 3819031489, 3881883254, 3928223919, 4007849240, 4037393693, 4100235434, 4180117107, 4259748804, 2310601993, 2373574846, 2151335527, 2231098320, 2596047829, 2659030626, 2470359227, 2550115596, 2947551409, 2876312838, 2788305887, 2733848168, 3165939309, 3094707162, 3040238851, 2985771188]
::BZ2_crc32Table[] elements >= 0
::mammamia == 3216
::keepInputFiles == 1
::smallMode == 0
::numFileNames == 1
::blockSize100k == 9
::longestFileName == 20
::inName == "../inputs/in_big.txt"
::outName == "../inputs/in_big.txt.bz2"
::tmpName == ""
::progName == "zip-injected"
::progNameReally == "./zip-injected"
::outputHandleJustInCase has only one value
::workFactor == 30
::zSuffix has only one value
::zSuffix[] == [.bz2, .bz, .tbz2, .tbz]
::unzSuffix has only one value
::unzSuffix[] == [, , .tar, .tar]
::unzSuffix[] elements one of { "", ".tar" }
s has only one value
s[] contains no nulls and has only one value, of length 1
s[] elements has only one value
s[].strm contains no nulls and has only one value, of length 1
s[].strm elements has only one value
s[].strm[0] contains no nulls and has only one value, of length 1
s[].strm[0] elements has only one value
s[].strm->total_in_hi32 == [0]
s[].strm->total_in_hi32 elements == 0
s[].strm->next_out elements one of { "BZh91AY&SY\361\031\246\204", "\177\346(+$\312k%jvM\340\307\267\217 \017\3069@\r\260\240\003\010", "\376\030\240\254\223)\254\324\211\360\243\002~\321\374\200?\030\345" }
s[].strm->avail_out == [5000]
s[].strm->avail_out elements == 5000
s[].strm->state contains no nulls and has only one value, of length 1
s[].strm->state elements has only one value
s[].strm->bzalloc contains no nulls and has only one value, of length 1
s[].strm->bzalloc elements has only one value
s[].strm->bzfree contains no nulls and has only one value, of length 1
s[].strm->bzfree elements has only one value
s[].strm->opaque == [null]
s[].strm->opaque elements == null
s[].mode elements one of { 2, 4 }
s[].mode one of { [2], [4] }
s[].state == [2]
s[].state elements == 2
s[].avail_in_expect == [0]
s[].avail_in_expect elements == 0
s[].arr1 contains no nulls and has only one value, of length 1
s[].arr1 elements has only one value
s[].arr1[0] elements one of { 23, 65559 }
s[].arr1[0] one of { [23], [65559] }
s[].arr2 contains no nulls and has only one value, of length 1
s[].arr2 elements has only one value
s[].ftab contains no nulls and has only one value, of length 1
s[].ftab elements has only one value
s[].ftab[0] == [4294967295]
s[].ftab[0] elements == 4294967295L
s[].origPtr elements one of { 65814, 654151, 818040 }
s[].origPtr one of { [65814], [654151], [818040] }
s[].block contains no nulls and has only one value, of length 1
s[].block elements has only one value
s[].mtfv contains no nulls and has only one value, of length 1
s[].mtfv elements has only one value
s[].mtfv[0] == [23]
s[].mtfv[0] elements == 23
s[].zbits[0] elements one of { 66, 127, 254 }
s[].zbits[0] one of { [66], [127], [254] }
s[].workFactor == [30]
s[].workFactor elements == 30
s[].state_in_len elements one of { 0, 1 }
s[].state_in_len one of { [0], [1] }
s[].nblock elements one of { 572335, 899981, 899982 }
s[].nblock one of { [572335], [899981], [899982] }
s[].nblockMAX == [899981]
s[].nblockMAX elements == 899981
s[].numZ == [0]
s[].numZ elements == 0
s[].nInUse == [24]
s[].nInUse elements == 24
s[].inUse contains no nulls and has only one value, of length 1
s[].inUse elements has only one value
s[].inUse[0] == [1]
s[].inUse[0] elements == 1
s[].unseqToSeq[0] == [0]
s[].unseqToSeq[0] elements == 0
s[].bsBuff elements one of { 805044224, 2145386496, 4261412864L }
s[].bsBuff one of { [805044224], [2145386496], [4261412864] }
s[].bsLive elements one of { 9, 11, 14 }
s[].bsLive one of { [9], [11], [14] }
s[].blockSize100k == [9]
s[].blockSize100k elements == 9
s[].nMTF elements one of { 3748, 3749 }
s[].nMTF one of { [3748], [3749] }
s[].mtfFreq contains no nulls and has only one value, of length 1
s[].mtfFreq elements has only one value
s[].mtfFreq[0] elements one of { 1335, 1399, 1474 }
s[].mtfFreq[0] one of { [1335], [1399], [1474] }
s[].selector contains no nulls and has only one value, of length 1
s[].selector elements has only one value
s[].selector[0] elements one of { 4, 5 }
s[].selector[0] one of { [4], [5] }
s[].selectorMtf contains no nulls and has only one value, of length 1
s[].selectorMtf elements has only one value
s[].len[0] contains no nulls and has only one value, of length 1
s[].len[0] elements has only one value
s[].len[0][0] == [5]
s[].len[0][0] elements == 5
s[].len[1] contains no nulls and has only one value, of length 1
s[].len[1] elements has only one value
s[].len[2] contains no nulls and has only one value, of length 1
s[].len[2] elements has only one value
s[].len[3] contains no nulls and has only one value, of length 1
s[].len[3] elements has only one value
s[].len[4] contains no nulls and has only one value, of length 1
s[].len[4] elements has only one value
s[].len[5] contains no nulls and has only one value, of length 1
s[].len[5] elements has only one value
s[].len[5][0] == [4]
s[].len[5][0] elements == 4
s[].code[0] contains no nulls and has only one value, of length 1
s[].code[0] elements has only one value
s[].code[0][0] == [12]
s[].code[0][0] elements == 12
s[].code[1] contains no nulls and has only one value, of length 1
s[].code[1] elements has only one value
s[].code[1][0] == [13]
s[].code[1][0] elements == 13
s[].code[2] contains no nulls and has only one value, of length 1
s[].code[2] elements has only one value
s[].code[2][0] == [14]
s[].code[2][0] elements == 14
s[].code[3] contains no nulls and has only one value, of length 1
s[].code[3] elements has only one value
s[].code[3][0] == [15]
s[].code[3][0] elements == 15
s[].code[4] contains no nulls and has only one value, of length 1
s[].code[4] elements has only one value
s[].code[4][0] == [16]
s[].code[4][0] elements == 16
s[].code[5] contains no nulls and has only one value, of length 1
s[].code[5] elements has only one value
s[].code[5][0] == [0]
s[].code[5][0] elements == 0
s[].rfreq[0] contains no nulls and has only one value, of length 1
s[].rfreq[0] elements has only one value
s[].rfreq[1] contains no nulls and has only one value, of length 1
s[].rfreq[1] elements has only one value
s[].rfreq[2] contains no nulls and has only one value, of length 1
s[].rfreq[2] elements has only one value
s[].rfreq[3] contains no nulls and has only one value, of length 1
s[].rfreq[3] elements has only one value
s[].rfreq[4] contains no nulls and has only one value, of length 1
s[].rfreq[4] elements has only one value
s[].rfreq[5] contains no nulls and has only one value, of length 1
s[].rfreq[5] elements has only one value
s[].len_pack contains no nulls and has only one value, of length 1
s[].len_pack elements has only one value
s[].len_pack[0] == [327685]
s[].len_pack[0] elements == 327685
is_last_block one of { 0, 1 }
size(::incs[]) == 14
size(::bzerrorstrings[]) == 16
size(::BZ2_rNums[]) == 512
size(::BZ2_crc32Table[]) == 256
size(::zSuffix[]) == 4
size(s[].len[0]) == 1
::incs[::blockSize100k] == 29524
::incs[::blockSize100k-1] == 9841
::incs[::srcMode] == 40
::BZ2_rNums[::verbosity] == 619
::BZ2_rNums[::numFileNames] == 720
::BZ2_rNums[::blockSize100k] == 247
::BZ2_rNums[::blockSize100k-1] == 566
::BZ2_rNums[::srcMode] == 481
::BZ2_rNums[::srcMode-1] == 127
::BZ2_rNums[::longestFileName] == 733
::BZ2_rNums[::longestFileName-1] == 214
::BZ2_rNums[::workFactor] == 419
::BZ2_rNums[::workFactor-1] == 472
::BZ2_crc32Table[::verbosity] == 0
::BZ2_crc32Table[::numFileNames] == 79764919
::BZ2_crc32Table[::blockSize100k] == 583659535
::BZ2_crc32Table[::blockSize100k-1] == 638119352
::BZ2_crc32Table[::srcMode] == 222504665
::BZ2_crc32Table[::srcMode-1] == 159529838
::BZ2_crc32Table[::longestFileName] == 1595256236
::BZ2_crc32Table[::longestFileName-1] == 1095957929
::BZ2_crc32Table[::workFactor] == 1889500026
::BZ2_crc32Table[::workFactor-1] == 2111593891
size(s[].len[0]) in ::incs[]
s[::verbosity].code[1][0] in ::incs[]
::fileMetaInfo.__glibc_reserved[] elements == ::verbosity
::fileMetaInfo.__glibc_reserved[] elements == size(s[].len[0])-1
size(s[].len[0])-1 in ::fileMetaInfo.__glibc_reserved[]
size(::BZ2_rNums[])-1 in ::BZ2_rNums[]
s[::verbosity].avail_in_expect in ::BZ2_crc32Table[]
s[].numZ elements == ::verbosity
::verbosity in s[].code[5][0]
s[].code[5][0] elements == ::verbosity
s[].inUse[0] elements == ::keepInputFiles
::smallMode in s[].unseqToSeq[0]
s[].unseqToSeq[0] elements == ::smallMode
s[].blockSize100k elements == ::blockSize100k
::tmpName in ::unzSuffix[]
s[].workFactor elements == ::workFactor
s[] elements == s[::verbosity]
s[].strm elements == s[::verbosity].strm
s[].strm[0] elements == s[::verbosity].strm[0]
s[].strm->avail_in == s[].avail_in_expect (elementwise)
s[].strm->avail_in is the reverse of s[].avail_in_expect
s[].strm->avail_in elements == s[::verbosity].strm->avail_in
s[::verbosity].avail_in_expect in s[].strm->avail_in
s[].strm->avail_in elements == s[::verbosity].avail_in_expect
s[].strm->total_in_lo32 elements == s[::verbosity].strm->total_in_lo32
s[].strm->total_in_hi32 == s[].avail_in_expect (elementwise)
s[].strm->total_in_hi32 is the reverse of s[].avail_in_expect
s[].strm->total_in_hi32 elements == ::BZ2_crc32Table[::verbosity]
s[::verbosity].avail_in_expect in s[].strm->total_in_hi32
s[].strm->total_in_hi32 elements == s[::verbosity].avail_in_expect
s[].strm->avail_out elements == s[::verbosity].strm->avail_out
s[].strm->total_out_lo32 elements == s[::verbosity].strm->total_out_lo32
s[].strm->state elements == s[::verbosity].strm->state
s[].strm->bzalloc elements == s[::verbosity].strm->bzalloc
s[].strm->bzfree elements == s[::verbosity].strm->bzfree
s[].strm->opaque elements == s[::verbosity].strm->opaque
s[].mode elements == s[::verbosity].mode
s[].state elements == size(::fileMetaInfo.__glibc_reserved[])-1
::BZ2_crc32Table[::verbosity] in s[].avail_in_expect
s[].avail_in_expect elements == ::BZ2_crc32Table[::verbosity]
s[::verbosity].strm->avail_in in s[].avail_in_expect
s[].avail_in_expect elements == s[::verbosity].strm->avail_in
s[].avail_in_expect elements == s[::verbosity].avail_in_expect
s[].arr1 elements == s[::verbosity].arr1
s[].arr1[0] elements == s[::verbosity].arr1[0]
s[].arr2 elements == s[::verbosity].arr2
s[].arr2[0] elements == s[::verbosity].arr2[0]
s[].ftab elements == s[::verbosity].ftab
s[].ftab[0] elements == s[::verbosity].ftab[0]
s[].origPtr elements == s[::verbosity].origPtr
s[].block elements == s[::verbosity].block
s[].block[0] elements == s[::verbosity].block[0]
s[].mtfv elements == s[::verbosity].mtfv
s[].mtfv[0] elements == s[::verbosity].mtfv[0]
s[].zbits elements == s[::verbosity].zbits
s[].zbits[0] elements == s[::verbosity].zbits[0]
s[].state_in_ch elements == s[::verbosity].state_in_ch
s[].state_in_len elements == s[::verbosity].state_in_len
s[].nblock elements == s[::verbosity].nblock
s[].nblockMAX elements == s[::verbosity].nblockMAX
s[].numZ == s[].code[5][0] (elementwise)
s[].numZ is the reverse of s[].code[5][0]
s[].numZ elements == size(s[].len[0])-1
size(s[].len[0])-1 in s[].numZ
s[].nInUse elements == s[::verbosity].nInUse
s[].inUse elements == s[::verbosity].inUse
s[].unseqToSeq[0] elements == s[::verbosity].unseqToSeq[0]
s[].bsBuff elements == s[::verbosity].bsBuff
s[].bsLive elements == s[::verbosity].bsLive
s[].blockCRC elements == s[::verbosity].blockCRC
s[].combinedCRC elements == s[::verbosity].combinedCRC
s[].blockNo elements == s[::verbosity].blockNo
s[].nMTF elements == s[::verbosity].nMTF
s[].mtfFreq elements == s[::verbosity].mtfFreq
s[].mtfFreq[0] elements == s[::verbosity].mtfFreq[0]
s[].selector elements == s[::verbosity].selector
s[].selector[0] elements == s[::verbosity].selector[0]
s[].selectorMtf elements == s[::verbosity].selectorMtf
s[].len[0] elements == s[::verbosity].len[0]
s[].len[0][0] elements == s[::verbosity].len[0][0]
s[].len[1] elements == s[::verbosity].len[1]
s[].len[2] elements == s[::verbosity].len[2]
s[].len[3] elements == s[::verbosity].len[3]
s[].len[4] elements == s[::verbosity].len[4]
s[].len[5] elements == s[::verbosity].len[5]
s[].len[5][0] elements == s[::verbosity].len[5][0]
s[].code[0] elements == s[::verbosity].code[0]
s[].code[0][0] elements == s[::verbosity].code[0][0]
s[].code[1] elements == s[::verbosity].code[1]
s[].code[1][0] elements == size(::incs[])-1
size(::incs[])-1 in s[].code[1][0]
s[].code[1][0] elements == s[::verbosity].code[1][0]
s[].code[2] elements == s[::verbosity].code[2]
s[].code[2][0] elements == size(::incs[])
size(::incs[]) in s[].code[2][0]
s[].code[2][0] elements == s[::verbosity].code[2][0]
s[].code[3] elements == s[::verbosity].code[3]
s[].code[3][0] elements == size(::bzerrorstrings[])-1
size(::bzerrorstrings[])-1 in s[].code[3][0]
s[].code[3][0] elements == s[::verbosity].code[3][0]
s[].code[4] elements == s[::verbosity].code[4]
s[].code[4][0] elements == size(::bzerrorstrings[])
size(::bzerrorstrings[]) in s[].code[4][0]
s[].code[4][0] elements == s[::verbosity].code[4][0]
s[].code[5] elements == s[::verbosity].code[5]
s[].code[5][0] elements == size(s[].len[0])-1
s[].rfreq[0] elements == s[::verbosity].rfreq[0]
s[].rfreq[1] elements == s[::verbosity].rfreq[1]
s[].rfreq[2] elements == s[::verbosity].rfreq[2]
s[].rfreq[3] elements == s[::verbosity].rfreq[3]
s[].rfreq[4] elements == s[::verbosity].rfreq[4]
s[].rfreq[5] elements == s[::verbosity].rfreq[5]
s[].len_pack elements == s[::verbosity].len_pack
s[].len_pack[0] elements == s[::verbosity].len_pack[0]
===========================================================================
..BZ2_compressBlock():::EXIT
::incs == orig(::incs)
::incs[] == orig(::incs[])
::bzerrorstrings == orig(::bzerrorstrings)
::fileMetaInfo == orig(::fileMetaInfo)
::fileMetaInfo.st_dev == orig(::fileMetaInfo.st_dev)
::fileMetaInfo.st_ino == orig(::fileMetaInfo.st_ino)
::fileMetaInfo.st_nlink == orig(::fileMetaInfo.st_nlink)
::fileMetaInfo.st_mode == orig(::fileMetaInfo.st_mode)
::fileMetaInfo.st_uid == ::fileMetaInfo.st_gid
::fileMetaInfo.st_uid == orig(::fileMetaInfo.st_uid)
::fileMetaInfo.st_uid == orig(::fileMetaInfo.st_gid)
::fileMetaInfo.__pad0 == ::verbosity
::fileMetaInfo.st_rdev == orig(::fileMetaInfo.st_rdev)
::fileMetaInfo.st_size == orig(::fileMetaInfo.st_size)
::fileMetaInfo.st_blksize == orig(::fileMetaInfo.st_blksize)
::fileMetaInfo.st_blocks == orig(::fileMetaInfo.st_blocks)
::fileMetaInfo.st_atim == orig(::fileMetaInfo.st_atim)
::fileMetaInfo.st_atim.tv_sec == orig(::fileMetaInfo.st_atim.tv_sec)
::fileMetaInfo.st_atim.tv_nsec == orig(::fileMetaInfo.st_atim.tv_nsec)
::fileMetaInfo.st_mtim == orig(::fileMetaInfo.st_mtim)
::fileMetaInfo.st_mtim.tv_sec == ::fileMetaInfo.st_ctim.tv_sec
::fileMetaInfo.st_mtim.tv_sec == orig(::fileMetaInfo.st_mtim.tv_sec)
::fileMetaInfo.st_mtim.tv_sec == orig(::fileMetaInfo.st_ctim.tv_sec)
::fileMetaInfo.st_mtim.tv_nsec == ::fileMetaInfo.st_ctim.tv_nsec
::fileMetaInfo.st_mtim.tv_nsec == orig(::fileMetaInfo.st_mtim.tv_nsec)
::fileMetaInfo.st_mtim.tv_nsec == orig(::fileMetaInfo.st_ctim.tv_nsec)
::fileMetaInfo.st_ctim == orig(::fileMetaInfo.st_ctim)
::fileMetaInfo.__glibc_reserved == orig(::fileMetaInfo.__glibc_reserved)
::fileMetaInfo.__glibc_reserved[] == orig(::fileMetaInfo.__glibc_reserved[])
::BZ2_rNums == orig(::BZ2_rNums)
::BZ2_rNums[] == orig(::BZ2_rNums[])
::BZ2_crc32Table == orig(::BZ2_crc32Table)
::BZ2_crc32Table[] == orig(::BZ2_crc32Table[])
::mammamia == orig(::mammamia)
::verbosity == ::exitValue
::verbosity == orig(::fileMetaInfo.__pad0)
::verbosity == orig(::verbosity)
::verbosity == orig(::exitValue)
::verbosity == size(s[])-1
::verbosity == size(s[].strm[0])-1
::verbosity == size(s[].arr1[0])-1
::verbosity == size(s[].arr2[0])-1
::verbosity == size(s[].ftab[0])-1
::verbosity == size(s[].ptr[0])-1
::verbosity == size(s[].block[0])-1
::verbosity == size(s[].mtfv[0])-1
::verbosity == size(s[].zbits[0])-1
::verbosity == size(s[].inUse[0])-1
::verbosity == size(s[].unseqToSeq[0])-1
::verbosity == size(s[].mtfFreq[0])-1
::verbosity == size(s[].selector[0])-1
::verbosity == size(s[].selectorMtf[0])-1
::verbosity == size(s[].len[0])-1
::verbosity == size(s[].len[0][0])-1
::verbosity == size(s[].len[1])-1
::verbosity == size(s[].len[1][0])-1
::verbosity == size(s[].len[2])-1
::verbosity == size(s[].len[2][0])-1
::verbosity == size(s[].len[3])-1
::verbosity == size(s[].len[3][0])-1
::verbosity == size(s[].len[4])-1
::verbosity == size(s[].len[4][0])-1
::verbosity == size(s[].len[5])-1
::verbosity == size(s[].len[5][0])-1
::verbosity == size(s[].code[0])-1
::verbosity == size(s[].code[0][0])-1
::verbosity == size(s[].code[1])-1
::verbosity == size(s[].code[1][0])-1
::verbosity == size(s[].code[2])-1
::verbosity == size(s[].code[2][0])-1
::verbosity == size(s[].code[3])-1
::verbosity == size(s[].code[3][0])-1
::verbosity == size(s[].code[4])-1
::verbosity == size(s[].code[4][0])-1
::verbosity == size(s[].code[5])-1
::verbosity == size(s[].code[5][0])-1
::verbosity == size(s[].rfreq[0])-1
::verbosity == size(s[].rfreq[0][0])-1
::verbosity == size(s[].rfreq[1])-1
::verbosity == size(s[].rfreq[1][0])-1
::verbosity == size(s[].rfreq[2])-1
::verbosity == size(s[].rfreq[2][0])-1
::verbosity == size(s[].rfreq[3])-1
::verbosity == size(s[].rfreq[3][0])-1
::verbosity == size(s[].rfreq[4])-1
::verbosity == size(s[].rfreq[4][0])-1
::verbosity == size(s[].rfreq[5])-1
::verbosity == size(s[].rfreq[5][0])-1
::verbosity == size(s[].len_pack[0])-1
::verbosity == orig(size(s[]))-1
::verbosity == orig(size(s[].strm[0]))-1
::verbosity == orig(size(s[].arr2[0]))-1
::verbosity == orig(size(s[].block[0]))-1
::verbosity == orig(size(s[].inUse[0]))-1
::verbosity == ::fileMetaInfo.__glibc_reserved[::fileMetaInfo.__pad0]
::verbosity == s[::fileMetaInfo.__pad0].state_out_pos
::verbosity == s[::fileMetaInfo.__pad0].verbosity
::verbosity == s[::fileMetaInfo.__pad0].code[5][0]
::verbosity == s[::fileMetaInfo.__pad0].rfreq[0][0]
::verbosity == s[::fileMetaInfo.__pad0].rfreq[1][0]
::verbosity == s[::fileMetaInfo.__pad0].rfreq[2][0]
::verbosity == s[::fileMetaInfo.__pad0].rfreq[3][0]
::verbosity == s[::fileMetaInfo.__pad0].rfreq[4][0]
::verbosity == s[::fileMetaInfo.__pad0].rfreq[5][0]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::fileMetaInfo.__pad0)])
::verbosity == orig(s[post(::fileMetaInfo.__pad0)].numZ)
::verbosity == orig(s[post(::fileMetaInfo.__pad0)].state_out_pos)
::verbosity == orig(s[post(::fileMetaInfo.__pad0)].verbosity)
::verbosity == ::fileMetaInfo.__glibc_reserved[::verbosity]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::exitValue]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::srcMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::fileMetaInfo.__pad0)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::verbosity)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFileNames)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFileNames)-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFilesProcessed)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFilesProcessed)-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::exitValue)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::opMode)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::opMode)-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::srcMode)-1]
::verbosity == s[::verbosity].state_out_pos
::verbosity == s[::verbosity].verbosity
::verbosity == s[::verbosity].code[5][0]
::verbosity == s[::verbosity].rfreq[0][0]
::verbosity == s[::verbosity].rfreq[1][0]
::verbosity == s[::verbosity].rfreq[2][0]
::verbosity == s[::verbosity].rfreq[3][0]
::verbosity == s[::verbosity].rfreq[4][0]
::verbosity == s[::verbosity].rfreq[5][0]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::verbosity)])
::verbosity == orig(s[post(::verbosity)].numZ)
::verbosity == orig(s[post(::verbosity)].state_out_pos)
::verbosity == orig(s[post(::verbosity)].verbosity)
::verbosity == s[::numFileNames-1].state_out_pos
::verbosity == s[::numFileNames-1].verbosity
::verbosity == s[::numFileNames-1].code[5][0]
::verbosity == s[::numFileNames-1].rfreq[0][0]
::verbosity == s[::numFileNames-1].rfreq[1][0]
::verbosity == s[::numFileNames-1].rfreq[2][0]
::verbosity == s[::numFileNames-1].rfreq[3][0]
::verbosity == s[::numFileNames-1].rfreq[4][0]
::verbosity == s[::numFileNames-1].rfreq[5][0]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFileNames)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFileNames)-1])
::verbosity == orig(s[post(::numFileNames)-1].numZ)
::verbosity == orig(s[post(::numFileNames)-1].state_out_pos)
::verbosity == orig(s[post(::numFileNames)-1].verbosity)
::verbosity == s[::numFilesProcessed-1].state_out_pos
::verbosity == s[::numFilesProcessed-1].verbosity
::verbosity == s[::numFilesProcessed-1].code[5][0]
::verbosity == s[::numFilesProcessed-1].rfreq[0][0]
::verbosity == s[::numFilesProcessed-1].rfreq[1][0]
::verbosity == s[::numFilesProcessed-1].rfreq[2][0]
::verbosity == s[::numFilesProcessed-1].rfreq[3][0]
::verbosity == s[::numFilesProcessed-1].rfreq[4][0]
::verbosity == s[::numFilesProcessed-1].rfreq[5][0]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFilesProcessed)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFilesProcessed)-1])
::verbosity == orig(s[post(::numFilesProcessed)-1].numZ)
::verbosity == orig(s[post(::numFilesProcessed)-1].state_out_pos)
::verbosity == orig(s[post(::numFilesProcessed)-1].verbosity)
::verbosity == s[::exitValue].state_out_pos
::verbosity == s[::exitValue].verbosity
::verbosity == s[::exitValue].code[5][0]
::verbosity == s[::exitValue].rfreq[0][0]
::verbosity == s[::exitValue].rfreq[1][0]
::verbosity == s[::exitValue].rfreq[2][0]
::verbosity == s[::exitValue].rfreq[3][0]
::verbosity == s[::exitValue].rfreq[4][0]
::verbosity == s[::exitValue].rfreq[5][0]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::exitValue)])
::verbosity == orig(s[post(::exitValue)].numZ)
::verbosity == orig(s[post(::exitValue)].state_out_pos)
::verbosity == orig(s[post(::exitValue)].verbosity)
::verbosity == s[::opMode-1].state_out_pos
::verbosity == s[::opMode-1].verbosity
::verbosity == s[::opMode-1].code[5][0]
::verbosity == s[::opMode-1].rfreq[0][0]
::verbosity == s[::opMode-1].rfreq[1][0]
::verbosity == s[::opMode-1].rfreq[2][0]
::verbosity == s[::opMode-1].rfreq[3][0]
::verbosity == s[::opMode-1].rfreq[4][0]
::verbosity == s[::opMode-1].rfreq[5][0]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::opMode)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::opMode)-1])
::verbosity == orig(s[post(::opMode)-1].numZ)
::verbosity == orig(s[post(::opMode)-1].state_out_pos)
::verbosity == orig(s[post(::opMode)-1].verbosity)
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::srcMode)-1])
::verbosity == s[orig(::fileMetaInfo.__pad0)].state_out_pos
::verbosity == s[orig(::verbosity)].state_out_pos
::verbosity == s[orig(::numFileNames)-1].state_out_pos
::verbosity == s[orig(::numFilesProcessed)-1].state_out_pos
::verbosity == s[orig(::exitValue)].state_out_pos
::verbosity == s[orig(::opMode)-1].state_out_pos
::verbosity == s[orig(::fileMetaInfo.__pad0)].verbosity
::verbosity == s[orig(::verbosity)].verbosity
::verbosity == s[orig(::numFileNames)-1].verbosity
::verbosity == s[orig(::numFilesProcessed)-1].verbosity
::verbosity == s[orig(::exitValue)].verbosity
::verbosity == s[orig(::opMode)-1].verbosity
::verbosity == s[orig(::fileMetaInfo.__pad0)].code[5][0]
::verbosity == s[orig(::verbosity)].code[5][0]
::verbosity == s[orig(::numFileNames)-1].code[5][0]
::verbosity == s[orig(::numFilesProcessed)-1].code[5][0]
::verbosity == s[orig(::exitValue)].code[5][0]
::verbosity == s[orig(::opMode)-1].code[5][0]
::verbosity == s[orig(::fileMetaInfo.__pad0)].rfreq[0][0]
::verbosity == s[orig(::verbosity)].rfreq[0][0]
::verbosity == s[orig(::numFileNames)-1].rfreq[0][0]
::verbosity == s[orig(::numFilesProcessed)-1].rfreq[0][0]
::verbosity == s[orig(::exitValue)].rfreq[0][0]
::verbosity == s[orig(::opMode)-1].rfreq[0][0]
::verbosity == s[orig(::fileMetaInfo.__pad0)].rfreq[1][0]
::verbosity == s[orig(::verbosity)].rfreq[1][0]
::verbosity == s[orig(::numFileNames)-1].rfreq[1][0]
::verbosity == s[orig(::numFilesProcessed)-1].rfreq[1][0]
::verbosity == s[orig(::exitValue)].rfreq[1][0]
::verbosity == s[orig(::opMode)-1].rfreq[1][0]
::verbosity == s[orig(::fileMetaInfo.__pad0)].rfreq[2][0]
::verbosity == s[orig(::verbosity)].rfreq[2][0]
::verbosity == s[orig(::numFileNames)-1].rfreq[2][0]
::verbosity == s[orig(::numFilesProcessed)-1].rfreq[2][0]
::verbosity == s[orig(::exitValue)].rfreq[2][0]
::verbosity == s[orig(::opMode)-1].rfreq[2][0]
::verbosity == s[orig(::fileMetaInfo.__pad0)].rfreq[3][0]
::verbosity == s[orig(::verbosity)].rfreq[3][0]
::verbosity == s[orig(::numFileNames)-1].rfreq[3][0]
::verbosity == s[orig(::numFilesProcessed)-1].rfreq[3][0]
::verbosity == s[orig(::exitValue)].rfreq[3][0]
::verbosity == s[orig(::opMode)-1].rfreq[3][0]
::verbosity == s[orig(::fileMetaInfo.__pad0)].rfreq[4][0]
::verbosity == s[orig(::verbosity)].rfreq[4][0]
::verbosity == s[orig(::numFileNames)-1].rfreq[4][0]
::verbosity == s[orig(::numFilesProcessed)-1].rfreq[4][0]
::verbosity == s[orig(::exitValue)].rfreq[4][0]
::verbosity == s[orig(::opMode)-1].rfreq[4][0]
::verbosity == s[orig(::fileMetaInfo.__pad0)].rfreq[5][0]
::verbosity == s[orig(::verbosity)].rfreq[5][0]
::verbosity == s[orig(::numFileNames)-1].rfreq[5][0]
::verbosity == s[orig(::numFilesProcessed)-1].rfreq[5][0]
::verbosity == s[orig(::exitValue)].rfreq[5][0]
::verbosity == s[orig(::opMode)-1].rfreq[5][0]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::fileMetaInfo.__pad0])
::verbosity == orig(s[::fileMetaInfo.__pad0].numZ)
::verbosity == orig(s[::fileMetaInfo.__pad0].state_out_pos)
::verbosity == orig(s[::fileMetaInfo.__pad0].verbosity)
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::verbosity])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFileNames])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFileNames-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFilesProcessed])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFilesProcessed-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::exitValue])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::opMode])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::opMode-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::srcMode-1])
::verbosity == orig(s[::verbosity].numZ)
::verbosity == orig(s[::verbosity].state_out_pos)
::verbosity == orig(s[::verbosity].verbosity)
::verbosity == orig(s[::numFileNames-1].numZ)
::verbosity == orig(s[::numFileNames-1].state_out_pos)
::verbosity == orig(s[::numFileNames-1].verbosity)
::verbosity == orig(s[::numFilesProcessed-1].numZ)
::verbosity == orig(s[::numFilesProcessed-1].state_out_pos)
::verbosity == orig(s[::numFilesProcessed-1].verbosity)
::verbosity == orig(s[::exitValue].numZ)
::verbosity == orig(s[::exitValue].state_out_pos)
::verbosity == orig(s[::exitValue].verbosity)
::verbosity == orig(s[::opMode-1].numZ)
::verbosity == orig(s[::opMode-1].state_out_pos)
::verbosity == orig(s[::opMode-1].verbosity)
::keepInputFiles == ::deleteOutputOnInterrupt
::keepInputFiles == ::noisy
::keepInputFiles == orig(::keepInputFiles)
::keepInputFiles == orig(::deleteOutputOnInterrupt)
::keepInputFiles == orig(::noisy)
::keepInputFiles == s[::fileMetaInfo.__pad0].inUse[0]
::keepInputFiles == orig(s[post(::fileMetaInfo.__pad0)].inUse[0])
::keepInputFiles == s[::verbosity].inUse[0]
::keepInputFiles == orig(s[post(::verbosity)].inUse[0])
::keepInputFiles == s[::numFileNames-1].inUse[0]
::keepInputFiles == orig(s[post(::numFileNames)-1].inUse[0])
::keepInputFiles == s[::numFilesProcessed-1].inUse[0]
::keepInputFiles == orig(s[post(::numFilesProcessed)-1].inUse[0])
::keepInputFiles == s[::exitValue].inUse[0]
::keepInputFiles == orig(s[post(::exitValue)].inUse[0])
::keepInputFiles == s[::opMode-1].inUse[0]
::keepInputFiles == orig(s[post(::opMode)-1].inUse[0])
::keepInputFiles == s[orig(::fileMetaInfo.__pad0)].inUse[0]
::keepInputFiles == s[orig(::verbosity)].inUse[0]
::keepInputFiles == s[orig(::numFileNames)-1].inUse[0]
::keepInputFiles == s[orig(::numFilesProcessed)-1].inUse[0]
::keepInputFiles == s[orig(::exitValue)].inUse[0]
::keepInputFiles == s[orig(::opMode)-1].inUse[0]
::keepInputFiles == orig(s[::fileMetaInfo.__pad0].inUse[0])
::keepInputFiles == orig(s[::verbosity].inUse[0])
::keepInputFiles == orig(s[::numFileNames-1].inUse[0])
::keepInputFiles == orig(s[::numFilesProcessed-1].inUse[0])
::keepInputFiles == orig(s[::exitValue].inUse[0])
::keepInputFiles == orig(s[::opMode-1].inUse[0])
::smallMode == ::forceOverwrite
::smallMode == ::testFailsExist
::smallMode == ::unzFailsExist
::smallMode == orig(::smallMode)
::smallMode == orig(::forceOverwrite)
::smallMode == orig(::testFailsExist)
::smallMode == orig(::unzFailsExist)
::smallMode == s[::fileMetaInfo.__pad0].unseqToSeq[0]
::smallMode == s[::verbosity].unseqToSeq[0]
::smallMode == s[::numFileNames-1].unseqToSeq[0]
::smallMode == s[::numFilesProcessed-1].unseqToSeq[0]
::smallMode == s[::exitValue].unseqToSeq[0]
::smallMode == s[::opMode-1].unseqToSeq[0]
::smallMode == s[orig(::fileMetaInfo.__pad0)].unseqToSeq[0]
::smallMode == s[orig(::verbosity)].unseqToSeq[0]
::smallMode == s[orig(::numFileNames)-1].unseqToSeq[0]
::smallMode == s[orig(::numFilesProcessed)-1].unseqToSeq[0]
::smallMode == s[orig(::exitValue)].unseqToSeq[0]
::smallMode == s[orig(::opMode)-1].unseqToSeq[0]
::numFileNames == ::numFilesProcessed
::numFileNames == ::opMode
::numFileNames == orig(::numFileNames)
::numFileNames == orig(::numFilesProcessed)
::numFileNames == orig(::opMode)
::numFileNames == orig(size(s[]))
::numFileNames == orig(size(s[].strm[0]))
::numFileNames == orig(size(s[].arr2[0]))
::numFileNames == orig(size(s[].block[0]))
::numFileNames == orig(size(s[].inUse[0]))
::numFileNames == ::incs[::fileMetaInfo.__pad0]
::numFileNames == ::incs[::verbosity]
::numFileNames == ::incs[::numFileNames-1]
::numFileNames == ::incs[::numFilesProcessed-1]
::numFileNames == ::incs[::exitValue]
::numFileNames == ::incs[::opMode-1]
::numFileNames == ::incs[orig(::fileMetaInfo.__pad0)]
::numFileNames == ::incs[orig(::verbosity)]
::numFileNames == ::incs[orig(::numFileNames)-1]
::numFileNames == ::incs[orig(::numFilesProcessed)-1]
::numFileNames == ::incs[orig(::exitValue)]
::numFileNames == ::incs[orig(::opMode)-1]
::numFileNames == orig(::incs[post(::fileMetaInfo.__pad0)])
::numFileNames == orig(::incs[post(::verbosity)])
::numFileNames == orig(::incs[post(::numFileNames)-1])
::numFileNames == orig(::incs[post(::numFilesProcessed)-1])
::numFileNames == orig(::incs[post(::exitValue)])
::numFileNames == orig(::incs[post(::opMode)-1])
::numFileNames == orig(::incs[::fileMetaInfo.__pad0])
::numFileNames == orig(::incs[::verbosity])
::numFileNames == orig(::incs[::numFileNames-1])
::numFileNames == orig(::incs[::numFilesProcessed-1])
::numFileNames == orig(::incs[::exitValue])
::numFileNames == orig(::incs[::opMode-1])
::blockSize100k == orig(::blockSize100k)
::blockSize100k == s[::fileMetaInfo.__pad0].blockSize100k
::blockSize100k == orig(s[post(::fileMetaInfo.__pad0)].blockSize100k)
::blockSize100k == s[::verbosity].blockSize100k
::blockSize100k == orig(s[post(::verbosity)].blockSize100k)
::blockSize100k == s[::numFileNames-1].blockSize100k
::blockSize100k == orig(s[post(::numFileNames)-1].blockSize100k)
::blockSize100k == s[::numFilesProcessed-1].blockSize100k
::blockSize100k == orig(s[post(::numFilesProcessed)-1].blockSize100k)
::blockSize100k == s[::exitValue].blockSize100k
::blockSize100k == orig(s[post(::exitValue)].blockSize100k)
::blockSize100k == s[::opMode-1].blockSize100k
::blockSize100k == orig(s[post(::opMode)-1].blockSize100k)
::blockSize100k == s[orig(::fileMetaInfo.__pad0)].blockSize100k
::blockSize100k == s[orig(::verbosity)].blockSize100k
::blockSize100k == s[orig(::numFileNames)-1].blockSize100k
::blockSize100k == s[orig(::numFilesProcessed)-1].blockSize100k
::blockSize100k == s[orig(::exitValue)].blockSize100k
::blockSize100k == s[orig(::opMode)-1].blockSize100k
::blockSize100k == orig(s[::fileMetaInfo.__pad0].blockSize100k)
::blockSize100k == orig(s[::verbosity].blockSize100k)
::blockSize100k == orig(s[::numFileNames-1].blockSize100k)
::blockSize100k == orig(s[::numFilesProcessed-1].blockSize100k)
::blockSize100k == orig(s[::exitValue].blockSize100k)
::blockSize100k == orig(s[::opMode-1].blockSize100k)
::srcMode == orig(::srcMode)
::srcMode == size(::fileMetaInfo.__glibc_reserved[])
::srcMode == size(::zSuffix[])-1
::srcMode == size(::unzSuffix[])-1
::srcMode == orig(size(::fileMetaInfo.__glibc_reserved[]))
::srcMode == orig(size(::zSuffix[]))-1
::srcMode == orig(size(::unzSuffix[]))-1
::longestFileName == orig(::longestFileName)
::outputHandleJustInCase == orig(::outputHandleJustInCase)
::workFactor == orig(::workFactor)
::workFactor == s[::fileMetaInfo.__pad0].workFactor
::workFactor == orig(s[post(::fileMetaInfo.__pad0)].workFactor)
::workFactor == s[::verbosity].workFactor
::workFactor == orig(s[post(::verbosity)].workFactor)
::workFactor == s[::numFileNames-1].workFactor
::workFactor == orig(s[post(::numFileNames)-1].workFactor)
::workFactor == s[::numFilesProcessed-1].workFactor
::workFactor == orig(s[post(::numFilesProcessed)-1].workFactor)
::workFactor == s[::exitValue].workFactor
::workFactor == orig(s[post(::exitValue)].workFactor)
::workFactor == s[::opMode-1].workFactor
::workFactor == orig(s[post(::opMode)-1].workFactor)
::workFactor == s[orig(::fileMetaInfo.__pad0)].workFactor
::workFactor == s[orig(::verbosity)].workFactor
::workFactor == s[orig(::numFileNames)-1].workFactor
::workFactor == s[orig(::numFilesProcessed)-1].workFactor
::workFactor == s[orig(::exitValue)].workFactor
::workFactor == s[orig(::opMode)-1].workFactor
::workFactor == orig(s[::fileMetaInfo.__pad0].workFactor)
::workFactor == orig(s[::verbosity].workFactor)
::workFactor == orig(s[::numFileNames-1].workFactor)
::workFactor == orig(s[::numFilesProcessed-1].workFactor)
::workFactor == orig(s[::exitValue].workFactor)
::workFactor == orig(s[::opMode-1].workFactor)
::zSuffix == orig(::zSuffix)
::unzSuffix == orig(::unzSuffix)
s[] == orig(s[])
s[].strm == orig(s[].strm)
s[].strm[0] == orig(s[].strm[0])
s[].strm->avail_in == orig(s[].strm->avail_in)
s[].strm->total_in_lo32 == orig(s[].strm->total_in_lo32)
s[].strm->total_in_hi32 == s[].strm->total_out_hi32
s[].strm->total_in_hi32 == orig(s[].strm->total_in_hi32)
s[].strm->total_in_hi32 == orig(s[].strm->total_out_hi32)
s[].strm->avail_out == orig(s[].strm->avail_out)
s[].strm->total_out_lo32 == orig(s[].strm->total_out_lo32)
s[].strm->state == orig(s[].strm->state)
s[].strm->bzalloc == orig(s[].strm->bzalloc)
s[].strm->bzfree == orig(s[].strm->bzfree)
s[].strm->opaque == orig(s[].strm->opaque)
s[].mode == orig(s[].mode)
s[].state == orig(s[].state)
s[].avail_in_expect == orig(s[].avail_in_expect)
s[].arr1 == s[].ptr
s[].arr1 == orig(s[].arr1)
s[].arr1 == orig(s[].ptr)
s[].arr1[0] == s[].ptr[0]
s[].arr2 == orig(s[].arr2)
s[].arr2[0] == orig(s[].arr2[0])
s[].ftab == orig(s[].ftab)
s[].block == orig(s[].block)
s[].block[0] == orig(s[].block[0])
s[].mtfv == orig(s[].mtfv)
s[].workFactor == orig(s[].workFactor)
s[].state_in_ch == orig(s[].state_in_ch)
s[].state_in_len == orig(s[].state_in_len)
s[].nblock == orig(s[].nblock)
s[].nblockMAX == orig(s[].nblockMAX)
s[].state_out_pos == s[].verbosity
s[].state_out_pos == s[].code[5][0]
s[].state_out_pos == s[].rfreq[0][0]
s[].state_out_pos == s[].rfreq[1][0]
s[].state_out_pos == s[].rfreq[2][0]
s[].state_out_pos == s[].rfreq[3][0]
s[].state_out_pos == s[].rfreq[4][0]
s[].state_out_pos == s[].rfreq[5][0]
s[].state_out_pos == orig(s[].numZ)
s[].state_out_pos == orig(s[].state_out_pos)
s[].state_out_pos == orig(s[].verbosity)
s[].inUse == orig(s[].inUse)
s[].inUse[0] == orig(s[].inUse[0])
s[].blockNo == orig(s[].blockNo)
s[].blockSize100k == orig(s[].blockSize100k)
s[].selector[0] == s[].selectorMtf[0]
s[].len[0][0] == s[].len[1][0]
s[].len[0][0] == s[].len[2][0]
s[].len[0][0] == s[].len[3][0]
s[].len[0][0] == s[].len[4][0]
size(::incs[]) == s[::fileMetaInfo.__pad0].code[2][0]
size(::incs[]) == s[::verbosity].code[2][0]
size(::incs[]) == s[::numFileNames-1].code[2][0]
size(::incs[]) == s[::numFilesProcessed-1].code[2][0]
size(::incs[]) == s[::exitValue].code[2][0]
size(::incs[]) == s[::opMode-1].code[2][0]
size(::incs[]) == s[orig(::fileMetaInfo.__pad0)].code[2][0]
size(::incs[]) == s[orig(::verbosity)].code[2][0]
size(::incs[]) == s[orig(::numFileNames)-1].code[2][0]
size(::incs[]) == s[orig(::numFilesProcessed)-1].code[2][0]
size(::incs[]) == s[orig(::exitValue)].code[2][0]
size(::incs[]) == s[orig(::opMode)-1].code[2][0]
size(::incs[])-1 == ::incs[::srcMode-1]
size(::incs[])-1 == ::incs[orig(::srcMode)-1]
size(::incs[])-1 == s[::fileMetaInfo.__pad0].code[1][0]
size(::incs[])-1 == s[::verbosity].code[1][0]
size(::incs[])-1 == s[::numFileNames-1].code[1][0]
size(::incs[])-1 == s[::numFilesProcessed-1].code[1][0]
size(::incs[])-1 == s[::exitValue].code[1][0]
size(::incs[])-1 == s[::opMode-1].code[1][0]
size(::incs[])-1 == orig(::incs[post(::srcMode)-1])
size(::incs[])-1 == s[orig(::fileMetaInfo.__pad0)].code[1][0]
size(::incs[])-1 == s[orig(::verbosity)].code[1][0]
size(::incs[])-1 == s[orig(::numFileNames)-1].code[1][0]
size(::incs[])-1 == s[orig(::numFilesProcessed)-1].code[1][0]
size(::incs[])-1 == s[orig(::exitValue)].code[1][0]
size(::incs[])-1 == s[orig(::opMode)-1].code[1][0]
size(::incs[])-1 == orig(::incs[::srcMode-1])
size(::bzerrorstrings[]) == s[::fileMetaInfo.__pad0].code[4][0]
size(::bzerrorstrings[]) == s[::verbosity].code[4][0]
size(::bzerrorstrings[]) == s[::numFileNames-1].code[4][0]
size(::bzerrorstrings[]) == s[::numFilesProcessed-1].code[4][0]
size(::bzerrorstrings[]) == s[::exitValue].code[4][0]
size(::bzerrorstrings[]) == s[::opMode-1].code[4][0]
size(::bzerrorstrings[]) == s[orig(::fileMetaInfo.__pad0)].code[4][0]
size(::bzerrorstrings[]) == s[orig(::verbosity)].code[4][0]
size(::bzerrorstrings[]) == s[orig(::numFileNames)-1].code[4][0]
size(::bzerrorstrings[]) == s[orig(::numFilesProcessed)-1].code[4][0]
size(::bzerrorstrings[]) == s[orig(::exitValue)].code[4][0]
size(::bzerrorstrings[]) == s[orig(::opMode)-1].code[4][0]
size(::bzerrorstrings[])-1 == s[::fileMetaInfo.__pad0].code[3][0]
size(::bzerrorstrings[])-1 == s[::verbosity].code[3][0]
size(::bzerrorstrings[])-1 == s[::numFileNames-1].code[3][0]
size(::bzerrorstrings[])-1 == s[::numFilesProcessed-1].code[3][0]
size(::bzerrorstrings[])-1 == s[::exitValue].code[3][0]
size(::bzerrorstrings[])-1 == s[::opMode-1].code[3][0]
size(::bzerrorstrings[])-1 == s[orig(::fileMetaInfo.__pad0)].code[3][0]
size(::bzerrorstrings[])-1 == s[orig(::verbosity)].code[3][0]
size(::bzerrorstrings[])-1 == s[orig(::numFileNames)-1].code[3][0]
size(::bzerrorstrings[])-1 == s[orig(::numFilesProcessed)-1].code[3][0]
size(::bzerrorstrings[])-1 == s[orig(::exitValue)].code[3][0]
size(::bzerrorstrings[])-1 == s[orig(::opMode)-1].code[3][0]
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::fileMetaInfo.__pad0].state
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[post(::fileMetaInfo.__pad0)].state)
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::verbosity].state
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[post(::verbosity)].state)
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::numFileNames-1].state
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[post(::numFileNames)-1].state)
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::numFilesProcessed-1].state
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[post(::numFilesProcessed)-1].state)
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::exitValue].state
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[post(::exitValue)].state)
size(::fileMetaInfo.__glibc_reserved[])-1 == s[::opMode-1].state
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[post(::opMode)-1].state)
size(::fileMetaInfo.__glibc_reserved[])-1 == s[orig(::fileMetaInfo.__pad0)].state
size(::fileMetaInfo.__glibc_reserved[])-1 == s[orig(::verbosity)].state
size(::fileMetaInfo.__glibc_reserved[])-1 == s[orig(::numFileNames)-1].state
size(::fileMetaInfo.__glibc_reserved[])-1 == s[orig(::numFilesProcessed)-1].state
size(::fileMetaInfo.__glibc_reserved[])-1 == s[orig(::exitValue)].state
size(::fileMetaInfo.__glibc_reserved[])-1 == s[orig(::opMode)-1].state
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[::fileMetaInfo.__pad0].state)
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[::verbosity].state)
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[::numFileNames-1].state)
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[::numFilesProcessed-1].state)
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[::exitValue].state)
size(::fileMetaInfo.__glibc_reserved[])-1 == orig(s[::opMode-1].state)
size(::zSuffix[]) == size(::unzSuffix[])
size(::zSuffix[]) == orig(size(::unzSuffix[]))
size(::zSuffix[]) == ::incs[::numFileNames]
size(::zSuffix[]) == ::incs[::numFilesProcessed]
size(::zSuffix[]) == ::incs[::opMode]
size(::zSuffix[]) == ::incs[orig(::numFileNames)]
size(::zSuffix[]) == ::incs[orig(::numFilesProcessed)]
size(::zSuffix[]) == ::incs[orig(::opMode)]
size(::zSuffix[]) == orig(::incs[post(::numFileNames)])
size(::zSuffix[]) == orig(::incs[post(::numFilesProcessed)])
size(::zSuffix[]) == orig(::incs[post(::opMode)])
size(::zSuffix[]) == orig(::incs[::numFileNames])
size(::zSuffix[]) == orig(::incs[::numFilesProcessed])
size(::zSuffix[]) == orig(::incs[::opMode])
orig(size(s[].len[0]))-1 == orig(s[post(::fileMetaInfo.__pad0)].code[5][0])
orig(size(s[].len[0]))-1 == orig(s[post(::fileMetaInfo.__pad0)].rfreq[0][0])
orig(size(s[].len[0]))-1 == orig(s[post(::fileMetaInfo.__pad0)].rfreq[1][0])
orig(size(s[].len[0]))-1 == orig(s[post(::fileMetaInfo.__pad0)].rfreq[2][0])
orig(size(s[].len[0]))-1 == orig(s[post(::fileMetaInfo.__pad0)].rfreq[3][0])
orig(size(s[].len[0]))-1 == orig(s[post(::fileMetaInfo.__pad0)].rfreq[4][0])
orig(size(s[].len[0]))-1 == orig(s[post(::fileMetaInfo.__pad0)].rfreq[5][0])
orig(size(s[].len[0]))-1 == orig(s[post(::verbosity)].code[5][0])
orig(size(s[].len[0]))-1 == orig(s[post(::verbosity)].rfreq[0][0])
orig(size(s[].len[0]))-1 == orig(s[post(::verbosity)].rfreq[1][0])
orig(size(s[].len[0]))-1 == orig(s[post(::verbosity)].rfreq[2][0])
orig(size(s[].len[0]))-1 == orig(s[post(::verbosity)].rfreq[3][0])
orig(size(s[].len[0]))-1 == orig(s[post(::verbosity)].rfreq[4][0])
orig(size(s[].len[0]))-1 == orig(s[post(::verbosity)].rfreq[5][0])
orig(size(s[].len[0]))-1 == orig(s[post(::numFileNames)-1].code[5][0])
orig(size(s[].len[0]))-1 == orig(s[post(::numFileNames)-1].rfreq[0][0])
orig(size(s[].len[0]))-1 == orig(s[post(::numFileNames)-1].rfreq[1][0])
orig(size(s[].len[0]))-1 == orig(s[post(::numFileNames)-1].rfreq[2][0])
orig(size(s[].len[0]))-1 == orig(s[post(::numFileNames)-1].rfreq[3][0])
orig(size(s[].len[0]))-1 == orig(s[post(::numFileNames)-1].rfreq[4][0])
orig(size(s[].len[0]))-1 == orig(s[post(::numFileNames)-1].rfreq[5][0])
orig(size(s[].len[0]))-1 == orig(s[post(::numFilesProcessed)-1].code[5][0])
orig(size(s[].len[0]))-1 == orig(s[post(::numFilesProcessed)-1].rfreq[0][0])
orig(size(s[].len[0]))-1 == orig(s[post(::numFilesProcessed)-1].rfreq[1][0])
orig(size(s[].len[0]))-1 == orig(s[post(::numFilesProcessed)-1].rfreq[2][0])
orig(size(s[].len[0]))-1 == orig(s[post(::numFilesProcessed)-1].rfreq[3][0])
orig(size(s[].len[0]))-1 == orig(s[post(::numFilesProcessed)-1].rfreq[4][0])
orig(size(s[].len[0]))-1 == orig(s[post(::numFilesProcessed)-1].rfreq[5][0])
orig(size(s[].len[0]))-1 == orig(s[post(::exitValue)].code[5][0])
orig(size(s[].len[0]))-1 == orig(s[post(::exitValue)].rfreq[0][0])
orig(size(s[].len[0]))-1 == orig(s[post(::exitValue)].rfreq[1][0])
orig(size(s[].len[0]))-1 == orig(s[post(::exitValue)].rfreq[2][0])
orig(size(s[].len[0]))-1 == orig(s[post(::exitValue)].rfreq[3][0])
orig(size(s[].len[0]))-1 == orig(s[post(::exitValue)].rfreq[4][0])
orig(size(s[].len[0]))-1 == orig(s[post(::exitValue)].rfreq[5][0])
orig(size(s[].len[0]))-1 == orig(s[post(::opMode)-1].code[5][0])
orig(size(s[].len[0]))-1 == orig(s[post(::opMode)-1].rfreq[0][0])
orig(size(s[].len[0]))-1 == orig(s[post(::opMode)-1].rfreq[1][0])
orig(size(s[].len[0]))-1 == orig(s[post(::opMode)-1].rfreq[2][0])
orig(size(s[].len[0]))-1 == orig(s[post(::opMode)-1].rfreq[3][0])
orig(size(s[].len[0]))-1 == orig(s[post(::opMode)-1].rfreq[4][0])
orig(size(s[].len[0]))-1 == orig(s[post(::opMode)-1].rfreq[5][0])
s[::fileMetaInfo.__pad0].strm->total_in_hi32 == ::BZ2_crc32Table[::verbosity]
s[::fileMetaInfo.__pad0].strm->total_out_hi32 == ::BZ2_crc32Table[::verbosity]
orig(s[post(::fileMetaInfo.__pad0)].strm->total_in_hi32) == ::BZ2_crc32Table[::verbosity]
orig(s[post(::fileMetaInfo.__pad0)].strm->total_out_hi32) == ::BZ2_crc32Table[::verbosity]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFileNames-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFilesProcessed-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::opMode-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[orig(::numFileNames)-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[orig(::numFilesProcessed)-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[orig(::opMode)-1]
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[post(::numFileNames)-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[post(::numFilesProcessed)-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[post(::opMode)-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[::numFileNames-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[::numFilesProcessed-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[::opMode-1])
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFileNames-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFilesProcessed-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::opMode-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[orig(::numFileNames)-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[orig(::numFilesProcessed)-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[orig(::opMode)-1]
::BZ2_crc32Table[::verbosity] == s[::verbosity].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[::verbosity].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == orig(s[post(::verbosity)].strm->total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[post(::verbosity)].strm->total_out_hi32)
::BZ2_crc32Table[::verbosity] == s[::numFileNames-1].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[::numFileNames-1].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[post(::numFileNames)-1])
::BZ2_crc32Table[::verbosity] == orig(s[post(::numFileNames)-1].strm->total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[post(::numFileNames)-1].strm->total_out_hi32)
::BZ2_crc32Table[::verbosity] == s[::numFilesProcessed-1].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[::numFilesProcessed-1].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[post(::numFilesProcessed)-1])
::BZ2_crc32Table[::verbosity] == orig(s[post(::numFilesProcessed)-1].strm->total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[post(::numFilesProcessed)-1].strm->total_out_hi32)
::BZ2_crc32Table[::verbosity] == s[::exitValue].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[::exitValue].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == orig(s[post(::exitValue)].strm->total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[post(::exitValue)].strm->total_out_hi32)
::BZ2_crc32Table[::verbosity] == s[::opMode-1].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[::opMode-1].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[post(::opMode)-1])
::BZ2_crc32Table[::verbosity] == orig(s[post(::opMode)-1].strm->total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[post(::opMode)-1].strm->total_out_hi32)
::BZ2_crc32Table[::verbosity] == s[orig(::fileMetaInfo.__pad0)].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[orig(::verbosity)].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[orig(::numFileNames)-1].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[orig(::numFilesProcessed)-1].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[orig(::exitValue)].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[orig(::opMode)-1].strm->total_in_hi32
::BZ2_crc32Table[::verbosity] == s[orig(::fileMetaInfo.__pad0)].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == s[orig(::verbosity)].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == s[orig(::numFileNames)-1].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == s[orig(::numFilesProcessed)-1].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == s[orig(::exitValue)].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == s[orig(::opMode)-1].strm->total_out_hi32
::BZ2_crc32Table[::verbosity] == orig(s[::fileMetaInfo.__pad0].strm->total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[::fileMetaInfo.__pad0].strm->total_out_hi32)
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[::numFileNames-1])
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[::numFilesProcessed-1])
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[::opMode-1])
::BZ2_crc32Table[::verbosity] == orig(s[::verbosity].strm->total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[::verbosity].strm->total_out_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[::numFileNames-1].strm->total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[::numFileNames-1].strm->total_out_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[::numFilesProcessed-1].strm->total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[::numFilesProcessed-1].strm->total_out_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[::exitValue].strm->total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[::exitValue].strm->total_out_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[::opMode-1].strm->total_in_hi32)
::BZ2_crc32Table[::verbosity] == orig(s[::opMode-1].strm->total_out_hi32)
s[::verbosity] == s[::numFileNames-1]
s[::verbosity] == orig(s[post(::numFileNames)-1])
s[::verbosity] == s[::numFilesProcessed-1]
s[::verbosity] == orig(s[post(::numFilesProcessed)-1])
s[::verbosity] == s[::opMode-1]
s[::verbosity] == orig(s[post(::opMode)-1])
s[::verbosity] == s[orig(::numFileNames)-1]
s[::verbosity] == s[orig(::numFilesProcessed)-1]
s[::verbosity] == s[orig(::opMode)-1]
s[::verbosity] == orig(s[::numFileNames-1])
s[::verbosity] == orig(s[::numFilesProcessed-1])
s[::verbosity] == orig(s[::opMode-1])
s[::verbosity].strm == s[::numFileNames-1].strm
s[::verbosity].strm == orig(s[post(::numFileNames)-1].strm)
s[::verbosity].strm == s[::numFilesProcessed-1].strm
s[::verbosity].strm == orig(s[post(::numFilesProcessed)-1].strm)
s[::verbosity].strm == s[::opMode-1].strm
s[::verbosity].strm == orig(s[post(::opMode)-1].strm)
s[::verbosity].strm == s[orig(::numFileNames)-1].strm
s[::verbosity].strm == s[orig(::numFilesProcessed)-1].strm
s[::verbosity].strm == s[orig(::opMode)-1].strm
s[::verbosity].strm == orig(s[::numFileNames-1].strm)
s[::verbosity].strm == orig(s[::numFilesProcessed-1].strm)
s[::verbosity].strm == orig(s[::opMode-1].strm)
s[::verbosity].strm[0] == s[::numFileNames-1].strm[0]
s[::verbosity].strm[0] == orig(s[post(::numFileNames)-1].strm[0])
s[::verbosity].strm[0] == s[::numFilesProcessed-1].strm[0]
s[::verbosity].strm[0] == orig(s[post(::numFilesProcessed)-1].strm[0])
s[::verbosity].strm[0] == s[::opMode-1].strm[0]
s[::verbosity].strm[0] == orig(s[post(::opMode)-1].strm[0])
s[::verbosity].strm[0] == s[orig(::numFileNames)-1].strm[0]
s[::verbosity].strm[0] == s[orig(::numFilesProcessed)-1].strm[0]
s[::verbosity].strm[0] == s[orig(::opMode)-1].strm[0]
s[::verbosity].strm[0] == orig(s[::numFileNames-1].strm[0])
s[::verbosity].strm[0] == orig(s[::numFilesProcessed-1].strm[0])
s[::verbosity].strm[0] == orig(s[::opMode-1].strm[0])
s[::verbosity].strm->avail_in == s[::numFileNames-1].strm->avail_in
s[::verbosity].strm->avail_in == orig(s[post(::numFileNames)-1].strm->avail_in)
s[::verbosity].strm->avail_in == s[::numFilesProcessed-1].strm->avail_in
s[::verbosity].strm->avail_in == orig(s[post(::numFilesProcessed)-1].strm->avail_in)
s[::verbosity].strm->avail_in == s[::opMode-1].strm->avail_in
s[::verbosity].strm->avail_in == orig(s[post(::opMode)-1].strm->avail_in)
s[::verbosity].strm->avail_in == s[orig(::numFileNames)-1].strm->avail_in
s[::verbosity].strm->avail_in == s[orig(::numFilesProcessed)-1].strm->avail_in
s[::verbosity].strm->avail_in == s[orig(::opMode)-1].strm->avail_in
s[::verbosity].strm->avail_in == orig(s[::numFileNames-1].strm->avail_in)
s[::verbosity].strm->avail_in == orig(s[::numFilesProcessed-1].strm->avail_in)
s[::verbosity].strm->avail_in == orig(s[::opMode-1].strm->avail_in)
s[::verbosity].strm->total_in_lo32 == s[::numFileNames-1].strm->total_in_lo32
s[::verbosity].strm->total_in_lo32 == orig(s[post(::numFileNames)-1].strm->total_in_lo32)
s[::verbosity].strm->total_in_lo32 == s[::numFilesProcessed-1].strm->total_in_lo32
s[::verbosity].strm->total_in_lo32 == orig(s[post(::numFilesProcessed)-1].strm->total_in_lo32)
s[::verbosity].strm->total_in_lo32 == s[::opMode-1].strm->total_in_lo32
s[::verbosity].strm->total_in_lo32 == orig(s[post(::opMode)-1].strm->total_in_lo32)
s[::verbosity].strm->total_in_lo32 == s[orig(::numFileNames)-1].strm->total_in_lo32
s[::verbosity].strm->total_in_lo32 == s[orig(::numFilesProcessed)-1].strm->total_in_lo32
s[::verbosity].strm->total_in_lo32 == s[orig(::opMode)-1].strm->total_in_lo32
s[::verbosity].strm->total_in_lo32 == orig(s[::numFileNames-1].strm->total_in_lo32)
s[::verbosity].strm->total_in_lo32 == orig(s[::numFilesProcessed-1].strm->total_in_lo32)
s[::verbosity].strm->total_in_lo32 == orig(s[::opMode-1].strm->total_in_lo32)
s[::verbosity].strm->avail_out == s[::numFileNames-1].strm->avail_out
s[::verbosity].strm->avail_out == orig(s[post(::numFileNames)-1].strm->avail_out)
s[::verbosity].strm->avail_out == s[::numFilesProcessed-1].strm->avail_out
s[::verbosity].strm->avail_out == orig(s[post(::numFilesProcessed)-1].strm->avail_out)
s[::verbosity].strm->avail_out == s[::opMode-1].strm->avail_out
s[::verbosity].strm->avail_out == orig(s[post(::opMode)-1].strm->avail_out)
s[::verbosity].strm->avail_out == s[orig(::numFileNames)-1].strm->avail_out
s[::verbosity].strm->avail_out == s[orig(::numFilesProcessed)-1].strm->avail_out
s[::verbosity].strm->avail_out == s[orig(::opMode)-1].strm->avail_out
s[::verbosity].strm->avail_out == orig(s[::numFileNames-1].strm->avail_out)
s[::verbosity].strm->avail_out == orig(s[::numFilesProcessed-1].strm->avail_out)
s[::verbosity].strm->avail_out == orig(s[::opMode-1].strm->avail_out)
s[::verbosity].strm->total_out_lo32 == s[::numFileNames-1].strm->total_out_lo32
s[::verbosity].strm->total_out_lo32 == orig(s[post(::numFileNames)-1].strm->total_out_lo32)
s[::verbosity].strm->total_out_lo32 == s[::numFilesProcessed-1].strm->total_out_lo32
s[::verbosity].strm->total_out_lo32 == orig(s[post(::numFilesProcessed)-1].strm->total_out_lo32)
s[::verbosity].strm->total_out_lo32 == s[::opMode-1].strm->total_out_lo32
s[::verbosity].strm->total_out_lo32 == orig(s[post(::opMode)-1].strm->total_out_lo32)
s[::verbosity].strm->total_out_lo32 == s[orig(::numFileNames)-1].strm->total_out_lo32
s[::verbosity].strm->total_out_lo32 == s[orig(::numFilesProcessed)-1].strm->total_out_lo32
s[::verbosity].strm->total_out_lo32 == s[orig(::opMode)-1].strm->total_out_lo32
s[::verbosity].strm->total_out_lo32 == orig(s[::numFileNames-1].strm->total_out_lo32)
s[::verbosity].strm->total_out_lo32 == orig(s[::numFilesProcessed-1].strm->total_out_lo32)
s[::verbosity].strm->total_out_lo32 == orig(s[::opMode-1].strm->total_out_lo32)
s[::verbosity].strm->state == s[::numFileNames-1].strm->state
s[::verbosity].strm->state == orig(s[post(::numFileNames)-1].strm->state)
s[::verbosity].strm->state == s[::numFilesProcessed-1].strm->state
s[::verbosity].strm->state == orig(s[post(::numFilesProcessed)-1].strm->state)
s[::verbosity].strm->state == s[::opMode-1].strm->state
s[::verbosity].strm->state == orig(s[post(::opMode)-1].strm->state)
s[::verbosity].strm->state == s[orig(::numFileNames)-1].strm->state
s[::verbosity].strm->state == s[orig(::numFilesProcessed)-1].strm->state
s[::verbosity].strm->state == s[orig(::opMode)-1].strm->state
s[::verbosity].strm->state == orig(s[::numFileNames-1].strm->state)
s[::verbosity].strm->state == orig(s[::numFilesProcessed-1].strm->state)
s[::verbosity].strm->state == orig(s[::opMode-1].strm->state)
s[::verbosity].strm->bzalloc == s[::numFileNames-1].strm->bzalloc
s[::verbosity].strm->bzalloc == orig(s[post(::numFileNames)-1].strm->bzalloc)
s[::verbosity].strm->bzalloc == s[::numFilesProcessed-1].strm->bzalloc
s[::verbosity].strm->bzalloc == orig(s[post(::numFilesProcessed)-1].strm->bzalloc)
s[::verbosity].strm->bzalloc == s[::opMode-1].strm->bzalloc
s[::verbosity].strm->bzalloc == orig(s[post(::opMode)-1].strm->bzalloc)
s[::verbosity].strm->bzalloc == s[orig(::numFileNames)-1].strm->bzalloc
s[::verbosity].strm->bzalloc == s[orig(::numFilesProcessed)-1].strm->bzalloc
s[::verbosity].strm->bzalloc == s[orig(::opMode)-1].strm->bzalloc
s[::verbosity].strm->bzalloc == orig(s[::numFileNames-1].strm->bzalloc)
s[::verbosity].strm->bzalloc == orig(s[::numFilesProcessed-1].strm->bzalloc)
s[::verbosity].strm->bzalloc == orig(s[::opMode-1].strm->bzalloc)
s[::verbosity].strm->bzfree == s[::numFileNames-1].strm->bzfree
s[::verbosity].strm->bzfree == orig(s[post(::numFileNames)-1].strm->bzfree)
s[::verbosity].strm->bzfree == s[::numFilesProcessed-1].strm->bzfree
s[::verbosity].strm->bzfree == orig(s[post(::numFilesProcessed)-1].strm->bzfree)
s[::verbosity].strm->bzfree == s[::opMode-1].strm->bzfree
s[::verbosity].strm->bzfree == orig(s[post(::opMode)-1].strm->bzfree)
s[::verbosity].strm->bzfree == s[orig(::numFileNames)-1].strm->bzfree
s[::verbosity].strm->bzfree == s[orig(::numFilesProcessed)-1].strm->bzfree
s[::verbosity].strm->bzfree == s[orig(::opMode)-1].strm->bzfree
s[::verbosity].strm->bzfree == orig(s[::numFileNames-1].strm->bzfree)
s[::verbosity].strm->bzfree == orig(s[::numFilesProcessed-1].strm->bzfree)
s[::verbosity].strm->bzfree == orig(s[::opMode-1].strm->bzfree)
s[::verbosity].strm->opaque == s[::numFileNames-1].strm->opaque
s[::verbosity].strm->opaque == orig(s[post(::numFileNames)-1].strm->opaque)
s[::verbosity].strm->opaque == s[::numFilesProcessed-1].strm->opaque
s[::verbosity].strm->opaque == orig(s[post(::numFilesProcessed)-1].strm->opaque)
s[::verbosity].strm->opaque == s[::opMode-1].strm->opaque
s[::verbosity].strm->opaque == orig(s[post(::opMode)-1].strm->opaque)
s[::verbosity].strm->opaque == s[orig(::numFileNames)-1].strm->opaque
s[::verbosity].strm->opaque == s[orig(::numFilesProcessed)-1].strm->opaque
s[::verbosity].strm->opaque == s[orig(::opMode)-1].strm->opaque
s[::verbosity].strm->opaque == orig(s[::numFileNames-1].strm->opaque)
s[::verbosity].strm->opaque == orig(s[::numFilesProcessed-1].strm->opaque)
s[::verbosity].strm->opaque == orig(s[::opMode-1].strm->opaque)
s[::verbosity].mode == s[::numFileNames-1].mode
s[::verbosity].mode == orig(s[post(::numFileNames)-1].mode)
s[::verbosity].mode == s[::numFilesProcessed-1].mode
s[::verbosity].mode == orig(s[post(::numFilesProcessed)-1].mode)
s[::verbosity].mode == s[::opMode-1].mode
s[::verbosity].mode == orig(s[post(::opMode)-1].mode)
s[::verbosity].mode == s[orig(::numFileNames)-1].mode
s[::verbosity].mode == s[orig(::numFilesProcessed)-1].mode
s[::verbosity].mode == s[orig(::opMode)-1].mode
s[::verbosity].mode == orig(s[::numFileNames-1].mode)
s[::verbosity].mode == orig(s[::numFilesProcessed-1].mode)
s[::verbosity].mode == orig(s[::opMode-1].mode)
s[::verbosity].avail_in_expect == s[::numFileNames-1].avail_in_expect
s[::verbosity].avail_in_expect == orig(s[post(::numFileNames)-1].avail_in_expect)
s[::verbosity].avail_in_expect == s[::numFilesProcessed-1].avail_in_expect
s[::verbosity].avail_in_expect == orig(s[post(::numFilesProcessed)-1].avail_in_expect)
s[::verbosity].avail_in_expect == s[::opMode-1].avail_in_expect
s[::verbosity].avail_in_expect == orig(s[post(::opMode)-1].avail_in_expect)
s[::verbosity].avail_in_expect == s[orig(::numFileNames)-1].avail_in_expect
s[::verbosity].avail_in_expect == s[orig(::numFilesProcessed)-1].avail_in_expect
s[::verbosity].avail_in_expect == s[orig(::opMode)-1].avail_in_expect
s[::verbosity].avail_in_expect == orig(s[::numFileNames-1].avail_in_expect)
s[::verbosity].avail_in_expect == orig(s[::numFilesProcessed-1].avail_in_expect)
s[::verbosity].avail_in_expect == orig(s[::opMode-1].avail_in_expect)
s[::verbosity].arr1 == s[::numFileNames-1].arr1
s[::verbosity].arr1 == s[::numFileNames-1].ptr
s[::verbosity].arr1 == orig(s[post(::numFileNames)-1].arr1)
s[::verbosity].arr1 == orig(s[post(::numFileNames)-1].ptr)
s[::verbosity].arr1 == s[::numFilesProcessed-1].arr1
s[::verbosity].arr1 == s[::numFilesProcessed-1].ptr
s[::verbosity].arr1 == orig(s[post(::numFilesProcessed)-1].arr1)
s[::verbosity].arr1 == orig(s[post(::numFilesProcessed)-1].ptr)
s[::verbosity].arr1 == s[::opMode-1].arr1
s[::verbosity].arr1 == s[::opMode-1].ptr
s[::verbosity].arr1 == orig(s[post(::opMode)-1].arr1)
s[::verbosity].arr1 == orig(s[post(::opMode)-1].ptr)
s[::verbosity].arr1 == s[orig(::numFileNames)-1].arr1
s[::verbosity].arr1 == s[orig(::numFilesProcessed)-1].arr1
s[::verbosity].arr1 == s[orig(::opMode)-1].arr1
s[::verbosity].arr1 == s[orig(::numFileNames)-1].ptr
s[::verbosity].arr1 == s[orig(::numFilesProcessed)-1].ptr
s[::verbosity].arr1 == s[orig(::opMode)-1].ptr
s[::verbosity].arr1 == orig(s[::numFileNames-1].arr1)
s[::verbosity].arr1 == orig(s[::numFileNames-1].ptr)
s[::verbosity].arr1 == orig(s[::numFilesProcessed-1].arr1)
s[::verbosity].arr1 == orig(s[::numFilesProcessed-1].ptr)
s[::verbosity].arr1 == orig(s[::opMode-1].arr1)
s[::verbosity].arr1 == orig(s[::opMode-1].ptr)
s[::verbosity].arr1[0] == s[::numFileNames-1].arr1[0]
s[::verbosity].arr1[0] == s[::numFileNames-1].ptr[0]
s[::verbosity].arr1[0] == s[::numFilesProcessed-1].arr1[0]
s[::verbosity].arr1[0] == s[::numFilesProcessed-1].ptr[0]
s[::verbosity].arr1[0] == s[::opMode-1].arr1[0]
s[::verbosity].arr1[0] == s[::opMode-1].ptr[0]
s[::verbosity].arr1[0] == s[orig(::numFileNames)-1].arr1[0]
s[::verbosity].arr1[0] == s[orig(::numFilesProcessed)-1].arr1[0]
s[::verbosity].arr1[0] == s[orig(::opMode)-1].arr1[0]
s[::verbosity].arr1[0] == s[orig(::numFileNames)-1].ptr[0]
s[::verbosity].arr1[0] == s[orig(::numFilesProcessed)-1].ptr[0]
s[::verbosity].arr1[0] == s[orig(::opMode)-1].ptr[0]
s[::verbosity].arr2 == s[::numFileNames-1].arr2
s[::verbosity].arr2 == orig(s[post(::numFileNames)-1].arr2)
s[::verbosity].arr2 == s[::numFilesProcessed-1].arr2
s[::verbosity].arr2 == orig(s[post(::numFilesProcessed)-1].arr2)
s[::verbosity].arr2 == s[::opMode-1].arr2
s[::verbosity].arr2 == orig(s[post(::opMode)-1].arr2)
s[::verbosity].arr2 == s[orig(::numFileNames)-1].arr2
s[::verbosity].arr2 == s[orig(::numFilesProcessed)-1].arr2
s[::verbosity].arr2 == s[orig(::opMode)-1].arr2
s[::verbosity].arr2 == orig(s[::numFileNames-1].arr2)
s[::verbosity].arr2 == orig(s[::numFilesProcessed-1].arr2)
s[::verbosity].arr2 == orig(s[::opMode-1].arr2)
s[::verbosity].arr2[0] == s[::numFileNames-1].arr2[0]
s[::verbosity].arr2[0] == orig(s[post(::numFileNames)-1].arr2[0])
s[::verbosity].arr2[0] == s[::numFilesProcessed-1].arr2[0]
s[::verbosity].arr2[0] == orig(s[post(::numFilesProcessed)-1].arr2[0])
s[::verbosity].arr2[0] == s[::opMode-1].arr2[0]
s[::verbosity].arr2[0] == orig(s[post(::opMode)-1].arr2[0])
s[::verbosity].arr2[0] == s[orig(::numFileNames)-1].arr2[0]
s[::verbosity].arr2[0] == s[orig(::numFilesProcessed)-1].arr2[0]
s[::verbosity].arr2[0] == s[orig(::opMode)-1].arr2[0]
s[::verbosity].arr2[0] == orig(s[::numFileNames-1].arr2[0])
s[::verbosity].arr2[0] == orig(s[::numFilesProcessed-1].arr2[0])
s[::verbosity].arr2[0] == orig(s[::opMode-1].arr2[0])
s[::verbosity].ftab == s[::numFileNames-1].ftab
s[::verbosity].ftab == orig(s[post(::numFileNames)-1].ftab)
s[::verbosity].ftab == s[::numFilesProcessed-1].ftab
s[::verbosity].ftab == orig(s[post(::numFilesProcessed)-1].ftab)
s[::verbosity].ftab == s[::opMode-1].ftab
s[::verbosity].ftab == orig(s[post(::opMode)-1].ftab)
s[::verbosity].ftab == s[orig(::numFileNames)-1].ftab
s[::verbosity].ftab == s[orig(::numFilesProcessed)-1].ftab
s[::verbosity].ftab == s[orig(::opMode)-1].ftab
s[::verbosity].ftab == orig(s[::numFileNames-1].ftab)
s[::verbosity].ftab == orig(s[::numFilesProcessed-1].ftab)
s[::verbosity].ftab == orig(s[::opMode-1].ftab)
s[::verbosity].ftab[0] == s[::numFileNames-1].ftab[0]
s[::verbosity].ftab[0] == s[::numFilesProcessed-1].ftab[0]
s[::verbosity].ftab[0] == s[::opMode-1].ftab[0]
s[::verbosity].ftab[0] == s[orig(::numFileNames)-1].ftab[0]
s[::verbosity].ftab[0] == s[orig(::numFilesProcessed)-1].ftab[0]
s[::verbosity].ftab[0] == s[orig(::opMode)-1].ftab[0]
s[::verbosity].origPtr == s[::numFileNames-1].origPtr
s[::verbosity].origPtr == s[::numFilesProcessed-1].origPtr
s[::verbosity].origPtr == s[::opMode-1].origPtr
s[::verbosity].origPtr == s[orig(::numFileNames)-1].origPtr
s[::verbosity].origPtr == s[orig(::numFilesProcessed)-1].origPtr
s[::verbosity].origPtr == s[orig(::opMode)-1].origPtr
s[::verbosity].block == s[::numFileNames-1].block
s[::verbosity].block == orig(s[post(::numFileNames)-1].block)
s[::verbosity].block == s[::numFilesProcessed-1].block
s[::verbosity].block == orig(s[post(::numFilesProcessed)-1].block)
s[::verbosity].block == s[::opMode-1].block
s[::verbosity].block == orig(s[post(::opMode)-1].block)
s[::verbosity].block == s[orig(::numFileNames)-1].block
s[::verbosity].block == s[orig(::numFilesProcessed)-1].block
s[::verbosity].block == s[orig(::opMode)-1].block
s[::verbosity].block == orig(s[::numFileNames-1].block)
s[::verbosity].block == orig(s[::numFilesProcessed-1].block)
s[::verbosity].block == orig(s[::opMode-1].block)
s[::verbosity].block[0] == s[::numFileNames-1].block[0]
s[::verbosity].block[0] == orig(s[post(::numFileNames)-1].block[0])
s[::verbosity].block[0] == s[::numFilesProcessed-1].block[0]
s[::verbosity].block[0] == orig(s[post(::numFilesProcessed)-1].block[0])
s[::verbosity].block[0] == s[::opMode-1].block[0]
s[::verbosity].block[0] == orig(s[post(::opMode)-1].block[0])
s[::verbosity].block[0] == s[orig(::numFileNames)-1].block[0]
s[::verbosity].block[0] == s[orig(::numFilesProcessed)-1].block[0]
s[::verbosity].block[0] == s[orig(::opMode)-1].block[0]
s[::verbosity].block[0] == orig(s[::numFileNames-1].block[0])
s[::verbosity].block[0] == orig(s[::numFilesProcessed-1].block[0])
s[::verbosity].block[0] == orig(s[::opMode-1].block[0])
s[::verbosity].mtfv == s[::numFileNames-1].mtfv
s[::verbosity].mtfv == orig(s[post(::numFileNames)-1].mtfv)
s[::verbosity].mtfv == s[::numFilesProcessed-1].mtfv
s[::verbosity].mtfv == orig(s[post(::numFilesProcessed)-1].mtfv)
s[::verbosity].mtfv == s[::opMode-1].mtfv
s[::verbosity].mtfv == orig(s[post(::opMode)-1].mtfv)
s[::verbosity].mtfv == s[orig(::numFileNames)-1].mtfv
s[::verbosity].mtfv == s[orig(::numFilesProcessed)-1].mtfv
s[::verbosity].mtfv == s[orig(::opMode)-1].mtfv
s[::verbosity].mtfv == orig(s[::numFileNames-1].mtfv)
s[::verbosity].mtfv == orig(s[::numFilesProcessed-1].mtfv)
s[::verbosity].mtfv == orig(s[::opMode-1].mtfv)
s[::verbosity].mtfv[0] == s[::numFileNames-1].mtfv[0]
s[::verbosity].mtfv[0] == s[::numFilesProcessed-1].mtfv[0]
s[::verbosity].mtfv[0] == s[::opMode-1].mtfv[0]
s[::verbosity].mtfv[0] == s[orig(::numFileNames)-1].mtfv[0]
s[::verbosity].mtfv[0] == s[orig(::numFilesProcessed)-1].mtfv[0]
s[::verbosity].mtfv[0] == s[orig(::opMode)-1].mtfv[0]
s[::verbosity].zbits == s[::numFileNames-1].zbits
s[::verbosity].zbits == s[::numFilesProcessed-1].zbits
s[::verbosity].zbits == s[::opMode-1].zbits
s[::verbosity].zbits == s[orig(::numFileNames)-1].zbits
s[::verbosity].zbits == s[orig(::numFilesProcessed)-1].zbits
s[::verbosity].zbits == s[orig(::opMode)-1].zbits
s[::verbosity].zbits[0] == s[::numFileNames-1].zbits[0]
s[::verbosity].zbits[0] == s[::numFilesProcessed-1].zbits[0]
s[::verbosity].zbits[0] == s[::opMode-1].zbits[0]
s[::verbosity].zbits[0] == s[orig(::numFileNames)-1].zbits[0]
s[::verbosity].zbits[0] == s[orig(::numFilesProcessed)-1].zbits[0]
s[::verbosity].zbits[0] == s[orig(::opMode)-1].zbits[0]
s[::verbosity].state_in_ch == s[::numFileNames-1].state_in_ch
s[::verbosity].state_in_ch == orig(s[post(::numFileNames)-1].state_in_ch)
s[::verbosity].state_in_ch == s[::numFilesProcessed-1].state_in_ch
s[::verbosity].state_in_ch == orig(s[post(::numFilesProcessed)-1].state_in_ch)
s[::verbosity].state_in_ch == s[::opMode-1].state_in_ch
s[::verbosity].state_in_ch == orig(s[post(::opMode)-1].state_in_ch)
s[::verbosity].state_in_ch == s[orig(::numFileNames)-1].state_in_ch
s[::verbosity].state_in_ch == s[orig(::numFilesProcessed)-1].state_in_ch
s[::verbosity].state_in_ch == s[orig(::opMode)-1].state_in_ch
s[::verbosity].state_in_ch == orig(s[::numFileNames-1].state_in_ch)
s[::verbosity].state_in_ch == orig(s[::numFilesProcessed-1].state_in_ch)
s[::verbosity].state_in_ch == orig(s[::opMode-1].state_in_ch)
s[::verbosity].state_in_len == s[::numFileNames-1].state_in_len
s[::verbosity].state_in_len == orig(s[post(::numFileNames)-1].state_in_len)
s[::verbosity].state_in_len == s[::numFilesProcessed-1].state_in_len
s[::verbosity].state_in_len == orig(s[post(::numFilesProcessed)-1].state_in_len)
s[::verbosity].state_in_len == s[::opMode-1].state_in_len
s[::verbosity].state_in_len == orig(s[post(::opMode)-1].state_in_len)
s[::verbosity].state_in_len == s[orig(::numFileNames)-1].state_in_len
s[::verbosity].state_in_len == s[orig(::numFilesProcessed)-1].state_in_len
s[::verbosity].state_in_len == s[orig(::opMode)-1].state_in_len
s[::verbosity].state_in_len == orig(s[::numFileNames-1].state_in_len)
s[::verbosity].state_in_len == orig(s[::numFilesProcessed-1].state_in_len)
s[::verbosity].state_in_len == orig(s[::opMode-1].state_in_len)
s[::verbosity].nblock == s[::numFileNames-1].nblock
s[::verbosity].nblock == orig(s[post(::numFileNames)-1].nblock)
s[::verbosity].nblock == s[::numFilesProcessed-1].nblock
s[::verbosity].nblock == orig(s[post(::numFilesProcessed)-1].nblock)
s[::verbosity].nblock == s[::opMode-1].nblock
s[::verbosity].nblock == orig(s[post(::opMode)-1].nblock)
s[::verbosity].nblock == s[orig(::numFileNames)-1].nblock
s[::verbosity].nblock == s[orig(::numFilesProcessed)-1].nblock
s[::verbosity].nblock == s[orig(::opMode)-1].nblock
s[::verbosity].nblock == orig(s[::numFileNames-1].nblock)
s[::verbosity].nblock == orig(s[::numFilesProcessed-1].nblock)
s[::verbosity].nblock == orig(s[::opMode-1].nblock)
s[::verbosity].nblockMAX == s[::numFileNames-1].nblockMAX
s[::verbosity].nblockMAX == orig(s[post(::numFileNames)-1].nblockMAX)
s[::verbosity].nblockMAX == s[::numFilesProcessed-1].nblockMAX
s[::verbosity].nblockMAX == orig(s[post(::numFilesProcessed)-1].nblockMAX)
s[::verbosity].nblockMAX == s[::opMode-1].nblockMAX
s[::verbosity].nblockMAX == orig(s[post(::opMode)-1].nblockMAX)
s[::verbosity].nblockMAX == s[orig(::numFileNames)-1].nblockMAX
s[::verbosity].nblockMAX == s[orig(::numFilesProcessed)-1].nblockMAX
s[::verbosity].nblockMAX == s[orig(::opMode)-1].nblockMAX
s[::verbosity].nblockMAX == orig(s[::numFileNames-1].nblockMAX)
s[::verbosity].nblockMAX == orig(s[::numFilesProcessed-1].nblockMAX)
s[::verbosity].nblockMAX == orig(s[::opMode-1].nblockMAX)
s[::verbosity].numZ == s[::numFileNames-1].numZ
s[::verbosity].numZ == s[::numFilesProcessed-1].numZ
s[::verbosity].numZ == s[::opMode-1].numZ
s[::verbosity].numZ == s[orig(::numFileNames)-1].numZ
s[::verbosity].numZ == s[orig(::numFilesProcessed)-1].numZ
s[::verbosity].numZ == s[orig(::opMode)-1].numZ
s[::verbosity].nInUse == s[::numFileNames-1].nInUse
s[::verbosity].nInUse == s[::numFilesProcessed-1].nInUse
s[::verbosity].nInUse == s[::opMode-1].nInUse
s[::verbosity].nInUse == s[orig(::numFileNames)-1].nInUse
s[::verbosity].nInUse == s[orig(::numFilesProcessed)-1].nInUse
s[::verbosity].nInUse == s[orig(::opMode)-1].nInUse
s[::verbosity].inUse == s[::numFileNames-1].inUse
s[::verbosity].inUse == orig(s[post(::numFileNames)-1].inUse)
s[::verbosity].inUse == s[::numFilesProcessed-1].inUse
s[::verbosity].inUse == orig(s[post(::numFilesProcessed)-1].inUse)
s[::verbosity].inUse == s[::opMode-1].inUse
s[::verbosity].inUse == orig(s[post(::opMode)-1].inUse)
s[::verbosity].inUse == s[orig(::numFileNames)-1].inUse
s[::verbosity].inUse == s[orig(::numFilesProcessed)-1].inUse
s[::verbosity].inUse == s[orig(::opMode)-1].inUse
s[::verbosity].inUse == orig(s[::numFileNames-1].inUse)
s[::verbosity].inUse == orig(s[::numFilesProcessed-1].inUse)
s[::verbosity].inUse == orig(s[::opMode-1].inUse)
s[::verbosity].bsBuff == s[::numFileNames-1].bsBuff
s[::verbosity].bsBuff == s[::numFilesProcessed-1].bsBuff
s[::verbosity].bsBuff == s[::opMode-1].bsBuff
s[::verbosity].bsBuff == s[orig(::numFileNames)-1].bsBuff
s[::verbosity].bsBuff == s[orig(::numFilesProcessed)-1].bsBuff
s[::verbosity].bsBuff == s[orig(::opMode)-1].bsBuff
s[::verbosity].bsLive == s[::numFileNames-1].bsLive
s[::verbosity].bsLive == s[::numFilesProcessed-1].bsLive
s[::verbosity].bsLive == s[::opMode-1].bsLive
s[::verbosity].bsLive == s[orig(::numFileNames)-1].bsLive
s[::verbosity].bsLive == s[orig(::numFilesProcessed)-1].bsLive
s[::verbosity].bsLive == s[orig(::opMode)-1].bsLive
s[::verbosity].blockCRC == s[::numFileNames-1].blockCRC
s[::verbosity].blockCRC == s[::numFilesProcessed-1].blockCRC
s[::verbosity].blockCRC == s[::opMode-1].blockCRC
s[::verbosity].blockCRC == s[orig(::numFileNames)-1].blockCRC
s[::verbosity].blockCRC == s[orig(::numFilesProcessed)-1].blockCRC
s[::verbosity].blockCRC == s[orig(::opMode)-1].blockCRC
s[::verbosity].combinedCRC == s[::numFileNames-1].combinedCRC
s[::verbosity].combinedCRC == s[::numFilesProcessed-1].combinedCRC
s[::verbosity].combinedCRC == s[::opMode-1].combinedCRC
s[::verbosity].combinedCRC == s[orig(::numFileNames)-1].combinedCRC
s[::verbosity].combinedCRC == s[orig(::numFilesProcessed)-1].combinedCRC
s[::verbosity].combinedCRC == s[orig(::opMode)-1].combinedCRC
s[::verbosity].blockNo == s[::numFileNames-1].blockNo
s[::verbosity].blockNo == orig(s[post(::numFileNames)-1].blockNo)
s[::verbosity].blockNo == s[::numFilesProcessed-1].blockNo
s[::verbosity].blockNo == orig(s[post(::numFilesProcessed)-1].blockNo)
s[::verbosity].blockNo == s[::opMode-1].blockNo
s[::verbosity].blockNo == orig(s[post(::opMode)-1].blockNo)
s[::verbosity].blockNo == s[orig(::numFileNames)-1].blockNo
s[::verbosity].blockNo == s[orig(::numFilesProcessed)-1].blockNo
s[::verbosity].blockNo == s[orig(::opMode)-1].blockNo
s[::verbosity].blockNo == orig(s[::numFileNames-1].blockNo)
s[::verbosity].blockNo == orig(s[::numFilesProcessed-1].blockNo)
s[::verbosity].blockNo == orig(s[::opMode-1].blockNo)
s[::verbosity].nMTF == s[::numFileNames-1].nMTF
s[::verbosity].nMTF == s[::numFilesProcessed-1].nMTF
s[::verbosity].nMTF == s[::opMode-1].nMTF
s[::verbosity].nMTF == s[orig(::numFileNames)-1].nMTF
s[::verbosity].nMTF == s[orig(::numFilesProcessed)-1].nMTF
s[::verbosity].nMTF == s[orig(::opMode)-1].nMTF
s[::verbosity].mtfFreq == s[::numFileNames-1].mtfFreq
s[::verbosity].mtfFreq == s[::numFilesProcessed-1].mtfFreq
s[::verbosity].mtfFreq == s[::opMode-1].mtfFreq
s[::verbosity].mtfFreq == s[orig(::numFileNames)-1].mtfFreq
s[::verbosity].mtfFreq == s[orig(::numFilesProcessed)-1].mtfFreq
s[::verbosity].mtfFreq == s[orig(::opMode)-1].mtfFreq
s[::verbosity].mtfFreq[0] == s[::numFileNames-1].mtfFreq[0]
s[::verbosity].mtfFreq[0] == s[::numFilesProcessed-1].mtfFreq[0]
s[::verbosity].mtfFreq[0] == s[::opMode-1].mtfFreq[0]
s[::verbosity].mtfFreq[0] == s[orig(::numFileNames)-1].mtfFreq[0]
s[::verbosity].mtfFreq[0] == s[orig(::numFilesProcessed)-1].mtfFreq[0]
s[::verbosity].mtfFreq[0] == s[orig(::opMode)-1].mtfFreq[0]
s[::verbosity].selector == s[::numFileNames-1].selector
s[::verbosity].selector == s[::numFilesProcessed-1].selector
s[::verbosity].selector == s[::opMode-1].selector
s[::verbosity].selector == s[orig(::numFileNames)-1].selector
s[::verbosity].selector == s[orig(::numFilesProcessed)-1].selector
s[::verbosity].selector == s[orig(::opMode)-1].selector
s[::verbosity].selector[0] == s[::numFileNames-1].selector[0]
s[::verbosity].selector[0] == s[::numFileNames-1].selectorMtf[0]
s[::verbosity].selector[0] == s[::numFilesProcessed-1].selector[0]
s[::verbosity].selector[0] == s[::numFilesProcessed-1].selectorMtf[0]
s[::verbosity].selector[0] == s[::opMode-1].selector[0]
s[::verbosity].selector[0] == s[::opMode-1].selectorMtf[0]
s[::verbosity].selector[0] == s[orig(::numFileNames)-1].selector[0]
s[::verbosity].selector[0] == s[orig(::numFilesProcessed)-1].selector[0]
s[::verbosity].selector[0] == s[orig(::opMode)-1].selector[0]
s[::verbosity].selector[0] == s[orig(::numFileNames)-1].selectorMtf[0]
s[::verbosity].selector[0] == s[orig(::numFilesProcessed)-1].selectorMtf[0]
s[::verbosity].selector[0] == s[orig(::opMode)-1].selectorMtf[0]
s[::verbosity].selectorMtf == s[::numFileNames-1].selectorMtf
s[::verbosity].selectorMtf == s[::numFilesProcessed-1].selectorMtf
s[::verbosity].selectorMtf == s[::opMode-1].selectorMtf
s[::verbosity].selectorMtf == s[orig(::numFileNames)-1].selectorMtf
s[::verbosity].selectorMtf == s[orig(::numFilesProcessed)-1].selectorMtf
s[::verbosity].selectorMtf == s[orig(::opMode)-1].selectorMtf
s[::verbosity].len[0] == s[::numFileNames-1].len[0]
s[::verbosity].len[0] == s[::numFilesProcessed-1].len[0]
s[::verbosity].len[0] == s[::opMode-1].len[0]
s[::verbosity].len[0] == s[orig(::numFileNames)-1].len[0]
s[::verbosity].len[0] == s[orig(::numFilesProcessed)-1].len[0]
s[::verbosity].len[0] == s[orig(::opMode)-1].len[0]
s[::verbosity].len[0][0] == s[::numFileNames-1].len[0][0]
s[::verbosity].len[0][0] == s[::numFileNames-1].len[1][0]
s[::verbosity].len[0][0] == s[::numFileNames-1].len[2][0]
s[::verbosity].len[0][0] == s[::numFileNames-1].len[3][0]
s[::verbosity].len[0][0] == s[::numFileNames-1].len[4][0]
s[::verbosity].len[0][0] == s[::numFilesProcessed-1].len[0][0]
s[::verbosity].len[0][0] == s[::numFilesProcessed-1].len[1][0]
s[::verbosity].len[0][0] == s[::numFilesProcessed-1].len[2][0]
s[::verbosity].len[0][0] == s[::numFilesProcessed-1].len[3][0]
s[::verbosity].len[0][0] == s[::numFilesProcessed-1].len[4][0]
s[::verbosity].len[0][0] == s[::opMode-1].len[0][0]
s[::verbosity].len[0][0] == s[::opMode-1].len[1][0]
s[::verbosity].len[0][0] == s[::opMode-1].len[2][0]
s[::verbosity].len[0][0] == s[::opMode-1].len[3][0]
s[::verbosity].len[0][0] == s[::opMode-1].len[4][0]
s[::verbosity].len[0][0] == s[orig(::numFileNames)-1].len[0][0]
s[::verbosity].len[0][0] == s[orig(::numFilesProcessed)-1].len[0][0]
s[::verbosity].len[0][0] == s[orig(::opMode)-1].len[0][0]
s[::verbosity].len[0][0] == s[orig(::numFileNames)-1].len[1][0]
s[::verbosity].len[0][0] == s[orig(::numFilesProcessed)-1].len[1][0]
s[::verbosity].len[0][0] == s[orig(::opMode)-1].len[1][0]
s[::verbosity].len[0][0] == s[orig(::numFileNames)-1].len[2][0]
s[::verbosity].len[0][0] == s[orig(::numFilesProcessed)-1].len[2][0]
s[::verbosity].len[0][0] == s[orig(::opMode)-1].len[2][0]
s[::verbosity].len[0][0] == s[orig(::numFileNames)-1].len[3][0]
s[::verbosity].len[0][0] == s[orig(::numFilesProcessed)-1].len[3][0]
s[::verbosity].len[0][0] == s[orig(::opMode)-1].len[3][0]
s[::verbosity].len[0][0] == s[orig(::numFileNames)-1].len[4][0]
s[::verbosity].len[0][0] == s[orig(::numFilesProcessed)-1].len[4][0]
s[::verbosity].len[0][0] == s[orig(::opMode)-1].len[4][0]
s[::verbosity].len[1] == s[::numFileNames-1].len[1]
s[::verbosity].len[1] == s[::numFilesProcessed-1].len[1]
s[::verbosity].len[1] == s[::opMode-1].len[1]
s[::verbosity].len[1] == s[orig(::numFileNames)-1].len[1]
s[::verbosity].len[1] == s[orig(::numFilesProcessed)-1].len[1]
s[::verbosity].len[1] == s[orig(::opMode)-1].len[1]
s[::verbosity].len[2] == s[::numFileNames-1].len[2]
s[::verbosity].len[2] == s[::numFilesProcessed-1].len[2]
s[::verbosity].len[2] == s[::opMode-1].len[2]
s[::verbosity].len[2] == s[orig(::numFileNames)-1].len[2]
s[::verbosity].len[2] == s[orig(::numFilesProcessed)-1].len[2]
s[::verbosity].len[2] == s[orig(::opMode)-1].len[2]
s[::verbosity].len[3] == s[::numFileNames-1].len[3]
s[::verbosity].len[3] == s[::numFilesProcessed-1].len[3]
s[::verbosity].len[3] == s[::opMode-1].len[3]
s[::verbosity].len[3] == s[orig(::numFileNames)-1].len[3]
s[::verbosity].len[3] == s[orig(::numFilesProcessed)-1].len[3]
s[::verbosity].len[3] == s[orig(::opMode)-1].len[3]
s[::verbosity].len[4] == s[::numFileNames-1].len[4]
s[::verbosity].len[4] == s[::numFilesProcessed-1].len[4]
s[::verbosity].len[4] == s[::opMode-1].len[4]
s[::verbosity].len[4] == s[orig(::numFileNames)-1].len[4]
s[::verbosity].len[4] == s[orig(::numFilesProcessed)-1].len[4]
s[::verbosity].len[4] == s[orig(::opMode)-1].len[4]
s[::verbosity].len[5] == s[::numFileNames-1].len[5]
s[::verbosity].len[5] == s[::numFilesProcessed-1].len[5]
s[::verbosity].len[5] == s[::opMode-1].len[5]
s[::verbosity].len[5] == s[orig(::numFileNames)-1].len[5]
s[::verbosity].len[5] == s[orig(::numFilesProcessed)-1].len[5]
s[::verbosity].len[5] == s[orig(::opMode)-1].len[5]
s[::verbosity].len[5][0] == s[::numFileNames-1].len[5][0]
s[::verbosity].len[5][0] == s[::numFilesProcessed-1].len[5][0]
s[::verbosity].len[5][0] == s[::opMode-1].len[5][0]
s[::verbosity].len[5][0] == s[orig(::numFileNames)-1].len[5][0]
s[::verbosity].len[5][0] == s[orig(::numFilesProcessed)-1].len[5][0]
s[::verbosity].len[5][0] == s[orig(::opMode)-1].len[5][0]
s[::verbosity].code[0] == s[::numFileNames-1].code[0]
s[::verbosity].code[0] == s[::numFilesProcessed-1].code[0]
s[::verbosity].code[0] == s[::opMode-1].code[0]
s[::verbosity].code[0] == s[orig(::numFileNames)-1].code[0]
s[::verbosity].code[0] == s[orig(::numFilesProcessed)-1].code[0]
s[::verbosity].code[0] == s[orig(::opMode)-1].code[0]
s[::verbosity].code[0][0] == s[::numFileNames-1].code[0][0]
s[::verbosity].code[0][0] == s[::numFilesProcessed-1].code[0][0]
s[::verbosity].code[0][0] == s[::opMode-1].code[0][0]
s[::verbosity].code[0][0] == s[orig(::numFileNames)-1].code[0][0]
s[::verbosity].code[0][0] == s[orig(::numFilesProcessed)-1].code[0][0]
s[::verbosity].code[0][0] == s[orig(::opMode)-1].code[0][0]
s[::verbosity].code[1] == s[::numFileNames-1].code[1]
s[::verbosity].code[1] == s[::numFilesProcessed-1].code[1]
s[::verbosity].code[1] == s[::opMode-1].code[1]
s[::verbosity].code[1] == s[orig(::numFileNames)-1].code[1]
s[::verbosity].code[1] == s[orig(::numFilesProcessed)-1].code[1]
s[::verbosity].code[1] == s[orig(::opMode)-1].code[1]
s[::verbosity].code[2] == s[::numFileNames-1].code[2]
s[::verbosity].code[2] == s[::numFilesProcessed-1].code[2]
s[::verbosity].code[2] == s[::opMode-1].code[2]
s[::verbosity].code[2] == s[orig(::numFileNames)-1].code[2]
s[::verbosity].code[2] == s[orig(::numFilesProcessed)-1].code[2]
s[::verbosity].code[2] == s[orig(::opMode)-1].code[2]
s[::verbosity].code[3] == s[::numFileNames-1].code[3]
s[::verbosity].code[3] == s[::numFilesProcessed-1].code[3]
s[::verbosity].code[3] == s[::opMode-1].code[3]
s[::verbosity].code[3] == s[orig(::numFileNames)-1].code[3]
s[::verbosity].code[3] == s[orig(::numFilesProcessed)-1].code[3]
s[::verbosity].code[3] == s[orig(::opMode)-1].code[3]
s[::verbosity].code[4] == s[::numFileNames-1].code[4]
s[::verbosity].code[4] == s[::numFilesProcessed-1].code[4]
s[::verbosity].code[4] == s[::opMode-1].code[4]
s[::verbosity].code[4] == s[orig(::numFileNames)-1].code[4]
s[::verbosity].code[4] == s[orig(::numFilesProcessed)-1].code[4]
s[::verbosity].code[4] == s[orig(::opMode)-1].code[4]
s[::verbosity].code[5] == s[::numFileNames-1].code[5]
s[::verbosity].code[5] == s[::numFilesProcessed-1].code[5]
s[::verbosity].code[5] == s[::opMode-1].code[5]
s[::verbosity].code[5] == s[orig(::numFileNames)-1].code[5]
s[::verbosity].code[5] == s[orig(::numFilesProcessed)-1].code[5]
s[::verbosity].code[5] == s[orig(::opMode)-1].code[5]
s[::verbosity].rfreq[0] == s[::numFileNames-1].rfreq[0]
s[::verbosity].rfreq[0] == s[::numFilesProcessed-1].rfreq[0]
s[::verbosity].rfreq[0] == s[::opMode-1].rfreq[0]
s[::verbosity].rfreq[0] == s[orig(::numFileNames)-1].rfreq[0]
s[::verbosity].rfreq[0] == s[orig(::numFilesProcessed)-1].rfreq[0]
s[::verbosity].rfreq[0] == s[orig(::opMode)-1].rfreq[0]
s[::verbosity].rfreq[1] == s[::numFileNames-1].rfreq[1]
s[::verbosity].rfreq[1] == s[::numFilesProcessed-1].rfreq[1]
s[::verbosity].rfreq[1] == s[::opMode-1].rfreq[1]
s[::verbosity].rfreq[1] == s[orig(::numFileNames)-1].rfreq[1]
s[::verbosity].rfreq[1] == s[orig(::numFilesProcessed)-1].rfreq[1]
s[::verbosity].rfreq[1] == s[orig(::opMode)-1].rfreq[1]
s[::verbosity].rfreq[2] == s[::numFileNames-1].rfreq[2]
s[::verbosity].rfreq[2] == s[::numFilesProcessed-1].rfreq[2]
s[::verbosity].rfreq[2] == s[::opMode-1].rfreq[2]
s[::verbosity].rfreq[2] == s[orig(::numFileNames)-1].rfreq[2]
s[::verbosity].rfreq[2] == s[orig(::numFilesProcessed)-1].rfreq[2]
s[::verbosity].rfreq[2] == s[orig(::opMode)-1].rfreq[2]
s[::verbosity].rfreq[3] == s[::numFileNames-1].rfreq[3]
s[::verbosity].rfreq[3] == s[::numFilesProcessed-1].rfreq[3]
s[::verbosity].rfreq[3] == s[::opMode-1].rfreq[3]
s[::verbosity].rfreq[3] == s[orig(::numFileNames)-1].rfreq[3]
s[::verbosity].rfreq[3] == s[orig(::numFilesProcessed)-1].rfreq[3]
s[::verbosity].rfreq[3] == s[orig(::opMode)-1].rfreq[3]
s[::verbosity].rfreq[4] == s[::numFileNames-1].rfreq[4]
s[::verbosity].rfreq[4] == s[::numFilesProcessed-1].rfreq[4]
s[::verbosity].rfreq[4] == s[::opMode-1].rfreq[4]
s[::verbosity].rfreq[4] == s[orig(::numFileNames)-1].rfreq[4]
s[::verbosity].rfreq[4] == s[orig(::numFilesProcessed)-1].rfreq[4]
s[::verbosity].rfreq[4] == s[orig(::opMode)-1].rfreq[4]
s[::verbosity].rfreq[5] == s[::numFileNames-1].rfreq[5]
s[::verbosity].rfreq[5] == s[::numFilesProcessed-1].rfreq[5]
s[::verbosity].rfreq[5] == s[::opMode-1].rfreq[5]
s[::verbosity].rfreq[5] == s[orig(::numFileNames)-1].rfreq[5]
s[::verbosity].rfreq[5] == s[orig(::numFilesProcessed)-1].rfreq[5]
s[::verbosity].rfreq[5] == s[orig(::opMode)-1].rfreq[5]
s[::verbosity].len_pack == s[::numFileNames-1].len_pack
s[::verbosity].len_pack == s[::numFilesProcessed-1].len_pack
s[::verbosity].len_pack == s[::opMode-1].len_pack
s[::verbosity].len_pack == s[orig(::numFileNames)-1].len_pack
s[::verbosity].len_pack == s[orig(::numFilesProcessed)-1].len_pack
s[::verbosity].len_pack == s[orig(::opMode)-1].len_pack
s[::verbosity].len_pack[0] == s[::numFileNames-1].len_pack[0]
s[::verbosity].len_pack[0] == s[::numFilesProcessed-1].len_pack[0]
s[::verbosity].len_pack[0] == s[::opMode-1].len_pack[0]
s[::verbosity].len_pack[0] == s[orig(::numFileNames)-1].len_pack[0]
s[::verbosity].len_pack[0] == s[orig(::numFilesProcessed)-1].len_pack[0]
s[::verbosity].len_pack[0] == s[orig(::opMode)-1].len_pack[0]
orig(s[post(::numFileNames)-1].arr1[0]) == orig(s[::verbosity].arr1[0])
orig(s[post(::numFileNames)-1].ftab[0]) == orig(s[::verbosity].ftab[0])
orig(s[post(::numFileNames)-1].origPtr) == orig(s[::verbosity].origPtr)
orig(s[post(::numFileNames)-1].ptr[0]) == orig(s[::verbosity].arr1[0])
orig(s[post(::numFileNames)-1].mtfv[0]) == orig(s[::verbosity].mtfv[0])
orig(s[post(::numFileNames)-1].zbits) == orig(s[::verbosity].zbits)
orig(s[post(::numFileNames)-1].zbits[0]) == orig(s[::verbosity].zbits[0])
orig(s[post(::numFileNames)-1].nInUse) == orig(s[::verbosity].nInUse)
orig(s[post(::numFileNames)-1].unseqToSeq[0]) == orig(s[::verbosity].unseqToSeq[0])
orig(s[post(::numFileNames)-1].bsBuff) == orig(s[::verbosity].bsBuff)
orig(s[post(::numFileNames)-1].bsLive) == orig(s[::verbosity].bsLive)
orig(s[post(::numFileNames)-1].blockCRC) == orig(s[::verbosity].blockCRC)
orig(s[post(::numFileNames)-1].combinedCRC) == orig(s[::verbosity].combinedCRC)
orig(s[post(::numFileNames)-1].nMTF) == orig(s[::verbosity].nMTF)
orig(s[post(::numFileNames)-1].mtfFreq) == orig(s[::verbosity].mtfFreq)
orig(s[post(::numFileNames)-1].mtfFreq[0]) == orig(s[::verbosity].mtfFreq[0])
orig(s[post(::numFileNames)-1].selector) == orig(s[::verbosity].selector)
orig(s[post(::numFileNames)-1].selector[0]) == orig(s[::verbosity].selector[0])
orig(s[post(::numFileNames)-1].selectorMtf) == orig(s[::verbosity].selectorMtf)
orig(s[post(::numFileNames)-1].selectorMtf[0]) == orig(s[::verbosity].selector[0])
orig(s[post(::numFileNames)-1].len[0]) == orig(s[::verbosity].len[0])
orig(s[post(::numFileNames)-1].len[0][0]) == orig(s[::verbosity].len[0][0])
orig(s[post(::numFileNames)-1].len[1]) == orig(s[::verbosity].len[1])
orig(s[post(::numFileNames)-1].len[1][0]) == orig(s[::verbosity].len[0][0])
orig(s[post(::numFileNames)-1].len[2]) == orig(s[::verbosity].len[2])
orig(s[post(::numFileNames)-1].len[2][0]) == orig(s[::verbosity].len[0][0])
orig(s[post(::numFileNames)-1].len[3]) == orig(s[::verbosity].len[3])
orig(s[post(::numFileNames)-1].len[3][0]) == orig(s[::verbosity].len[0][0])
orig(s[post(::numFileNames)-1].len[4]) == orig(s[::verbosity].len[4])
orig(s[post(::numFileNames)-1].len[4][0]) == orig(s[::verbosity].len[0][0])
orig(s[post(::numFileNames)-1].len[5]) == orig(s[::verbosity].len[5])
orig(s[post(::numFileNames)-1].len[5][0]) == orig(s[::verbosity].len[5][0])
orig(s[post(::numFileNames)-1].code[0]) == orig(s[::verbosity].code[0])
orig(s[post(::numFileNames)-1].code[0][0]) == orig(s[::verbosity].code[0][0])
orig(s[post(::numFileNames)-1].code[1]) == orig(s[::verbosity].code[1])
orig(s[post(::numFileNames)-1].code[1][0]) == orig(s[::verbosity].code[1][0])
orig(s[post(::numFileNames)-1].code[2]) == orig(s[::verbosity].code[2])
orig(s[post(::numFileNames)-1].code[2][0]) == orig(s[::verbosity].code[2][0])
orig(s[post(::numFileNames)-1].code[3]) == orig(s[::verbosity].code[3])
orig(s[post(::numFileNames)-1].code[3][0]) == orig(s[::verbosity].code[3][0])
orig(s[post(::numFileNames)-1].code[4]) == orig(s[::verbosity].code[4])
orig(s[post(::numFileNames)-1].code[4][0]) == orig(s[::verbosity].code[4][0])
orig(s[post(::numFileNames)-1].code[5]) == orig(s[::verbosity].code[5])
orig(s[post(::numFileNames)-1].rfreq[0]) == orig(s[::verbosity].rfreq[0])
orig(s[post(::numFileNames)-1].rfreq[1]) == orig(s[::verbosity].rfreq[1])
orig(s[post(::numFileNames)-1].rfreq[2]) == orig(s[::verbosity].rfreq[2])
orig(s[post(::numFileNames)-1].rfreq[3]) == orig(s[::verbosity].rfreq[3])
orig(s[post(::numFileNames)-1].rfreq[4]) == orig(s[::verbosity].rfreq[4])
orig(s[post(::numFileNames)-1].rfreq[5]) == orig(s[::verbosity].rfreq[5])
orig(s[post(::numFileNames)-1].len_pack) == orig(s[::verbosity].len_pack)
orig(s[post(::numFileNames)-1].len_pack[0]) == orig(s[::verbosity].len_pack[0])
orig(s[post(::numFilesProcessed)-1].arr1[0]) == orig(s[::verbosity].arr1[0])
orig(s[post(::numFilesProcessed)-1].ftab[0]) == orig(s[::verbosity].ftab[0])
orig(s[post(::numFilesProcessed)-1].origPtr) == orig(s[::verbosity].origPtr)
orig(s[post(::numFilesProcessed)-1].ptr[0]) == orig(s[::verbosity].arr1[0])
orig(s[post(::numFilesProcessed)-1].mtfv[0]) == orig(s[::verbosity].mtfv[0])
orig(s[post(::numFilesProcessed)-1].zbits) == orig(s[::verbosity].zbits)
orig(s[post(::numFilesProcessed)-1].zbits[0]) == orig(s[::verbosity].zbits[0])
orig(s[post(::numFilesProcessed)-1].nInUse) == orig(s[::verbosity].nInUse)
orig(s[post(::numFilesProcessed)-1].unseqToSeq[0]) == orig(s[::verbosity].unseqToSeq[0])
orig(s[post(::numFilesProcessed)-1].bsBuff) == orig(s[::verbosity].bsBuff)
orig(s[post(::numFilesProcessed)-1].bsLive) == orig(s[::verbosity].bsLive)
orig(s[post(::numFilesProcessed)-1].blockCRC) == orig(s[::verbosity].blockCRC)
orig(s[post(::numFilesProcessed)-1].combinedCRC) == orig(s[::verbosity].combinedCRC)
orig(s[post(::numFilesProcessed)-1].nMTF) == orig(s[::verbosity].nMTF)
orig(s[post(::numFilesProcessed)-1].mtfFreq) == orig(s[::verbosity].mtfFreq)
orig(s[post(::numFilesProcessed)-1].mtfFreq[0]) == orig(s[::verbosity].mtfFreq[0])
orig(s[post(::numFilesProcessed)-1].selector) == orig(s[::verbosity].selector)
orig(s[post(::numFilesProcessed)-1].selector[0]) == orig(s[::verbosity].selector[0])
orig(s[post(::numFilesProcessed)-1].selectorMtf) == orig(s[::verbosity].selectorMtf)
orig(s[post(::numFilesProcessed)-1].selectorMtf[0]) == orig(s[::verbosity].selector[0])
orig(s[post(::numFilesProcessed)-1].len[0]) == orig(s[::verbosity].len[0])
orig(s[post(::numFilesProcessed)-1].len[0][0]) == orig(s[::verbosity].len[0][0])
orig(s[post(::numFilesProcessed)-1].len[1]) == orig(s[::verbosity].len[1])
orig(s[post(::numFilesProcessed)-1].len[1][0]) == orig(s[::verbosity].len[0][0])
orig(s[post(::numFilesProcessed)-1].len[2]) == orig(s[::verbosity].len[2])
orig(s[post(::numFilesProcessed)-1].len[2][0]) == orig(s[::verbosity].len[0][0])
orig(s[post(::numFilesProcessed)-1].len[3]) == orig(s[::verbosity].len[3])
orig(s[post(::numFilesProcessed)-1].len[3][0]) == orig(s[::verbosity].len[0][0])
orig(s[post(::numFilesProcessed)-1].len[4]) == orig(s[::verbosity].len[4])
orig(s[post(::numFilesProcessed)-1].len[4][0]) == orig(s[::verbosity].len[0][0])
orig(s[post(::numFilesProcessed)-1].len[5]) == orig(s[::verbosity].len[5])
orig(s[post(::numFilesProcessed)-1].len[5][0]) == orig(s[::verbosity].len[5][0])
orig(s[post(::numFilesProcessed)-1].code[0]) == orig(s[::verbosity].code[0])
orig(s[post(::numFilesProcessed)-1].code[0][0]) == orig(s[::verbosity].code[0][0])
orig(s[post(::numFilesProcessed)-1].code[1]) == orig(s[::verbosity].code[1])
orig(s[post(::numFilesProcessed)-1].code[1][0]) == orig(s[::verbosity].code[1][0])
orig(s[post(::numFilesProcessed)-1].code[2]) == orig(s[::verbosity].code[2])
orig(s[post(::numFilesProcessed)-1].code[2][0]) == orig(s[::verbosity].code[2][0])
orig(s[post(::numFilesProcessed)-1].code[3]) == orig(s[::verbosity].code[3])
orig(s[post(::numFilesProcessed)-1].code[3][0]) == orig(s[::verbosity].code[3][0])
orig(s[post(::numFilesProcessed)-1].code[4]) == orig(s[::verbosity].code[4])
orig(s[post(::numFilesProcessed)-1].code[4][0]) == orig(s[::verbosity].code[4][0])
orig(s[post(::numFilesProcessed)-1].code[5]) == orig(s[::verbosity].code[5])
orig(s[post(::numFilesProcessed)-1].rfreq[0]) == orig(s[::verbosity].rfreq[0])
orig(s[post(::numFilesProcessed)-1].rfreq[1]) == orig(s[::verbosity].rfreq[1])
orig(s[post(::numFilesProcessed)-1].rfreq[2]) == orig(s[::verbosity].rfreq[2])
orig(s[post(::numFilesProcessed)-1].rfreq[3]) == orig(s[::verbosity].rfreq[3])
orig(s[post(::numFilesProcessed)-1].rfreq[4]) == orig(s[::verbosity].rfreq[4])
orig(s[post(::numFilesProcessed)-1].rfreq[5]) == orig(s[::verbosity].rfreq[5])
orig(s[post(::numFilesProcessed)-1].len_pack) == orig(s[::verbosity].len_pack)
orig(s[post(::numFilesProcessed)-1].len_pack[0]) == orig(s[::verbosity].len_pack[0])
orig(s[post(::opMode)-1].arr1[0]) == orig(s[::verbosity].arr1[0])
orig(s[post(::opMode)-1].ftab[0]) == orig(s[::verbosity].ftab[0])
orig(s[post(::opMode)-1].origPtr) == orig(s[::verbosity].origPtr)
orig(s[post(::opMode)-1].ptr[0]) == orig(s[::verbosity].arr1[0])
orig(s[post(::opMode)-1].mtfv[0]) == orig(s[::verbosity].mtfv[0])
orig(s[post(::opMode)-1].zbits) == orig(s[::verbosity].zbits)
orig(s[post(::opMode)-1].zbits[0]) == orig(s[::verbosity].zbits[0])
orig(s[post(::opMode)-1].nInUse) == orig(s[::verbosity].nInUse)
orig(s[post(::opMode)-1].unseqToSeq[0]) == orig(s[::verbosity].unseqToSeq[0])
orig(s[post(::opMode)-1].bsBuff) == orig(s[::verbosity].bsBuff)
orig(s[post(::opMode)-1].bsLive) == orig(s[::verbosity].bsLive)
orig(s[post(::opMode)-1].blockCRC) == orig(s[::verbosity].blockCRC)
orig(s[post(::opMode)-1].combinedCRC) == orig(s[::verbosity].combinedCRC)
orig(s[post(::opMode)-1].nMTF) == orig(s[::verbosity].nMTF)
orig(s[post(::opMode)-1].mtfFreq) == orig(s[::verbosity].mtfFreq)
orig(s[post(::opMode)-1].mtfFreq[0]) == orig(s[::verbosity].mtfFreq[0])
orig(s[post(::opMode)-1].selector) == orig(s[::verbosity].selector)
orig(s[post(::opMode)-1].selector[0]) == orig(s[::verbosity].selector[0])
orig(s[post(::opMode)-1].selectorMtf) == orig(s[::verbosity].selectorMtf)
orig(s[post(::opMode)-1].selectorMtf[0]) == orig(s[::verbosity].selector[0])
orig(s[post(::opMode)-1].len[0]) == orig(s[::verbosity].len[0])
orig(s[post(::opMode)-1].len[0][0]) == orig(s[::verbosity].len[0][0])
orig(s[post(::opMode)-1].len[1]) == orig(s[::verbosity].len[1])
orig(s[post(::opMode)-1].len[1][0]) == orig(s[::verbosity].len[0][0])
orig(s[post(::opMode)-1].len[2]) == orig(s[::verbosity].len[2])
orig(s[post(::opMode)-1].len[2][0]) == orig(s[::verbosity].len[0][0])
orig(s[post(::opMode)-1].len[3]) == orig(s[::verbosity].len[3])
orig(s[post(::opMode)-1].len[3][0]) == orig(s[::verbosity].len[0][0])
orig(s[post(::opMode)-1].len[4]) == orig(s[::verbosity].len[4])
orig(s[post(::opMode)-1].len[4][0]) == orig(s[::verbosity].len[0][0])
orig(s[post(::opMode)-1].len[5]) == orig(s[::verbosity].len[5])
orig(s[post(::opMode)-1].len[5][0]) == orig(s[::verbosity].len[5][0])
orig(s[post(::opMode)-1].code[0]) == orig(s[::verbosity].code[0])
orig(s[post(::opMode)-1].code[0][0]) == orig(s[::verbosity].code[0][0])
orig(s[post(::opMode)-1].code[1]) == orig(s[::verbosity].code[1])
orig(s[post(::opMode)-1].code[1][0]) == orig(s[::verbosity].code[1][0])
orig(s[post(::opMode)-1].code[2]) == orig(s[::verbosity].code[2])
orig(s[post(::opMode)-1].code[2][0]) == orig(s[::verbosity].code[2][0])
orig(s[post(::opMode)-1].code[3]) == orig(s[::verbosity].code[3])
orig(s[post(::opMode)-1].code[3][0]) == orig(s[::verbosity].code[3][0])
orig(s[post(::opMode)-1].code[4]) == orig(s[::verbosity].code[4])
orig(s[post(::opMode)-1].code[4][0]) == orig(s[::verbosity].code[4][0])
orig(s[post(::opMode)-1].code[5]) == orig(s[::verbosity].code[5])
orig(s[post(::opMode)-1].rfreq[0]) == orig(s[::verbosity].rfreq[0])
orig(s[post(::opMode)-1].rfreq[1]) == orig(s[::verbosity].rfreq[1])
orig(s[post(::opMode)-1].rfreq[2]) == orig(s[::verbosity].rfreq[2])
orig(s[post(::opMode)-1].rfreq[3]) == orig(s[::verbosity].rfreq[3])
orig(s[post(::opMode)-1].rfreq[4]) == orig(s[::verbosity].rfreq[4])
orig(s[post(::opMode)-1].rfreq[5]) == orig(s[::verbosity].rfreq[5])
orig(s[post(::opMode)-1].len_pack) == orig(s[::verbosity].len_pack)
orig(s[post(::opMode)-1].len_pack[0]) == orig(s[::verbosity].len_pack[0])
::incs has only one value
::incs[] == [1, 4, 13, 40, 121, 364, 1093, 3280, 9841, 29524, 88573, 265720, 797161, 2391484]
::incs[] elements >= 1
::bzerrorstrings has only one value
::bzerrorstrings[] == [OK, SEQUENCE_ERROR, PARAM_ERROR, MEM_ERROR, DATA_ERROR, DATA_ERROR_MAGIC, IO_ERROR, UNEXPECTED_EOF, OUTBUFF_FULL, CONFIG_ERROR, ???, ???, ???, ???, ???, ???]
::fileMetaInfo has only one value
::fileMetaInfo.st_dev == 2049
::fileMetaInfo.st_ino == 936492
::fileMetaInfo.st_nlink == 1
::fileMetaInfo.st_mode == 33277
::fileMetaInfo.st_uid == 1000
::fileMetaInfo.st_rdev == 0
::fileMetaInfo.st_size == 5738700
::fileMetaInfo.st_blksize == 4096
::fileMetaInfo.st_blocks == 11216
::fileMetaInfo.st_atim has only one value
::fileMetaInfo.st_atim.tv_sec == 1496096467
::fileMetaInfo.st_atim.tv_nsec == 709424920
::fileMetaInfo.st_mtim has only one value
::fileMetaInfo.st_mtim.tv_sec == 1483563943
::fileMetaInfo.st_mtim.tv_nsec == 421335644
::fileMetaInfo.st_ctim has only one value
::fileMetaInfo.__glibc_reserved has only one value
::fileMetaInfo.__glibc_reserved[] == [0, 0, 0]
::fileMetaInfo.__glibc_reserved[] elements == 0
::BZ2_rNums has only one value
::BZ2_rNums[] == [619, 720, 127, 481, 931, 816, 813, 233, 566, 247, 985, 724, 205, 454, 863, 491, 741, 242, 949, 214, 733, 859, 335, 708, 621, 574, 73, 654, 730, 472, 419, 436, 278, 496, 867, 210, 399, 680, 480, 51, 878, 465, 811, 169, 869, 675, 611, 697, 867, 561, 862, 687, 507, 283, 482, 129, 807, 591, 733, 623, 150, 238, 59, 379, 684, 877, 625, 169, 643, 105, 170, 607, 520, 932, 727, 476, 693, 425, 174, 647, 73, 122, 335, 530, 442, 853, 695, 249, 445, 515, 909, 545, 703, 919, 874, 474, 882, 500, 594, 612, 641, 801, 220, 162, 819, 984, 589, 513, 495, 799, 161, 604, 958, 533, 221, 400, 386, 867, 600, 782, 382, 596, 414, 171, 516, 375, 682, 485, 911, 276, 98, 553, 163, 354, 666, 933, 424, 341, 533, 870, 227, 730, 475, 186, 263, 647, 537, 686, 600, 224, 469, 68, 770, 919, 190, 373, 294, 822, 808, 206, 184, 943, 795, 384, 383, 461, 404, 758, 839, 887, 715, 67, 618, 276, 204, 918, 873, 777, 604, 560, 951, 160, 578, 722, 79, 804, 96, 409, 713, 940, 652, 934, 970, 447, 318, 353, 859, 672, 112, 785, 645, 863, 803, 350, 139, 93, 354, 99, 820, 908, 609, 772, 154, 274, 580, 184, 79, 626, 630, 742, 653, 282, 762, 623, 680, 81, 927, 626, 789, 125, 411, 521, 938, 300, 821, 78, 343, 175, 128, 250, 170, 774, 972, 275, 999, 639, 495, 78, 352, 126, 857, 956, 358, 619, 580, 124, 737, 594, 701, 612, 669, 112, 134, 694, 363, 992, 809, 743, 168, 974, 944, 375, 748, 52, 600, 747, 642, 182, 862, 81, 344, 805, 988, 739, 511, 655, 814, 334, 249, 515, 897, 955, 664, 981, 649, 113, 974, 459, 893, 228, 433, 837, 553, 268, 926, 240, 102, 654, 459, 51, 686, 754, 806, 760, 493, 403, 415, 394, 687, 700, 946, 670, 656, 610, 738, 392, 760, 799, 887, 653, 978, 321, 576, 617, 626, 502, 894, 679, 243, 440, 680, 879, 194, 572, 640, 724, 926, 56, 204, 700, 707, 151, 457, 449, 797, 195, 791, 558, 945, 679, 297, 59, 87, 824, 713, 663, 412, 693, 342, 606, 134, 108, 571, 364, 631, 212, 174, 643, 304, 329, 343, 97, 430, 751, 497, 314, 983, 374, 822, 928, 140, 206, 73, 263, 980, 736, 876, 478, 430, 305, 170, 514, 364, 692, 829, 82, 855, 953, 676, 246, 369, 970, 294, 750, 807, 827, 150, 790, 288, 923, 804, 378, 215, 828, 592, 281, 565, 555, 710, 82, 896, 831, 547, 261, 524, 462, 293, 465, 502, 56, 661, 821, 976, 991, 658, 869, 905, 758, 745, 193, 768, 550, 608, 933, 378, 286, 215, 979, 792, 961, 61, 688, 793, 644, 986, 403, 106, 366, 905, 644, 372, 567, 466, 434, 645, 210, 389, 550, 919, 135, 780, 773, 635, 389, 707, 100, 626, 958, 165, 504, 920, 176, 193, 713, 857, 265, 203, 50, 668, 108, 645, 990, 626, 197, 510, 357, 358, 850, 858, 364, 936, 638]
::BZ2_crc32Table has only one value
::BZ2_crc32Table[] == [0, 79764919, 159529838, 222504665, 319059676, 398814059, 445009330, 507990021, 638119352, 583659535, 797628118, 726387553, 890018660, 835552979, 1015980042, 944750013, 1276238704, 1221641927, 1167319070, 1095957929, 1595256236, 1540665371, 1452775106, 1381403509, 1780037320, 1859660671, 1671105958, 1733955601, 2031960084, 2111593891, 1889500026, 1952343757, 2552477408, 2632100695, 2443283854, 2506133561, 2334638140, 2414271883, 2191915858, 2254759653, 3190512472, 3135915759, 3081330742, 3009969537, 2905550212, 2850959411, 2762807018, 2691435357, 3560074640, 3505614887, 3719321342, 3648080713, 3342211916, 3287746299, 3467911202, 3396681109, 4063920168, 4143685023, 4223187782, 4286162673, 3779000052, 3858754371, 3904687514, 3967668269, 881225847, 809987520, 1023691545, 969234094, 662832811, 591600412, 771767749, 717299826, 311336399, 374308984, 453813921, 533576470, 25881363, 88864420, 134795389, 214552010, 2023205639, 2086057648, 1897238633, 1976864222, 1804852699, 1867694188, 1645340341, 1724971778, 1587496639, 1516133128, 1461550545, 1406951526, 1302016099, 1230646740, 1142491917, 1087903418, 2896545431, 2825181984, 2770861561, 2716262478, 3215044683, 3143675388, 3055782693, 3001194130, 2326604591, 2389456536, 2200899649, 2280525302, 2578013683, 2640855108, 2418763421, 2498394922, 3769900519, 3832873040, 3912640137, 3992402750, 4088425275, 4151408268, 4197601365, 4277358050, 3334271071, 3263032808, 3476998961, 3422541446, 3585640067, 3514407732, 3694837229, 3640369242, 1762451694, 1842216281, 1619975040, 1682949687, 2047383090, 2127137669, 1938468188, 2001449195, 1325665622, 1271206113, 1183200824, 1111960463, 1543535498, 1489069629, 1434599652, 1363369299, 622672798, 568075817, 748617968, 677256519, 907627842, 853037301, 1067152940, 995781531, 51762726, 131386257, 177728840, 240578815, 269590778, 349224269, 429104020, 491947555, 4046411278, 4126034873, 4172115296, 4234965207, 3794477266, 3874110821, 3953728444, 4016571915, 3609705398, 3555108353, 3735388376, 3664026991, 3290680682, 3236090077, 3449943556, 3378572211, 3174993278, 3120533705, 3032266256, 2961025959, 2923101090, 2868635157, 2813903052, 2742672763, 2604032198, 2683796849, 2461293480, 2524268063, 2284983834, 2364738477, 2175806836, 2238787779, 1569362073, 1498123566, 1409854455, 1355396672, 1317987909, 1246755826, 1192025387, 1137557660, 2072149281, 2135122070, 1912620623, 1992383480, 1753615357, 1816598090, 1627664531, 1707420964, 295390185, 358241886, 404320391, 483945776, 43990325, 106832002, 186451547, 266083308, 932423249, 861060070, 1041341759, 986742920, 613929101, 542559546, 756411363, 701822548, 3316196985, 3244833742, 3425377559, 3370778784, 3601682597, 3530312978, 3744426955, 3689838204, 3819031489, 3881883254, 3928223919, 4007849240, 4037393693, 4100235434, 4180117107, 4259748804, 2310601993, 2373574846, 2151335527, 2231098320, 2596047829, 2659030626, 2470359227, 2550115596, 2947551409, 2876312838, 2788305887, 2733848168, 3165939309, 3094707162, 3040238851, 2985771188]
::BZ2_crc32Table[] elements >= 0
::mammamia == 3216
::keepInputFiles == 1
::smallMode == 0
::numFileNames == 1
::blockSize100k == 9
::longestFileName == 20
::inName == "../inputs/in_big.txt"
::outName == "../inputs/in_big.txt.bz2"
::tmpName == ""
::progName == "zip-injected"
::progNameReally == "./zip-injected"
::outputHandleJustInCase has only one value
::workFactor == 30
::zSuffix has only one value
::zSuffix[] == [.bz2, .bz, .tbz2, .tbz]
::unzSuffix has only one value
::unzSuffix[] == [, , .tar, .tar]
::unzSuffix[] elements one of { "", ".tar" }
s[] contains no nulls and has only one value, of length 1
s[] elements has only one value
s[].strm contains no nulls and has only one value, of length 1
s[].strm elements has only one value
s[].strm[0] contains no nulls and has only one value, of length 1
s[].strm[0] elements has only one value
s[].strm->total_in_hi32 == [0]
s[].strm->total_in_hi32 elements == 0
s[].strm->next_out elements one of { "BZh91AY&SY\361\031\246\204", "\177\346(+$\312k%jvM\340\307\267\217 \017\3069@\r\260\240\003\010", "\376\030\240\254\223)\254\324\211\360\243\002~\321\374\200?\030\345" }
s[].strm->avail_out == [5000]
s[].strm->avail_out elements == 5000
s[].strm->state contains no nulls and has only one value, of length 1
s[].strm->state elements has only one value
s[].strm->bzalloc contains no nulls and has only one value, of length 1
s[].strm->bzalloc elements has only one value
s[].strm->bzfree contains no nulls and has only one value, of length 1
s[].strm->bzfree elements has only one value
s[].strm->opaque == [null]
s[].strm->opaque elements == null
s[].mode elements one of { 2, 4 }
s[].mode one of { [2], [4] }
s[].state == [2]
s[].state elements == 2
s[].avail_in_expect == [0]
s[].avail_in_expect elements == 0
s[].arr1 contains no nulls and has only one value, of length 1
s[].arr1 elements has only one value
s[].arr1[0] elements one of { 23, 65559 }
s[].arr1[0] one of { [23], [65559] }
s[].arr2 contains no nulls and has only one value, of length 1
s[].arr2 elements has only one value
s[].ftab contains no nulls and has only one value, of length 1
s[].ftab elements has only one value
s[].ftab[0] == [4294967295]
s[].ftab[0] elements == 4294967295L
s[].block contains no nulls and has only one value, of length 1
s[].block elements has only one value
s[].mtfv contains no nulls and has only one value, of length 1
s[].mtfv elements has only one value
s[].mtfv[0] == [23]
s[].mtfv[0] elements == 23
s[].workFactor == [30]
s[].workFactor elements == 30
s[].state_in_len elements one of { 0, 1 }
s[].state_in_len one of { [0], [1] }
s[].nblock elements one of { 572335, 899981, 899982 }
s[].nblock one of { [572335], [899981], [899982] }
s[].nblockMAX == [899981]
s[].nblockMAX elements == 899981
s[].numZ elements one of { 889, 899, 904 }
s[].numZ one of { [889], [899], [904] }
s[].state_out_pos == [0]
s[].state_out_pos elements == 0
s[].nInUse == [24]
s[].nInUse elements == 24
s[].inUse contains no nulls and has only one value, of length 1
s[].inUse elements has only one value
s[].inUse[0] == [1]
s[].inUse[0] elements == 1
s[].unseqToSeq[0] == [0]
s[].unseqToSeq[0] elements == 0
s[].blockSize100k == [9]
s[].blockSize100k elements == 9
s[].nMTF elements one of { 3461, 3748, 3749 }
s[].nMTF one of { [3461], [3748], [3749] }
s[].mtfFreq contains no nulls and has only one value, of length 1
s[].mtfFreq elements has only one value
s[].selector contains no nulls and has only one value, of length 1
s[].selector elements has only one value
s[].selector[0] elements one of { 4, 5 }
s[].selector[0] one of { [4], [5] }
s[].selectorMtf contains no nulls and has only one value, of length 1
s[].selectorMtf elements has only one value
s[].len[0] contains no nulls and has only one value, of length 1
s[].len[0] elements has only one value
s[].len[0][0] == [5]
s[].len[0][0] elements == 5
s[].len[1] contains no nulls and has only one value, of length 1
s[].len[1] elements has only one value
s[].len[2] contains no nulls and has only one value, of length 1
s[].len[2] elements has only one value
s[].len[3] contains no nulls and has only one value, of length 1
s[].len[3] elements has only one value
s[].len[4] contains no nulls and has only one value, of length 1
s[].len[4] elements has only one value
s[].len[5] contains no nulls and has only one value, of length 1
s[].len[5] elements has only one value
s[].len[5][0] == [4]
s[].len[5][0] elements == 4
s[].code[0] contains no nulls and has only one value, of length 1
s[].code[0] elements has only one value
s[].code[0][0] == [12]
s[].code[0][0] elements == 12
s[].code[1] contains no nulls and has only one value, of length 1
s[].code[1] elements has only one value
s[].code[1][0] == [13]
s[].code[1][0] elements == 13
s[].code[2] contains no nulls and has only one value, of length 1
s[].code[2] elements has only one value
s[].code[2][0] == [14]
s[].code[2][0] elements == 14
s[].code[3] contains no nulls and has only one value, of length 1
s[].code[3] elements has only one value
s[].code[3][0] == [15]
s[].code[3][0] elements == 15
s[].code[4] contains no nulls and has only one value, of length 1
s[].code[4] elements has only one value
s[].code[4][0] == [16]
s[].code[4][0] elements == 16
s[].code[5] contains no nulls and has only one value, of length 1
s[].code[5] elements has only one value
s[].rfreq[0] contains no nulls and has only one value, of length 1
s[].rfreq[0] elements has only one value
s[].rfreq[1] contains no nulls and has only one value, of length 1
s[].rfreq[1] elements has only one value
s[].rfreq[2] contains no nulls and has only one value, of length 1
s[].rfreq[2] elements has only one value
s[].rfreq[3] contains no nulls and has only one value, of length 1
s[].rfreq[3] elements has only one value
s[].rfreq[4] contains no nulls and has only one value, of length 1
s[].rfreq[4] elements has only one value
s[].rfreq[5] contains no nulls and has only one value, of length 1
s[].rfreq[5] elements has only one value
s[].len_pack contains no nulls and has only one value, of length 1
s[].len_pack elements has only one value
s[].len_pack[0] == [327685]
s[].len_pack[0] elements == 327685
size(::incs[]) == 14
size(::bzerrorstrings[]) == 16
size(::BZ2_rNums[]) == 512
size(::BZ2_crc32Table[]) == 256
size(::zSuffix[]) == 4
::incs[::blockSize100k] == 29524
::incs[::blockSize100k-1] == 9841
::incs[::srcMode] == 40
::BZ2_rNums[::verbosity] == 619
::BZ2_rNums[::numFileNames] == 720
::BZ2_rNums[::blockSize100k] == 247
::BZ2_rNums[::blockSize100k-1] == 566
::BZ2_rNums[::srcMode] == 481
::BZ2_rNums[::srcMode-1] == 127
::BZ2_rNums[::longestFileName] == 733
::BZ2_rNums[::longestFileName-1] == 214
::BZ2_rNums[::workFactor] == 419
::BZ2_rNums[::workFactor-1] == 472
::BZ2_crc32Table[::verbosity] == 0
::BZ2_crc32Table[::numFileNames] == 79764919
::BZ2_crc32Table[::blockSize100k] == 583659535
::BZ2_crc32Table[::blockSize100k-1] == 638119352
::BZ2_crc32Table[::srcMode] == 222504665
::BZ2_crc32Table[::srcMode-1] == 159529838
::BZ2_crc32Table[::longestFileName] == 1595256236
::BZ2_crc32Table[::longestFileName-1] == 1095957929
::BZ2_crc32Table[::workFactor] == 1889500026
::BZ2_crc32Table[::workFactor-1] == 2111593891
orig(size(s[].len[0])) in ::incs[]
orig(s[::verbosity].code[1][0]) in ::incs[]
::fileMetaInfo.__glibc_reserved[] elements == ::verbosity
::fileMetaInfo.__glibc_reserved[] elements == orig(size(s[].len[0]))-1
orig(size(s[].len[0]))-1 in ::fileMetaInfo.__glibc_reserved[]
size(::BZ2_rNums[])-1 in ::BZ2_rNums[]
s[::verbosity].avail_in_expect in ::BZ2_crc32Table[]
s[].state_out_pos elements == ::verbosity
::verbosity in orig(s[].code[5][0])
orig(s[].code[5][0]) elements == ::verbosity
s[].inUse[0] elements == ::keepInputFiles
s[].unseqToSeq[0] elements == ::smallMode
::smallMode in orig(s[].unseqToSeq[0])
orig(s[].unseqToSeq[0]) elements == ::smallMode
s[].blockSize100k elements == ::blockSize100k
::inName == orig(::inName)
::outName == orig(::outName)
::tmpName in ::unzSuffix[]
::tmpName == orig(::tmpName)
::progName == orig(::progName)
::progNameReally == orig(::progNameReally)
s[].workFactor elements == ::workFactor
s[] elements == s[::verbosity]
s[].strm elements == s[::verbosity].strm
s[].strm[0] elements == s[::verbosity].strm[0]
s[].strm->avail_in == s[].avail_in_expect (elementwise)
s[].strm->avail_in is the reverse of s[].avail_in_expect
s[].strm->avail_in elements == s[::verbosity].strm->avail_in
s[::verbosity].avail_in_expect in s[].strm->avail_in
s[].strm->avail_in elements == s[::verbosity].avail_in_expect
s[].strm->total_in_lo32 elements == s[::verbosity].strm->total_in_lo32
s[].strm->total_in_hi32 == s[].avail_in_expect (elementwise)
s[].strm->total_in_hi32 is the reverse of s[].avail_in_expect
s[].strm->total_in_hi32 elements == ::BZ2_crc32Table[::verbosity]
s[::verbosity].avail_in_expect in s[].strm->total_in_hi32
s[].strm->total_in_hi32 elements == s[::verbosity].avail_in_expect
s[].strm->avail_out elements == s[::verbosity].strm->avail_out
s[].strm->total_out_lo32 elements == s[::verbosity].strm->total_out_lo32
s[].strm->state elements == s[::verbosity].strm->state
s[].strm->bzalloc elements == s[::verbosity].strm->bzalloc
s[].strm->bzfree elements == s[::verbosity].strm->bzfree
s[].strm->opaque elements == s[::verbosity].strm->opaque
s[].mode elements == s[::verbosity].mode
s[].state elements == size(::fileMetaInfo.__glibc_reserved[])-1
s[].avail_in_expect == s[].bsBuff (elementwise)
s[].avail_in_expect is the reverse of s[].bsBuff
::BZ2_crc32Table[::verbosity] in s[].avail_in_expect
s[].avail_in_expect elements == ::BZ2_crc32Table[::verbosity]
s[::verbosity].strm->avail_in in s[].avail_in_expect
s[].avail_in_expect elements == s[::verbosity].strm->avail_in
s[].avail_in_expect elements == s[::verbosity].avail_in_expect
s[::verbosity].bsBuff in s[].avail_in_expect
s[].avail_in_expect elements == s[::verbosity].bsBuff
s[].arr1 elements == s[::verbosity].arr1
s[].arr1[0] elements == s[::verbosity].arr1[0]
s[].arr2 elements == s[::verbosity].arr2
s[].arr2[0] elements == s[::verbosity].arr2[0]
s[].ftab elements == s[::verbosity].ftab
s[].ftab[0] == orig(s[].ftab[0]) (elementwise)
s[].ftab[0] is the reverse of orig(s[].ftab[0])
s[].ftab[0] elements == s[::verbosity].ftab[0]
orig(s[::verbosity].ftab[0]) in s[].ftab[0]
s[].ftab[0] elements == orig(s[::verbosity].ftab[0])
s[].origPtr elements == s[::verbosity].origPtr
s[].block elements == s[::verbosity].block
s[].block[0] elements == s[::verbosity].block[0]
s[].mtfv elements == s[::verbosity].mtfv
s[].mtfv[0] == orig(s[].mtfv[0]) (elementwise)
s[].mtfv[0] is the reverse of orig(s[].mtfv[0])
s[].mtfv[0] elements == s[::verbosity].mtfv[0]
orig(s[::verbosity].mtfv[0]) in s[].mtfv[0]
s[].mtfv[0] elements == orig(s[::verbosity].mtfv[0])
s[].zbits elements == s[::verbosity].zbits
s[].zbits[0] elements == s[::verbosity].zbits[0]
s[].state_in_ch elements == s[::verbosity].state_in_ch
s[].state_in_len elements == s[::verbosity].state_in_len
s[].nblock elements == s[::verbosity].nblock
s[].nblockMAX elements == s[::verbosity].nblockMAX
s[].numZ elements == s[::verbosity].numZ
s[].state_out_pos == orig(s[].code[5][0]) (elementwise)
s[].state_out_pos is the reverse of orig(s[].code[5][0])
orig(size(s[].len[0]))-1 in s[].state_out_pos
s[].state_out_pos elements == orig(size(s[].len[0]))-1
s[].nInUse == orig(s[].nInUse) (elementwise)
s[].nInUse is the reverse of orig(s[].nInUse)
s[].nInUse elements == s[::verbosity].nInUse
orig(s[::verbosity].nInUse) in s[].nInUse
s[].nInUse elements == orig(s[::verbosity].nInUse)
s[].inUse elements == s[::verbosity].inUse
s[].unseqToSeq[0] == orig(s[].unseqToSeq[0]) (elementwise)
s[].unseqToSeq[0] is the reverse of orig(s[].unseqToSeq[0])
orig(s[::verbosity].unseqToSeq[0]) in s[].unseqToSeq[0]
s[].unseqToSeq[0] elements == orig(s[::verbosity].unseqToSeq[0])
s[::verbosity].avail_in_expect in s[].bsBuff
s[].bsBuff elements == s[::verbosity].avail_in_expect
s[].bsBuff elements == s[::verbosity].bsBuff
s[].bsLive elements == s[::verbosity].bsLive
s[].blockCRC elements == s[::verbosity].blockCRC
s[].combinedCRC elements == s[::verbosity].combinedCRC
s[].blockNo elements == s[::verbosity].blockNo
s[].nMTF elements == s[::verbosity].nMTF
s[].mtfFreq == orig(s[].mtfFreq) (elementwise)
s[].mtfFreq is the reverse of orig(s[].mtfFreq)
s[].mtfFreq elements == s[::verbosity].mtfFreq
orig(s[::verbosity].mtfFreq) in s[].mtfFreq
s[].mtfFreq elements == orig(s[::verbosity].mtfFreq)
s[].mtfFreq[0] elements == s[::verbosity].mtfFreq[0]
s[].selector == orig(s[].selector) (elementwise)
s[].selector is the reverse of orig(s[].selector)
s[].selector elements == s[::verbosity].selector
orig(s[::verbosity].selector) in s[].selector
s[].selector elements == orig(s[::verbosity].selector)
s[].selector[0] elements == s[::verbosity].selector[0]
s[].selectorMtf == orig(s[].selectorMtf) (elementwise)
s[].selectorMtf is the reverse of orig(s[].selectorMtf)
s[].selectorMtf elements == s[::verbosity].selectorMtf
orig(s[::verbosity].selectorMtf) in s[].selectorMtf
s[].selectorMtf elements == orig(s[::verbosity].selectorMtf)
s[].len[0] == orig(s[].len[0]) (elementwise)
s[].len[0] is the reverse of orig(s[].len[0])
s[].len[0] elements == s[::verbosity].len[0]
orig(s[::verbosity].len[0]) in s[].len[0]
s[].len[0] elements == orig(s[::verbosity].len[0])
s[].len[0][0] == orig(s[].len[0][0]) (elementwise)
s[].len[0][0] is the reverse of orig(s[].len[0][0])
s[].len[0][0] elements == s[::verbosity].len[0][0]
orig(s[::verbosity].len[0][0]) in s[].len[0][0]
s[].len[0][0] elements == orig(s[::verbosity].len[0][0])
s[].len[1] == orig(s[].len[1]) (elementwise)
s[].len[1] is the reverse of orig(s[].len[1])
s[].len[1] elements == s[::verbosity].len[1]
orig(s[::verbosity].len[1]) in s[].len[1]
s[].len[1] elements == orig(s[::verbosity].len[1])
s[].len[2] == orig(s[].len[2]) (elementwise)
s[].len[2] is the reverse of orig(s[].len[2])
s[].len[2] elements == s[::verbosity].len[2]
orig(s[::verbosity].len[2]) in s[].len[2]
s[].len[2] elements == orig(s[::verbosity].len[2])
s[].len[3] == orig(s[].len[3]) (elementwise)
s[].len[3] is the reverse of orig(s[].len[3])
s[].len[3] elements == s[::verbosity].len[3]
orig(s[::verbosity].len[3]) in s[].len[3]
s[].len[3] elements == orig(s[::verbosity].len[3])
s[].len[4] == orig(s[].len[4]) (elementwise)
s[].len[4] is the reverse of orig(s[].len[4])
s[].len[4] elements == s[::verbosity].len[4]
orig(s[::verbosity].len[4]) in s[].len[4]
s[].len[4] elements == orig(s[::verbosity].len[4])
s[].len[5] == orig(s[].len[5]) (elementwise)
s[].len[5] is the reverse of orig(s[].len[5])
s[].len[5] elements == s[::verbosity].len[5]
orig(s[::verbosity].len[5]) in s[].len[5]
s[].len[5] elements == orig(s[::verbosity].len[5])
s[].len[5][0] == orig(s[].len[5][0]) (elementwise)
s[].len[5][0] is the reverse of orig(s[].len[5][0])
s[].len[5][0] elements == s[::verbosity].len[5][0]
orig(s[::verbosity].len[5][0]) in s[].len[5][0]
s[].len[5][0] elements == orig(s[::verbosity].len[5][0])
s[].code[0] == orig(s[].code[0]) (elementwise)
s[].code[0] is the reverse of orig(s[].code[0])
s[].code[0] elements == s[::verbosity].code[0]
orig(s[::verbosity].code[0]) in s[].code[0]
s[].code[0] elements == orig(s[::verbosity].code[0])
s[].code[0][0] == orig(s[].code[0][0]) (elementwise)
s[].code[0][0] is the reverse of orig(s[].code[0][0])
s[].code[0][0] elements == s[::verbosity].code[0][0]
orig(s[::verbosity].code[0][0]) in s[].code[0][0]
s[].code[0][0] elements == orig(s[::verbosity].code[0][0])
s[].code[1] == orig(s[].code[1]) (elementwise)
s[].code[1] is the reverse of orig(s[].code[1])
s[].code[1] elements == s[::verbosity].code[1]
orig(s[::verbosity].code[1]) in s[].code[1]
s[].code[1] elements == orig(s[::verbosity].code[1])
s[].code[1][0] == orig(s[].code[1][0]) (elementwise)
s[].code[1][0] is the reverse of orig(s[].code[1][0])
s[].code[1][0] elements == size(::incs[])-1
orig(s[::verbosity].code[1][0]) in s[].code[1][0]
s[].code[1][0] elements == orig(s[::verbosity].code[1][0])
s[].code[2] == orig(s[].code[2]) (elementwise)
s[].code[2] is the reverse of orig(s[].code[2])
s[].code[2] elements == s[::verbosity].code[2]
orig(s[::verbosity].code[2]) in s[].code[2]
s[].code[2] elements == orig(s[::verbosity].code[2])
s[].code[2][0] == orig(s[].code[2][0]) (elementwise)
s[].code[2][0] is the reverse of orig(s[].code[2][0])
s[].code[2][0] elements == size(::incs[])
orig(s[::verbosity].code[2][0]) in s[].code[2][0]
s[].code[2][0] elements == orig(s[::verbosity].code[2][0])
s[].code[3] == orig(s[].code[3]) (elementwise)
s[].code[3] is the reverse of orig(s[].code[3])
s[].code[3] elements == s[::verbosity].code[3]
orig(s[::verbosity].code[3]) in s[].code[3]
s[].code[3] elements == orig(s[::verbosity].code[3])
s[].code[3][0] == orig(s[].code[3][0]) (elementwise)
s[].code[3][0] is the reverse of orig(s[].code[3][0])
s[].code[3][0] elements == size(::bzerrorstrings[])-1
orig(s[::verbosity].code[3][0]) in s[].code[3][0]
s[].code[3][0] elements == orig(s[::verbosity].code[3][0])
s[].code[4] == orig(s[].code[4]) (elementwise)
s[].code[4] is the reverse of orig(s[].code[4])
s[].code[4] elements == s[::verbosity].code[4]
orig(s[::verbosity].code[4]) in s[].code[4]
s[].code[4] elements == orig(s[::verbosity].code[4])
s[].code[4][0] == orig(s[].code[4][0]) (elementwise)
s[].code[4][0] is the reverse of orig(s[].code[4][0])
s[].code[4][0] elements == size(::bzerrorstrings[])
orig(s[::verbosity].code[4][0]) in s[].code[4][0]
s[].code[4][0] elements == orig(s[::verbosity].code[4][0])
s[].code[5] == orig(s[].code[5]) (elementwise)
s[].code[5] is the reverse of orig(s[].code[5])
s[].code[5] elements == s[::verbosity].code[5]
orig(s[::verbosity].code[5]) in s[].code[5]
s[].code[5] elements == orig(s[::verbosity].code[5])
s[].rfreq[0] == orig(s[].rfreq[0]) (elementwise)
s[].rfreq[0] is the reverse of orig(s[].rfreq[0])
s[].rfreq[0] elements == s[::verbosity].rfreq[0]
orig(s[::verbosity].rfreq[0]) in s[].rfreq[0]
s[].rfreq[0] elements == orig(s[::verbosity].rfreq[0])
s[].rfreq[1] == orig(s[].rfreq[1]) (elementwise)
s[].rfreq[1] is the reverse of orig(s[].rfreq[1])
s[].rfreq[1] elements == s[::verbosity].rfreq[1]
orig(s[::verbosity].rfreq[1]) in s[].rfreq[1]
s[].rfreq[1] elements == orig(s[::verbosity].rfreq[1])
s[].rfreq[2] == orig(s[].rfreq[2]) (elementwise)
s[].rfreq[2] is the reverse of orig(s[].rfreq[2])
s[].rfreq[2] elements == s[::verbosity].rfreq[2]
orig(s[::verbosity].rfreq[2]) in s[].rfreq[2]
s[].rfreq[2] elements == orig(s[::verbosity].rfreq[2])
s[].rfreq[3] == orig(s[].rfreq[3]) (elementwise)
s[].rfreq[3] is the reverse of orig(s[].rfreq[3])
s[].rfreq[3] elements == s[::verbosity].rfreq[3]
orig(s[::verbosity].rfreq[3]) in s[].rfreq[3]
s[].rfreq[3] elements == orig(s[::verbosity].rfreq[3])
s[].rfreq[4] == orig(s[].rfreq[4]) (elementwise)
s[].rfreq[4] is the reverse of orig(s[].rfreq[4])
s[].rfreq[4] elements == s[::verbosity].rfreq[4]
orig(s[::verbosity].rfreq[4]) in s[].rfreq[4]
s[].rfreq[4] elements == orig(s[::verbosity].rfreq[4])
s[].rfreq[5] == orig(s[].rfreq[5]) (elementwise)
s[].rfreq[5] is the reverse of orig(s[].rfreq[5])
s[].rfreq[5] elements == s[::verbosity].rfreq[5]
orig(s[::verbosity].rfreq[5]) in s[].rfreq[5]
s[].rfreq[5] elements == orig(s[::verbosity].rfreq[5])
s[].len_pack == orig(s[].len_pack) (elementwise)
s[].len_pack is the reverse of orig(s[].len_pack)
s[].len_pack elements == s[::verbosity].len_pack
orig(s[::verbosity].len_pack) in s[].len_pack
s[].len_pack elements == orig(s[::verbosity].len_pack)
s[].len_pack[0] == orig(s[].len_pack[0]) (elementwise)
s[].len_pack[0] is the reverse of orig(s[].len_pack[0])
s[].len_pack[0] elements == s[::verbosity].len_pack[0]
orig(s[::verbosity].len_pack[0]) in s[].len_pack[0]
s[].len_pack[0] elements == orig(s[::verbosity].len_pack[0])
orig(s[].ftab[0]) elements == s[::verbosity].ftab[0]
s[::verbosity].ftab[0] in orig(s[].ftab[0])
orig(s[].mtfv[0]) elements == s[::verbosity].mtfv[0]
s[::verbosity].mtfv[0] in orig(s[].mtfv[0])
orig(s[].nInUse) elements == s[::verbosity].nInUse
s[::verbosity].nInUse in orig(s[].nInUse)
orig(s[].mtfFreq) elements == s[::verbosity].mtfFreq
s[::verbosity].mtfFreq in orig(s[].mtfFreq)
orig(s[].selector) elements == s[::verbosity].selector
s[::verbosity].selector in orig(s[].selector)
orig(s[].selectorMtf) elements == s[::verbosity].selectorMtf
s[::verbosity].selectorMtf in orig(s[].selectorMtf)
orig(s[].len[0]) elements == s[::verbosity].len[0]
s[::verbosity].len[0] in orig(s[].len[0])
orig(s[].len[0][0]) elements == s[::verbosity].len[0][0]
s[::verbosity].len[0][0] in orig(s[].len[0][0])
orig(s[].len[1]) elements == s[::verbosity].len[1]
s[::verbosity].len[1] in orig(s[].len[1])
orig(s[].len[2]) elements == s[::verbosity].len[2]
s[::verbosity].len[2] in orig(s[].len[2])
orig(s[].len[3]) elements == s[::verbosity].len[3]
s[::verbosity].len[3] in orig(s[].len[3])
orig(s[].len[4]) elements == s[::verbosity].len[4]
s[::verbosity].len[4] in orig(s[].len[4])
orig(s[].len[5]) elements == s[::verbosity].len[5]
s[::verbosity].len[5] in orig(s[].len[5])
orig(s[].len[5][0]) elements == s[::verbosity].len[5][0]
s[::verbosity].len[5][0] in orig(s[].len[5][0])
orig(s[].code[0]) elements == s[::verbosity].code[0]
s[::verbosity].code[0] in orig(s[].code[0])
orig(s[].code[0][0]) elements == s[::verbosity].code[0][0]
s[::verbosity].code[0][0] in orig(s[].code[0][0])
orig(s[].code[1]) elements == s[::verbosity].code[1]
s[::verbosity].code[1] in orig(s[].code[1])
orig(s[].code[1][0]) elements == size(::incs[])-1
size(::incs[])-1 in orig(s[].code[1][0])
orig(s[].code[2]) elements == s[::verbosity].code[2]
s[::verbosity].code[2] in orig(s[].code[2])
orig(s[].code[2][0]) elements == size(::incs[])
size(::incs[]) in orig(s[].code[2][0])
orig(s[].code[3]) elements == s[::verbosity].code[3]
s[::verbosity].code[3] in orig(s[].code[3])
orig(s[].code[3][0]) elements == size(::bzerrorstrings[])-1
size(::bzerrorstrings[])-1 in orig(s[].code[3][0])
orig(s[].code[4]) elements == s[::verbosity].code[4]
s[::verbosity].code[4] in orig(s[].code[4])
orig(s[].code[4][0]) elements == size(::bzerrorstrings[])
size(::bzerrorstrings[]) in orig(s[].code[4][0])
orig(s[].code[5]) elements == s[::verbosity].code[5]
s[::verbosity].code[5] in orig(s[].code[5])
orig(s[].rfreq[0]) elements == s[::verbosity].rfreq[0]
s[::verbosity].rfreq[0] in orig(s[].rfreq[0])
orig(s[].rfreq[1]) elements == s[::verbosity].rfreq[1]
s[::verbosity].rfreq[1] in orig(s[].rfreq[1])
orig(s[].rfreq[2]) elements == s[::verbosity].rfreq[2]
s[::verbosity].rfreq[2] in orig(s[].rfreq[2])
orig(s[].rfreq[3]) elements == s[::verbosity].rfreq[3]
s[::verbosity].rfreq[3] in orig(s[].rfreq[3])
orig(s[].rfreq[4]) elements == s[::verbosity].rfreq[4]
s[::verbosity].rfreq[4] in orig(s[].rfreq[4])
orig(s[].rfreq[5]) elements == s[::verbosity].rfreq[5]
s[::verbosity].rfreq[5] in orig(s[].rfreq[5])
orig(s[].len_pack) elements == s[::verbosity].len_pack
s[::verbosity].len_pack in orig(s[].len_pack)
orig(s[].len_pack[0]) elements == s[::verbosity].len_pack[0]
s[::verbosity].len_pack[0] in orig(s[].len_pack[0])
===========================================================================
..BZ2_hbAssignCodes():::ENTER
::fileMetaInfo.st_uid == ::fileMetaInfo.st_gid
::fileMetaInfo.__pad0 == ::verbosity
::fileMetaInfo.st_mtim.tv_sec == ::fileMetaInfo.st_ctim.tv_sec
::fileMetaInfo.st_mtim.tv_nsec == ::fileMetaInfo.st_ctim.tv_nsec
::verbosity == ::exitValue
::verbosity == ::fileMetaInfo.__glibc_reserved[::fileMetaInfo.__pad0]
::verbosity == ::fileMetaInfo.__glibc_reserved[::verbosity]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::exitValue]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::srcMode-1]
::keepInputFiles == ::deleteOutputOnInterrupt
::keepInputFiles == ::noisy
::smallMode == ::forceOverwrite
::smallMode == ::testFailsExist
::smallMode == ::unzFailsExist
::numFileNames == ::numFilesProcessed
::numFileNames == ::opMode
::numFileNames == ::incs[::fileMetaInfo.__pad0]
::numFileNames == ::incs[::verbosity]
::numFileNames == ::incs[::numFileNames-1]
::numFileNames == ::incs[::numFilesProcessed-1]
::numFileNames == ::incs[::exitValue]
::numFileNames == ::incs[::opMode-1]
::srcMode == size(::fileMetaInfo.__glibc_reserved[])
::srcMode == size(::zSuffix[])-1
::srcMode == size(::unzSuffix[])-1
size(::incs[])-1 == ::incs[::srcMode-1]
size(::zSuffix[]) == size(::unzSuffix[])
size(::zSuffix[]) == ::incs[::numFileNames]
size(::zSuffix[]) == ::incs[::numFilesProcessed]
size(::zSuffix[]) == ::incs[::opMode]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFileNames-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFilesProcessed-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::opMode-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFileNames-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFilesProcessed-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::opMode-1]
::incs has only one value
::incs[] == [1, 4, 13, 40, 121, 364, 1093, 3280, 9841, 29524, 88573, 265720, 797161, 2391484]
::incs[] elements >= 1
::incs[] sorted by <
::bzerrorstrings has only one value
::bzerrorstrings[] == [OK, SEQUENCE_ERROR, PARAM_ERROR, MEM_ERROR, DATA_ERROR, DATA_ERROR_MAGIC, IO_ERROR, UNEXPECTED_EOF, OUTBUFF_FULL, CONFIG_ERROR, ???, ???, ???, ???, ???, ???]
::fileMetaInfo has only one value
::fileMetaInfo != null
::fileMetaInfo.st_dev == 2049
::fileMetaInfo.st_ino == 936492
::fileMetaInfo.st_nlink == 1
::fileMetaInfo.st_mode == 33277
::fileMetaInfo.st_uid == 1000
::fileMetaInfo.st_rdev == 0
::fileMetaInfo.st_size == 5738700
::fileMetaInfo.st_blksize == 4096
::fileMetaInfo.st_blocks == 11216
::fileMetaInfo.st_atim has only one value
::fileMetaInfo.st_atim != null
::fileMetaInfo.st_atim.tv_sec == 1496096467
::fileMetaInfo.st_atim.tv_nsec == 709424920
::fileMetaInfo.st_mtim has only one value
::fileMetaInfo.st_mtim != null
::fileMetaInfo.st_mtim.tv_sec == 1483563943
::fileMetaInfo.st_mtim.tv_nsec == 421335644
::fileMetaInfo.st_ctim has only one value
::fileMetaInfo.st_ctim != null
::fileMetaInfo.__glibc_reserved has only one value
::fileMetaInfo.__glibc_reserved[] == [0, 0, 0]
::fileMetaInfo.__glibc_reserved[] elements == 0
::BZ2_rNums has only one value
::BZ2_rNums[] == [619, 720, 127, 481, 931, 816, 813, 233, 566, 247, 985, 724, 205, 454, 863, 491, 741, 242, 949, 214, 733, 859, 335, 708, 621, 574, 73, 654, 730, 472, 419, 436, 278, 496, 867, 210, 399, 680, 480, 51, 878, 465, 811, 169, 869, 675, 611, 697, 867, 561, 862, 687, 507, 283, 482, 129, 807, 591, 733, 623, 150, 238, 59, 379, 684, 877, 625, 169, 643, 105, 170, 607, 520, 932, 727, 476, 693, 425, 174, 647, 73, 122, 335, 530, 442, 853, 695, 249, 445, 515, 909, 545, 703, 919, 874, 474, 882, 500, 594, 612, 641, 801, 220, 162, 819, 984, 589, 513, 495, 799, 161, 604, 958, 533, 221, 400, 386, 867, 600, 782, 382, 596, 414, 171, 516, 375, 682, 485, 911, 276, 98, 553, 163, 354, 666, 933, 424, 341, 533, 870, 227, 730, 475, 186, 263, 647, 537, 686, 600, 224, 469, 68, 770, 919, 190, 373, 294, 822, 808, 206, 184, 943, 795, 384, 383, 461, 404, 758, 839, 887, 715, 67, 618, 276, 204, 918, 873, 777, 604, 560, 951, 160, 578, 722, 79, 804, 96, 409, 713, 940, 652, 934, 970, 447, 318, 353, 859, 672, 112, 785, 645, 863, 803, 350, 139, 93, 354, 99, 820, 908, 609, 772, 154, 274, 580, 184, 79, 626, 630, 742, 653, 282, 762, 623, 680, 81, 927, 626, 789, 125, 411, 521, 938, 300, 821, 78, 343, 175, 128, 250, 170, 774, 972, 275, 999, 639, 495, 78, 352, 126, 857, 956, 358, 619, 580, 124, 737, 594, 701, 612, 669, 112, 134, 694, 363, 992, 809, 743, 168, 974, 944, 375, 748, 52, 600, 747, 642, 182, 862, 81, 344, 805, 988, 739, 511, 655, 814, 334, 249, 515, 897, 955, 664, 981, 649, 113, 974, 459, 893, 228, 433, 837, 553, 268, 926, 240, 102, 654, 459, 51, 686, 754, 806, 760, 493, 403, 415, 394, 687, 700, 946, 670, 656, 610, 738, 392, 760, 799, 887, 653, 978, 321, 576, 617, 626, 502, 894, 679, 243, 440, 680, 879, 194, 572, 640, 724, 926, 56, 204, 700, 707, 151, 457, 449, 797, 195, 791, 558, 945, 679, 297, 59, 87, 824, 713, 663, 412, 693, 342, 606, 134, 108, 571, 364, 631, 212, 174, 643, 304, 329, 343, 97, 430, 751, 497, 314, 983, 374, 822, 928, 140, 206, 73, 263, 980, 736, 876, 478, 430, 305, 170, 514, 364, 692, 829, 82, 855, 953, 676, 246, 369, 970, 294, 750, 807, 827, 150, 790, 288, 923, 804, 378, 215, 828, 592, 281, 565, 555, 710, 82, 896, 831, 547, 261, 524, 462, 293, 465, 502, 56, 661, 821, 976, 991, 658, 869, 905, 758, 745, 193, 768, 550, 608, 933, 378, 286, 215, 979, 792, 961, 61, 688, 793, 644, 986, 403, 106, 366, 905, 644, 372, 567, 466, 434, 645, 210, 389, 550, 919, 135, 780, 773, 635, 389, 707, 100, 626, 958, 165, 504, 920, 176, 193, 713, 857, 265, 203, 50, 668, 108, 645, 990, 626, 197, 510, 357, 358, 850, 858, 364, 936, 638]
::BZ2_crc32Table has only one value
::BZ2_crc32Table[] == [0, 79764919, 159529838, 222504665, 319059676, 398814059, 445009330, 507990021, 638119352, 583659535, 797628118, 726387553, 890018660, 835552979, 1015980042, 944750013, 1276238704, 1221641927, 1167319070, 1095957929, 1595256236, 1540665371, 1452775106, 1381403509, 1780037320, 1859660671, 1671105958, 1733955601, 2031960084, 2111593891, 1889500026, 1952343757, 2552477408, 2632100695, 2443283854, 2506133561, 2334638140, 2414271883, 2191915858, 2254759653, 3190512472, 3135915759, 3081330742, 3009969537, 2905550212, 2850959411, 2762807018, 2691435357, 3560074640, 3505614887, 3719321342, 3648080713, 3342211916, 3287746299, 3467911202, 3396681109, 4063920168, 4143685023, 4223187782, 4286162673, 3779000052, 3858754371, 3904687514, 3967668269, 881225847, 809987520, 1023691545, 969234094, 662832811, 591600412, 771767749, 717299826, 311336399, 374308984, 453813921, 533576470, 25881363, 88864420, 134795389, 214552010, 2023205639, 2086057648, 1897238633, 1976864222, 1804852699, 1867694188, 1645340341, 1724971778, 1587496639, 1516133128, 1461550545, 1406951526, 1302016099, 1230646740, 1142491917, 1087903418, 2896545431, 2825181984, 2770861561, 2716262478, 3215044683, 3143675388, 3055782693, 3001194130, 2326604591, 2389456536, 2200899649, 2280525302, 2578013683, 2640855108, 2418763421, 2498394922, 3769900519, 3832873040, 3912640137, 3992402750, 4088425275, 4151408268, 4197601365, 4277358050, 3334271071, 3263032808, 3476998961, 3422541446, 3585640067, 3514407732, 3694837229, 3640369242, 1762451694, 1842216281, 1619975040, 1682949687, 2047383090, 2127137669, 1938468188, 2001449195, 1325665622, 1271206113, 1183200824, 1111960463, 1543535498, 1489069629, 1434599652, 1363369299, 622672798, 568075817, 748617968, 677256519, 907627842, 853037301, 1067152940, 995781531, 51762726, 131386257, 177728840, 240578815, 269590778, 349224269, 429104020, 491947555, 4046411278, 4126034873, 4172115296, 4234965207, 3794477266, 3874110821, 3953728444, 4016571915, 3609705398, 3555108353, 3735388376, 3664026991, 3290680682, 3236090077, 3449943556, 3378572211, 3174993278, 3120533705, 3032266256, 2961025959, 2923101090, 2868635157, 2813903052, 2742672763, 2604032198, 2683796849, 2461293480, 2524268063, 2284983834, 2364738477, 2175806836, 2238787779, 1569362073, 1498123566, 1409854455, 1355396672, 1317987909, 1246755826, 1192025387, 1137557660, 2072149281, 2135122070, 1912620623, 1992383480, 1753615357, 1816598090, 1627664531, 1707420964, 295390185, 358241886, 404320391, 483945776, 43990325, 106832002, 186451547, 266083308, 932423249, 861060070, 1041341759, 986742920, 613929101, 542559546, 756411363, 701822548, 3316196985, 3244833742, 3425377559, 3370778784, 3601682597, 3530312978, 3744426955, 3689838204, 3819031489, 3881883254, 3928223919, 4007849240, 4037393693, 4100235434, 4180117107, 4259748804, 2310601993, 2373574846, 2151335527, 2231098320, 2596047829, 2659030626, 2470359227, 2550115596, 2947551409, 2876312838, 2788305887, 2733848168, 3165939309, 3094707162, 3040238851, 2985771188]
::BZ2_crc32Table[] elements >= 0
::mammamia == 3216
::verbosity == 0
::keepInputFiles == 1
::smallMode == 0
::numFileNames == 1
::blockSize100k == 9
::longestFileName == 20
::inName == "../inputs/in_big.txt"
::outName == "../inputs/in_big.txt.bz2"
::tmpName == ""
::progName == "zip-injected"
::progNameReally == "./zip-injected"
::outputHandleJustInCase has only one value
::outputHandleJustInCase != null
::workFactor == 30
::zSuffix has only one value
::zSuffix[] == [.bz2, .bz, .tbz2, .tbz]
::unzSuffix has only one value
::unzSuffix[] == [, , .tar, .tar]
::unzSuffix[] elements one of { "", ".tar" }
code != null
length != null
minLen one of { 1, 4 }
alphaSize == 26
size(::incs[]) == 14
size(::bzerrorstrings[]) == 16
size(::BZ2_rNums[]) == 512
size(::BZ2_crc32Table[]) == 256
size(::zSuffix[]) == 4
::incs[::blockSize100k] == 29524
::incs[::blockSize100k-1] == 9841
::incs[::srcMode] == 40
::incs[minLen] one of { 4, 121 }
::incs[minLen-1] one of { 1, 40 }
::BZ2_rNums[::verbosity] == 619
::BZ2_rNums[::numFileNames] == 720
::BZ2_rNums[::blockSize100k] == 247
::BZ2_rNums[::blockSize100k-1] == 566
::BZ2_rNums[::srcMode] == 481
::BZ2_rNums[::srcMode-1] == 127
::BZ2_rNums[::longestFileName] == 733
::BZ2_rNums[::longestFileName-1] == 214
::BZ2_rNums[::workFactor] == 419
::BZ2_rNums[::workFactor-1] == 472
::BZ2_rNums[minLen] one of { 720, 931 }
::BZ2_rNums[minLen-1] one of { 481, 619 }
::BZ2_rNums[alphaSize] == 73
::BZ2_rNums[alphaSize-1] == 574
::BZ2_crc32Table[::verbosity] == 0
::BZ2_crc32Table[::numFileNames] == 79764919
::BZ2_crc32Table[::blockSize100k] == 583659535
::BZ2_crc32Table[::blockSize100k-1] == 638119352
::BZ2_crc32Table[::srcMode] == 222504665
::BZ2_crc32Table[::srcMode-1] == 159529838
::BZ2_crc32Table[::longestFileName] == 1595256236
::BZ2_crc32Table[::longestFileName-1] == 1095957929
::BZ2_crc32Table[::workFactor] == 1889500026
::BZ2_crc32Table[::workFactor-1] == 2111593891
::BZ2_crc32Table[minLen] one of { 79764919, 319059676 }
::BZ2_crc32Table[minLen-1] one of { 0, 222504665 }
::BZ2_crc32Table[alphaSize] == 1671105958
::BZ2_crc32Table[alphaSize-1] == 1859660671
::incs[] elements < ::fileMetaInfo.st_size
::incs[] elements < ::fileMetaInfo.st_atim.tv_sec
::incs[] elements < ::fileMetaInfo.st_atim.tv_nsec
::incs[] elements < ::fileMetaInfo.st_mtim.tv_sec
::incs[] elements < ::fileMetaInfo.st_mtim.tv_nsec
::incs[] elements > ::verbosity
::incs[] elements >= ::numFileNames
minLen in ::incs[]
::fileMetaInfo.st_mode < ::BZ2_crc32Table[minLen]
::fileMetaInfo.st_mode != ::BZ2_crc32Table[minLen-1]
::fileMetaInfo.st_mode < ::BZ2_crc32Table[maxLen]
::fileMetaInfo.st_mode < ::BZ2_crc32Table[maxLen-1]
::fileMetaInfo.st_uid < ::BZ2_crc32Table[minLen]
::fileMetaInfo.st_uid != ::BZ2_crc32Table[minLen-1]
::fileMetaInfo.st_uid < ::BZ2_crc32Table[maxLen]
::fileMetaInfo.st_uid < ::BZ2_crc32Table[maxLen-1]
::BZ2_rNums[] elements < ::fileMetaInfo.st_size
::fileMetaInfo.st_size > minLen
::fileMetaInfo.st_size > maxLen
::fileMetaInfo.st_size > ::incs[minLen]
::fileMetaInfo.st_size > ::incs[minLen-1]
::fileMetaInfo.st_size > ::incs[maxLen]
::fileMetaInfo.st_size > ::incs[maxLen-1]
::fileMetaInfo.st_size > ::BZ2_rNums[minLen]
::fileMetaInfo.st_size > ::BZ2_rNums[minLen-1]
::fileMetaInfo.st_size > ::BZ2_rNums[maxLen]
::fileMetaInfo.st_size > ::BZ2_rNums[maxLen-1]
::BZ2_rNums[] elements < ::fileMetaInfo.st_blksize
::fileMetaInfo.st_blksize > minLen
::fileMetaInfo.st_blksize > maxLen
::fileMetaInfo.st_blksize > ::incs[minLen]
::fileMetaInfo.st_blksize > ::incs[minLen-1]
::fileMetaInfo.st_blksize != ::incs[maxLen]
::fileMetaInfo.st_blksize != ::incs[maxLen-1]
::fileMetaInfo.st_blksize > ::BZ2_rNums[minLen]
::fileMetaInfo.st_blksize > ::BZ2_rNums[minLen-1]
::fileMetaInfo.st_blksize > ::BZ2_rNums[maxLen]
::fileMetaInfo.st_blksize > ::BZ2_rNums[maxLen-1]
::BZ2_rNums[] elements < ::fileMetaInfo.st_blocks
::fileMetaInfo.st_blocks > minLen
::fileMetaInfo.st_blocks > maxLen
::fileMetaInfo.st_blocks > ::incs[minLen]
::fileMetaInfo.st_blocks > ::incs[minLen-1]
::fileMetaInfo.st_blocks != ::incs[maxLen]
::fileMetaInfo.st_blocks != ::incs[maxLen-1]
::fileMetaInfo.st_blocks > ::BZ2_rNums[minLen]
::fileMetaInfo.st_blocks > ::BZ2_rNums[minLen-1]
::fileMetaInfo.st_blocks > ::BZ2_rNums[maxLen]
::fileMetaInfo.st_blocks > ::BZ2_rNums[maxLen-1]
::BZ2_rNums[] elements < ::fileMetaInfo.st_atim.tv_sec
::fileMetaInfo.st_atim.tv_sec > minLen
::fileMetaInfo.st_atim.tv_sec > maxLen
::fileMetaInfo.st_atim.tv_sec > ::incs[minLen]
::fileMetaInfo.st_atim.tv_sec > ::incs[minLen-1]
::fileMetaInfo.st_atim.tv_sec > ::incs[maxLen]
::fileMetaInfo.st_atim.tv_sec > ::incs[maxLen-1]
::fileMetaInfo.st_atim.tv_sec > ::BZ2_rNums[minLen]
::fileMetaInfo.st_atim.tv_sec > ::BZ2_rNums[minLen-1]
::fileMetaInfo.st_atim.tv_sec > ::BZ2_rNums[maxLen]
::fileMetaInfo.st_atim.tv_sec > ::BZ2_rNums[maxLen-1]
::BZ2_rNums[] elements < ::fileMetaInfo.st_atim.tv_nsec
::fileMetaInfo.st_atim.tv_nsec > minLen
::fileMetaInfo.st_atim.tv_nsec > maxLen
::fileMetaInfo.st_atim.tv_nsec > ::incs[minLen]
::fileMetaInfo.st_atim.tv_nsec > ::incs[minLen-1]
::fileMetaInfo.st_atim.tv_nsec > ::incs[maxLen]
::fileMetaInfo.st_atim.tv_nsec > ::incs[maxLen-1]
::fileMetaInfo.st_atim.tv_nsec > ::BZ2_rNums[minLen]
::fileMetaInfo.st_atim.tv_nsec > ::BZ2_rNums[minLen-1]
::fileMetaInfo.st_atim.tv_nsec > ::BZ2_rNums[maxLen]
::fileMetaInfo.st_atim.tv_nsec > ::BZ2_rNums[maxLen-1]
::BZ2_rNums[] elements < ::fileMetaInfo.st_mtim.tv_sec
::fileMetaInfo.st_mtim.tv_sec > minLen
::fileMetaInfo.st_mtim.tv_sec > maxLen
::fileMetaInfo.st_mtim.tv_sec > ::incs[minLen]
::fileMetaInfo.st_mtim.tv_sec > ::incs[minLen-1]
::fileMetaInfo.st_mtim.tv_sec > ::incs[maxLen]
::fileMetaInfo.st_mtim.tv_sec > ::incs[maxLen-1]
::fileMetaInfo.st_mtim.tv_sec > ::BZ2_rNums[minLen]
::fileMetaInfo.st_mtim.tv_sec > ::BZ2_rNums[minLen-1]
::fileMetaInfo.st_mtim.tv_sec > ::BZ2_rNums[maxLen]
::fileMetaInfo.st_mtim.tv_sec > ::BZ2_rNums[maxLen-1]
::BZ2_rNums[] elements < ::fileMetaInfo.st_mtim.tv_nsec
::fileMetaInfo.st_mtim.tv_nsec > minLen
::fileMetaInfo.st_mtim.tv_nsec > maxLen
::fileMetaInfo.st_mtim.tv_nsec > ::incs[minLen]
::fileMetaInfo.st_mtim.tv_nsec > ::incs[minLen-1]
::fileMetaInfo.st_mtim.tv_nsec > ::incs[maxLen]
::fileMetaInfo.st_mtim.tv_nsec > ::incs[maxLen-1]
::fileMetaInfo.st_mtim.tv_nsec > ::BZ2_rNums[minLen]
::fileMetaInfo.st_mtim.tv_nsec > ::BZ2_rNums[minLen-1]
::fileMetaInfo.st_mtim.tv_nsec > ::BZ2_rNums[maxLen]
::fileMetaInfo.st_mtim.tv_nsec > ::BZ2_rNums[maxLen-1]
::fileMetaInfo.__glibc_reserved[] elements == ::verbosity
::BZ2_rNums[] elements < ::mammamia
::BZ2_rNums[] elements > ::verbosity
::BZ2_rNums[] elements > ::numFileNames
::BZ2_rNums[] elements > ::blockSize100k
::BZ2_rNums[] elements > ::longestFileName
::BZ2_rNums[] elements > ::workFactor
::BZ2_rNums[] elements > minLen
::BZ2_rNums[] elements > maxLen
::BZ2_rNums[] elements > alphaSize
::BZ2_rNums[] elements > size(::incs[])
::BZ2_rNums[] elements > size(::bzerrorstrings[])
size(::BZ2_rNums[])-1 in ::BZ2_rNums[]
::BZ2_rNums[] elements > size(::zSuffix[])
::BZ2_rNums[] elements < ::incs[::blockSize100k]
::BZ2_rNums[] elements < ::incs[::blockSize100k-1]
::BZ2_rNums[] elements > ::incs[::srcMode]
::BZ2_rNums[] elements > ::incs[minLen-1]
::mammamia > minLen
::mammamia > maxLen
::mammamia > ::incs[minLen]
::mammamia > ::incs[minLen-1]
::mammamia != ::incs[maxLen]
::mammamia != ::incs[maxLen-1]
::mammamia > ::BZ2_rNums[minLen]
::mammamia > ::BZ2_rNums[minLen-1]
::mammamia > ::BZ2_rNums[maxLen]
::mammamia > ::BZ2_rNums[maxLen-1]
::verbosity < minLen
::verbosity < maxLen
::verbosity < ::incs[minLen]
::verbosity < ::incs[minLen-1]
::verbosity < ::incs[maxLen]
::verbosity < ::incs[maxLen-1]
::verbosity < ::BZ2_rNums[minLen]
::verbosity < ::BZ2_rNums[minLen-1]
::verbosity < ::BZ2_rNums[maxLen]
::verbosity < ::BZ2_rNums[maxLen-1]
::numFileNames <= minLen
::numFileNames < maxLen
::numFileNames < ::incs[minLen]
::numFileNames <= ::incs[minLen-1]
::numFileNames < ::incs[maxLen]
::numFileNames < ::incs[maxLen-1]
::numFileNames < ::BZ2_rNums[minLen]
::numFileNames < ::BZ2_rNums[minLen-1]
::numFileNames < ::BZ2_rNums[maxLen]
::numFileNames < ::BZ2_rNums[maxLen-1]
::blockSize100k > minLen
::blockSize100k != ::incs[minLen]
::blockSize100k != ::incs[minLen-1]
::blockSize100k < ::incs[maxLen]
::blockSize100k < ::incs[maxLen-1]
::blockSize100k < ::BZ2_rNums[minLen]
::blockSize100k < ::BZ2_rNums[minLen-1]
::blockSize100k < ::BZ2_rNums[maxLen]
::blockSize100k < ::BZ2_rNums[maxLen-1]
::srcMode != minLen
::srcMode != ::incs[minLen-1]
::longestFileName > minLen
::longestFileName > maxLen
::longestFileName != ::incs[minLen]
::longestFileName != ::incs[minLen-1]
::longestFileName < ::incs[maxLen]
::longestFileName < ::incs[maxLen-1]
::longestFileName < ::BZ2_rNums[minLen]
::longestFileName < ::BZ2_rNums[minLen-1]
::longestFileName < ::BZ2_rNums[maxLen]
::longestFileName < ::BZ2_rNums[maxLen-1]
::inName < ::outName
::inName > ::tmpName
::inName < ::progName
::inName < ::progNameReally
::outName > ::tmpName
::outName < ::progName
::outName < ::progNameReally
::tmpName < ::progName
::tmpName < ::progNameReally
::tmpName in ::unzSuffix[]
::progName > ::progNameReally
::workFactor > minLen
::workFactor > maxLen
::workFactor != ::incs[minLen]
::workFactor != ::incs[minLen-1]
::workFactor < ::incs[maxLen]
::workFactor < ::incs[maxLen-1]
::workFactor < ::BZ2_rNums[minLen]
::workFactor < ::BZ2_rNums[minLen-1]
::workFactor < ::BZ2_rNums[maxLen]
::workFactor < ::BZ2_rNums[maxLen-1]
minLen < maxLen
minLen < alphaSize
minLen < size(::incs[])-1
minLen < size(::bzerrorstrings[])-1
minLen != size(::fileMetaInfo.__glibc_reserved[])-1
minLen < size(::BZ2_rNums[])-1
minLen < size(::BZ2_crc32Table[])-1
minLen <= size(::zSuffix[])
minLen < ::incs[::blockSize100k]
minLen < ::incs[::blockSize100k-1]
minLen < ::incs[::srcMode]
minLen < ::incs[minLen]
minLen <= ::incs[minLen-1]
::incs[maxLen] % minLen == 0
minLen < ::incs[maxLen]
minLen < ::incs[maxLen-1]
minLen < ::BZ2_rNums[::verbosity]
minLen < ::BZ2_rNums[::numFileNames]
minLen < ::BZ2_rNums[::blockSize100k]
minLen < ::BZ2_rNums[::blockSize100k-1]
minLen < ::BZ2_rNums[::srcMode]
minLen < ::BZ2_rNums[::srcMode-1]
minLen < ::BZ2_rNums[::longestFileName]
minLen < ::BZ2_rNums[::longestFileName-1]
minLen < ::BZ2_rNums[::workFactor]
minLen < ::BZ2_rNums[::workFactor-1]
minLen < ::BZ2_rNums[minLen]
minLen < ::BZ2_rNums[minLen-1]
::BZ2_rNums[maxLen] % minLen == 0
minLen < ::BZ2_rNums[maxLen]
minLen < ::BZ2_rNums[maxLen-1]
minLen < ::BZ2_rNums[alphaSize]
minLen < ::BZ2_rNums[alphaSize-1]
maxLen < alphaSize
maxLen < size(::incs[])-1
maxLen < size(::bzerrorstrings[])-1
maxLen < size(::BZ2_rNums[])-1
maxLen < size(::BZ2_crc32Table[])-1
maxLen > size(::zSuffix[])
maxLen < ::incs[::blockSize100k]
maxLen < ::incs[::blockSize100k-1]
maxLen < ::incs[::srcMode]
maxLen != ::incs[minLen]
maxLen != ::incs[minLen-1]
maxLen < ::incs[maxLen]
maxLen < ::incs[maxLen-1]
maxLen < ::BZ2_rNums[::verbosity]
maxLen < ::BZ2_rNums[::numFileNames]
maxLen < ::BZ2_rNums[::blockSize100k]
maxLen < ::BZ2_rNums[::blockSize100k-1]
maxLen < ::BZ2_rNums[::srcMode]
maxLen < ::BZ2_rNums[::srcMode-1]
maxLen < ::BZ2_rNums[::longestFileName]
maxLen < ::BZ2_rNums[::longestFileName-1]
maxLen < ::BZ2_rNums[::workFactor]
maxLen < ::BZ2_rNums[::workFactor-1]
maxLen < ::BZ2_rNums[minLen]
maxLen < ::BZ2_rNums[minLen-1]
maxLen < ::BZ2_rNums[maxLen]
maxLen < ::BZ2_rNums[maxLen-1]
maxLen < ::BZ2_rNums[alphaSize]
maxLen < ::BZ2_rNums[alphaSize-1]
alphaSize != ::incs[minLen]
alphaSize != ::incs[minLen-1]
alphaSize < ::incs[maxLen]
alphaSize < ::incs[maxLen-1]
alphaSize < ::BZ2_rNums[minLen]
alphaSize < ::BZ2_rNums[minLen-1]
alphaSize < ::BZ2_rNums[maxLen]
alphaSize < ::BZ2_rNums[maxLen-1]
size(::incs[]) != ::incs[minLen]
size(::incs[]) != ::incs[minLen-1]
size(::incs[]) < ::incs[maxLen]
size(::incs[]) < ::incs[maxLen-1]
size(::incs[]) < ::BZ2_rNums[minLen]
size(::incs[]) < ::BZ2_rNums[minLen-1]
size(::incs[]) < ::BZ2_rNums[maxLen]
size(::incs[]) < ::BZ2_rNums[maxLen-1]
size(::incs[])-1 != ::incs[minLen]
size(::incs[])-1 != ::incs[minLen-1]
size(::bzerrorstrings[]) != ::incs[minLen]
size(::bzerrorstrings[]) != ::incs[minLen-1]
size(::bzerrorstrings[]) < ::incs[maxLen]
size(::bzerrorstrings[]) < ::incs[maxLen-1]
size(::bzerrorstrings[]) < ::BZ2_rNums[minLen]
size(::bzerrorstrings[]) < ::BZ2_rNums[minLen-1]
size(::bzerrorstrings[]) < ::BZ2_rNums[maxLen]
size(::bzerrorstrings[]) < ::BZ2_rNums[maxLen-1]
size(::bzerrorstrings[])-1 != ::incs[minLen]
size(::bzerrorstrings[])-1 != ::incs[minLen-1]
size(::fileMetaInfo.__glibc_reserved[])-1 != ::incs[minLen-1]
size(::BZ2_rNums[]) != ::incs[maxLen]
size(::BZ2_rNums[]) != ::incs[maxLen-1]
size(::BZ2_rNums[]) < ::BZ2_rNums[minLen]
size(::BZ2_rNums[]) != ::BZ2_rNums[minLen-1]
size(::BZ2_rNums[]) != ::BZ2_rNums[maxLen]
size(::BZ2_rNums[]) != ::BZ2_rNums[maxLen-1]
size(::BZ2_rNums[])-1 > ::incs[minLen]
size(::BZ2_rNums[])-1 > ::incs[minLen-1]
size(::BZ2_rNums[])-1 != ::incs[maxLen]
size(::BZ2_rNums[])-1 != ::incs[maxLen-1]
size(::BZ2_rNums[])-1 != ::BZ2_rNums[minLen-1]
size(::BZ2_rNums[])-1 != ::BZ2_rNums[maxLen]
size(::BZ2_rNums[])-1 != ::BZ2_rNums[maxLen-1]
size(::BZ2_crc32Table[]) < ::incs[maxLen]
size(::BZ2_crc32Table[]) != ::incs[maxLen-1]
size(::BZ2_crc32Table[]) < ::BZ2_rNums[minLen]
size(::BZ2_crc32Table[]) < ::BZ2_rNums[minLen-1]
size(::BZ2_crc32Table[]) != ::BZ2_rNums[maxLen]
size(::BZ2_crc32Table[]) != ::BZ2_rNums[maxLen-1]
size(::BZ2_crc32Table[])-1 > ::incs[minLen]
size(::BZ2_crc32Table[])-1 > ::incs[minLen-1]
size(::BZ2_crc32Table[])-1 != ::incs[maxLen-1]
size(::BZ2_crc32Table[])-1 != ::BZ2_rNums[maxLen]
size(::BZ2_crc32Table[])-1 != ::BZ2_rNums[maxLen-1]
size(::zSuffix[]) <= ::incs[minLen]
size(::zSuffix[]) != ::incs[minLen-1]
size(::zSuffix[]) < ::incs[maxLen]
size(::zSuffix[]) < ::incs[maxLen-1]
size(::zSuffix[]) < ::BZ2_rNums[minLen]
size(::zSuffix[]) < ::BZ2_rNums[minLen-1]
size(::zSuffix[]) < ::BZ2_rNums[maxLen]
size(::zSuffix[]) < ::BZ2_rNums[maxLen-1]
::incs[::blockSize100k] > ::incs[minLen]
::incs[::blockSize100k] > ::incs[minLen-1]
::incs[::blockSize100k] >= ::incs[maxLen-1]
::incs[::blockSize100k] > ::BZ2_rNums[minLen]
::incs[::blockSize100k] > ::BZ2_rNums[minLen-1]
::incs[::blockSize100k] > ::BZ2_rNums[maxLen]
::incs[::blockSize100k] > ::BZ2_rNums[maxLen-1]
::incs[::blockSize100k-1] > ::incs[minLen]
::incs[::blockSize100k-1] > ::incs[minLen-1]
::incs[::blockSize100k-1] > ::BZ2_rNums[minLen]
::incs[::blockSize100k-1] > ::BZ2_rNums[minLen-1]
::incs[::blockSize100k-1] > ::BZ2_rNums[maxLen]
::incs[::blockSize100k-1] > ::BZ2_rNums[maxLen-1]
::incs[::srcMode] != ::incs[minLen]
::incs[::srcMode] >= ::incs[minLen-1]
::incs[::srcMode] < ::incs[maxLen]
::incs[::srcMode] < ::incs[maxLen-1]
::incs[::srcMode] < ::BZ2_rNums[minLen]
::incs[::srcMode] < ::BZ2_rNums[minLen-1]
::incs[::srcMode] < ::BZ2_rNums[maxLen]
::incs[::srcMode] < ::BZ2_rNums[maxLen-1]
::incs[minLen] > ::incs[minLen-1]
::incs[minLen] < ::incs[maxLen]
::incs[minLen] <= ::incs[maxLen-1]
::incs[minLen] < ::BZ2_rNums[::verbosity]
::incs[minLen] < ::BZ2_rNums[::numFileNames]
::incs[minLen] < ::BZ2_rNums[::blockSize100k]
::incs[minLen] < ::BZ2_rNums[::blockSize100k-1]
::incs[minLen] < ::BZ2_rNums[::srcMode]
::incs[minLen] < ::BZ2_rNums[::srcMode-1]
::incs[minLen] < ::BZ2_rNums[::longestFileName]
::incs[minLen] < ::BZ2_rNums[::longestFileName-1]
::incs[minLen] < ::BZ2_rNums[::workFactor]
::incs[minLen] < ::BZ2_rNums[::workFactor-1]
::incs[minLen] < ::BZ2_rNums[minLen]
::incs[minLen] < ::BZ2_rNums[minLen-1]
::incs[minLen] < ::BZ2_rNums[maxLen]
::incs[minLen] < ::BZ2_rNums[maxLen-1]
::incs[minLen] != ::BZ2_rNums[alphaSize]
::incs[minLen] < ::BZ2_rNums[alphaSize-1]
::incs[minLen-1] < ::incs[maxLen]
::incs[minLen-1] < ::incs[maxLen-1]
::incs[minLen-1] < ::BZ2_rNums[::verbosity]
::incs[minLen-1] < ::BZ2_rNums[::numFileNames]
::incs[minLen-1] < ::BZ2_rNums[::blockSize100k]
::incs[minLen-1] < ::BZ2_rNums[::blockSize100k-1]
::incs[minLen-1] < ::BZ2_rNums[::srcMode]
::incs[minLen-1] < ::BZ2_rNums[::srcMode-1]
::incs[minLen-1] < ::BZ2_rNums[::longestFileName]
::incs[minLen-1] < ::BZ2_rNums[::longestFileName-1]
::incs[minLen-1] < ::BZ2_rNums[::workFactor]
::incs[minLen-1] < ::BZ2_rNums[::workFactor-1]
::incs[minLen-1] < ::BZ2_rNums[minLen]
::incs[minLen-1] < ::BZ2_rNums[minLen-1]
::incs[minLen-1] < ::BZ2_rNums[maxLen]
::incs[minLen-1] < ::BZ2_rNums[maxLen-1]
::incs[minLen-1] < ::BZ2_rNums[alphaSize]
::incs[minLen-1] < ::BZ2_rNums[alphaSize-1]
::incs[maxLen] - 3 * ::incs[maxLen-1] - 1 == 0
::incs[maxLen] > ::incs[maxLen-1]
::incs[maxLen] != ::BZ2_rNums[::verbosity]
::incs[maxLen] != ::BZ2_rNums[::numFileNames]
::incs[maxLen] > ::BZ2_rNums[::blockSize100k]
::incs[maxLen] != ::BZ2_rNums[::blockSize100k-1]
::incs[maxLen] != ::BZ2_rNums[::srcMode]
::incs[maxLen] > ::BZ2_rNums[::srcMode-1]
::incs[maxLen] != ::BZ2_rNums[::longestFileName]
::incs[maxLen] > ::BZ2_rNums[::longestFileName-1]
::incs[maxLen] != ::BZ2_rNums[::workFactor]
::incs[maxLen] != ::BZ2_rNums[::workFactor-1]
::incs[maxLen] != ::BZ2_rNums[minLen]
::incs[maxLen] != ::BZ2_rNums[minLen-1]
::incs[maxLen] != ::BZ2_rNums[maxLen]
::incs[maxLen] != ::BZ2_rNums[maxLen-1]
::incs[maxLen] > ::BZ2_rNums[alphaSize]
::incs[maxLen] != ::BZ2_rNums[alphaSize-1]
::incs[maxLen-1] != ::BZ2_rNums[::verbosity]
::incs[maxLen-1] != ::BZ2_rNums[::numFileNames]
::incs[maxLen-1] != ::BZ2_rNums[::blockSize100k]
::incs[maxLen-1] != ::BZ2_rNums[::blockSize100k-1]
::incs[maxLen-1] != ::BZ2_rNums[::srcMode]
::incs[maxLen-1] != ::BZ2_rNums[::srcMode-1]
::incs[maxLen-1] != ::BZ2_rNums[::longestFileName]
::incs[maxLen-1] != ::BZ2_rNums[::longestFileName-1]
::incs[maxLen-1] != ::BZ2_rNums[::workFactor]
::incs[maxLen-1] != ::BZ2_rNums[::workFactor-1]
::incs[maxLen-1] != ::BZ2_rNums[minLen]
::incs[maxLen-1] != ::BZ2_rNums[minLen-1]
::incs[maxLen-1] != ::BZ2_rNums[maxLen]
::incs[maxLen-1] != ::BZ2_rNums[maxLen-1]
::incs[maxLen-1] > ::BZ2_rNums[alphaSize]
::incs[maxLen-1] != ::BZ2_rNums[alphaSize-1]
::BZ2_rNums[::verbosity] < ::BZ2_rNums[minLen]
::BZ2_rNums[::verbosity] >= ::BZ2_rNums[minLen-1]
::BZ2_rNums[::verbosity] != ::BZ2_rNums[maxLen]
::BZ2_rNums[::verbosity] != ::BZ2_rNums[maxLen-1]
::BZ2_rNums[::numFileNames] <= ::BZ2_rNums[minLen]
::BZ2_rNums[::numFileNames] > ::BZ2_rNums[minLen-1]
::BZ2_rNums[::numFileNames] != ::BZ2_rNums[maxLen]
::BZ2_rNums[::numFileNames] != ::BZ2_rNums[maxLen-1]
::BZ2_rNums[::blockSize100k] < ::BZ2_rNums[minLen]
::BZ2_rNums[::blockSize100k] < ::BZ2_rNums[minLen-1]
::BZ2_rNums[::blockSize100k] <= ::BZ2_rNums[maxLen]
::BZ2_rNums[::blockSize100k-1] < ::BZ2_rNums[minLen]
::BZ2_rNums[::blockSize100k-1] != ::BZ2_rNums[minLen-1]
::BZ2_rNums[::srcMode] < ::BZ2_rNums[minLen]
::BZ2_rNums[::srcMode] <= ::BZ2_rNums[minLen-1]
::BZ2_rNums[::srcMode] != ::BZ2_rNums[maxLen]
::BZ2_rNums[::srcMode] != ::BZ2_rNums[maxLen-1]
::BZ2_rNums[::srcMode-1] < ::BZ2_rNums[minLen]
::BZ2_rNums[::srcMode-1] < ::BZ2_rNums[minLen-1]
::BZ2_rNums[::srcMode-1] < ::BZ2_rNums[maxLen]
::BZ2_rNums[::srcMode-1] < ::BZ2_rNums[maxLen-1]
::BZ2_rNums[::longestFileName] != ::BZ2_rNums[minLen]
::BZ2_rNums[::longestFileName] > ::BZ2_rNums[minLen-1]
::BZ2_rNums[::longestFileName] != ::BZ2_rNums[maxLen]
::BZ2_rNums[::longestFileName] != ::BZ2_rNums[maxLen-1]
::BZ2_rNums[::longestFileName-1] < ::BZ2_rNums[minLen]
::BZ2_rNums[::longestFileName-1] < ::BZ2_rNums[minLen-1]
::BZ2_rNums[::longestFileName-1] < ::BZ2_rNums[maxLen]
::BZ2_rNums[::longestFileName-1] < ::BZ2_rNums[maxLen-1]
::BZ2_rNums[::workFactor] < ::BZ2_rNums[minLen]
::BZ2_rNums[::workFactor] < ::BZ2_rNums[minLen-1]
::BZ2_rNums[::workFactor] != ::BZ2_rNums[maxLen]
::BZ2_rNums[::workFactor] != ::BZ2_rNums[maxLen-1]
::BZ2_rNums[::workFactor-1] < ::BZ2_rNums[minLen]
::BZ2_rNums[::workFactor-1] < ::BZ2_rNums[minLen-1]
::BZ2_rNums[::workFactor-1] != ::BZ2_rNums[maxLen]
::BZ2_rNums[::workFactor-1] != ::BZ2_rNums[maxLen-1]
::BZ2_rNums[minLen] > ::BZ2_rNums[minLen-1]
::BZ2_rNums[minLen] != ::BZ2_rNums[maxLen]
::BZ2_rNums[minLen] >= ::BZ2_rNums[maxLen-1]
::BZ2_rNums[minLen] > ::BZ2_rNums[alphaSize]
::BZ2_rNums[minLen] > ::BZ2_rNums[alphaSize-1]
::BZ2_rNums[minLen-1] != ::BZ2_rNums[maxLen]
::BZ2_rNums[minLen-1] != ::BZ2_rNums[maxLen-1]
::BZ2_rNums[minLen-1] > ::BZ2_rNums[alphaSize]
::BZ2_rNums[minLen-1] != ::BZ2_rNums[alphaSize-1]
::BZ2_rNums[maxLen] != ::BZ2_rNums[maxLen-1]
::BZ2_rNums[maxLen] > ::BZ2_rNums[alphaSize]
::BZ2_rNums[maxLen] != ::BZ2_rNums[alphaSize-1]
::BZ2_rNums[maxLen-1] > ::BZ2_rNums[alphaSize]
::BZ2_rNums[maxLen-1] != ::BZ2_rNums[alphaSize-1]
::BZ2_crc32Table[::verbosity] < ::BZ2_crc32Table[minLen]
::BZ2_crc32Table[::verbosity] <= ::BZ2_crc32Table[minLen-1]
::BZ2_crc32Table[::verbosity] < ::BZ2_crc32Table[maxLen]
::BZ2_crc32Table[::verbosity] < ::BZ2_crc32Table[maxLen-1]
::BZ2_crc32Table[::numFileNames] <= ::BZ2_crc32Table[minLen]
::BZ2_crc32Table[::numFileNames] != ::BZ2_crc32Table[minLen-1]
::BZ2_crc32Table[::numFileNames] < ::BZ2_crc32Table[maxLen]
::BZ2_crc32Table[::numFileNames] < ::BZ2_crc32Table[maxLen-1]
::BZ2_crc32Table[::blockSize100k] > ::BZ2_crc32Table[minLen]
::BZ2_crc32Table[::blockSize100k] > ::BZ2_crc32Table[minLen-1]
::BZ2_crc32Table[::blockSize100k-1] > ::BZ2_crc32Table[minLen]
::BZ2_crc32Table[::blockSize100k-1] > ::BZ2_crc32Table[minLen-1]
::BZ2_crc32Table[::blockSize100k-1] >= ::BZ2_crc32Table[maxLen-1]
::BZ2_crc32Table[::srcMode] != ::BZ2_crc32Table[minLen]
::BZ2_crc32Table[::srcMode] >= ::BZ2_crc32Table[minLen-1]
::BZ2_crc32Table[::srcMode] < ::BZ2_crc32Table[maxLen]
::BZ2_crc32Table[::srcMode] < ::BZ2_crc32Table[maxLen-1]
::BZ2_crc32Table[::srcMode-1] != ::BZ2_crc32Table[minLen]
::BZ2_crc32Table[::srcMode-1] != ::BZ2_crc32Table[minLen-1]
::BZ2_crc32Table[::srcMode-1] < ::BZ2_crc32Table[maxLen]
::BZ2_crc32Table[::srcMode-1] < ::BZ2_crc32Table[maxLen-1]
::BZ2_crc32Table[::longestFileName] > ::BZ2_crc32Table[minLen]
::BZ2_crc32Table[::longestFileName] > ::BZ2_crc32Table[minLen-1]
::BZ2_crc32Table[::longestFileName] > ::BZ2_crc32Table[maxLen]
::BZ2_crc32Table[::longestFileName] > ::BZ2_crc32Table[maxLen-1]
::BZ2_crc32Table[::longestFileName-1] > ::BZ2_crc32Table[minLen]
::BZ2_crc32Table[::longestFileName-1] > ::BZ2_crc32Table[minLen-1]
::BZ2_crc32Table[::longestFileName-1] > ::BZ2_crc32Table[maxLen]
::BZ2_crc32Table[::longestFileName-1] > ::BZ2_crc32Table[maxLen-1]
::BZ2_crc32Table[::workFactor] > ::BZ2_crc32Table[minLen]
::BZ2_crc32Table[::workFactor] > ::BZ2_crc32Table[minLen-1]
::BZ2_crc32Table[::workFactor] > ::BZ2_crc32Table[maxLen]
::BZ2_crc32Table[::workFactor] > ::BZ2_crc32Table[maxLen-1]
::BZ2_crc32Table[::workFactor-1] > ::BZ2_crc32Table[minLen]
::BZ2_crc32Table[::workFactor-1] > ::BZ2_crc32Table[minLen-1]
::BZ2_crc32Table[::workFactor-1] > ::BZ2_crc32Table[maxLen]
::BZ2_crc32Table[::workFactor-1] > ::BZ2_crc32Table[maxLen-1]
::BZ2_crc32Table[minLen] > ::BZ2_crc32Table[minLen-1]
::BZ2_crc32Table[minLen] < ::BZ2_crc32Table[maxLen]
::BZ2_crc32Table[minLen] <= ::BZ2_crc32Table[maxLen-1]
::BZ2_crc32Table[minLen] < ::BZ2_crc32Table[alphaSize]
::BZ2_crc32Table[minLen] < ::BZ2_crc32Table[alphaSize-1]
::BZ2_crc32Table[minLen-1] < ::BZ2_crc32Table[maxLen]
::BZ2_crc32Table[minLen-1] < ::BZ2_crc32Table[maxLen-1]
::BZ2_crc32Table[minLen-1] < ::BZ2_crc32Table[alphaSize]
::BZ2_crc32Table[minLen-1] < ::BZ2_crc32Table[alphaSize-1]
::BZ2_crc32Table[maxLen] != ::BZ2_crc32Table[maxLen-1]
::BZ2_crc32Table[maxLen] < ::BZ2_crc32Table[alphaSize]
::BZ2_crc32Table[maxLen] < ::BZ2_crc32Table[alphaSize-1]
::BZ2_crc32Table[maxLen-1] < ::BZ2_crc32Table[alphaSize]
::BZ2_crc32Table[maxLen-1] < ::BZ2_crc32Table[alphaSize-1]
===========================================================================
..BZ2_hbAssignCodes():::EXIT
::incs == orig(::incs)
::incs[] == orig(::incs[])
::bzerrorstrings == orig(::bzerrorstrings)
::fileMetaInfo == orig(::fileMetaInfo)
::fileMetaInfo.st_dev == orig(::fileMetaInfo.st_dev)
::fileMetaInfo.st_ino == orig(::fileMetaInfo.st_ino)
::fileMetaInfo.st_nlink == orig(::fileMetaInfo.st_nlink)
::fileMetaInfo.st_mode == orig(::fileMetaInfo.st_mode)
::fileMetaInfo.st_uid == ::fileMetaInfo.st_gid
::fileMetaInfo.st_uid == orig(::fileMetaInfo.st_uid)
::fileMetaInfo.st_uid == orig(::fileMetaInfo.st_gid)
::fileMetaInfo.__pad0 == ::verbosity
::fileMetaInfo.st_rdev == orig(::fileMetaInfo.st_rdev)
::fileMetaInfo.st_size == orig(::fileMetaInfo.st_size)
::fileMetaInfo.st_blksize == orig(::fileMetaInfo.st_blksize)
::fileMetaInfo.st_blocks == orig(::fileMetaInfo.st_blocks)
::fileMetaInfo.st_atim == orig(::fileMetaInfo.st_atim)
::fileMetaInfo.st_atim.tv_sec == orig(::fileMetaInfo.st_atim.tv_sec)
::fileMetaInfo.st_atim.tv_nsec == orig(::fileMetaInfo.st_atim.tv_nsec)
::fileMetaInfo.st_mtim == orig(::fileMetaInfo.st_mtim)
::fileMetaInfo.st_mtim.tv_sec == ::fileMetaInfo.st_ctim.tv_sec
::fileMetaInfo.st_mtim.tv_sec == orig(::fileMetaInfo.st_mtim.tv_sec)
::fileMetaInfo.st_mtim.tv_sec == orig(::fileMetaInfo.st_ctim.tv_sec)
::fileMetaInfo.st_mtim.tv_nsec == ::fileMetaInfo.st_ctim.tv_nsec
::fileMetaInfo.st_mtim.tv_nsec == orig(::fileMetaInfo.st_mtim.tv_nsec)
::fileMetaInfo.st_mtim.tv_nsec == orig(::fileMetaInfo.st_ctim.tv_nsec)
::fileMetaInfo.st_ctim == orig(::fileMetaInfo.st_ctim)
::fileMetaInfo.__glibc_reserved == orig(::fileMetaInfo.__glibc_reserved)
::fileMetaInfo.__glibc_reserved[] == orig(::fileMetaInfo.__glibc_reserved[])
::BZ2_rNums == orig(::BZ2_rNums)
::BZ2_rNums[] == orig(::BZ2_rNums[])
::BZ2_crc32Table == orig(::BZ2_crc32Table)
::BZ2_crc32Table[] == orig(::BZ2_crc32Table[])
::mammamia == orig(::mammamia)
::verbosity == ::exitValue
::verbosity == orig(::fileMetaInfo.__pad0)
::verbosity == orig(::verbosity)
::verbosity == orig(::exitValue)
::verbosity == ::fileMetaInfo.__glibc_reserved[::fileMetaInfo.__pad0]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::fileMetaInfo.__pad0)])
::verbosity == ::fileMetaInfo.__glibc_reserved[::verbosity]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::exitValue]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::srcMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::fileMetaInfo.__pad0)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::verbosity)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFileNames)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFileNames)-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFilesProcessed)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFilesProcessed)-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::exitValue)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::opMode)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::opMode)-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::srcMode)-1]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::verbosity)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFileNames)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFileNames)-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFilesProcessed)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFilesProcessed)-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::exitValue)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::opMode)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::opMode)-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::srcMode)-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::fileMetaInfo.__pad0])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::verbosity])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFileNames])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFileNames-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFilesProcessed])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFilesProcessed-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::exitValue])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::opMode])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::opMode-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::srcMode-1])
::keepInputFiles == ::deleteOutputOnInterrupt
::keepInputFiles == ::noisy
::keepInputFiles == orig(::keepInputFiles)
::keepInputFiles == orig(::deleteOutputOnInterrupt)
::keepInputFiles == orig(::noisy)
::smallMode == ::forceOverwrite
::smallMode == ::testFailsExist
::smallMode == ::unzFailsExist
::smallMode == orig(::smallMode)
::smallMode == orig(::forceOverwrite)
::smallMode == orig(::testFailsExist)
::smallMode == orig(::unzFailsExist)
::numFileNames == ::numFilesProcessed
::numFileNames == ::opMode
::numFileNames == orig(::numFileNames)
::numFileNames == orig(::numFilesProcessed)
::numFileNames == orig(::opMode)
::numFileNames == ::incs[::fileMetaInfo.__pad0]
::numFileNames == ::incs[::verbosity]
::numFileNames == ::incs[::numFileNames-1]
::numFileNames == ::incs[::numFilesProcessed-1]
::numFileNames == ::incs[::exitValue]
::numFileNames == ::incs[::opMode-1]
::numFileNames == ::incs[orig(::fileMetaInfo.__pad0)]
::numFileNames == ::incs[orig(::verbosity)]
::numFileNames == ::incs[orig(::numFileNames)-1]
::numFileNames == ::incs[orig(::numFilesProcessed)-1]
::numFileNames == ::incs[orig(::exitValue)]
::numFileNames == ::incs[orig(::opMode)-1]
::numFileNames == orig(::incs[post(::fileMetaInfo.__pad0)])
::numFileNames == orig(::incs[post(::verbosity)])
::numFileNames == orig(::incs[post(::numFileNames)-1])
::numFileNames == orig(::incs[post(::numFilesProcessed)-1])
::numFileNames == orig(::incs[post(::exitValue)])
::numFileNames == orig(::incs[post(::opMode)-1])
::numFileNames == orig(::incs[::fileMetaInfo.__pad0])
::numFileNames == orig(::incs[::verbosity])
::numFileNames == orig(::incs[::numFileNames-1])
::numFileNames == orig(::incs[::numFilesProcessed-1])
::numFileNames == orig(::incs[::exitValue])
::numFileNames == orig(::incs[::opMode-1])
::blockSize100k == orig(::blockSize100k)
::srcMode == orig(::srcMode)
::srcMode == size(::fileMetaInfo.__glibc_reserved[])
::srcMode == size(::zSuffix[])-1
::srcMode == size(::unzSuffix[])-1
::srcMode == orig(size(::fileMetaInfo.__glibc_reserved[]))
::srcMode == orig(size(::zSuffix[]))-1
::srcMode == orig(size(::unzSuffix[]))-1
::longestFileName == orig(::longestFileName)
::outputHandleJustInCase == orig(::outputHandleJustInCase)
::workFactor == orig(::workFactor)
::zSuffix == orig(::zSuffix)
::unzSuffix == orig(::unzSuffix)
size(::incs[])-1 == ::incs[::srcMode-1]
size(::incs[])-1 == ::incs[orig(::srcMode)-1]
size(::incs[])-1 == orig(::incs[post(::srcMode)-1])
size(::incs[])-1 == orig(::incs[::srcMode-1])
size(::zSuffix[]) == size(::unzSuffix[])
size(::zSuffix[]) == orig(size(::unzSuffix[]))
size(::zSuffix[]) == ::incs[::numFileNames]
size(::zSuffix[]) == ::incs[::numFilesProcessed]
size(::zSuffix[]) == ::incs[::opMode]
size(::zSuffix[]) == ::incs[orig(::numFileNames)]
size(::zSuffix[]) == ::incs[orig(::numFilesProcessed)]
size(::zSuffix[]) == ::incs[orig(::opMode)]
size(::zSuffix[]) == orig(::incs[post(::numFileNames)])
size(::zSuffix[]) == orig(::incs[post(::numFilesProcessed)])
size(::zSuffix[]) == orig(::incs[post(::opMode)])
size(::zSuffix[]) == orig(::incs[::numFileNames])
size(::zSuffix[]) == orig(::incs[::numFilesProcessed])
size(::zSuffix[]) == orig(::incs[::opMode])
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFileNames-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFilesProcessed-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::opMode-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[orig(::numFileNames)-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[orig(::numFilesProcessed)-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[orig(::opMode)-1]
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[post(::numFileNames)-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[post(::numFilesProcessed)-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[post(::opMode)-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[::numFileNames-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[::numFilesProcessed-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[::opMode-1])
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFileNames-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFilesProcessed-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::opMode-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[orig(::numFileNames)-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[orig(::numFilesProcessed)-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[orig(::opMode)-1]
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[post(::numFileNames)-1])
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[post(::numFilesProcessed)-1])
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[post(::opMode)-1])
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[::numFileNames-1])
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[::numFilesProcessed-1])
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[::opMode-1])
::incs has only one value
::incs[] == [1, 4, 13, 40, 121, 364, 1093, 3280, 9841, 29524, 88573, 265720, 797161, 2391484]
::incs[] elements >= 1
::incs[] sorted by <
::bzerrorstrings has only one value
::bzerrorstrings[] == [OK, SEQUENCE_ERROR, PARAM_ERROR, MEM_ERROR, DATA_ERROR, DATA_ERROR_MAGIC, IO_ERROR, UNEXPECTED_EOF, OUTBUFF_FULL, CONFIG_ERROR, ???, ???, ???, ???, ???, ???]
::fileMetaInfo has only one value
::fileMetaInfo != null
::fileMetaInfo.st_dev == 2049
::fileMetaInfo.st_ino == 936492
::fileMetaInfo.st_nlink == 1
::fileMetaInfo.st_mode == 33277
::fileMetaInfo.st_uid == 1000
::fileMetaInfo.st_rdev == 0
::fileMetaInfo.st_size == 5738700
::fileMetaInfo.st_blksize == 4096
::fileMetaInfo.st_blocks == 11216
::fileMetaInfo.st_atim has only one value
::fileMetaInfo.st_atim != null
::fileMetaInfo.st_atim.tv_sec == 1496096467
::fileMetaInfo.st_atim.tv_nsec == 709424920
::fileMetaInfo.st_mtim has only one value
::fileMetaInfo.st_mtim != null
::fileMetaInfo.st_mtim.tv_sec == 1483563943
::fileMetaInfo.st_mtim.tv_nsec == 421335644
::fileMetaInfo.st_ctim has only one value
::fileMetaInfo.st_ctim != null
::fileMetaInfo.__glibc_reserved has only one value
::fileMetaInfo.__glibc_reserved[] == [0, 0, 0]
::fileMetaInfo.__glibc_reserved[] elements == 0
::BZ2_rNums has only one value
::BZ2_rNums[] == [619, 720, 127, 481, 931, 816, 813, 233, 566, 247, 985, 724, 205, 454, 863, 491, 741, 242, 949, 214, 733, 859, 335, 708, 621, 574, 73, 654, 730, 472, 419, 436, 278, 496, 867, 210, 399, 680, 480, 51, 878, 465, 811, 169, 869, 675, 611, 697, 867, 561, 862, 687, 507, 283, 482, 129, 807, 591, 733, 623, 150, 238, 59, 379, 684, 877, 625, 169, 643, 105, 170, 607, 520, 932, 727, 476, 693, 425, 174, 647, 73, 122, 335, 530, 442, 853, 695, 249, 445, 515, 909, 545, 703, 919, 874, 474, 882, 500, 594, 612, 641, 801, 220, 162, 819, 984, 589, 513, 495, 799, 161, 604, 958, 533, 221, 400, 386, 867, 600, 782, 382, 596, 414, 171, 516, 375, 682, 485, 911, 276, 98, 553, 163, 354, 666, 933, 424, 341, 533, 870, 227, 730, 475, 186, 263, 647, 537, 686, 600, 224, 469, 68, 770, 919, 190, 373, 294, 822, 808, 206, 184, 943, 795, 384, 383, 461, 404, 758, 839, 887, 715, 67, 618, 276, 204, 918, 873, 777, 604, 560, 951, 160, 578, 722, 79, 804, 96, 409, 713, 940, 652, 934, 970, 447, 318, 353, 859, 672, 112, 785, 645, 863, 803, 350, 139, 93, 354, 99, 820, 908, 609, 772, 154, 274, 580, 184, 79, 626, 630, 742, 653, 282, 762, 623, 680, 81, 927, 626, 789, 125, 411, 521, 938, 300, 821, 78, 343, 175, 128, 250, 170, 774, 972, 275, 999, 639, 495, 78, 352, 126, 857, 956, 358, 619, 580, 124, 737, 594, 701, 612, 669, 112, 134, 694, 363, 992, 809, 743, 168, 974, 944, 375, 748, 52, 600, 747, 642, 182, 862, 81, 344, 805, 988, 739, 511, 655, 814, 334, 249, 515, 897, 955, 664, 981, 649, 113, 974, 459, 893, 228, 433, 837, 553, 268, 926, 240, 102, 654, 459, 51, 686, 754, 806, 760, 493, 403, 415, 394, 687, 700, 946, 670, 656, 610, 738, 392, 760, 799, 887, 653, 978, 321, 576, 617, 626, 502, 894, 679, 243, 440, 680, 879, 194, 572, 640, 724, 926, 56, 204, 700, 707, 151, 457, 449, 797, 195, 791, 558, 945, 679, 297, 59, 87, 824, 713, 663, 412, 693, 342, 606, 134, 108, 571, 364, 631, 212, 174, 643, 304, 329, 343, 97, 430, 751, 497, 314, 983, 374, 822, 928, 140, 206, 73, 263, 980, 736, 876, 478, 430, 305, 170, 514, 364, 692, 829, 82, 855, 953, 676, 246, 369, 970, 294, 750, 807, 827, 150, 790, 288, 923, 804, 378, 215, 828, 592, 281, 565, 555, 710, 82, 896, 831, 547, 261, 524, 462, 293, 465, 502, 56, 661, 821, 976, 991, 658, 869, 905, 758, 745, 193, 768, 550, 608, 933, 378, 286, 215, 979, 792, 961, 61, 688, 793, 644, 986, 403, 106, 366, 905, 644, 372, 567, 466, 434, 645, 210, 389, 550, 919, 135, 780, 773, 635, 389, 707, 100, 626, 958, 165, 504, 920, 176, 193, 713, 857, 265, 203, 50, 668, 108, 645, 990, 626, 197, 510, 357, 358, 850, 858, 364, 936, 638]
::BZ2_crc32Table has only one value
::BZ2_crc32Table[] == [0, 79764919, 159529838, 222504665, 319059676, 398814059, 445009330, 507990021, 638119352, 583659535, 797628118, 726387553, 890018660, 835552979, 1015980042, 944750013, 1276238704, 1221641927, 1167319070, 1095957929, 1595256236, 1540665371, 1452775106, 1381403509, 1780037320, 1859660671, 1671105958, 1733955601, 2031960084, 2111593891, 1889500026, 1952343757, 2552477408, 2632100695, 2443283854, 2506133561, 2334638140, 2414271883, 2191915858, 2254759653, 3190512472, 3135915759, 3081330742, 3009969537, 2905550212, 2850959411, 2762807018, 2691435357, 3560074640, 3505614887, 3719321342, 3648080713, 3342211916, 3287746299, 3467911202, 3396681109, 4063920168, 4143685023, 4223187782, 4286162673, 3779000052, 3858754371, 3904687514, 3967668269, 881225847, 809987520, 1023691545, 969234094, 662832811, 591600412, 771767749, 717299826, 311336399, 374308984, 453813921, 533576470, 25881363, 88864420, 134795389, 214552010, 2023205639, 2086057648, 1897238633, 1976864222, 1804852699, 1867694188, 1645340341, 1724971778, 1587496639, 1516133128, 1461550545, 1406951526, 1302016099, 1230646740, 1142491917, 1087903418, 2896545431, 2825181984, 2770861561, 2716262478, 3215044683, 3143675388, 3055782693, 3001194130, 2326604591, 2389456536, 2200899649, 2280525302, 2578013683, 2640855108, 2418763421, 2498394922, 3769900519, 3832873040, 3912640137, 3992402750, 4088425275, 4151408268, 4197601365, 4277358050, 3334271071, 3263032808, 3476998961, 3422541446, 3585640067, 3514407732, 3694837229, 3640369242, 1762451694, 1842216281, 1619975040, 1682949687, 2047383090, 2127137669, 1938468188, 2001449195, 1325665622, 1271206113, 1183200824, 1111960463, 1543535498, 1489069629, 1434599652, 1363369299, 622672798, 568075817, 748617968, 677256519, 907627842, 853037301, 1067152940, 995781531, 51762726, 131386257, 177728840, 240578815, 269590778, 349224269, 429104020, 491947555, 4046411278, 4126034873, 4172115296, 4234965207, 3794477266, 3874110821, 3953728444, 4016571915, 3609705398, 3555108353, 3735388376, 3664026991, 3290680682, 3236090077, 3449943556, 3378572211, 3174993278, 3120533705, 3032266256, 2961025959, 2923101090, 2868635157, 2813903052, 2742672763, 2604032198, 2683796849, 2461293480, 2524268063, 2284983834, 2364738477, 2175806836, 2238787779, 1569362073, 1498123566, 1409854455, 1355396672, 1317987909, 1246755826, 1192025387, 1137557660, 2072149281, 2135122070, 1912620623, 1992383480, 1753615357, 1816598090, 1627664531, 1707420964, 295390185, 358241886, 404320391, 483945776, 43990325, 106832002, 186451547, 266083308, 932423249, 861060070, 1041341759, 986742920, 613929101, 542559546, 756411363, 701822548, 3316196985, 3244833742, 3425377559, 3370778784, 3601682597, 3530312978, 3744426955, 3689838204, 3819031489, 3881883254, 3928223919, 4007849240, 4037393693, 4100235434, 4180117107, 4259748804, 2310601993, 2373574846, 2151335527, 2231098320, 2596047829, 2659030626, 2470359227, 2550115596, 2947551409, 2876312838, 2788305887, 2733848168, 3165939309, 3094707162, 3040238851, 2985771188]
::BZ2_crc32Table[] elements >= 0
::mammamia == 3216
::verbosity == 0
::keepInputFiles == 1
::smallMode == 0
::numFileNames == 1
::blockSize100k == 9
::longestFileName == 20
::inName == "../inputs/in_big.txt"
::outName == "../inputs/in_big.txt.bz2"
::tmpName == ""
::progName == "zip-injected"
::progNameReally == "./zip-injected"
::outputHandleJustInCase has only one value
::outputHandleJustInCase != null
::workFactor == 30
::zSuffix has only one value
::zSuffix[] == [.bz2, .bz, .tbz2, .tbz]
::unzSuffix has only one value
::unzSuffix[] == [, , .tar, .tar]
::unzSuffix[] elements one of { "", ".tar" }
size(::incs[]) == 14
size(::bzerrorstrings[]) == 16
size(::BZ2_rNums[]) == 512
size(::BZ2_crc32Table[]) == 256
size(::zSuffix[]) == 4
::incs[::blockSize100k] == 29524
::incs[::blockSize100k-1] == 9841
::incs[::srcMode] == 40
::incs[orig(minLen)] one of { 4, 121 }
::incs[orig(minLen)-1] one of { 1, 40 }
::BZ2_rNums[::verbosity] == 619
::BZ2_rNums[::numFileNames] == 720
::BZ2_rNums[::blockSize100k] == 247
::BZ2_rNums[::blockSize100k-1] == 566
::BZ2_rNums[::srcMode] == 481
::BZ2_rNums[::srcMode-1] == 127
::BZ2_rNums[::longestFileName] == 733
::BZ2_rNums[::longestFileName-1] == 214
::BZ2_rNums[::workFactor] == 419
::BZ2_rNums[::workFactor-1] == 472
::BZ2_rNums[orig(minLen)] one of { 720, 931 }
::BZ2_rNums[orig(minLen)-1] one of { 481, 619 }
::BZ2_rNums[orig(alphaSize)] == 73
::BZ2_rNums[orig(alphaSize)-1] == 574
::BZ2_crc32Table[::verbosity] == 0
::BZ2_crc32Table[::numFileNames] == 79764919
::BZ2_crc32Table[::blockSize100k] == 583659535
::BZ2_crc32Table[::blockSize100k-1] == 638119352
::BZ2_crc32Table[::srcMode] == 222504665
::BZ2_crc32Table[::srcMode-1] == 159529838
::BZ2_crc32Table[::longestFileName] == 1595256236
::BZ2_crc32Table[::longestFileName-1] == 1095957929
::BZ2_crc32Table[::workFactor] == 1889500026
::BZ2_crc32Table[::workFactor-1] == 2111593891
::BZ2_crc32Table[orig(minLen)] one of { 79764919, 319059676 }
::BZ2_crc32Table[orig(minLen)-1] one of { 0, 222504665 }
::BZ2_crc32Table[orig(alphaSize)] == 1671105958
::BZ2_crc32Table[orig(alphaSize)-1] == 1859660671
::incs[] elements < ::fileMetaInfo.st_size
::incs[] elements < ::fileMetaInfo.st_atim.tv_sec
::incs[] elements < ::fileMetaInfo.st_atim.tv_nsec
::incs[] elements < ::fileMetaInfo.st_mtim.tv_sec
::incs[] elements < ::fileMetaInfo.st_mtim.tv_nsec
::incs[] elements > ::verbosity
::incs[] elements >= ::numFileNames
orig(minLen) in ::incs[]
::fileMetaInfo.st_mode < ::BZ2_crc32Table[orig(minLen)]
::fileMetaInfo.st_mode != ::BZ2_crc32Table[orig(minLen)-1]
::fileMetaInfo.st_mode < ::BZ2_crc32Table[orig(maxLen)]
::fileMetaInfo.st_mode < ::BZ2_crc32Table[orig(maxLen)-1]
::fileMetaInfo.st_uid < ::BZ2_crc32Table[orig(minLen)]
::fileMetaInfo.st_uid != ::BZ2_crc32Table[orig(minLen)-1]
::fileMetaInfo.st_uid < ::BZ2_crc32Table[orig(maxLen)]
::fileMetaInfo.st_uid < ::BZ2_crc32Table[orig(maxLen)-1]
::BZ2_rNums[] elements < ::fileMetaInfo.st_size
::fileMetaInfo.st_size > orig(minLen)
::fileMetaInfo.st_size > orig(maxLen)
::fileMetaInfo.st_size > ::incs[orig(minLen)]
::fileMetaInfo.st_size > ::incs[orig(minLen)-1]
::fileMetaInfo.st_size > ::incs[orig(maxLen)]
::fileMetaInfo.st_size > ::incs[orig(maxLen)-1]
::fileMetaInfo.st_size > ::BZ2_rNums[orig(minLen)]
::fileMetaInfo.st_size > ::BZ2_rNums[orig(minLen)-1]
::fileMetaInfo.st_size > ::BZ2_rNums[orig(maxLen)]
::fileMetaInfo.st_size > ::BZ2_rNums[orig(maxLen)-1]
::BZ2_rNums[] elements < ::fileMetaInfo.st_blksize
::fileMetaInfo.st_blksize > orig(minLen)
::fileMetaInfo.st_blksize > orig(maxLen)
::fileMetaInfo.st_blksize > ::incs[orig(minLen)]
::fileMetaInfo.st_blksize > ::incs[orig(minLen)-1]
::fileMetaInfo.st_blksize != ::incs[orig(maxLen)]
::fileMetaInfo.st_blksize != ::incs[orig(maxLen)-1]
::fileMetaInfo.st_blksize > ::BZ2_rNums[orig(minLen)]
::fileMetaInfo.st_blksize > ::BZ2_rNums[orig(minLen)-1]
::fileMetaInfo.st_blksize > ::BZ2_rNums[orig(maxLen)]
::fileMetaInfo.st_blksize > ::BZ2_rNums[orig(maxLen)-1]
::BZ2_rNums[] elements < ::fileMetaInfo.st_blocks
::fileMetaInfo.st_blocks > orig(minLen)
::fileMetaInfo.st_blocks > orig(maxLen)
::fileMetaInfo.st_blocks > ::incs[orig(minLen)]
::fileMetaInfo.st_blocks > ::incs[orig(minLen)-1]
::fileMetaInfo.st_blocks != ::incs[orig(maxLen)]
::fileMetaInfo.st_blocks != ::incs[orig(maxLen)-1]
::fileMetaInfo.st_blocks > ::BZ2_rNums[orig(minLen)]
::fileMetaInfo.st_blocks > ::BZ2_rNums[orig(minLen)-1]
::fileMetaInfo.st_blocks > ::BZ2_rNums[orig(maxLen)]
::fileMetaInfo.st_blocks > ::BZ2_rNums[orig(maxLen)-1]
::BZ2_rNums[] elements < ::fileMetaInfo.st_atim.tv_sec
::fileMetaInfo.st_atim.tv_sec > orig(minLen)
::fileMetaInfo.st_atim.tv_sec > orig(maxLen)
::fileMetaInfo.st_atim.tv_sec > ::incs[orig(minLen)]
::fileMetaInfo.st_atim.tv_sec > ::incs[orig(minLen)-1]
::fileMetaInfo.st_atim.tv_sec > ::incs[orig(maxLen)]
::fileMetaInfo.st_atim.tv_sec > ::incs[orig(maxLen)-1]
::fileMetaInfo.st_atim.tv_sec > ::BZ2_rNums[orig(minLen)]
::fileMetaInfo.st_atim.tv_sec > ::BZ2_rNums[orig(minLen)-1]
::fileMetaInfo.st_atim.tv_sec > ::BZ2_rNums[orig(maxLen)]
::fileMetaInfo.st_atim.tv_sec > ::BZ2_rNums[orig(maxLen)-1]
::BZ2_rNums[] elements < ::fileMetaInfo.st_atim.tv_nsec
::fileMetaInfo.st_atim.tv_nsec > orig(minLen)
::fileMetaInfo.st_atim.tv_nsec > orig(maxLen)
::fileMetaInfo.st_atim.tv_nsec > ::incs[orig(minLen)]
::fileMetaInfo.st_atim.tv_nsec > ::incs[orig(minLen)-1]
::fileMetaInfo.st_atim.tv_nsec > ::incs[orig(maxLen)]
::fileMetaInfo.st_atim.tv_nsec > ::incs[orig(maxLen)-1]
::fileMetaInfo.st_atim.tv_nsec > ::BZ2_rNums[orig(minLen)]
::fileMetaInfo.st_atim.tv_nsec > ::BZ2_rNums[orig(minLen)-1]
::fileMetaInfo.st_atim.tv_nsec > ::BZ2_rNums[orig(maxLen)]
::fileMetaInfo.st_atim.tv_nsec > ::BZ2_rNums[orig(maxLen)-1]
::BZ2_rNums[] elements < ::fileMetaInfo.st_mtim.tv_sec
::fileMetaInfo.st_mtim.tv_sec > orig(minLen)
::fileMetaInfo.st_mtim.tv_sec > orig(maxLen)
::fileMetaInfo.st_mtim.tv_sec > ::incs[orig(minLen)]
::fileMetaInfo.st_mtim.tv_sec > ::incs[orig(minLen)-1]
::fileMetaInfo.st_mtim.tv_sec > ::incs[orig(maxLen)]
::fileMetaInfo.st_mtim.tv_sec > ::incs[orig(maxLen)-1]
::fileMetaInfo.st_mtim.tv_sec > ::BZ2_rNums[orig(minLen)]
::fileMetaInfo.st_mtim.tv_sec > ::BZ2_rNums[orig(minLen)-1]
::fileMetaInfo.st_mtim.tv_sec > ::BZ2_rNums[orig(maxLen)]
::fileMetaInfo.st_mtim.tv_sec > ::BZ2_rNums[orig(maxLen)-1]
::BZ2_rNums[] elements < ::fileMetaInfo.st_mtim.tv_nsec
::fileMetaInfo.st_mtim.tv_nsec > orig(minLen)
::fileMetaInfo.st_mtim.tv_nsec > orig(maxLen)
::fileMetaInfo.st_mtim.tv_nsec > ::incs[orig(minLen)]
::fileMetaInfo.st_mtim.tv_nsec > ::incs[orig(minLen)-1]
::fileMetaInfo.st_mtim.tv_nsec > ::incs[orig(maxLen)]
::fileMetaInfo.st_mtim.tv_nsec > ::incs[orig(maxLen)-1]
::fileMetaInfo.st_mtim.tv_nsec > ::BZ2_rNums[orig(minLen)]
::fileMetaInfo.st_mtim.tv_nsec > ::BZ2_rNums[orig(minLen)-1]
::fileMetaInfo.st_mtim.tv_nsec > ::BZ2_rNums[orig(maxLen)]
::fileMetaInfo.st_mtim.tv_nsec > ::BZ2_rNums[orig(maxLen)-1]
::fileMetaInfo.__glibc_reserved[] elements == ::verbosity
::BZ2_rNums[] elements < ::mammamia
::BZ2_rNums[] elements > ::verbosity
::BZ2_rNums[] elements > ::numFileNames
::BZ2_rNums[] elements > ::blockSize100k
::BZ2_rNums[] elements > ::longestFileName
::BZ2_rNums[] elements > ::workFactor
::BZ2_rNums[] elements > orig(minLen)
::BZ2_rNums[] elements > orig(maxLen)
::BZ2_rNums[] elements > orig(alphaSize)
::BZ2_rNums[] elements > size(::incs[])
::BZ2_rNums[] elements > size(::bzerrorstrings[])
size(::BZ2_rNums[])-1 in ::BZ2_rNums[]
::BZ2_rNums[] elements > size(::zSuffix[])
::BZ2_rNums[] elements < ::incs[::blockSize100k]
::BZ2_rNums[] elements < ::incs[::blockSize100k-1]
::BZ2_rNums[] elements > ::incs[::srcMode]
::BZ2_rNums[] elements > ::incs[orig(minLen)-1]
::mammamia > orig(minLen)
::mammamia > orig(maxLen)
::mammamia > ::incs[orig(minLen)]
::mammamia > ::incs[orig(minLen)-1]
::mammamia != ::incs[orig(maxLen)]
::mammamia != ::incs[orig(maxLen)-1]
::mammamia > ::BZ2_rNums[orig(minLen)]
::mammamia > ::BZ2_rNums[orig(minLen)-1]
::mammamia > ::BZ2_rNums[orig(maxLen)]
::mammamia > ::BZ2_rNums[orig(maxLen)-1]
::verbosity < orig(minLen)
::verbosity < orig(maxLen)
::verbosity < ::incs[orig(minLen)]
::verbosity < ::incs[orig(minLen)-1]
::verbosity < ::incs[orig(maxLen)]
::verbosity < ::incs[orig(maxLen)-1]
::verbosity < ::BZ2_rNums[orig(minLen)]
::verbosity < ::BZ2_rNums[orig(minLen)-1]
::verbosity < ::BZ2_rNums[orig(maxLen)]
::verbosity < ::BZ2_rNums[orig(maxLen)-1]
::numFileNames <= orig(minLen)
::numFileNames < orig(maxLen)
::numFileNames < ::incs[orig(minLen)]
::numFileNames <= ::incs[orig(minLen)-1]
::numFileNames < ::incs[orig(maxLen)]
::numFileNames < ::incs[orig(maxLen)-1]
::numFileNames < ::BZ2_rNums[orig(minLen)]
::numFileNames < ::BZ2_rNums[orig(minLen)-1]
::numFileNames < ::BZ2_rNums[orig(maxLen)]
::numFileNames < ::BZ2_rNums[orig(maxLen)-1]
::blockSize100k > orig(minLen)
::blockSize100k != ::incs[orig(minLen)]
::blockSize100k != ::incs[orig(minLen)-1]
::blockSize100k < ::incs[orig(maxLen)]
::blockSize100k < ::incs[orig(maxLen)-1]
::blockSize100k < ::BZ2_rNums[orig(minLen)]
::blockSize100k < ::BZ2_rNums[orig(minLen)-1]
::blockSize100k < ::BZ2_rNums[orig(maxLen)]
::blockSize100k < ::BZ2_rNums[orig(maxLen)-1]
::srcMode != orig(minLen)
::srcMode != ::incs[orig(minLen)-1]
::longestFileName > orig(minLen)
::longestFileName > orig(maxLen)
::longestFileName != ::incs[orig(minLen)]
::longestFileName != ::incs[orig(minLen)-1]
::longestFileName < ::incs[orig(maxLen)]
::longestFileName < ::incs[orig(maxLen)-1]
::longestFileName < ::BZ2_rNums[orig(minLen)]
::longestFileName < ::BZ2_rNums[orig(minLen)-1]
::longestFileName < ::BZ2_rNums[orig(maxLen)]
::longestFileName < ::BZ2_rNums[orig(maxLen)-1]
::inName < ::outName
::inName > ::tmpName
::inName < ::progName
::inName < ::progNameReally
::inName == orig(::inName)
::outName > ::tmpName
::outName < ::progName
::outName < ::progNameReally
::outName == orig(::outName)
::tmpName < ::progName
::tmpName < ::progNameReally
::tmpName in ::unzSuffix[]
::tmpName == orig(::tmpName)
::progName > ::progNameReally
::progName == orig(::progName)
::progNameReally == orig(::progNameReally)
::workFactor > orig(minLen)
::workFactor > orig(maxLen)
::workFactor != ::incs[orig(minLen)]
::workFactor != ::incs[orig(minLen)-1]
::workFactor < ::incs[orig(maxLen)]
::workFactor < ::incs[orig(maxLen)-1]
::workFactor < ::BZ2_rNums[orig(minLen)]
::workFactor < ::BZ2_rNums[orig(minLen)-1]
::workFactor < ::BZ2_rNums[orig(maxLen)]
::workFactor < ::BZ2_rNums[orig(maxLen)-1]
orig(minLen) < size(::incs[])-1
orig(minLen) < size(::bzerrorstrings[])-1
orig(minLen) != size(::fileMetaInfo.__glibc_reserved[])-1
orig(minLen) < size(::BZ2_rNums[])-1
orig(minLen) < size(::BZ2_crc32Table[])-1
orig(minLen) <= size(::zSuffix[])
orig(minLen) < ::incs[::blockSize100k]
orig(minLen) < ::incs[::blockSize100k-1]
orig(minLen) < ::incs[::srcMode]
orig(minLen) < ::incs[orig(minLen)]
orig(minLen) <= ::incs[orig(minLen)-1]
::incs[orig(maxLen)] % orig(minLen) == 0
orig(minLen) < ::incs[orig(maxLen)]
orig(minLen) < ::incs[orig(maxLen)-1]
orig(minLen) < ::BZ2_rNums[::verbosity]
orig(minLen) < ::BZ2_rNums[::numFileNames]
orig(minLen) < ::BZ2_rNums[::blockSize100k]
orig(minLen) < ::BZ2_rNums[::blockSize100k-1]
orig(minLen) < ::BZ2_rNums[::srcMode]
orig(minLen) < ::BZ2_rNums[::srcMode-1]
orig(minLen) < ::BZ2_rNums[::longestFileName]
orig(minLen) < ::BZ2_rNums[::longestFileName-1]
orig(minLen) < ::BZ2_rNums[::workFactor]
orig(minLen) < ::BZ2_rNums[::workFactor-1]
orig(minLen) < ::BZ2_rNums[orig(minLen)]
orig(minLen) < ::BZ2_rNums[orig(minLen)-1]
::BZ2_rNums[orig(maxLen)] % orig(minLen) == 0
orig(minLen) < ::BZ2_rNums[orig(maxLen)]
orig(minLen) < ::BZ2_rNums[orig(maxLen)-1]
orig(minLen) < ::BZ2_rNums[orig(alphaSize)]
orig(minLen) < ::BZ2_rNums[orig(alphaSize)-1]
orig(maxLen) < size(::incs[])-1
orig(maxLen) < size(::bzerrorstrings[])-1
orig(maxLen) < size(::BZ2_rNums[])-1
orig(maxLen) < size(::BZ2_crc32Table[])-1
orig(maxLen) > size(::zSuffix[])
orig(maxLen) < ::incs[::blockSize100k]
orig(maxLen) < ::incs[::blockSize100k-1]
orig(maxLen) < ::incs[::srcMode]
orig(maxLen) != ::incs[orig(minLen)]
orig(maxLen) != ::incs[orig(minLen)-1]
orig(maxLen) < ::incs[orig(maxLen)]
orig(maxLen) < ::incs[orig(maxLen)-1]
orig(maxLen) < ::BZ2_rNums[::verbosity]
orig(maxLen) < ::BZ2_rNums[::numFileNames]
orig(maxLen) < ::BZ2_rNums[::blockSize100k]
orig(maxLen) < ::BZ2_rNums[::blockSize100k-1]
orig(maxLen) < ::BZ2_rNums[::srcMode]
orig(maxLen) < ::BZ2_rNums[::srcMode-1]
orig(maxLen) < ::BZ2_rNums[::longestFileName]
orig(maxLen) < ::BZ2_rNums[::longestFileName-1]
orig(maxLen) < ::BZ2_rNums[::workFactor]
orig(maxLen) < ::BZ2_rNums[::workFactor-1]
orig(maxLen) < ::BZ2_rNums[orig(minLen)]
orig(maxLen) < ::BZ2_rNums[orig(minLen)-1]
orig(maxLen) < ::BZ2_rNums[orig(maxLen)]
orig(maxLen) < ::BZ2_rNums[orig(maxLen)-1]
orig(maxLen) < ::BZ2_rNums[orig(alphaSize)]
orig(maxLen) < ::BZ2_rNums[orig(alphaSize)-1]
orig(alphaSize) != ::incs[orig(minLen)]
orig(alphaSize) != ::incs[orig(minLen)-1]
orig(alphaSize) < ::incs[orig(maxLen)]
orig(alphaSize) < ::incs[orig(maxLen)-1]
orig(alphaSize) < ::BZ2_rNums[orig(minLen)]
orig(alphaSize) < ::BZ2_rNums[orig(minLen)-1]
orig(alphaSize) < ::BZ2_rNums[orig(maxLen)]
orig(alphaSize) < ::BZ2_rNums[orig(maxLen)-1]
size(::incs[]) != ::incs[orig(minLen)]
size(::incs[]) != ::incs[orig(minLen)-1]
size(::incs[]) < ::incs[orig(maxLen)]
size(::incs[]) < ::incs[orig(maxLen)-1]
size(::incs[]) < ::BZ2_rNums[orig(minLen)]
size(::incs[]) < ::BZ2_rNums[orig(minLen)-1]
size(::incs[]) < ::BZ2_rNums[orig(maxLen)]
size(::incs[]) < ::BZ2_rNums[orig(maxLen)-1]
size(::incs[])-1 != ::incs[orig(minLen)]
size(::incs[])-1 != ::incs[orig(minLen)-1]
size(::bzerrorstrings[]) != ::incs[orig(minLen)]
size(::bzerrorstrings[]) != ::incs[orig(minLen)-1]
size(::bzerrorstrings[]) < ::incs[orig(maxLen)]
size(::bzerrorstrings[]) < ::incs[orig(maxLen)-1]
size(::bzerrorstrings[]) < ::BZ2_rNums[orig(minLen)]
size(::bzerrorstrings[]) < ::BZ2_rNums[orig(minLen)-1]
size(::bzerrorstrings[]) < ::BZ2_rNums[orig(maxLen)]
size(::bzerrorstrings[]) < ::BZ2_rNums[orig(maxLen)-1]
size(::bzerrorstrings[])-1 != ::incs[orig(minLen)]
size(::bzerrorstrings[])-1 != ::incs[orig(minLen)-1]
size(::fileMetaInfo.__glibc_reserved[])-1 != ::incs[orig(minLen)-1]
size(::BZ2_rNums[]) != ::incs[orig(maxLen)]
size(::BZ2_rNums[]) != ::incs[orig(maxLen)-1]
size(::BZ2_rNums[]) < ::BZ2_rNums[orig(minLen)]
size(::BZ2_rNums[]) != ::BZ2_rNums[orig(minLen)-1]
size(::BZ2_rNums[]) != ::BZ2_rNums[orig(maxLen)]
size(::BZ2_rNums[]) != ::BZ2_rNums[orig(maxLen)-1]
size(::BZ2_rNums[])-1 > ::incs[orig(minLen)]
size(::BZ2_rNums[])-1 > ::incs[orig(minLen)-1]
size(::BZ2_rNums[])-1 != ::incs[orig(maxLen)]
size(::BZ2_rNums[])-1 != ::incs[orig(maxLen)-1]
size(::BZ2_rNums[])-1 != ::BZ2_rNums[orig(minLen)-1]
size(::BZ2_rNums[])-1 != ::BZ2_rNums[orig(maxLen)]
size(::BZ2_rNums[])-1 != ::BZ2_rNums[orig(maxLen)-1]
size(::BZ2_crc32Table[]) < ::incs[orig(maxLen)]
size(::BZ2_crc32Table[]) != ::incs[orig(maxLen)-1]
size(::BZ2_crc32Table[]) < ::BZ2_rNums[orig(minLen)]
size(::BZ2_crc32Table[]) < ::BZ2_rNums[orig(minLen)-1]
size(::BZ2_crc32Table[]) != ::BZ2_rNums[orig(maxLen)]
size(::BZ2_crc32Table[]) != ::BZ2_rNums[orig(maxLen)-1]
size(::BZ2_crc32Table[])-1 > ::incs[orig(minLen)]
size(::BZ2_crc32Table[])-1 > ::incs[orig(minLen)-1]
size(::BZ2_crc32Table[])-1 != ::incs[orig(maxLen)-1]
size(::BZ2_crc32Table[])-1 != ::BZ2_rNums[orig(maxLen)]
size(::BZ2_crc32Table[])-1 != ::BZ2_rNums[orig(maxLen)-1]
size(::zSuffix[]) <= ::incs[orig(minLen)]
size(::zSuffix[]) != ::incs[orig(minLen)-1]
size(::zSuffix[]) < ::incs[orig(maxLen)]
size(::zSuffix[]) < ::incs[orig(maxLen)-1]
size(::zSuffix[]) < ::BZ2_rNums[orig(minLen)]
size(::zSuffix[]) < ::BZ2_rNums[orig(minLen)-1]
size(::zSuffix[]) < ::BZ2_rNums[orig(maxLen)]
size(::zSuffix[]) < ::BZ2_rNums[orig(maxLen)-1]
::incs[::blockSize100k] > ::incs[orig(minLen)]
::incs[::blockSize100k] > ::incs[orig(minLen)-1]
::incs[::blockSize100k] >= ::incs[orig(maxLen)-1]
::incs[::blockSize100k] > ::BZ2_rNums[orig(minLen)]
::incs[::blockSize100k] > ::BZ2_rNums[orig(minLen)-1]
::incs[::blockSize100k] > ::BZ2_rNums[orig(maxLen)]
::incs[::blockSize100k] > ::BZ2_rNums[orig(maxLen)-1]
::incs[::blockSize100k-1] > ::incs[orig(minLen)]
::incs[::blockSize100k-1] > ::incs[orig(minLen)-1]
::incs[::blockSize100k-1] > ::BZ2_rNums[orig(minLen)]
::incs[::blockSize100k-1] > ::BZ2_rNums[orig(minLen)-1]
::incs[::blockSize100k-1] > ::BZ2_rNums[orig(maxLen)]
::incs[::blockSize100k-1] > ::BZ2_rNums[orig(maxLen)-1]
::incs[::srcMode] != ::incs[orig(minLen)]
::incs[::srcMode] >= ::incs[orig(minLen)-1]
::incs[::srcMode] < ::incs[orig(maxLen)]
::incs[::srcMode] < ::incs[orig(maxLen)-1]
::incs[::srcMode] < ::BZ2_rNums[orig(minLen)]
::incs[::srcMode] < ::BZ2_rNums[orig(minLen)-1]
::incs[::srcMode] < ::BZ2_rNums[orig(maxLen)]
::incs[::srcMode] < ::BZ2_rNums[orig(maxLen)-1]
::incs[orig(minLen)] > ::incs[orig(minLen)-1]
::incs[orig(minLen)] < ::incs[orig(maxLen)]
::incs[orig(minLen)] <= ::incs[orig(maxLen)-1]
::incs[orig(minLen)] < ::BZ2_rNums[::verbosity]
::incs[orig(minLen)] < ::BZ2_rNums[::numFileNames]
::incs[orig(minLen)] < ::BZ2_rNums[::blockSize100k]
::incs[orig(minLen)] < ::BZ2_rNums[::blockSize100k-1]
::incs[orig(minLen)] < ::BZ2_rNums[::srcMode]
::incs[orig(minLen)] < ::BZ2_rNums[::srcMode-1]
::incs[orig(minLen)] < ::BZ2_rNums[::longestFileName]
::incs[orig(minLen)] < ::BZ2_rNums[::longestFileName-1]
::incs[orig(minLen)] < ::BZ2_rNums[::workFactor]
::incs[orig(minLen)] < ::BZ2_rNums[::workFactor-1]
::incs[orig(minLen)] < ::BZ2_rNums[orig(minLen)]
::incs[orig(minLen)] < ::BZ2_rNums[orig(minLen)-1]
::incs[orig(minLen)] < ::BZ2_rNums[orig(maxLen)]
::incs[orig(minLen)] < ::BZ2_rNums[orig(maxLen)-1]
::incs[orig(minLen)] != ::BZ2_rNums[orig(alphaSize)]
::incs[orig(minLen)] < ::BZ2_rNums[orig(alphaSize)-1]
::incs[orig(minLen)-1] < ::incs[orig(maxLen)]
::incs[orig(minLen)-1] < ::incs[orig(maxLen)-1]
::incs[orig(minLen)-1] < ::BZ2_rNums[::verbosity]
::incs[orig(minLen)-1] < ::BZ2_rNums[::numFileNames]
::incs[orig(minLen)-1] < ::BZ2_rNums[::blockSize100k]
::incs[orig(minLen)-1] < ::BZ2_rNums[::blockSize100k-1]
::incs[orig(minLen)-1] < ::BZ2_rNums[::srcMode]
::incs[orig(minLen)-1] < ::BZ2_rNums[::srcMode-1]
::incs[orig(minLen)-1] < ::BZ2_rNums[::longestFileName]
::incs[orig(minLen)-1] < ::BZ2_rNums[::longestFileName-1]
::incs[orig(minLen)-1] < ::BZ2_rNums[::workFactor]
::incs[orig(minLen)-1] < ::BZ2_rNums[::workFactor-1]
::incs[orig(minLen)-1] < ::BZ2_rNums[orig(minLen)]
::incs[orig(minLen)-1] < ::BZ2_rNums[orig(minLen)-1]
::incs[orig(minLen)-1] < ::BZ2_rNums[orig(maxLen)]
::incs[orig(minLen)-1] < ::BZ2_rNums[orig(maxLen)-1]
::incs[orig(minLen)-1] < ::BZ2_rNums[orig(alphaSize)]
::incs[orig(minLen)-1] < ::BZ2_rNums[orig(alphaSize)-1]
::incs[orig(maxLen)] - 3 * ::incs[orig(maxLen)-1] - 1 == 0
::incs[orig(maxLen)] > ::incs[orig(maxLen)-1]
::incs[orig(maxLen)] != ::BZ2_rNums[::verbosity]
::incs[orig(maxLen)] != ::BZ2_rNums[::numFileNames]
::incs[orig(maxLen)] > ::BZ2_rNums[::blockSize100k]
::incs[orig(maxLen)] != ::BZ2_rNums[::blockSize100k-1]
::incs[orig(maxLen)] != ::BZ2_rNums[::srcMode]
::incs[orig(maxLen)] > ::BZ2_rNums[::srcMode-1]
::incs[orig(maxLen)] != ::BZ2_rNums[::longestFileName]
::incs[orig(maxLen)] > ::BZ2_rNums[::longestFileName-1]
::incs[orig(maxLen)] != ::BZ2_rNums[::workFactor]
::incs[orig(maxLen)] != ::BZ2_rNums[::workFactor-1]
::incs[orig(maxLen)] != ::BZ2_rNums[orig(minLen)]
::incs[orig(maxLen)] != ::BZ2_rNums[orig(minLen)-1]
::incs[orig(maxLen)] != ::BZ2_rNums[orig(maxLen)]
::incs[orig(maxLen)] != ::BZ2_rNums[orig(maxLen)-1]
::incs[orig(maxLen)] > ::BZ2_rNums[orig(alphaSize)]
::incs[orig(maxLen)] != ::BZ2_rNums[orig(alphaSize)-1]
::incs[orig(maxLen)-1] != ::BZ2_rNums[::verbosity]
::incs[orig(maxLen)-1] != ::BZ2_rNums[::numFileNames]
::incs[orig(maxLen)-1] != ::BZ2_rNums[::blockSize100k]
::incs[orig(maxLen)-1] != ::BZ2_rNums[::blockSize100k-1]
::incs[orig(maxLen)-1] != ::BZ2_rNums[::srcMode]
::incs[orig(maxLen)-1] != ::BZ2_rNums[::srcMode-1]
::incs[orig(maxLen)-1] != ::BZ2_rNums[::longestFileName]
::incs[orig(maxLen)-1] != ::BZ2_rNums[::longestFileName-1]
::incs[orig(maxLen)-1] != ::BZ2_rNums[::workFactor]
::incs[orig(maxLen)-1] != ::BZ2_rNums[::workFactor-1]
::incs[orig(maxLen)-1] != ::BZ2_rNums[orig(minLen)]
::incs[orig(maxLen)-1] != ::BZ2_rNums[orig(minLen)-1]
::incs[orig(maxLen)-1] != ::BZ2_rNums[orig(maxLen)]
::incs[orig(maxLen)-1] != ::BZ2_rNums[orig(maxLen)-1]
::incs[orig(maxLen)-1] > ::BZ2_rNums[orig(alphaSize)]
::incs[orig(maxLen)-1] != ::BZ2_rNums[orig(alphaSize)-1]
::BZ2_rNums[::verbosity] < ::BZ2_rNums[orig(minLen)]
::BZ2_rNums[::verbosity] >= ::BZ2_rNums[orig(minLen)-1]
::BZ2_rNums[::verbosity] != ::BZ2_rNums[orig(maxLen)]
::BZ2_rNums[::verbosity] != ::BZ2_rNums[orig(maxLen)-1]
::BZ2_rNums[::numFileNames] <= ::BZ2_rNums[orig(minLen)]
::BZ2_rNums[::numFileNames] > ::BZ2_rNums[orig(minLen)-1]
::BZ2_rNums[::numFileNames] != ::BZ2_rNums[orig(maxLen)]
::BZ2_rNums[::numFileNames] != ::BZ2_rNums[orig(maxLen)-1]
::BZ2_rNums[::blockSize100k] < ::BZ2_rNums[orig(minLen)]
::BZ2_rNums[::blockSize100k] < ::BZ2_rNums[orig(minLen)-1]
::BZ2_rNums[::blockSize100k] <= ::BZ2_rNums[orig(maxLen)]
::BZ2_rNums[::blockSize100k-1] < ::BZ2_rNums[orig(minLen)]
::BZ2_rNums[::blockSize100k-1] != ::BZ2_rNums[orig(minLen)-1]
::BZ2_rNums[::srcMode] < ::BZ2_rNums[orig(minLen)]
::BZ2_rNums[::srcMode] <= ::BZ2_rNums[orig(minLen)-1]
::BZ2_rNums[::srcMode] != ::BZ2_rNums[orig(maxLen)]
::BZ2_rNums[::srcMode] != ::BZ2_rNums[orig(maxLen)-1]
::BZ2_rNums[::srcMode-1] < ::BZ2_rNums[orig(minLen)]
::BZ2_rNums[::srcMode-1] < ::BZ2_rNums[orig(minLen)-1]
::BZ2_rNums[::srcMode-1] < ::BZ2_rNums[orig(maxLen)]
::BZ2_rNums[::srcMode-1] < ::BZ2_rNums[orig(maxLen)-1]
::BZ2_rNums[::longestFileName] != ::BZ2_rNums[orig(minLen)]
::BZ2_rNums[::longestFileName] > ::BZ2_rNums[orig(minLen)-1]
::BZ2_rNums[::longestFileName] != ::BZ2_rNums[orig(maxLen)]
::BZ2_rNums[::longestFileName] != ::BZ2_rNums[orig(maxLen)-1]
::BZ2_rNums[::longestFileName-1] < ::BZ2_rNums[orig(minLen)]
::BZ2_rNums[::longestFileName-1] < ::BZ2_rNums[orig(minLen)-1]
::BZ2_rNums[::longestFileName-1] < ::BZ2_rNums[orig(maxLen)]
::BZ2_rNums[::longestFileName-1] < ::BZ2_rNums[orig(maxLen)-1]
::BZ2_rNums[::workFactor] < ::BZ2_rNums[orig(minLen)]
::BZ2_rNums[::workFactor] < ::BZ2_rNums[orig(minLen)-1]
::BZ2_rNums[::workFactor] != ::BZ2_rNums[orig(maxLen)]
::BZ2_rNums[::workFactor] != ::BZ2_rNums[orig(maxLen)-1]
::BZ2_rNums[::workFactor-1] < ::BZ2_rNums[orig(minLen)]
::BZ2_rNums[::workFactor-1] < ::BZ2_rNums[orig(minLen)-1]
::BZ2_rNums[::workFactor-1] != ::BZ2_rNums[orig(maxLen)]
::BZ2_rNums[::workFactor-1] != ::BZ2_rNums[orig(maxLen)-1]
::BZ2_rNums[orig(minLen)] > ::BZ2_rNums[orig(minLen)-1]
::BZ2_rNums[orig(minLen)] != ::BZ2_rNums[orig(maxLen)]
::BZ2_rNums[orig(minLen)] >= ::BZ2_rNums[orig(maxLen)-1]
::BZ2_rNums[orig(minLen)] > ::BZ2_rNums[orig(alphaSize)]
::BZ2_rNums[orig(minLen)] > ::BZ2_rNums[orig(alphaSize)-1]
::BZ2_rNums[orig(minLen)-1] != ::BZ2_rNums[orig(maxLen)]
::BZ2_rNums[orig(minLen)-1] != ::BZ2_rNums[orig(maxLen)-1]
::BZ2_rNums[orig(minLen)-1] > ::BZ2_rNums[orig(alphaSize)]
::BZ2_rNums[orig(minLen)-1] != ::BZ2_rNums[orig(alphaSize)-1]
::BZ2_rNums[orig(maxLen)] != ::BZ2_rNums[orig(maxLen)-1]
::BZ2_rNums[orig(maxLen)] > ::BZ2_rNums[orig(alphaSize)]
::BZ2_rNums[orig(maxLen)] != ::BZ2_rNums[orig(alphaSize)-1]
::BZ2_rNums[orig(maxLen)-1] > ::BZ2_rNums[orig(alphaSize)]
::BZ2_rNums[orig(maxLen)-1] != ::BZ2_rNums[orig(alphaSize)-1]
::BZ2_crc32Table[::verbosity] < ::BZ2_crc32Table[orig(minLen)]
::BZ2_crc32Table[::verbosity] <= ::BZ2_crc32Table[orig(minLen)-1]
::BZ2_crc32Table[::verbosity] < ::BZ2_crc32Table[orig(maxLen)]
::BZ2_crc32Table[::verbosity] < ::BZ2_crc32Table[orig(maxLen)-1]
::BZ2_crc32Table[::numFileNames] <= ::BZ2_crc32Table[orig(minLen)]
::BZ2_crc32Table[::numFileNames] != ::BZ2_crc32Table[orig(minLen)-1]
::BZ2_crc32Table[::numFileNames] < ::BZ2_crc32Table[orig(maxLen)]
::BZ2_crc32Table[::numFileNames] < ::BZ2_crc32Table[orig(maxLen)-1]
::BZ2_crc32Table[::blockSize100k] > ::BZ2_crc32Table[orig(minLen)]
::BZ2_crc32Table[::blockSize100k] > ::BZ2_crc32Table[orig(minLen)-1]
::BZ2_crc32Table[::blockSize100k-1] > ::BZ2_crc32Table[orig(minLen)]
::BZ2_crc32Table[::blockSize100k-1] > ::BZ2_crc32Table[orig(minLen)-1]
::BZ2_crc32Table[::blockSize100k-1] >= ::BZ2_crc32Table[orig(maxLen)-1]
::BZ2_crc32Table[::srcMode] != ::BZ2_crc32Table[orig(minLen)]
::BZ2_crc32Table[::srcMode] >= ::BZ2_crc32Table[orig(minLen)-1]
::BZ2_crc32Table[::srcMode] < ::BZ2_crc32Table[orig(maxLen)]
::BZ2_crc32Table[::srcMode] < ::BZ2_crc32Table[orig(maxLen)-1]
::BZ2_crc32Table[::srcMode-1] != ::BZ2_crc32Table[orig(minLen)]
::BZ2_crc32Table[::srcMode-1] != ::BZ2_crc32Table[orig(minLen)-1]
::BZ2_crc32Table[::srcMode-1] < ::BZ2_crc32Table[orig(maxLen)]
::BZ2_crc32Table[::srcMode-1] < ::BZ2_crc32Table[orig(maxLen)-1]
::BZ2_crc32Table[::longestFileName] > ::BZ2_crc32Table[orig(minLen)]
::BZ2_crc32Table[::longestFileName] > ::BZ2_crc32Table[orig(minLen)-1]
::BZ2_crc32Table[::longestFileName] > ::BZ2_crc32Table[orig(maxLen)]
::BZ2_crc32Table[::longestFileName] > ::BZ2_crc32Table[orig(maxLen)-1]
::BZ2_crc32Table[::longestFileName-1] > ::BZ2_crc32Table[orig(minLen)]
::BZ2_crc32Table[::longestFileName-1] > ::BZ2_crc32Table[orig(minLen)-1]
::BZ2_crc32Table[::longestFileName-1] > ::BZ2_crc32Table[orig(maxLen)]
::BZ2_crc32Table[::longestFileName-1] > ::BZ2_crc32Table[orig(maxLen)-1]
::BZ2_crc32Table[::workFactor] > ::BZ2_crc32Table[orig(minLen)]
::BZ2_crc32Table[::workFactor] > ::BZ2_crc32Table[orig(minLen)-1]
::BZ2_crc32Table[::workFactor] > ::BZ2_crc32Table[orig(maxLen)]
::BZ2_crc32Table[::workFactor] > ::BZ2_crc32Table[orig(maxLen)-1]
::BZ2_crc32Table[::workFactor-1] > ::BZ2_crc32Table[orig(minLen)]
::BZ2_crc32Table[::workFactor-1] > ::BZ2_crc32Table[orig(minLen)-1]
::BZ2_crc32Table[::workFactor-1] > ::BZ2_crc32Table[orig(maxLen)]
::BZ2_crc32Table[::workFactor-1] > ::BZ2_crc32Table[orig(maxLen)-1]
::BZ2_crc32Table[orig(minLen)] > ::BZ2_crc32Table[orig(minLen)-1]
::BZ2_crc32Table[orig(minLen)] < ::BZ2_crc32Table[orig(maxLen)]
::BZ2_crc32Table[orig(minLen)] <= ::BZ2_crc32Table[orig(maxLen)-1]
::BZ2_crc32Table[orig(minLen)] < ::BZ2_crc32Table[orig(alphaSize)]
::BZ2_crc32Table[orig(minLen)] < ::BZ2_crc32Table[orig(alphaSize)-1]
::BZ2_crc32Table[orig(minLen)-1] < ::BZ2_crc32Table[orig(maxLen)]
::BZ2_crc32Table[orig(minLen)-1] < ::BZ2_crc32Table[orig(maxLen)-1]
::BZ2_crc32Table[orig(minLen)-1] < ::BZ2_crc32Table[orig(alphaSize)]
::BZ2_crc32Table[orig(minLen)-1] < ::BZ2_crc32Table[orig(alphaSize)-1]
::BZ2_crc32Table[orig(maxLen)] != ::BZ2_crc32Table[orig(maxLen)-1]
::BZ2_crc32Table[orig(maxLen)] < ::BZ2_crc32Table[orig(alphaSize)]
::BZ2_crc32Table[orig(maxLen)] < ::BZ2_crc32Table[orig(alphaSize)-1]
::BZ2_crc32Table[orig(maxLen)-1] < ::BZ2_crc32Table[orig(alphaSize)]
::BZ2_crc32Table[orig(maxLen)-1] < ::BZ2_crc32Table[orig(alphaSize)-1]
===========================================================================
..BZ2_hbMakeCodeLengths():::ENTER
::fileMetaInfo.st_uid == ::fileMetaInfo.st_gid
::fileMetaInfo.__pad0 == ::verbosity
::fileMetaInfo.st_mtim.tv_sec == ::fileMetaInfo.st_ctim.tv_sec
::fileMetaInfo.st_mtim.tv_nsec == ::fileMetaInfo.st_ctim.tv_nsec
::verbosity == ::exitValue
::verbosity == ::fileMetaInfo.__glibc_reserved[::fileMetaInfo.__pad0]
::verbosity == ::fileMetaInfo.__glibc_reserved[::verbosity]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::exitValue]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::srcMode-1]
::keepInputFiles == ::deleteOutputOnInterrupt
::keepInputFiles == ::noisy
::smallMode == ::forceOverwrite
::smallMode == ::testFailsExist
::smallMode == ::unzFailsExist
::numFileNames == ::numFilesProcessed
::numFileNames == ::opMode
::numFileNames == ::incs[::fileMetaInfo.__pad0]
::numFileNames == ::incs[::verbosity]
::numFileNames == ::incs[::numFileNames-1]
::numFileNames == ::incs[::numFilesProcessed-1]
::numFileNames == ::incs[::exitValue]
::numFileNames == ::incs[::opMode-1]
::srcMode == size(::fileMetaInfo.__glibc_reserved[])
::srcMode == size(::zSuffix[])-1
::srcMode == size(::unzSuffix[])-1
::longestFileName == maxLen
size(::incs[])-1 == ::incs[::srcMode-1]
size(::zSuffix[]) == size(::unzSuffix[])
size(::zSuffix[]) == ::incs[::numFileNames]
size(::zSuffix[]) == ::incs[::numFilesProcessed]
size(::zSuffix[]) == ::incs[::opMode]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFileNames-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFilesProcessed-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::opMode-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFileNames-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFilesProcessed-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::opMode-1]
::incs has only one value
::incs[] == [1, 4, 13, 40, 121, 364, 1093, 3280, 9841, 29524, 88573, 265720, 797161, 2391484]
::incs[] elements >= 1
::incs[] sorted by <
::bzerrorstrings has only one value
::bzerrorstrings[] == [OK, SEQUENCE_ERROR, PARAM_ERROR, MEM_ERROR, DATA_ERROR, DATA_ERROR_MAGIC, IO_ERROR, UNEXPECTED_EOF, OUTBUFF_FULL, CONFIG_ERROR, ???, ???, ???, ???, ???, ???]
::fileMetaInfo has only one value
::fileMetaInfo != null
::fileMetaInfo.st_dev == 2049
::fileMetaInfo.st_ino == 936492
::fileMetaInfo.st_nlink == 1
::fileMetaInfo.st_mode == 33277
::fileMetaInfo.st_uid == 1000
::fileMetaInfo.st_rdev == 0
::fileMetaInfo.st_size == 5738700
::fileMetaInfo.st_blksize == 4096
::fileMetaInfo.st_blocks == 11216
::fileMetaInfo.st_atim has only one value
::fileMetaInfo.st_atim != null
::fileMetaInfo.st_atim.tv_sec == 1496096467
::fileMetaInfo.st_atim.tv_nsec == 709424920
::fileMetaInfo.st_mtim has only one value
::fileMetaInfo.st_mtim != null
::fileMetaInfo.st_mtim.tv_sec == 1483563943
::fileMetaInfo.st_mtim.tv_nsec == 421335644
::fileMetaInfo.st_ctim has only one value
::fileMetaInfo.st_ctim != null
::fileMetaInfo.__glibc_reserved has only one value
::fileMetaInfo.__glibc_reserved[] == [0, 0, 0]
::fileMetaInfo.__glibc_reserved[] elements == 0
::BZ2_rNums has only one value
::BZ2_rNums[] == [619, 720, 127, 481, 931, 816, 813, 233, 566, 247, 985, 724, 205, 454, 863, 491, 741, 242, 949, 214, 733, 859, 335, 708, 621, 574, 73, 654, 730, 472, 419, 436, 278, 496, 867, 210, 399, 680, 480, 51, 878, 465, 811, 169, 869, 675, 611, 697, 867, 561, 862, 687, 507, 283, 482, 129, 807, 591, 733, 623, 150, 238, 59, 379, 684, 877, 625, 169, 643, 105, 170, 607, 520, 932, 727, 476, 693, 425, 174, 647, 73, 122, 335, 530, 442, 853, 695, 249, 445, 515, 909, 545, 703, 919, 874, 474, 882, 500, 594, 612, 641, 801, 220, 162, 819, 984, 589, 513, 495, 799, 161, 604, 958, 533, 221, 400, 386, 867, 600, 782, 382, 596, 414, 171, 516, 375, 682, 485, 911, 276, 98, 553, 163, 354, 666, 933, 424, 341, 533, 870, 227, 730, 475, 186, 263, 647, 537, 686, 600, 224, 469, 68, 770, 919, 190, 373, 294, 822, 808, 206, 184, 943, 795, 384, 383, 461, 404, 758, 839, 887, 715, 67, 618, 276, 204, 918, 873, 777, 604, 560, 951, 160, 578, 722, 79, 804, 96, 409, 713, 940, 652, 934, 970, 447, 318, 353, 859, 672, 112, 785, 645, 863, 803, 350, 139, 93, 354, 99, 820, 908, 609, 772, 154, 274, 580, 184, 79, 626, 630, 742, 653, 282, 762, 623, 680, 81, 927, 626, 789, 125, 411, 521, 938, 300, 821, 78, 343, 175, 128, 250, 170, 774, 972, 275, 999, 639, 495, 78, 352, 126, 857, 956, 358, 619, 580, 124, 737, 594, 701, 612, 669, 112, 134, 694, 363, 992, 809, 743, 168, 974, 944, 375, 748, 52, 600, 747, 642, 182, 862, 81, 344, 805, 988, 739, 511, 655, 814, 334, 249, 515, 897, 955, 664, 981, 649, 113, 974, 459, 893, 228, 433, 837, 553, 268, 926, 240, 102, 654, 459, 51, 686, 754, 806, 760, 493, 403, 415, 394, 687, 700, 946, 670, 656, 610, 738, 392, 760, 799, 887, 653, 978, 321, 576, 617, 626, 502, 894, 679, 243, 440, 680, 879, 194, 572, 640, 724, 926, 56, 204, 700, 707, 151, 457, 449, 797, 195, 791, 558, 945, 679, 297, 59, 87, 824, 713, 663, 412, 693, 342, 606, 134, 108, 571, 364, 631, 212, 174, 643, 304, 329, 343, 97, 430, 751, 497, 314, 983, 374, 822, 928, 140, 206, 73, 263, 980, 736, 876, 478, 430, 305, 170, 514, 364, 692, 829, 82, 855, 953, 676, 246, 369, 970, 294, 750, 807, 827, 150, 790, 288, 923, 804, 378, 215, 828, 592, 281, 565, 555, 710, 82, 896, 831, 547, 261, 524, 462, 293, 465, 502, 56, 661, 821, 976, 991, 658, 869, 905, 758, 745, 193, 768, 550, 608, 933, 378, 286, 215, 979, 792, 961, 61, 688, 793, 644, 986, 403, 106, 366, 905, 644, 372, 567, 466, 434, 645, 210, 389, 550, 919, 135, 780, 773, 635, 389, 707, 100, 626, 958, 165, 504, 920, 176, 193, 713, 857, 265, 203, 50, 668, 108, 645, 990, 626, 197, 510, 357, 358, 850, 858, 364, 936, 638]
::BZ2_crc32Table has only one value
::BZ2_crc32Table[] == [0, 79764919, 159529838, 222504665, 319059676, 398814059, 445009330, 507990021, 638119352, 583659535, 797628118, 726387553, 890018660, 835552979, 1015980042, 944750013, 1276238704, 1221641927, 1167319070, 1095957929, 1595256236, 1540665371, 1452775106, 1381403509, 1780037320, 1859660671, 1671105958, 1733955601, 2031960084, 2111593891, 1889500026, 1952343757, 2552477408, 2632100695, 2443283854, 2506133561, 2334638140, 2414271883, 2191915858, 2254759653, 3190512472, 3135915759, 3081330742, 3009969537, 2905550212, 2850959411, 2762807018, 2691435357, 3560074640, 3505614887, 3719321342, 3648080713, 3342211916, 3287746299, 3467911202, 3396681109, 4063920168, 4143685023, 4223187782, 4286162673, 3779000052, 3858754371, 3904687514, 3967668269, 881225847, 809987520, 1023691545, 969234094, 662832811, 591600412, 771767749, 717299826, 311336399, 374308984, 453813921, 533576470, 25881363, 88864420, 134795389, 214552010, 2023205639, 2086057648, 1897238633, 1976864222, 1804852699, 1867694188, 1645340341, 1724971778, 1587496639, 1516133128, 1461550545, 1406951526, 1302016099, 1230646740, 1142491917, 1087903418, 2896545431, 2825181984, 2770861561, 2716262478, 3215044683, 3143675388, 3055782693, 3001194130, 2326604591, 2389456536, 2200899649, 2280525302, 2578013683, 2640855108, 2418763421, 2498394922, 3769900519, 3832873040, 3912640137, 3992402750, 4088425275, 4151408268, 4197601365, 4277358050, 3334271071, 3263032808, 3476998961, 3422541446, 3585640067, 3514407732, 3694837229, 3640369242, 1762451694, 1842216281, 1619975040, 1682949687, 2047383090, 2127137669, 1938468188, 2001449195, 1325665622, 1271206113, 1183200824, 1111960463, 1543535498, 1489069629, 1434599652, 1363369299, 622672798, 568075817, 748617968, 677256519, 907627842, 853037301, 1067152940, 995781531, 51762726, 131386257, 177728840, 240578815, 269590778, 349224269, 429104020, 491947555, 4046411278, 4126034873, 4172115296, 4234965207, 3794477266, 3874110821, 3953728444, 4016571915, 3609705398, 3555108353, 3735388376, 3664026991, 3290680682, 3236090077, 3449943556, 3378572211, 3174993278, 3120533705, 3032266256, 2961025959, 2923101090, 2868635157, 2813903052, 2742672763, 2604032198, 2683796849, 2461293480, 2524268063, 2284983834, 2364738477, 2175806836, 2238787779, 1569362073, 1498123566, 1409854455, 1355396672, 1317987909, 1246755826, 1192025387, 1137557660, 2072149281, 2135122070, 1912620623, 1992383480, 1753615357, 1816598090, 1627664531, 1707420964, 295390185, 358241886, 404320391, 483945776, 43990325, 106832002, 186451547, 266083308, 932423249, 861060070, 1041341759, 986742920, 613929101, 542559546, 756411363, 701822548, 3316196985, 3244833742, 3425377559, 3370778784, 3601682597, 3530312978, 3744426955, 3689838204, 3819031489, 3881883254, 3928223919, 4007849240, 4037393693, 4100235434, 4180117107, 4259748804, 2310601993, 2373574846, 2151335527, 2231098320, 2596047829, 2659030626, 2470359227, 2550115596, 2947551409, 2876312838, 2788305887, 2733848168, 3165939309, 3094707162, 3040238851, 2985771188]
::BZ2_crc32Table[] elements >= 0
::mammamia == 3216
::verbosity == 0
::keepInputFiles == 1
::smallMode == 0
::numFileNames == 1
::blockSize100k == 9
::longestFileName == 20
::inName == "../inputs/in_big.txt"
::outName == "../inputs/in_big.txt.bz2"
::tmpName == ""
::progName == "zip-injected"
::progNameReally == "./zip-injected"
::outputHandleJustInCase has only one value
::outputHandleJustInCase != null
::workFactor == 30
::zSuffix has only one value
::zSuffix[] == [.bz2, .bz, .tbz2, .tbz]
::unzSuffix has only one value
::unzSuffix[] == [, , .tar, .tar]
::unzSuffix[] elements one of { "", ".tar" }
len != null
freq != null
alphaSize == 26
size(::incs[]) == 14
size(::bzerrorstrings[]) == 16
size(::BZ2_rNums[]) == 512
size(::BZ2_crc32Table[]) == 256
size(::zSuffix[]) == 4
::incs[::blockSize100k] == 29524
::incs[::blockSize100k-1] == 9841
::incs[::srcMode] == 40
::BZ2_rNums[::verbosity] == 619
::BZ2_rNums[::numFileNames] == 720
::BZ2_rNums[::blockSize100k] == 247
::BZ2_rNums[::blockSize100k-1] == 566
::BZ2_rNums[::srcMode] == 481
::BZ2_rNums[::srcMode-1] == 127
::BZ2_rNums[::longestFileName] == 733
::BZ2_rNums[::longestFileName-1] == 214
::BZ2_rNums[::workFactor] == 419
::BZ2_rNums[::workFactor-1] == 472
::BZ2_rNums[alphaSize] == 73
::BZ2_rNums[alphaSize-1] == 574
::BZ2_crc32Table[::verbosity] == 0
::BZ2_crc32Table[::numFileNames] == 79764919
::BZ2_crc32Table[::blockSize100k] == 583659535
::BZ2_crc32Table[::blockSize100k-1] == 638119352
::BZ2_crc32Table[::srcMode] == 222504665
::BZ2_crc32Table[::srcMode-1] == 159529838
::BZ2_crc32Table[::longestFileName] == 1595256236
::BZ2_crc32Table[::longestFileName-1] == 1095957929
::BZ2_crc32Table[::workFactor] == 1889500026
::BZ2_crc32Table[::workFactor-1] == 2111593891
::BZ2_crc32Table[alphaSize] == 1671105958
::BZ2_crc32Table[alphaSize-1] == 1859660671
::incs[] elements < ::fileMetaInfo.st_size
::incs[] elements < ::fileMetaInfo.st_atim.tv_sec
::incs[] elements < ::fileMetaInfo.st_atim.tv_nsec
::incs[] elements < ::fileMetaInfo.st_mtim.tv_sec
::incs[] elements < ::fileMetaInfo.st_mtim.tv_nsec
::incs[] elements > ::verbosity
::incs[] elements >= ::numFileNames
::BZ2_rNums[] elements < ::fileMetaInfo.st_size
::BZ2_rNums[] elements < ::fileMetaInfo.st_blksize
::BZ2_rNums[] elements < ::fileMetaInfo.st_blocks
::BZ2_rNums[] elements < ::fileMetaInfo.st_atim.tv_sec
::BZ2_rNums[] elements < ::fileMetaInfo.st_atim.tv_nsec
::BZ2_rNums[] elements < ::fileMetaInfo.st_mtim.tv_sec
::BZ2_rNums[] elements < ::fileMetaInfo.st_mtim.tv_nsec
::fileMetaInfo.__glibc_reserved[] elements == ::verbosity
::BZ2_rNums[] elements < ::mammamia
::BZ2_rNums[] elements > ::verbosity
::BZ2_rNums[] elements > ::numFileNames
::BZ2_rNums[] elements > ::blockSize100k
::BZ2_rNums[] elements > ::longestFileName
::BZ2_rNums[] elements > ::workFactor
::BZ2_rNums[] elements > alphaSize
::BZ2_rNums[] elements > size(::incs[])
::BZ2_rNums[] elements > size(::bzerrorstrings[])
size(::BZ2_rNums[])-1 in ::BZ2_rNums[]
::BZ2_rNums[] elements > size(::zSuffix[])
::BZ2_rNums[] elements < ::incs[::blockSize100k]
::BZ2_rNums[] elements < ::incs[::blockSize100k-1]
::BZ2_rNums[] elements > ::incs[::srcMode]
::inName < ::outName
::inName > ::tmpName
::inName < ::progName
::inName < ::progNameReally
::outName > ::tmpName
::outName < ::progName
::outName < ::progNameReally
::tmpName < ::progName
::tmpName < ::progNameReally
::tmpName in ::unzSuffix[]
::progName > ::progNameReally
===========================================================================
..BZ2_hbMakeCodeLengths():::EXIT
::incs == orig(::incs)
::incs[] == orig(::incs[])
::bzerrorstrings == orig(::bzerrorstrings)
::fileMetaInfo == orig(::fileMetaInfo)
::fileMetaInfo.st_dev == orig(::fileMetaInfo.st_dev)
::fileMetaInfo.st_ino == orig(::fileMetaInfo.st_ino)
::fileMetaInfo.st_nlink == orig(::fileMetaInfo.st_nlink)
::fileMetaInfo.st_mode == orig(::fileMetaInfo.st_mode)
::fileMetaInfo.st_uid == ::fileMetaInfo.st_gid
::fileMetaInfo.st_uid == orig(::fileMetaInfo.st_uid)
::fileMetaInfo.st_uid == orig(::fileMetaInfo.st_gid)
::fileMetaInfo.__pad0 == ::verbosity
::fileMetaInfo.st_rdev == orig(::fileMetaInfo.st_rdev)
::fileMetaInfo.st_size == orig(::fileMetaInfo.st_size)
::fileMetaInfo.st_blksize == orig(::fileMetaInfo.st_blksize)
::fileMetaInfo.st_blocks == orig(::fileMetaInfo.st_blocks)
::fileMetaInfo.st_atim == orig(::fileMetaInfo.st_atim)
::fileMetaInfo.st_atim.tv_sec == orig(::fileMetaInfo.st_atim.tv_sec)
::fileMetaInfo.st_atim.tv_nsec == orig(::fileMetaInfo.st_atim.tv_nsec)
::fileMetaInfo.st_mtim == orig(::fileMetaInfo.st_mtim)
::fileMetaInfo.st_mtim.tv_sec == ::fileMetaInfo.st_ctim.tv_sec
::fileMetaInfo.st_mtim.tv_sec == orig(::fileMetaInfo.st_mtim.tv_sec)
::fileMetaInfo.st_mtim.tv_sec == orig(::fileMetaInfo.st_ctim.tv_sec)
::fileMetaInfo.st_mtim.tv_nsec == ::fileMetaInfo.st_ctim.tv_nsec
::fileMetaInfo.st_mtim.tv_nsec == orig(::fileMetaInfo.st_mtim.tv_nsec)
::fileMetaInfo.st_mtim.tv_nsec == orig(::fileMetaInfo.st_ctim.tv_nsec)
::fileMetaInfo.st_ctim == orig(::fileMetaInfo.st_ctim)
::fileMetaInfo.__glibc_reserved == orig(::fileMetaInfo.__glibc_reserved)
::fileMetaInfo.__glibc_reserved[] == orig(::fileMetaInfo.__glibc_reserved[])
::BZ2_rNums == orig(::BZ2_rNums)
::BZ2_rNums[] == orig(::BZ2_rNums[])
::BZ2_crc32Table == orig(::BZ2_crc32Table)
::BZ2_crc32Table[] == orig(::BZ2_crc32Table[])
::mammamia == orig(::mammamia)
::verbosity == ::exitValue
::verbosity == orig(::fileMetaInfo.__pad0)
::verbosity == orig(::verbosity)
::verbosity == orig(::exitValue)
::verbosity == ::fileMetaInfo.__glibc_reserved[::fileMetaInfo.__pad0]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::fileMetaInfo.__pad0)])
::verbosity == ::fileMetaInfo.__glibc_reserved[::verbosity]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::exitValue]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::srcMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::fileMetaInfo.__pad0)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::verbosity)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFileNames)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFileNames)-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFilesProcessed)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFilesProcessed)-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::exitValue)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::opMode)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::opMode)-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::srcMode)-1]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::verbosity)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFileNames)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFileNames)-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFilesProcessed)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFilesProcessed)-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::exitValue)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::opMode)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::opMode)-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::srcMode)-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::fileMetaInfo.__pad0])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::verbosity])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFileNames])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFileNames-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFilesProcessed])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFilesProcessed-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::exitValue])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::opMode])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::opMode-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::srcMode-1])
::keepInputFiles == ::deleteOutputOnInterrupt
::keepInputFiles == ::noisy
::keepInputFiles == orig(::keepInputFiles)
::keepInputFiles == orig(::deleteOutputOnInterrupt)
::keepInputFiles == orig(::noisy)
::smallMode == ::forceOverwrite
::smallMode == ::testFailsExist
::smallMode == ::unzFailsExist
::smallMode == orig(::smallMode)
::smallMode == orig(::forceOverwrite)
::smallMode == orig(::testFailsExist)
::smallMode == orig(::unzFailsExist)
::numFileNames == ::numFilesProcessed
::numFileNames == ::opMode
::numFileNames == orig(::numFileNames)
::numFileNames == orig(::numFilesProcessed)
::numFileNames == orig(::opMode)
::numFileNames == ::incs[::fileMetaInfo.__pad0]
::numFileNames == ::incs[::verbosity]
::numFileNames == ::incs[::numFileNames-1]
::numFileNames == ::incs[::numFilesProcessed-1]
::numFileNames == ::incs[::exitValue]
::numFileNames == ::incs[::opMode-1]
::numFileNames == ::incs[orig(::fileMetaInfo.__pad0)]
::numFileNames == ::incs[orig(::verbosity)]
::numFileNames == ::incs[orig(::numFileNames)-1]
::numFileNames == ::incs[orig(::numFilesProcessed)-1]
::numFileNames == ::incs[orig(::exitValue)]
::numFileNames == ::incs[orig(::opMode)-1]
::numFileNames == orig(::incs[post(::fileMetaInfo.__pad0)])
::numFileNames == orig(::incs[post(::verbosity)])
::numFileNames == orig(::incs[post(::numFileNames)-1])
::numFileNames == orig(::incs[post(::numFilesProcessed)-1])
::numFileNames == orig(::incs[post(::exitValue)])
::numFileNames == orig(::incs[post(::opMode)-1])
::numFileNames == orig(::incs[::fileMetaInfo.__pad0])
::numFileNames == orig(::incs[::verbosity])
::numFileNames == orig(::incs[::numFileNames-1])
::numFileNames == orig(::incs[::numFilesProcessed-1])
::numFileNames == orig(::incs[::exitValue])
::numFileNames == orig(::incs[::opMode-1])
::blockSize100k == orig(::blockSize100k)
::srcMode == orig(::srcMode)
::srcMode == size(::fileMetaInfo.__glibc_reserved[])
::srcMode == size(::zSuffix[])-1
::srcMode == size(::unzSuffix[])-1
::srcMode == orig(size(::fileMetaInfo.__glibc_reserved[]))
::srcMode == orig(size(::zSuffix[]))-1
::srcMode == orig(size(::unzSuffix[]))-1
::longestFileName == orig(::longestFileName)
::longestFileName == orig(maxLen)
::outputHandleJustInCase == orig(::outputHandleJustInCase)
::workFactor == orig(::workFactor)
::zSuffix == orig(::zSuffix)
::unzSuffix == orig(::unzSuffix)
size(::incs[])-1 == ::incs[::srcMode-1]
size(::incs[])-1 == ::incs[orig(::srcMode)-1]
size(::incs[])-1 == orig(::incs[post(::srcMode)-1])
size(::incs[])-1 == orig(::incs[::srcMode-1])
size(::zSuffix[]) == size(::unzSuffix[])
size(::zSuffix[]) == orig(size(::unzSuffix[]))
size(::zSuffix[]) == ::incs[::numFileNames]
size(::zSuffix[]) == ::incs[::numFilesProcessed]
size(::zSuffix[]) == ::incs[::opMode]
size(::zSuffix[]) == ::incs[orig(::numFileNames)]
size(::zSuffix[]) == ::incs[orig(::numFilesProcessed)]
size(::zSuffix[]) == ::incs[orig(::opMode)]
size(::zSuffix[]) == orig(::incs[post(::numFileNames)])
size(::zSuffix[]) == orig(::incs[post(::numFilesProcessed)])
size(::zSuffix[]) == orig(::incs[post(::opMode)])
size(::zSuffix[]) == orig(::incs[::numFileNames])
size(::zSuffix[]) == orig(::incs[::numFilesProcessed])
size(::zSuffix[]) == orig(::incs[::opMode])
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFileNames-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFilesProcessed-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::opMode-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[orig(::numFileNames)-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[orig(::numFilesProcessed)-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[orig(::opMode)-1]
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[post(::numFileNames)-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[post(::numFilesProcessed)-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[post(::opMode)-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[::numFileNames-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[::numFilesProcessed-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[::opMode-1])
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFileNames-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFilesProcessed-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::opMode-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[orig(::numFileNames)-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[orig(::numFilesProcessed)-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[orig(::opMode)-1]
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[post(::numFileNames)-1])
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[post(::numFilesProcessed)-1])
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[post(::opMode)-1])
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[::numFileNames-1])
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[::numFilesProcessed-1])
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[::opMode-1])
::incs has only one value
::incs[] == [1, 4, 13, 40, 121, 364, 1093, 3280, 9841, 29524, 88573, 265720, 797161, 2391484]
::incs[] elements >= 1
::incs[] sorted by <
::bzerrorstrings has only one value
::bzerrorstrings[] == [OK, SEQUENCE_ERROR, PARAM_ERROR, MEM_ERROR, DATA_ERROR, DATA_ERROR_MAGIC, IO_ERROR, UNEXPECTED_EOF, OUTBUFF_FULL, CONFIG_ERROR, ???, ???, ???, ???, ???, ???]
::fileMetaInfo has only one value
::fileMetaInfo != null
::fileMetaInfo.st_dev == 2049
::fileMetaInfo.st_ino == 936492
::fileMetaInfo.st_nlink == 1
::fileMetaInfo.st_mode == 33277
::fileMetaInfo.st_uid == 1000
::fileMetaInfo.st_rdev == 0
::fileMetaInfo.st_size == 5738700
::fileMetaInfo.st_blksize == 4096
::fileMetaInfo.st_blocks == 11216
::fileMetaInfo.st_atim has only one value
::fileMetaInfo.st_atim != null
::fileMetaInfo.st_atim.tv_sec == 1496096467
::fileMetaInfo.st_atim.tv_nsec == 709424920
::fileMetaInfo.st_mtim has only one value
::fileMetaInfo.st_mtim != null
::fileMetaInfo.st_mtim.tv_sec == 1483563943
::fileMetaInfo.st_mtim.tv_nsec == 421335644
::fileMetaInfo.st_ctim has only one value
::fileMetaInfo.st_ctim != null
::fileMetaInfo.__glibc_reserved has only one value
::fileMetaInfo.__glibc_reserved[] == [0, 0, 0]
::fileMetaInfo.__glibc_reserved[] elements == 0
::BZ2_rNums has only one value
::BZ2_rNums[] == [619, 720, 127, 481, 931, 816, 813, 233, 566, 247, 985, 724, 205, 454, 863, 491, 741, 242, 949, 214, 733, 859, 335, 708, 621, 574, 73, 654, 730, 472, 419, 436, 278, 496, 867, 210, 399, 680, 480, 51, 878, 465, 811, 169, 869, 675, 611, 697, 867, 561, 862, 687, 507, 283, 482, 129, 807, 591, 733, 623, 150, 238, 59, 379, 684, 877, 625, 169, 643, 105, 170, 607, 520, 932, 727, 476, 693, 425, 174, 647, 73, 122, 335, 530, 442, 853, 695, 249, 445, 515, 909, 545, 703, 919, 874, 474, 882, 500, 594, 612, 641, 801, 220, 162, 819, 984, 589, 513, 495, 799, 161, 604, 958, 533, 221, 400, 386, 867, 600, 782, 382, 596, 414, 171, 516, 375, 682, 485, 911, 276, 98, 553, 163, 354, 666, 933, 424, 341, 533, 870, 227, 730, 475, 186, 263, 647, 537, 686, 600, 224, 469, 68, 770, 919, 190, 373, 294, 822, 808, 206, 184, 943, 795, 384, 383, 461, 404, 758, 839, 887, 715, 67, 618, 276, 204, 918, 873, 777, 604, 560, 951, 160, 578, 722, 79, 804, 96, 409, 713, 940, 652, 934, 970, 447, 318, 353, 859, 672, 112, 785, 645, 863, 803, 350, 139, 93, 354, 99, 820, 908, 609, 772, 154, 274, 580, 184, 79, 626, 630, 742, 653, 282, 762, 623, 680, 81, 927, 626, 789, 125, 411, 521, 938, 300, 821, 78, 343, 175, 128, 250, 170, 774, 972, 275, 999, 639, 495, 78, 352, 126, 857, 956, 358, 619, 580, 124, 737, 594, 701, 612, 669, 112, 134, 694, 363, 992, 809, 743, 168, 974, 944, 375, 748, 52, 600, 747, 642, 182, 862, 81, 344, 805, 988, 739, 511, 655, 814, 334, 249, 515, 897, 955, 664, 981, 649, 113, 974, 459, 893, 228, 433, 837, 553, 268, 926, 240, 102, 654, 459, 51, 686, 754, 806, 760, 493, 403, 415, 394, 687, 700, 946, 670, 656, 610, 738, 392, 760, 799, 887, 653, 978, 321, 576, 617, 626, 502, 894, 679, 243, 440, 680, 879, 194, 572, 640, 724, 926, 56, 204, 700, 707, 151, 457, 449, 797, 195, 791, 558, 945, 679, 297, 59, 87, 824, 713, 663, 412, 693, 342, 606, 134, 108, 571, 364, 631, 212, 174, 643, 304, 329, 343, 97, 430, 751, 497, 314, 983, 374, 822, 928, 140, 206, 73, 263, 980, 736, 876, 478, 430, 305, 170, 514, 364, 692, 829, 82, 855, 953, 676, 246, 369, 970, 294, 750, 807, 827, 150, 790, 288, 923, 804, 378, 215, 828, 592, 281, 565, 555, 710, 82, 896, 831, 547, 261, 524, 462, 293, 465, 502, 56, 661, 821, 976, 991, 658, 869, 905, 758, 745, 193, 768, 550, 608, 933, 378, 286, 215, 979, 792, 961, 61, 688, 793, 644, 986, 403, 106, 366, 905, 644, 372, 567, 466, 434, 645, 210, 389, 550, 919, 135, 780, 773, 635, 389, 707, 100, 626, 958, 165, 504, 920, 176, 193, 713, 857, 265, 203, 50, 668, 108, 645, 990, 626, 197, 510, 357, 358, 850, 858, 364, 936, 638]
::BZ2_crc32Table has only one value
::BZ2_crc32Table[] == [0, 79764919, 159529838, 222504665, 319059676, 398814059, 445009330, 507990021, 638119352, 583659535, 797628118, 726387553, 890018660, 835552979, 1015980042, 944750013, 1276238704, 1221641927, 1167319070, 1095957929, 1595256236, 1540665371, 1452775106, 1381403509, 1780037320, 1859660671, 1671105958, 1733955601, 2031960084, 2111593891, 1889500026, 1952343757, 2552477408, 2632100695, 2443283854, 2506133561, 2334638140, 2414271883, 2191915858, 2254759653, 3190512472, 3135915759, 3081330742, 3009969537, 2905550212, 2850959411, 2762807018, 2691435357, 3560074640, 3505614887, 3719321342, 3648080713, 3342211916, 3287746299, 3467911202, 3396681109, 4063920168, 4143685023, 4223187782, 4286162673, 3779000052, 3858754371, 3904687514, 3967668269, 881225847, 809987520, 1023691545, 969234094, 662832811, 591600412, 771767749, 717299826, 311336399, 374308984, 453813921, 533576470, 25881363, 88864420, 134795389, 214552010, 2023205639, 2086057648, 1897238633, 1976864222, 1804852699, 1867694188, 1645340341, 1724971778, 1587496639, 1516133128, 1461550545, 1406951526, 1302016099, 1230646740, 1142491917, 1087903418, 2896545431, 2825181984, 2770861561, 2716262478, 3215044683, 3143675388, 3055782693, 3001194130, 2326604591, 2389456536, 2200899649, 2280525302, 2578013683, 2640855108, 2418763421, 2498394922, 3769900519, 3832873040, 3912640137, 3992402750, 4088425275, 4151408268, 4197601365, 4277358050, 3334271071, 3263032808, 3476998961, 3422541446, 3585640067, 3514407732, 3694837229, 3640369242, 1762451694, 1842216281, 1619975040, 1682949687, 2047383090, 2127137669, 1938468188, 2001449195, 1325665622, 1271206113, 1183200824, 1111960463, 1543535498, 1489069629, 1434599652, 1363369299, 622672798, 568075817, 748617968, 677256519, 907627842, 853037301, 1067152940, 995781531, 51762726, 131386257, 177728840, 240578815, 269590778, 349224269, 429104020, 491947555, 4046411278, 4126034873, 4172115296, 4234965207, 3794477266, 3874110821, 3953728444, 4016571915, 3609705398, 3555108353, 3735388376, 3664026991, 3290680682, 3236090077, 3449943556, 3378572211, 3174993278, 3120533705, 3032266256, 2961025959, 2923101090, 2868635157, 2813903052, 2742672763, 2604032198, 2683796849, 2461293480, 2524268063, 2284983834, 2364738477, 2175806836, 2238787779, 1569362073, 1498123566, 1409854455, 1355396672, 1317987909, 1246755826, 1192025387, 1137557660, 2072149281, 2135122070, 1912620623, 1992383480, 1753615357, 1816598090, 1627664531, 1707420964, 295390185, 358241886, 404320391, 483945776, 43990325, 106832002, 186451547, 266083308, 932423249, 861060070, 1041341759, 986742920, 613929101, 542559546, 756411363, 701822548, 3316196985, 3244833742, 3425377559, 3370778784, 3601682597, 3530312978, 3744426955, 3689838204, 3819031489, 3881883254, 3928223919, 4007849240, 4037393693, 4100235434, 4180117107, 4259748804, 2310601993, 2373574846, 2151335527, 2231098320, 2596047829, 2659030626, 2470359227, 2550115596, 2947551409, 2876312838, 2788305887, 2733848168, 3165939309, 3094707162, 3040238851, 2985771188]
::BZ2_crc32Table[] elements >= 0
::mammamia == 3216
::verbosity == 0
::keepInputFiles == 1
::smallMode == 0
::numFileNames == 1
::blockSize100k == 9
::longestFileName == 20
::inName == "../inputs/in_big.txt"
::outName == "../inputs/in_big.txt.bz2"
::tmpName == ""
::progName == "zip-injected"
::progNameReally == "./zip-injected"
::outputHandleJustInCase has only one value
::outputHandleJustInCase != null
::workFactor == 30
::zSuffix has only one value
::zSuffix[] == [.bz2, .bz, .tbz2, .tbz]
::unzSuffix has only one value
::unzSuffix[] == [, , .tar, .tar]
::unzSuffix[] elements one of { "", ".tar" }
size(::incs[]) == 14
size(::bzerrorstrings[]) == 16
size(::BZ2_rNums[]) == 512
size(::BZ2_crc32Table[]) == 256
size(::zSuffix[]) == 4
::incs[::blockSize100k] == 29524
::incs[::blockSize100k-1] == 9841
::incs[::srcMode] == 40
::BZ2_rNums[::verbosity] == 619
::BZ2_rNums[::numFileNames] == 720
::BZ2_rNums[::blockSize100k] == 247
::BZ2_rNums[::blockSize100k-1] == 566
::BZ2_rNums[::srcMode] == 481
::BZ2_rNums[::srcMode-1] == 127
::BZ2_rNums[::longestFileName] == 733
::BZ2_rNums[::longestFileName-1] == 214
::BZ2_rNums[::workFactor] == 419
::BZ2_rNums[::workFactor-1] == 472
::BZ2_rNums[orig(alphaSize)] == 73
::BZ2_rNums[orig(alphaSize)-1] == 574
::BZ2_crc32Table[::verbosity] == 0
::BZ2_crc32Table[::numFileNames] == 79764919
::BZ2_crc32Table[::blockSize100k] == 583659535
::BZ2_crc32Table[::blockSize100k-1] == 638119352
::BZ2_crc32Table[::srcMode] == 222504665
::BZ2_crc32Table[::srcMode-1] == 159529838
::BZ2_crc32Table[::longestFileName] == 1595256236
::BZ2_crc32Table[::longestFileName-1] == 1095957929
::BZ2_crc32Table[::workFactor] == 1889500026
::BZ2_crc32Table[::workFactor-1] == 2111593891
::BZ2_crc32Table[orig(alphaSize)] == 1671105958
::BZ2_crc32Table[orig(alphaSize)-1] == 1859660671
::incs[] elements < ::fileMetaInfo.st_size
::incs[] elements < ::fileMetaInfo.st_atim.tv_sec
::incs[] elements < ::fileMetaInfo.st_atim.tv_nsec
::incs[] elements < ::fileMetaInfo.st_mtim.tv_sec
::incs[] elements < ::fileMetaInfo.st_mtim.tv_nsec
::incs[] elements > ::verbosity
::incs[] elements >= ::numFileNames
::BZ2_rNums[] elements < ::fileMetaInfo.st_size
::BZ2_rNums[] elements < ::fileMetaInfo.st_blksize
::BZ2_rNums[] elements < ::fileMetaInfo.st_blocks
::BZ2_rNums[] elements < ::fileMetaInfo.st_atim.tv_sec
::BZ2_rNums[] elements < ::fileMetaInfo.st_atim.tv_nsec
::BZ2_rNums[] elements < ::fileMetaInfo.st_mtim.tv_sec
::BZ2_rNums[] elements < ::fileMetaInfo.st_mtim.tv_nsec
::fileMetaInfo.__glibc_reserved[] elements == ::verbosity
::BZ2_rNums[] elements < ::mammamia
::BZ2_rNums[] elements > ::verbosity
::BZ2_rNums[] elements > ::numFileNames
::BZ2_rNums[] elements > ::blockSize100k
::BZ2_rNums[] elements > ::longestFileName
::BZ2_rNums[] elements > ::workFactor
::BZ2_rNums[] elements > orig(alphaSize)
::BZ2_rNums[] elements > size(::incs[])
::BZ2_rNums[] elements > size(::bzerrorstrings[])
size(::BZ2_rNums[])-1 in ::BZ2_rNums[]
::BZ2_rNums[] elements > size(::zSuffix[])
::BZ2_rNums[] elements < ::incs[::blockSize100k]
::BZ2_rNums[] elements < ::incs[::blockSize100k-1]
::BZ2_rNums[] elements > ::incs[::srcMode]
::inName < ::outName
::inName > ::tmpName
::inName < ::progName
::inName < ::progNameReally
::inName == orig(::inName)
::outName > ::tmpName
::outName < ::progName
::outName < ::progNameReally
::outName == orig(::outName)
::tmpName < ::progName
::tmpName < ::progNameReally
::tmpName in ::unzSuffix[]
::tmpName == orig(::tmpName)
::progName > ::progNameReally
::progName == orig(::progName)
::progNameReally == orig(::progNameReally)
===========================================================================
..fopen_output_safely():::ENTER
::fileMetaInfo.st_uid == ::fileMetaInfo.st_gid
::fileMetaInfo.__pad0 == ::verbosity
::fileMetaInfo.st_mtim.tv_sec == ::fileMetaInfo.st_ctim.tv_sec
::fileMetaInfo.st_mtim.tv_nsec == ::fileMetaInfo.st_ctim.tv_nsec
::verbosity == ::exitValue
::verbosity == ::fileMetaInfo.__glibc_reserved[::fileMetaInfo.__pad0]
::verbosity == ::fileMetaInfo.__glibc_reserved[::verbosity]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::exitValue]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::srcMode-1]
::keepInputFiles == ::noisy
::smallMode == ::deleteOutputOnInterrupt
::smallMode == ::forceOverwrite
::smallMode == ::testFailsExist
::smallMode == ::unzFailsExist
::numFileNames == ::numFilesProcessed
::numFileNames == ::opMode
::numFileNames == ::incs[::fileMetaInfo.__pad0]
::numFileNames == ::incs[::verbosity]
::numFileNames == ::incs[::numFileNames-1]
::numFileNames == ::incs[::numFilesProcessed-1]
::numFileNames == ::incs[::exitValue]
::numFileNames == ::incs[::opMode-1]
::srcMode == size(::fileMetaInfo.__glibc_reserved[])
::srcMode == size(::zSuffix[])-1
::srcMode == size(::unzSuffix[])-1
size(::incs[])-1 == ::incs[::srcMode-1]
size(::zSuffix[]) == size(::unzSuffix[])
size(::zSuffix[]) == ::incs[::numFileNames]
size(::zSuffix[]) == ::incs[::numFilesProcessed]
size(::zSuffix[]) == ::incs[::opMode]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFileNames-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFilesProcessed-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::opMode-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFileNames-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFilesProcessed-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::opMode-1]
::incs has only one value
::incs[] == [1, 4, 13, 40, 121, 364, 1093, 3280, 9841, 29524, 88573, 265720, 797161, 2391484]
::bzerrorstrings has only one value
::bzerrorstrings[] == [OK, SEQUENCE_ERROR, PARAM_ERROR, MEM_ERROR, DATA_ERROR, DATA_ERROR_MAGIC, IO_ERROR, UNEXPECTED_EOF, OUTBUFF_FULL, CONFIG_ERROR, ???, ???, ???, ???, ???, ???]
::fileMetaInfo has only one value
::fileMetaInfo.st_dev == 2049
::fileMetaInfo.st_ino == 936492
::fileMetaInfo.st_nlink == 1
::fileMetaInfo.st_mode == 33277
::fileMetaInfo.st_uid == 1000
::fileMetaInfo.st_rdev == 0
::fileMetaInfo.st_size == 5738700
::fileMetaInfo.st_blksize == 4096
::fileMetaInfo.st_blocks == 11216
::fileMetaInfo.st_atim has only one value
::fileMetaInfo.st_atim.tv_sec == 1496096467
::fileMetaInfo.st_atim.tv_nsec == 709424920
::fileMetaInfo.st_mtim has only one value
::fileMetaInfo.st_mtim.tv_sec == 1483563943
::fileMetaInfo.st_mtim.tv_nsec == 421335644
::fileMetaInfo.st_ctim has only one value
::fileMetaInfo.__glibc_reserved has only one value
::fileMetaInfo.__glibc_reserved[] == [0, 0, 0]
::fileMetaInfo.__glibc_reserved[] elements == 0
::BZ2_rNums has only one value
::BZ2_rNums[] == [619, 720, 127, 481, 931, 816, 813, 233, 566, 247, 985, 724, 205, 454, 863, 491, 741, 242, 949, 214, 733, 859, 335, 708, 621, 574, 73, 654, 730, 472, 419, 436, 278, 496, 867, 210, 399, 680, 480, 51, 878, 465, 811, 169, 869, 675, 611, 697, 867, 561, 862, 687, 507, 283, 482, 129, 807, 591, 733, 623, 150, 238, 59, 379, 684, 877, 625, 169, 643, 105, 170, 607, 520, 932, 727, 476, 693, 425, 174, 647, 73, 122, 335, 530, 442, 853, 695, 249, 445, 515, 909, 545, 703, 919, 874, 474, 882, 500, 594, 612, 641, 801, 220, 162, 819, 984, 589, 513, 495, 799, 161, 604, 958, 533, 221, 400, 386, 867, 600, 782, 382, 596, 414, 171, 516, 375, 682, 485, 911, 276, 98, 553, 163, 354, 666, 933, 424, 341, 533, 870, 227, 730, 475, 186, 263, 647, 537, 686, 600, 224, 469, 68, 770, 919, 190, 373, 294, 822, 808, 206, 184, 943, 795, 384, 383, 461, 404, 758, 839, 887, 715, 67, 618, 276, 204, 918, 873, 777, 604, 560, 951, 160, 578, 722, 79, 804, 96, 409, 713, 940, 652, 934, 970, 447, 318, 353, 859, 672, 112, 785, 645, 863, 803, 350, 139, 93, 354, 99, 820, 908, 609, 772, 154, 274, 580, 184, 79, 626, 630, 742, 653, 282, 762, 623, 680, 81, 927, 626, 789, 125, 411, 521, 938, 300, 821, 78, 343, 175, 128, 250, 170, 774, 972, 275, 999, 639, 495, 78, 352, 126, 857, 956, 358, 619, 580, 124, 737, 594, 701, 612, 669, 112, 134, 694, 363, 992, 809, 743, 168, 974, 944, 375, 748, 52, 600, 747, 642, 182, 862, 81, 344, 805, 988, 739, 511, 655, 814, 334, 249, 515, 897, 955, 664, 981, 649, 113, 974, 459, 893, 228, 433, 837, 553, 268, 926, 240, 102, 654, 459, 51, 686, 754, 806, 760, 493, 403, 415, 394, 687, 700, 946, 670, 656, 610, 738, 392, 760, 799, 887, 653, 978, 321, 576, 617, 626, 502, 894, 679, 243, 440, 680, 879, 194, 572, 640, 724, 926, 56, 204, 700, 707, 151, 457, 449, 797, 195, 791, 558, 945, 679, 297, 59, 87, 824, 713, 663, 412, 693, 342, 606, 134, 108, 571, 364, 631, 212, 174, 643, 304, 329, 343, 97, 430, 751, 497, 314, 983, 374, 822, 928, 140, 206, 73, 263, 980, 736, 876, 478, 430, 305, 170, 514, 364, 692, 829, 82, 855, 953, 676, 246, 369, 970, 294, 750, 807, 827, 150, 790, 288, 923, 804, 378, 215, 828, 592, 281, 565, 555, 710, 82, 896, 831, 547, 261, 524, 462, 293, 465, 502, 56, 661, 821, 976, 991, 658, 869, 905, 758, 745, 193, 768, 550, 608, 933, 378, 286, 215, 979, 792, 961, 61, 688, 793, 644, 986, 403, 106, 366, 905, 644, 372, 567, 466, 434, 645, 210, 389, 550, 919, 135, 780, 773, 635, 389, 707, 100, 626, 958, 165, 504, 920, 176, 193, 713, 857, 265, 203, 50, 668, 108, 645, 990, 626, 197, 510, 357, 358, 850, 858, 364, 936, 638]
::BZ2_crc32Table has only one value
::BZ2_crc32Table[] == [0, 79764919, 159529838, 222504665, 319059676, 398814059, 445009330, 507990021, 638119352, 583659535, 797628118, 726387553, 890018660, 835552979, 1015980042, 944750013, 1276238704, 1221641927, 1167319070, 1095957929, 1595256236, 1540665371, 1452775106, 1381403509, 1780037320, 1859660671, 1671105958, 1733955601, 2031960084, 2111593891, 1889500026, 1952343757, 2552477408, 2632100695, 2443283854, 2506133561, 2334638140, 2414271883, 2191915858, 2254759653, 3190512472, 3135915759, 3081330742, 3009969537, 2905550212, 2850959411, 2762807018, 2691435357, 3560074640, 3505614887, 3719321342, 3648080713, 3342211916, 3287746299, 3467911202, 3396681109, 4063920168, 4143685023, 4223187782, 4286162673, 3779000052, 3858754371, 3904687514, 3967668269, 881225847, 809987520, 1023691545, 969234094, 662832811, 591600412, 771767749, 717299826, 311336399, 374308984, 453813921, 533576470, 25881363, 88864420, 134795389, 214552010, 2023205639, 2086057648, 1897238633, 1976864222, 1804852699, 1867694188, 1645340341, 1724971778, 1587496639, 1516133128, 1461550545, 1406951526, 1302016099, 1230646740, 1142491917, 1087903418, 2896545431, 2825181984, 2770861561, 2716262478, 3215044683, 3143675388, 3055782693, 3001194130, 2326604591, 2389456536, 2200899649, 2280525302, 2578013683, 2640855108, 2418763421, 2498394922, 3769900519, 3832873040, 3912640137, 3992402750, 4088425275, 4151408268, 4197601365, 4277358050, 3334271071, 3263032808, 3476998961, 3422541446, 3585640067, 3514407732, 3694837229, 3640369242, 1762451694, 1842216281, 1619975040, 1682949687, 2047383090, 2127137669, 1938468188, 2001449195, 1325665622, 1271206113, 1183200824, 1111960463, 1543535498, 1489069629, 1434599652, 1363369299, 622672798, 568075817, 748617968, 677256519, 907627842, 853037301, 1067152940, 995781531, 51762726, 131386257, 177728840, 240578815, 269590778, 349224269, 429104020, 491947555, 4046411278, 4126034873, 4172115296, 4234965207, 3794477266, 3874110821, 3953728444, 4016571915, 3609705398, 3555108353, 3735388376, 3664026991, 3290680682, 3236090077, 3449943556, 3378572211, 3174993278, 3120533705, 3032266256, 2961025959, 2923101090, 2868635157, 2813903052, 2742672763, 2604032198, 2683796849, 2461293480, 2524268063, 2284983834, 2364738477, 2175806836, 2238787779, 1569362073, 1498123566, 1409854455, 1355396672, 1317987909, 1246755826, 1192025387, 1137557660, 2072149281, 2135122070, 1912620623, 1992383480, 1753615357, 1816598090, 1627664531, 1707420964, 295390185, 358241886, 404320391, 483945776, 43990325, 106832002, 186451547, 266083308, 932423249, 861060070, 1041341759, 986742920, 613929101, 542559546, 756411363, 701822548, 3316196985, 3244833742, 3425377559, 3370778784, 3601682597, 3530312978, 3744426955, 3689838204, 3819031489, 3881883254, 3928223919, 4007849240, 4037393693, 4100235434, 4180117107, 4259748804, 2310601993, 2373574846, 2151335527, 2231098320, 2596047829, 2659030626, 2470359227, 2550115596, 2947551409, 2876312838, 2788305887, 2733848168, 3165939309, 3094707162, 3040238851, 2985771188]
::mammamia == 3216
::verbosity == 0
::keepInputFiles == 1
::smallMode == 0
::numFileNames == 1
::blockSize100k == 9
::longestFileName == 20
::inName == "../inputs/in_big.txt"
::outName == "../inputs/in_big.txt.bz2"
::tmpName == ""
::progName == "zip-injected"
::progNameReally == "./zip-injected"
::outputHandleJustInCase == null
::workFactor == 30
::zSuffix has only one value
::zSuffix[] == [.bz2, .bz, .tbz2, .tbz]
::unzSuffix has only one value
::unzSuffix[] == [, , .tar, .tar]
::unzSuffix[] elements one of { "", ".tar" }
mode == "wb"
size(::incs[]) == 14
size(::bzerrorstrings[]) == 16
size(::BZ2_rNums[]) == 512
size(::BZ2_crc32Table[]) == 256
size(::zSuffix[]) == 4
::incs[::blockSize100k] == 29524
::incs[::blockSize100k-1] == 9841
::incs[::srcMode] == 40
::BZ2_rNums[::verbosity] == 619
::BZ2_rNums[::numFileNames] == 720
::BZ2_rNums[::blockSize100k] == 247
::BZ2_rNums[::blockSize100k-1] == 566
::BZ2_rNums[::srcMode] == 481
::BZ2_rNums[::srcMode-1] == 127
::BZ2_rNums[::longestFileName] == 733
::BZ2_rNums[::longestFileName-1] == 214
::BZ2_rNums[::workFactor] == 419
::BZ2_rNums[::workFactor-1] == 472
::BZ2_crc32Table[::verbosity] == 0
::BZ2_crc32Table[::numFileNames] == 79764919
::BZ2_crc32Table[::blockSize100k] == 583659535
::BZ2_crc32Table[::blockSize100k-1] == 638119352
::BZ2_crc32Table[::srcMode] == 222504665
::BZ2_crc32Table[::srcMode-1] == 159529838
::BZ2_crc32Table[::longestFileName] == 1595256236
::BZ2_crc32Table[::longestFileName-1] == 1095957929
::BZ2_crc32Table[::workFactor] == 1889500026
::BZ2_crc32Table[::workFactor-1] == 2111593891
::fileMetaInfo.__glibc_reserved[] elements == ::verbosity
size(::BZ2_rNums[])-1 in ::BZ2_rNums[]
::outName == name
::tmpName in ::unzSuffix[]
===========================================================================
..fopen_output_safely():::EXIT
::incs == orig(::incs)
::incs[] == orig(::incs[])
::bzerrorstrings == orig(::bzerrorstrings)
::fileMetaInfo == orig(::fileMetaInfo)
::fileMetaInfo.st_dev == orig(::fileMetaInfo.st_dev)
::fileMetaInfo.st_ino == orig(::fileMetaInfo.st_ino)
::fileMetaInfo.st_nlink == orig(::fileMetaInfo.st_nlink)
::fileMetaInfo.st_mode == orig(::fileMetaInfo.st_mode)
::fileMetaInfo.st_uid == ::fileMetaInfo.st_gid
::fileMetaInfo.st_uid == orig(::fileMetaInfo.st_uid)
::fileMetaInfo.st_uid == orig(::fileMetaInfo.st_gid)
::fileMetaInfo.__pad0 == ::verbosity
::fileMetaInfo.st_rdev == orig(::fileMetaInfo.st_rdev)
::fileMetaInfo.st_size == orig(::fileMetaInfo.st_size)
::fileMetaInfo.st_blksize == orig(::fileMetaInfo.st_blksize)
::fileMetaInfo.st_blocks == orig(::fileMetaInfo.st_blocks)
::fileMetaInfo.st_atim == orig(::fileMetaInfo.st_atim)
::fileMetaInfo.st_atim.tv_sec == orig(::fileMetaInfo.st_atim.tv_sec)
::fileMetaInfo.st_atim.tv_nsec == orig(::fileMetaInfo.st_atim.tv_nsec)
::fileMetaInfo.st_mtim == orig(::fileMetaInfo.st_mtim)
::fileMetaInfo.st_mtim.tv_sec == ::fileMetaInfo.st_ctim.tv_sec
::fileMetaInfo.st_mtim.tv_sec == orig(::fileMetaInfo.st_mtim.tv_sec)
::fileMetaInfo.st_mtim.tv_sec == orig(::fileMetaInfo.st_ctim.tv_sec)
::fileMetaInfo.st_mtim.tv_nsec == ::fileMetaInfo.st_ctim.tv_nsec
::fileMetaInfo.st_mtim.tv_nsec == orig(::fileMetaInfo.st_mtim.tv_nsec)
::fileMetaInfo.st_mtim.tv_nsec == orig(::fileMetaInfo.st_ctim.tv_nsec)
::fileMetaInfo.st_ctim == orig(::fileMetaInfo.st_ctim)
::fileMetaInfo.__glibc_reserved == orig(::fileMetaInfo.__glibc_reserved)
::fileMetaInfo.__glibc_reserved[] == orig(::fileMetaInfo.__glibc_reserved[])
::BZ2_rNums == orig(::BZ2_rNums)
::BZ2_rNums[] == orig(::BZ2_rNums[])
::BZ2_crc32Table == orig(::BZ2_crc32Table)
::BZ2_crc32Table[] == orig(::BZ2_crc32Table[])
::mammamia == orig(::mammamia)
::verbosity == ::exitValue
::verbosity == orig(::fileMetaInfo.__pad0)
::verbosity == orig(::verbosity)
::verbosity == orig(::exitValue)
::verbosity == ::fileMetaInfo.__glibc_reserved[::fileMetaInfo.__pad0]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::fileMetaInfo.__pad0)])
::verbosity == ::fileMetaInfo.__glibc_reserved[::verbosity]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::exitValue]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::srcMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::fileMetaInfo.__pad0)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::verbosity)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFileNames)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFileNames)-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFilesProcessed)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFilesProcessed)-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::exitValue)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::opMode)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::opMode)-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::srcMode)-1]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::verbosity)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFileNames)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFileNames)-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFilesProcessed)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFilesProcessed)-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::exitValue)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::opMode)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::opMode)-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::srcMode)-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::fileMetaInfo.__pad0])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::verbosity])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFileNames])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFileNames-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFilesProcessed])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFilesProcessed-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::exitValue])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::opMode])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::opMode-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::srcMode-1])
::keepInputFiles == ::noisy
::keepInputFiles == orig(::keepInputFiles)
::keepInputFiles == orig(::noisy)
::smallMode == ::deleteOutputOnInterrupt
::smallMode == ::forceOverwrite
::smallMode == ::testFailsExist
::smallMode == ::unzFailsExist
::smallMode == orig(::smallMode)
::smallMode == orig(::deleteOutputOnInterrupt)
::smallMode == orig(::forceOverwrite)
::smallMode == orig(::testFailsExist)
::smallMode == orig(::unzFailsExist)
::numFileNames == ::numFilesProcessed
::numFileNames == ::opMode
::numFileNames == orig(::numFileNames)
::numFileNames == orig(::numFilesProcessed)
::numFileNames == orig(::opMode)
::numFileNames == ::incs[::fileMetaInfo.__pad0]
::numFileNames == ::incs[::verbosity]
::numFileNames == ::incs[::numFileNames-1]
::numFileNames == ::incs[::numFilesProcessed-1]
::numFileNames == ::incs[::exitValue]
::numFileNames == ::incs[::opMode-1]
::numFileNames == ::incs[orig(::fileMetaInfo.__pad0)]
::numFileNames == ::incs[orig(::verbosity)]
::numFileNames == ::incs[orig(::numFileNames)-1]
::numFileNames == ::incs[orig(::numFilesProcessed)-1]
::numFileNames == ::incs[orig(::exitValue)]
::numFileNames == ::incs[orig(::opMode)-1]
::numFileNames == orig(::incs[post(::fileMetaInfo.__pad0)])
::numFileNames == orig(::incs[post(::verbosity)])
::numFileNames == orig(::incs[post(::numFileNames)-1])
::numFileNames == orig(::incs[post(::numFilesProcessed)-1])
::numFileNames == orig(::incs[post(::exitValue)])
::numFileNames == orig(::incs[post(::opMode)-1])
::numFileNames == orig(::incs[::fileMetaInfo.__pad0])
::numFileNames == orig(::incs[::verbosity])
::numFileNames == orig(::incs[::numFileNames-1])
::numFileNames == orig(::incs[::numFilesProcessed-1])
::numFileNames == orig(::incs[::exitValue])
::numFileNames == orig(::incs[::opMode-1])
::blockSize100k == orig(::blockSize100k)
::srcMode == orig(::srcMode)
::srcMode == size(::fileMetaInfo.__glibc_reserved[])
::srcMode == size(::zSuffix[])-1
::srcMode == size(::unzSuffix[])-1
::srcMode == orig(size(::fileMetaInfo.__glibc_reserved[]))
::srcMode == orig(size(::zSuffix[]))-1
::srcMode == orig(size(::unzSuffix[]))-1
::longestFileName == orig(::longestFileName)
::outputHandleJustInCase == orig(::outputHandleJustInCase)
::workFactor == orig(::workFactor)
::zSuffix == orig(::zSuffix)
::unzSuffix == orig(::unzSuffix)
size(::incs[])-1 == ::incs[::srcMode-1]
size(::incs[])-1 == ::incs[orig(::srcMode)-1]
size(::incs[])-1 == orig(::incs[post(::srcMode)-1])
size(::incs[])-1 == orig(::incs[::srcMode-1])
size(::zSuffix[]) == size(::unzSuffix[])
size(::zSuffix[]) == orig(size(::unzSuffix[]))
size(::zSuffix[]) == ::incs[::numFileNames]
size(::zSuffix[]) == ::incs[::numFilesProcessed]
size(::zSuffix[]) == ::incs[::opMode]
size(::zSuffix[]) == ::incs[orig(::numFileNames)]
size(::zSuffix[]) == ::incs[orig(::numFilesProcessed)]
size(::zSuffix[]) == ::incs[orig(::opMode)]
size(::zSuffix[]) == orig(::incs[post(::numFileNames)])
size(::zSuffix[]) == orig(::incs[post(::numFilesProcessed)])
size(::zSuffix[]) == orig(::incs[post(::opMode)])
size(::zSuffix[]) == orig(::incs[::numFileNames])
size(::zSuffix[]) == orig(::incs[::numFilesProcessed])
size(::zSuffix[]) == orig(::incs[::opMode])
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFileNames-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFilesProcessed-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::opMode-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[orig(::numFileNames)-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[orig(::numFilesProcessed)-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[orig(::opMode)-1]
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[post(::numFileNames)-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[post(::numFilesProcessed)-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[post(::opMode)-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[::numFileNames-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[::numFilesProcessed-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[::opMode-1])
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFileNames-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::numFilesProcessed-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[::opMode-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[orig(::numFileNames)-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[orig(::numFilesProcessed)-1]
::BZ2_crc32Table[::verbosity] == ::BZ2_crc32Table[orig(::opMode)-1]
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[post(::numFileNames)-1])
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[post(::numFilesProcessed)-1])
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[post(::opMode)-1])
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[::numFileNames-1])
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[::numFilesProcessed-1])
::BZ2_crc32Table[::verbosity] == orig(::BZ2_crc32Table[::opMode-1])
::incs has only one value
::incs[] == [1, 4, 13, 40, 121, 364, 1093, 3280, 9841, 29524, 88573, 265720, 797161, 2391484]
::bzerrorstrings has only one value
::bzerrorstrings[] == [OK, SEQUENCE_ERROR, PARAM_ERROR, MEM_ERROR, DATA_ERROR, DATA_ERROR_MAGIC, IO_ERROR, UNEXPECTED_EOF, OUTBUFF_FULL, CONFIG_ERROR, ???, ???, ???, ???, ???, ???]
::fileMetaInfo has only one value
::fileMetaInfo.st_dev == 2049
::fileMetaInfo.st_ino == 936492
::fileMetaInfo.st_nlink == 1
::fileMetaInfo.st_mode == 33277
::fileMetaInfo.st_uid == 1000
::fileMetaInfo.st_rdev == 0
::fileMetaInfo.st_size == 5738700
::fileMetaInfo.st_blksize == 4096
::fileMetaInfo.st_blocks == 11216
::fileMetaInfo.st_atim has only one value
::fileMetaInfo.st_atim.tv_sec == 1496096467
::fileMetaInfo.st_atim.tv_nsec == 709424920
::fileMetaInfo.st_mtim has only one value
::fileMetaInfo.st_mtim.tv_sec == 1483563943
::fileMetaInfo.st_mtim.tv_nsec == 421335644
::fileMetaInfo.st_ctim has only one value
::fileMetaInfo.__glibc_reserved has only one value
::fileMetaInfo.__glibc_reserved[] == [0, 0, 0]
::fileMetaInfo.__glibc_reserved[] elements == 0
::BZ2_rNums has only one value
::BZ2_rNums[] == [619, 720, 127, 481, 931, 816, 813, 233, 566, 247, 985, 724, 205, 454, 863, 491, 741, 242, 949, 214, 733, 859, 335, 708, 621, 574, 73, 654, 730, 472, 419, 436, 278, 496, 867, 210, 399, 680, 480, 51, 878, 465, 811, 169, 869, 675, 611, 697, 867, 561, 862, 687, 507, 283, 482, 129, 807, 591, 733, 623, 150, 238, 59, 379, 684, 877, 625, 169, 643, 105, 170, 607, 520, 932, 727, 476, 693, 425, 174, 647, 73, 122, 335, 530, 442, 853, 695, 249, 445, 515, 909, 545, 703, 919, 874, 474, 882, 500, 594, 612, 641, 801, 220, 162, 819, 984, 589, 513, 495, 799, 161, 604, 958, 533, 221, 400, 386, 867, 600, 782, 382, 596, 414, 171, 516, 375, 682, 485, 911, 276, 98, 553, 163, 354, 666, 933, 424, 341, 533, 870, 227, 730, 475, 186, 263, 647, 537, 686, 600, 224, 469, 68, 770, 919, 190, 373, 294, 822, 808, 206, 184, 943, 795, 384, 383, 461, 404, 758, 839, 887, 715, 67, 618, 276, 204, 918, 873, 777, 604, 560, 951, 160, 578, 722, 79, 804, 96, 409, 713, 940, 652, 934, 970, 447, 318, 353, 859, 672, 112, 785, 645, 863, 803, 350, 139, 93, 354, 99, 820, 908, 609, 772, 154, 274, 580, 184, 79, 626, 630, 742, 653, 282, 762, 623, 680, 81, 927, 626, 789, 125, 411, 521, 938, 300, 821, 78, 343, 175, 128, 250, 170, 774, 972, 275, 999, 639, 495, 78, 352, 126, 857, 956, 358, 619, 580, 124, 737, 594, 701, 612, 669, 112, 134, 694, 363, 992, 809, 743, 168, 974, 944, 375, 748, 52, 600, 747, 642, 182, 862, 81, 344, 805, 988, 739, 511, 655, 814, 334, 249, 515, 897, 955, 664, 981, 649, 113, 974, 459, 893, 228, 433, 837, 553, 268, 926, 240, 102, 654, 459, 51, 686, 754, 806, 760, 493, 403, 415, 394, 687, 700, 946, 670, 656, 610, 738, 392, 760, 799, 887, 653, 978, 321, 576, 617, 626, 502, 894, 679, 243, 440, 680, 879, 194, 572, 640, 724, 926, 56, 204, 700, 707, 151, 457, 449, 797, 195, 791, 558, 945, 679, 297, 59, 87, 824, 713, 663, 412, 693, 342, 606, 134, 108, 571, 364, 631, 212, 174, 643, 304, 329, 343, 97, 430, 751, 497, 314, 983, 374, 822, 928, 140, 206, 73, 263, 980, 736, 876, 478, 430, 305, 170, 514, 364, 692, 829, 82, 855, 953, 676, 246, 369, 970, 294, 750, 807, 827, 150, 790, 288, 923, 804, 378, 215, 828, 592, 281, 565, 555, 710, 82, 896, 831, 547, 261, 524, 462, 293, 465, 502, 56, 661, 821, 976, 991, 658, 869, 905, 758, 745, 193, 768, 550, 608, 933, 378, 286, 215, 979, 792, 961, 61, 688, 793, 644, 986, 403, 106, 366, 905, 644, 372, 567, 466, 434, 645, 210, 389, 550, 919, 135, 780, 773, 635, 389, 707, 100, 626, 958, 165, 504, 920, 176, 193, 713, 857, 265, 203, 50, 668, 108, 645, 990, 626, 197, 510, 357, 358, 850, 858, 364, 936, 638]
::BZ2_crc32Table has only one value
::BZ2_crc32Table[] == [0, 79764919, 159529838, 222504665, 319059676, 398814059, 445009330, 507990021, 638119352, 583659535, 797628118, 726387553, 890018660, 835552979, 1015980042, 944750013, 1276238704, 1221641927, 1167319070, 1095957929, 1595256236, 1540665371, 1452775106, 1381403509, 1780037320, 1859660671, 1671105958, 1733955601, 2031960084, 2111593891, 1889500026, 1952343757, 2552477408, 2632100695, 2443283854, 2506133561, 2334638140, 2414271883, 2191915858, 2254759653, 3190512472, 3135915759, 3081330742, 3009969537, 2905550212, 2850959411, 2762807018, 2691435357, 3560074640, 3505614887, 3719321342, 3648080713, 3342211916, 3287746299, 3467911202, 3396681109, 4063920168, 4143685023, 4223187782, 4286162673, 3779000052, 3858754371, 3904687514, 3967668269, 881225847, 809987520, 1023691545, 969234094, 662832811, 591600412, 771767749, 717299826, 311336399, 374308984, 453813921, 533576470, 25881363, 88864420, 134795389, 214552010, 2023205639, 2086057648, 1897238633, 1976864222, 1804852699, 1867694188, 1645340341, 1724971778, 1587496639, 1516133128, 1461550545, 1406951526, 1302016099, 1230646740, 1142491917, 1087903418, 2896545431, 2825181984, 2770861561, 2716262478, 3215044683, 3143675388, 3055782693, 3001194130, 2326604591, 2389456536, 2200899649, 2280525302, 2578013683, 2640855108, 2418763421, 2498394922, 3769900519, 3832873040, 3912640137, 3992402750, 4088425275, 4151408268, 4197601365, 4277358050, 3334271071, 3263032808, 3476998961, 3422541446, 3585640067, 3514407732, 3694837229, 3640369242, 1762451694, 1842216281, 1619975040, 1682949687, 2047383090, 2127137669, 1938468188, 2001449195, 1325665622, 1271206113, 1183200824, 1111960463, 1543535498, 1489069629, 1434599652, 1363369299, 622672798, 568075817, 748617968, 677256519, 907627842, 853037301, 1067152940, 995781531, 51762726, 131386257, 177728840, 240578815, 269590778, 349224269, 429104020, 491947555, 4046411278, 4126034873, 4172115296, 4234965207, 3794477266, 3874110821, 3953728444, 4016571915, 3609705398, 3555108353, 3735388376, 3664026991, 3290680682, 3236090077, 3449943556, 3378572211, 3174993278, 3120533705, 3032266256, 2961025959, 2923101090, 2868635157, 2813903052, 2742672763, 2604032198, 2683796849, 2461293480, 2524268063, 2284983834, 2364738477, 2175806836, 2238787779, 1569362073, 1498123566, 1409854455, 1355396672, 1317987909, 1246755826, 1192025387, 1137557660, 2072149281, 2135122070, 1912620623, 1992383480, 1753615357, 1816598090, 1627664531, 1707420964, 295390185, 358241886, 404320391, 483945776, 43990325, 106832002, 186451547, 266083308, 932423249, 861060070, 1041341759, 986742920, 613929101, 542559546, 756411363, 701822548, 3316196985, 3244833742, 3425377559, 3370778784, 3601682597, 3530312978, 3744426955, 3689838204, 3819031489, 3881883254, 3928223919, 4007849240, 4037393693, 4100235434, 4180117107, 4259748804, 2310601993, 2373574846, 2151335527, 2231098320, 2596047829, 2659030626, 2470359227, 2550115596, 2947551409, 2876312838, 2788305887, 2733848168, 3165939309, 3094707162, 3040238851, 2985771188]
::mammamia == 3216
::verbosity == 0
::keepInputFiles == 1
::smallMode == 0
::numFileNames == 1
::blockSize100k == 9
::longestFileName == 20
::inName == "../inputs/in_big.txt"
::outName == "../inputs/in_big.txt.bz2"
::tmpName == ""
::progName == "zip-injected"
::progNameReally == "./zip-injected"
::outputHandleJustInCase == null
::workFactor == 30
::zSuffix has only one value
::zSuffix[] == [.bz2, .bz, .tbz2, .tbz]
::unzSuffix has only one value
::unzSuffix[] == [, , .tar, .tar]
::unzSuffix[] elements one of { "", ".tar" }
return has only one value
size(::incs[]) == 14
size(::bzerrorstrings[]) == 16
size(::BZ2_rNums[]) == 512
size(::BZ2_crc32Table[]) == 256
size(::zSuffix[]) == 4
::incs[::blockSize100k] == 29524
::incs[::blockSize100k-1] == 9841
::incs[::srcMode] == 40
::BZ2_rNums[::verbosity] == 619
::BZ2_rNums[::numFileNames] == 720
::BZ2_rNums[::blockSize100k] == 247
::BZ2_rNums[::blockSize100k-1] == 566
::BZ2_rNums[::srcMode] == 481
::BZ2_rNums[::srcMode-1] == 127
::BZ2_rNums[::longestFileName] == 733
::BZ2_rNums[::longestFileName-1] == 214
::BZ2_rNums[::workFactor] == 419
::BZ2_rNums[::workFactor-1] == 472
::BZ2_crc32Table[::verbosity] == 0
::BZ2_crc32Table[::numFileNames] == 79764919
::BZ2_crc32Table[::blockSize100k] == 583659535
::BZ2_crc32Table[::blockSize100k-1] == 638119352
::BZ2_crc32Table[::srcMode] == 222504665
::BZ2_crc32Table[::srcMode-1] == 159529838
::BZ2_crc32Table[::longestFileName] == 1595256236
::BZ2_crc32Table[::longestFileName-1] == 1095957929
::BZ2_crc32Table[::workFactor] == 1889500026
::BZ2_crc32Table[::workFactor-1] == 2111593891
::fileMetaInfo.__glibc_reserved[] elements == ::verbosity
size(::BZ2_rNums[])-1 in ::BZ2_rNums[]
::inName == orig(::inName)
::outName == orig(::outName)
::outName == orig(name)
::tmpName in ::unzSuffix[]
::tmpName == orig(::tmpName)
::progName == orig(::progName)
::progNameReally == orig(::progNameReally)
===========================================================================
..main():::ENTER
::fileMetaInfo.st_dev == ::fileMetaInfo.st_ino
::fileMetaInfo.st_dev == ::fileMetaInfo.st_nlink
::fileMetaInfo.st_dev == ::fileMetaInfo.st_rdev
::fileMetaInfo.st_mode == ::fileMetaInfo.st_uid
::fileMetaInfo.st_mode == ::fileMetaInfo.st_gid
::fileMetaInfo.st_mode == ::BZ2_crc32Table[::fileMetaInfo.__pad0]
::fileMetaInfo.st_mode == ::BZ2_crc32Table[::fileMetaInfo.st_size]
::fileMetaInfo.st_mode == ::BZ2_crc32Table[::fileMetaInfo.st_blksize]
::fileMetaInfo.st_mode == ::BZ2_crc32Table[::fileMetaInfo.st_blocks]
::fileMetaInfo.st_mode == ::BZ2_crc32Table[::fileMetaInfo.st_atim.tv_sec]
::fileMetaInfo.st_mode == ::BZ2_crc32Table[::fileMetaInfo.st_atim.tv_nsec]
::fileMetaInfo.st_mode == ::BZ2_crc32Table[::fileMetaInfo.st_mtim.tv_sec]
::fileMetaInfo.st_mode == ::BZ2_crc32Table[::fileMetaInfo.st_mtim.tv_nsec]
::fileMetaInfo.st_mode == ::BZ2_crc32Table[::fileMetaInfo.st_ctim.tv_sec]
::fileMetaInfo.st_mode == ::BZ2_crc32Table[::fileMetaInfo.st_ctim.tv_nsec]
::fileMetaInfo.st_mode == ::BZ2_crc32Table[::verbosity]
::fileMetaInfo.st_mode == ::BZ2_crc32Table[::numFileNames]
::fileMetaInfo.st_mode == ::BZ2_crc32Table[::numFilesProcessed]
::fileMetaInfo.st_mode == ::BZ2_crc32Table[::blockSize100k]
::fileMetaInfo.st_mode == ::BZ2_crc32Table[::exitValue]
::fileMetaInfo.st_mode == ::BZ2_crc32Table[::opMode]
::fileMetaInfo.st_mode == ::BZ2_crc32Table[::srcMode]
::fileMetaInfo.st_mode == ::BZ2_crc32Table[::longestFileName]
::fileMetaInfo.st_mode == ::BZ2_crc32Table[::workFactor]
::fileMetaInfo.__pad0 == ::verbosity
::fileMetaInfo.st_size == ::verbosity
::fileMetaInfo.st_blksize == ::verbosity
::fileMetaInfo.st_blocks == ::verbosity
::fileMetaInfo.st_atim.tv_sec == ::verbosity
::fileMetaInfo.st_atim.tv_nsec == ::verbosity
::fileMetaInfo.st_mtim.tv_sec == ::verbosity
::fileMetaInfo.st_mtim.tv_nsec == ::verbosity
::fileMetaInfo.st_ctim.tv_sec == ::verbosity
::fileMetaInfo.st_ctim.tv_nsec == ::verbosity
::verbosity == ::numFileNames
::verbosity == ::numFilesProcessed
::verbosity == ::blockSize100k
::verbosity == ::exitValue
::verbosity == ::opMode
::verbosity == ::srcMode
::verbosity == ::longestFileName
::verbosity == ::workFactor
::verbosity == size(argv[])-1
::verbosity == ::fileMetaInfo.__glibc_reserved[::fileMetaInfo.__pad0]
::verbosity == ::fileMetaInfo.__glibc_reserved[::fileMetaInfo.st_size]
::verbosity == ::fileMetaInfo.__glibc_reserved[::fileMetaInfo.st_blksize]
::verbosity == ::fileMetaInfo.__glibc_reserved[::fileMetaInfo.st_blocks]
::verbosity == ::fileMetaInfo.__glibc_reserved[::fileMetaInfo.st_atim.tv_sec]
::verbosity == ::fileMetaInfo.__glibc_reserved[::fileMetaInfo.st_atim.tv_nsec]
::verbosity == ::fileMetaInfo.__glibc_reserved[::fileMetaInfo.st_mtim.tv_sec]
::verbosity == ::fileMetaInfo.__glibc_reserved[::fileMetaInfo.st_mtim.tv_nsec]
::verbosity == ::fileMetaInfo.__glibc_reserved[::fileMetaInfo.st_ctim.tv_sec]
::verbosity == ::fileMetaInfo.__glibc_reserved[::fileMetaInfo.st_ctim.tv_nsec]
::verbosity == ::fileMetaInfo.__glibc_reserved[::verbosity]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed]
::verbosity == ::fileMetaInfo.__glibc_reserved[::blockSize100k]
::verbosity == ::fileMetaInfo.__glibc_reserved[::exitValue]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode]
::verbosity == ::fileMetaInfo.__glibc_reserved[::srcMode]
::verbosity == ::fileMetaInfo.__glibc_reserved[::longestFileName]
::verbosity == ::fileMetaInfo.__glibc_reserved[::workFactor]
::keepInputFiles == ::smallMode
::keepInputFiles == ::deleteOutputOnInterrupt
::keepInputFiles == ::forceOverwrite
::keepInputFiles == ::testFailsExist
::keepInputFiles == ::unzFailsExist
::keepInputFiles == ::noisy
argc == size(::zSuffix[])
size(::fileMetaInfo.__glibc_reserved[]) == size(::zSuffix[])-1
size(::fileMetaInfo.__glibc_reserved[]) == size(::unzSuffix[])-1
size(::zSuffix[]) == size(::unzSuffix[])
size(argv[]) == ::incs[::verbosity]
::incs has only one value
::incs[] == [1, 4, 13, 40, 121, 364, 1093, 3280, 9841, 29524, 88573, 265720, 797161, 2391484]
::bzerrorstrings has only one value
::bzerrorstrings[] == [OK, SEQUENCE_ERROR, PARAM_ERROR, MEM_ERROR, DATA_ERROR, DATA_ERROR_MAGIC, IO_ERROR, UNEXPECTED_EOF, OUTBUFF_FULL, CONFIG_ERROR, ???, ???, ???, ???, ???, ???]
::fileMetaInfo has only one value
::fileMetaInfo.st_dev == 0
::fileMetaInfo.st_mode == 0
::fileMetaInfo.st_atim has only one value
::fileMetaInfo.st_mtim has only one value
::fileMetaInfo.st_ctim has only one value
::fileMetaInfo.__glibc_reserved has only one value
::fileMetaInfo.__glibc_reserved[] == [0, 0, 0]
::fileMetaInfo.__glibc_reserved[] elements == 0
::BZ2_rNums has only one value
::BZ2_rNums[] == [619, 720, 127, 481, 931, 816, 813, 233, 566, 247, 985, 724, 205, 454, 863, 491, 741, 242, 949, 214, 733, 859, 335, 708, 621, 574, 73, 654, 730, 472, 419, 436, 278, 496, 867, 210, 399, 680, 480, 51, 878, 465, 811, 169, 869, 675, 611, 697, 867, 561, 862, 687, 507, 283, 482, 129, 807, 591, 733, 623, 150, 238, 59, 379, 684, 877, 625, 169, 643, 105, 170, 607, 520, 932, 727, 476, 693, 425, 174, 647, 73, 122, 335, 530, 442, 853, 695, 249, 445, 515, 909, 545, 703, 919, 874, 474, 882, 500, 594, 612, 641, 801, 220, 162, 819, 984, 589, 513, 495, 799, 161, 604, 958, 533, 221, 400, 386, 867, 600, 782, 382, 596, 414, 171, 516, 375, 682, 485, 911, 276, 98, 553, 163, 354, 666, 933, 424, 341, 533, 870, 227, 730, 475, 186, 263, 647, 537, 686, 600, 224, 469, 68, 770, 919, 190, 373, 294, 822, 808, 206, 184, 943, 795, 384, 383, 461, 404, 758, 839, 887, 715, 67, 618, 276, 204, 918, 873, 777, 604, 560, 951, 160, 578, 722, 79, 804, 96, 409, 713, 940, 652, 934, 970, 447, 318, 353, 859, 672, 112, 785, 645, 863, 803, 350, 139, 93, 354, 99, 820, 908, 609, 772, 154, 274, 580, 184, 79, 626, 630, 742, 653, 282, 762, 623, 680, 81, 927, 626, 789, 125, 411, 521, 938, 300, 821, 78, 343, 175, 128, 250, 170, 774, 972, 275, 999, 639, 495, 78, 352, 126, 857, 956, 358, 619, 580, 124, 737, 594, 701, 612, 669, 112, 134, 694, 363, 992, 809, 743, 168, 974, 944, 375, 748, 52, 600, 747, 642, 182, 862, 81, 344, 805, 988, 739, 511, 655, 814, 334, 249, 515, 897, 955, 664, 981, 649, 113, 974, 459, 893, 228, 433, 837, 553, 268, 926, 240, 102, 654, 459, 51, 686, 754, 806, 760, 493, 403, 415, 394, 687, 700, 946, 670, 656, 610, 738, 392, 760, 799, 887, 653, 978, 321, 576, 617, 626, 502, 894, 679, 243, 440, 680, 879, 194, 572, 640, 724, 926, 56, 204, 700, 707, 151, 457, 449, 797, 195, 791, 558, 945, 679, 297, 59, 87, 824, 713, 663, 412, 693, 342, 606, 134, 108, 571, 364, 631, 212, 174, 643, 304, 329, 343, 97, 430, 751, 497, 314, 983, 374, 822, 928, 140, 206, 73, 263, 980, 736, 876, 478, 430, 305, 170, 514, 364, 692, 829, 82, 855, 953, 676, 246, 369, 970, 294, 750, 807, 827, 150, 790, 288, 923, 804, 378, 215, 828, 592, 281, 565, 555, 710, 82, 896, 831, 547, 261, 524, 462, 293, 465, 502, 56, 661, 821, 976, 991, 658, 869, 905, 758, 745, 193, 768, 550, 608, 933, 378, 286, 215, 979, 792, 961, 61, 688, 793, 644, 986, 403, 106, 366, 905, 644, 372, 567, 466, 434, 645, 210, 389, 550, 919, 135, 780, 773, 635, 389, 707, 100, 626, 958, 165, 504, 920, 176, 193, 713, 857, 265, 203, 50, 668, 108, 645, 990, 626, 197, 510, 357, 358, 850, 858, 364, 936, 638]
::BZ2_crc32Table has only one value
::BZ2_crc32Table[] == [0, 79764919, 159529838, 222504665, 319059676, 398814059, 445009330, 507990021, 638119352, 583659535, 797628118, 726387553, 890018660, 835552979, 1015980042, 944750013, 1276238704, 1221641927, 1167319070, 1095957929, 1595256236, 1540665371, 1452775106, 1381403509, 1780037320, 1859660671, 1671105958, 1733955601, 2031960084, 2111593891, 1889500026, 1952343757, 2552477408, 2632100695, 2443283854, 2506133561, 2334638140, 2414271883, 2191915858, 2254759653, 3190512472, 3135915759, 3081330742, 3009969537, 2905550212, 2850959411, 2762807018, 2691435357, 3560074640, 3505614887, 3719321342, 3648080713, 3342211916, 3287746299, 3467911202, 3396681109, 4063920168, 4143685023, 4223187782, 4286162673, 3779000052, 3858754371, 3904687514, 3967668269, 881225847, 809987520, 1023691545, 969234094, 662832811, 591600412, 771767749, 717299826, 311336399, 374308984, 453813921, 533576470, 25881363, 88864420, 134795389, 214552010, 2023205639, 2086057648, 1897238633, 1976864222, 1804852699, 1867694188, 1645340341, 1724971778, 1587496639, 1516133128, 1461550545, 1406951526, 1302016099, 1230646740, 1142491917, 1087903418, 2896545431, 2825181984, 2770861561, 2716262478, 3215044683, 3143675388, 3055782693, 3001194130, 2326604591, 2389456536, 2200899649, 2280525302, 2578013683, 2640855108, 2418763421, 2498394922, 3769900519, 3832873040, 3912640137, 3992402750, 4088425275, 4151408268, 4197601365, 4277358050, 3334271071, 3263032808, 3476998961, 3422541446, 3585640067, 3514407732, 3694837229, 3640369242, 1762451694, 1842216281, 1619975040, 1682949687, 2047383090, 2127137669, 1938468188, 2001449195, 1325665622, 1271206113, 1183200824, 1111960463, 1543535498, 1489069629, 1434599652, 1363369299, 622672798, 568075817, 748617968, 677256519, 907627842, 853037301, 1067152940, 995781531, 51762726, 131386257, 177728840, 240578815, 269590778, 349224269, 429104020, 491947555, 4046411278, 4126034873, 4172115296, 4234965207, 3794477266, 3874110821, 3953728444, 4016571915, 3609705398, 3555108353, 3735388376, 3664026991, 3290680682, 3236090077, 3449943556, 3378572211, 3174993278, 3120533705, 3032266256, 2961025959, 2923101090, 2868635157, 2813903052, 2742672763, 2604032198, 2683796849, 2461293480, 2524268063, 2284983834, 2364738477, 2175806836, 2238787779, 1569362073, 1498123566, 1409854455, 1355396672, 1317987909, 1246755826, 1192025387, 1137557660, 2072149281, 2135122070, 1912620623, 1992383480, 1753615357, 1816598090, 1627664531, 1707420964, 295390185, 358241886, 404320391, 483945776, 43990325, 106832002, 186451547, 266083308, 932423249, 861060070, 1041341759, 986742920, 613929101, 542559546, 756411363, 701822548, 3316196985, 3244833742, 3425377559, 3370778784, 3601682597, 3530312978, 3744426955, 3689838204, 3819031489, 3881883254, 3928223919, 4007849240, 4037393693, 4100235434, 4180117107, 4259748804, 2310601993, 2373574846, 2151335527, 2231098320, 2596047829, 2659030626, 2470359227, 2550115596, 2947551409, 2876312838, 2788305887, 2733848168, 3165939309, 3094707162, 3040238851, 2985771188]
::mammamia == 3216
::keepInputFiles == 0
::inName == ""
::outputHandleJustInCase == null
::zSuffix has only one value
::zSuffix[] == [.bz2, .bz, .tbz2, .tbz]
::unzSuffix has only one value
::unzSuffix[] == [, , .tar, .tar]
::unzSuffix[] elements one of { "", ".tar" }
argv has only one value
argv[] == [./zip-injected]
argv[] elements == "./zip-injected"
size(::incs[]) == 14
size(::bzerrorstrings[]) == 16
size(::BZ2_rNums[]) == 512
size(::BZ2_crc32Table[]) == 256
size(::zSuffix[]) == 4
::incs[::verbosity] == 1
::incs[argc] == 121
::incs[argc-1] == 40
::BZ2_rNums[::verbosity] == 619
::BZ2_rNums[argc] == 931
::BZ2_rNums[argc-1] == 481
::BZ2_crc32Table[argc] == 319059676
::BZ2_crc32Table[argc-1] == 222504665
size(::incs[])-1 in ::incs[]
size(::zSuffix[]) in ::incs[]
::fileMetaInfo.__glibc_reserved[] elements == ::verbosity
size(::BZ2_rNums[])-1 in ::BZ2_rNums[]
::inName == ::outName
::inName == ::tmpName
::inName == ::progNameReally
::inName in ::unzSuffix[]
===========================================================================
..main():::EXIT
::incs == orig(::incs)
::incs[] == orig(::incs[])
::bzerrorstrings == orig(::bzerrorstrings)
::fileMetaInfo == orig(::fileMetaInfo)
::fileMetaInfo.st_uid == ::fileMetaInfo.st_gid
::fileMetaInfo.__pad0 == ::verbosity
::fileMetaInfo.st_rdev == orig(::fileMetaInfo.st_dev)
::fileMetaInfo.st_rdev == orig(::fileMetaInfo.st_ino)
::fileMetaInfo.st_rdev == orig(::fileMetaInfo.st_nlink)
::fileMetaInfo.st_rdev == orig(::fileMetaInfo.st_rdev)
::fileMetaInfo.st_atim == orig(::fileMetaInfo.st_atim)
::fileMetaInfo.st_mtim == orig(::fileMetaInfo.st_mtim)
::fileMetaInfo.st_mtim.tv_sec == ::fileMetaInfo.st_ctim.tv_sec
::fileMetaInfo.st_mtim.tv_nsec == ::fileMetaInfo.st_ctim.tv_nsec
::fileMetaInfo.st_ctim == orig(::fileMetaInfo.st_ctim)
::fileMetaInfo.__glibc_reserved == orig(::fileMetaInfo.__glibc_reserved)
::fileMetaInfo.__glibc_reserved[] == orig(::fileMetaInfo.__glibc_reserved[])
::BZ2_rNums == orig(::BZ2_rNums)
::BZ2_rNums[] == orig(::BZ2_rNums[])
::BZ2_crc32Table == orig(::BZ2_crc32Table)
::BZ2_crc32Table[] == orig(::BZ2_crc32Table[])
::mammamia == orig(::mammamia)
::verbosity == ::exitValue
::verbosity == return
::verbosity == orig(::fileMetaInfo.__pad0)
::verbosity == orig(::fileMetaInfo.st_size)
::verbosity == orig(::fileMetaInfo.st_blksize)
::verbosity == orig(::fileMetaInfo.st_blocks)
::verbosity == orig(::fileMetaInfo.st_atim.tv_sec)
::verbosity == orig(::fileMetaInfo.st_atim.tv_nsec)
::verbosity == orig(::fileMetaInfo.st_mtim.tv_sec)
::verbosity == orig(::fileMetaInfo.st_mtim.tv_nsec)
::verbosity == orig(::fileMetaInfo.st_ctim.tv_sec)
::verbosity == orig(::fileMetaInfo.st_ctim.tv_nsec)
::verbosity == orig(::verbosity)
::verbosity == orig(::numFileNames)
::verbosity == orig(::numFilesProcessed)
::verbosity == orig(::blockSize100k)
::verbosity == orig(::exitValue)
::verbosity == orig(::opMode)
::verbosity == orig(::srcMode)
::verbosity == orig(::longestFileName)
::verbosity == orig(::workFactor)
::verbosity == size(argv[])-1
::verbosity == orig(size(argv[]))-1
::verbosity == ::fileMetaInfo.__glibc_reserved[::fileMetaInfo.__pad0]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::fileMetaInfo.__pad0)])
::verbosity == ::fileMetaInfo.__glibc_reserved[::verbosity]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFileNames-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed]
::verbosity == ::fileMetaInfo.__glibc_reserved[::numFilesProcessed-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::exitValue]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode]
::verbosity == ::fileMetaInfo.__glibc_reserved[::opMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[::srcMode-1]
::verbosity == ::fileMetaInfo.__glibc_reserved[return]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::fileMetaInfo.__pad0)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::fileMetaInfo.st_size)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::fileMetaInfo.st_blksize)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::fileMetaInfo.st_blocks)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::fileMetaInfo.st_atim.tv_sec)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::fileMetaInfo.st_atim.tv_nsec)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::fileMetaInfo.st_mtim.tv_sec)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::fileMetaInfo.st_mtim.tv_nsec)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::fileMetaInfo.st_ctim.tv_sec)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::fileMetaInfo.st_ctim.tv_nsec)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::verbosity)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFileNames)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::numFilesProcessed)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::blockSize100k)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::exitValue)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::opMode)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::srcMode)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::longestFileName)]
::verbosity == ::fileMetaInfo.__glibc_reserved[orig(::workFactor)]
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::verbosity)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFileNames)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFileNames)-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFilesProcessed)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::numFilesProcessed)-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::exitValue)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::opMode)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::opMode)-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(::srcMode)-1])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[post(return)])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::fileMetaInfo.__pad0])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::fileMetaInfo.st_size])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::fileMetaInfo.st_blksize])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::fileMetaInfo.st_blocks])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::fileMetaInfo.st_atim.tv_sec])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::fileMetaInfo.st_atim.tv_nsec])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::fileMetaInfo.st_mtim.tv_sec])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::fileMetaInfo.st_mtim.tv_nsec])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::fileMetaInfo.st_ctim.tv_sec])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::fileMetaInfo.st_ctim.tv_nsec])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::verbosity])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFileNames])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::numFilesProcessed])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::blockSize100k])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::exitValue])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::opMode])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::srcMode])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::longestFileName])
::verbosity == orig(::fileMetaInfo.__glibc_reserved[::workFactor])
::keepInputFiles == ::noisy
::smallMode == ::deleteOutputOnInterrupt
::smallMode == ::forceOverwrite
::smallMode == ::testFailsExist
::smallMode == ::unzFailsExist
::smallMode == orig(::keepInputFiles)
::smallMode == orig(::smallMode)
::smallMode == orig(::deleteOutputOnInterrupt)
::smallMode == orig(::forceOverwrite)
::smallMode == orig(::testFailsExist)
::smallMode == orig(::unzFailsExist)
::smallMode == orig(::noisy)
::numFileNames == ::numFilesProcessed
::numFileNames == ::opMode
::numFileNames == orig(size(argv[]))
::numFileNames == ::incs[::fileMetaInfo.__pad0]
::numFileNames == ::incs[::verbosity]
::numFileNames == ::incs[::numFileNames-1]
::numFileNames == ::incs[::numFilesProcessed-1]
::numFileNames == ::incs[::exitValue]
::numFileNames == ::incs[::opMode-1]
::numFileNames == ::incs[return]
::numFileNames == ::incs[orig(::fileMetaInfo.__pad0)]
::numFileNames == ::incs[orig(::fileMetaInfo.st_size)]
::numFileNames == ::incs[orig(::fileMetaInfo.st_blksize)]
::numFileNames == ::incs[orig(::fileMetaInfo.st_blocks)]
::numFileNames == ::incs[orig(::fileMetaInfo.st_atim.tv_sec)]
::numFileNames == ::incs[orig(::fileMetaInfo.st_atim.tv_nsec)]
::numFileNames == ::incs[orig(::fileMetaInfo.st_mtim.tv_sec)]
::numFileNames == ::incs[orig(::fileMetaInfo.st_mtim.tv_nsec)]
::numFileNames == ::incs[orig(::fileMetaInfo.st_ctim.tv_sec)]
::numFileNames == ::incs[orig(::fileMetaInfo.st_ctim.tv_nsec)]
::numFileNames == ::incs[orig(::verbosity)]
::numFileNames == ::incs[orig(::numFileNames)]
::numFileNames == ::incs[orig(::numFilesProcessed)]
::numFileNames == ::incs[orig(::blockSize100k)]
::numFileNames == ::incs[orig(::exitValue)]
::numFileNames == ::incs[orig(::opMode)]
::numFileNames == ::incs[orig(::srcMode)]
::numFileNames == ::incs[orig(::longestFileName)]
::numFileNames == ::incs[orig(::workFactor)]
::numFileNames == orig(::incs[post(::fileMetaInfo.__pad0)])
::numFileNames == orig(::incs[post(::verbosity)])
::numFileNames == orig(::incs[post(::numFileNames)-1])
::numFileNames == orig(::incs[post(::numFilesProcessed)-1])
::numFileNames == orig(::incs[post(::exitValue)])
::numFileNames == orig(::incs[post(::opMode)-1])
::numFileNames == orig(::incs[post(return)])
::numFileNames == orig(::incs[::fileMetaInfo.__pad0])
::numFileNames == orig(::incs[::fileMetaInfo.st_size])
::numFileNames == orig(::incs[::fileMetaInfo.st_blksize])
::numFileNames == orig(::incs[::fileMetaInfo.st_blocks])
::numFileNames == orig(::incs[::fileMetaInfo.st_atim.tv_sec])
::numFileNames == orig(::incs[::fileMetaInfo.st_atim.tv_nsec])
::numFileNames == orig(::incs[::fileMetaInfo.st_mtim.tv_sec])
::numFileNames == orig(::incs[::fileMetaInfo.st_mtim.tv_nsec])
::numFileNames == orig(::incs[::fileMetaInfo.st_ctim.tv_sec])
::numFileNames == orig(::incs[::fileMetaInfo.st_ctim.tv_nsec])
::numFileNames == orig(::incs[::verbosity])
::numFileNames == orig(::incs[::numFileNames])
::numFileNames == orig(::incs[::numFilesProcessed])
::numFileNames == orig(::incs[::blockSize100k])
::numFileNames == orig(::incs[::exitValue])
::numFileNames == orig(::incs[::opMode])
::numFileNames == orig(::incs[::srcMode])
::numFileNames == orig(::incs[::longestFileName])
::numFileNames == orig(::incs[::workFactor])
::srcMode == size(::fileMetaInfo.__glibc_reserved[])
::srcMode == size(::zSuffix[])-1
::srcMode == size(::unzSuffix[])-1
::srcMode == orig(size(::fileMetaInfo.__glibc_reserved[]))
::srcMode == orig(size(::zSuffix[]))-1
::srcMode == orig(size(::unzSuffix[]))-1
::outputHandleJustInCase == orig(::outputHandleJustInCase)
::zSuffix == orig(::zSuffix)
::unzSuffix == orig(::unzSuffix)
orig(::fileMetaInfo.st_mode) == ::BZ2_crc32Table[::fileMetaInfo.__pad0]
orig(::fileMetaInfo.st_mode) == orig(::BZ2_crc32Table[post(::fileMetaInfo.__pad0)])
orig(::fileMetaInfo.st_mode) == ::BZ2_crc32Table[::verbosity]
orig(::fileMetaInfo.st_mode) == ::BZ2_crc32Table[::numFileNames-1]
orig(::fileMetaInfo.st_mode) == ::BZ2_crc32Table[::numFilesProcessed-1]
orig(::fileMetaInfo.st_mode) == ::BZ2_crc32Table[::exitValue]
orig(::fileMetaInfo.st_mode) == ::BZ2_crc32Table[::opMode-1]
orig(::fileMetaInfo.st_mode) == ::BZ2_crc32Table[return]
orig(::fileMetaInfo.st_mode) == ::BZ2_crc32Table[orig(::fileMetaInfo.__pad0)]
orig(::fileMetaInfo.st_mode) == ::BZ2_crc32Table[orig(::fileMetaInfo.st_size)]
orig(::fileMetaInfo.st_mode) == ::BZ2_crc32Table[orig(::fileMetaInfo.st_blksize)]
orig(::fileMetaInfo.st_mode) == ::BZ2_crc32Table[orig(::fileMetaInfo.st_blocks)]
orig(::fileMetaInfo.st_mode) == ::BZ2_crc32Table[orig(::fileMetaInfo.st_atim.tv_sec)]
orig(::fileMetaInfo.st_mode) == ::BZ2_crc32Table[orig(::fileMetaInfo.st_atim.tv_nsec)]
orig(::fileMetaInfo.st_mode) == ::BZ2_crc32Table[orig(::fileMetaInfo.st_mtim.tv_sec)]
orig(::fileMetaInfo.st_mode) == ::BZ2_crc32Table[orig(::fileMetaInfo.st_mtim.tv_nsec)]
orig(::fileMetaInfo.st_mode) == ::BZ2_crc32Table[orig(::fileMetaInfo.st_ctim.tv_sec)]
orig(::fileMetaInfo.st_mode) == ::BZ2_crc32Table[orig(::fileMetaInfo.st_ctim.tv_nsec)]
orig(::fileMetaInfo.st_mode) == ::BZ2_crc32Table[orig(::verbosity)]
orig(::fileMetaInfo.st_mode) == ::BZ2_crc32Table[orig(::numFileNames)]
orig(::fileMetaInfo.st_mode) == ::BZ2_crc32Table[orig(::numFilesProcessed)]
orig(::fileMetaInfo.st_mode) == ::BZ2_crc32Table[orig(::blockSize100k)]
orig(::fileMetaInfo.st_mode) == ::BZ2_crc32Table[orig(::exitValue)]
orig(::fileMetaInfo.st_mode) == ::BZ2_crc32Table[orig(::opMode)]
orig(::fileMetaInfo.st_mode) == ::BZ2_crc32Table[orig(::srcMode)]
orig(::fileMetaInfo.st_mode) == ::BZ2_crc32Table[orig(::longestFileName)]
orig(::fileMetaInfo.st_mode) == ::BZ2_crc32Table[orig(::workFactor)]
orig(::fileMetaInfo.st_mode) == orig(::BZ2_crc32Table[post(::verbosity)])
orig(::fileMetaInfo.st_mode) == orig(::BZ2_crc32Table[post(::numFileNames)-1])
orig(::fileMetaInfo.st_mode) == orig(::BZ2_crc32Table[post(::numFilesProcessed)-1])
orig(::fileMetaInfo.st_mode) == orig(::BZ2_crc32Table[post(::exitValue)])
orig(::fileMetaInfo.st_mode) == orig(::BZ2_crc32Table[post(::opMode)-1])
orig(::fileMetaInfo.st_mode) == orig(::BZ2_crc32Table[post(return)])
orig(argc) == size(::zSuffix[])
orig(argc) == size(::unzSuffix[])
orig(argc) == orig(size(::unzSuffix[]))
orig(argc) == ::incs[::numFileNames]
orig(argc) == ::incs[::numFilesProcessed]
orig(argc) == ::incs[::opMode]
orig(argc) == orig(::incs[post(::numFileNames)])
orig(argc) == orig(::incs[post(::numFilesProcessed)])
orig(argc) == orig(::incs[post(::opMode)])
size(::incs[])-1 == ::incs[::srcMode-1]
size(::incs[])-1 == orig(::incs[post(::srcMode)-1])
::incs[::srcMode] == ::incs[orig(argc)-1]
::incs[::srcMode] == orig(::incs[post(argc)-1])
::incs[::srcMode] == orig(::incs[argc-1])
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFileNames-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::numFilesProcessed-1]
::BZ2_rNums[::verbosity] == ::BZ2_rNums[::opMode-1]
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[post(::numFileNames)-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[post(::numFilesProcessed)-1])
::BZ2_rNums[::verbosity] == orig(::BZ2_rNums[post(::opMode)-1])
::BZ2_rNums[::srcMode] == ::BZ2_rNums[orig(argc)-1]
::BZ2_rNums[::srcMode] == orig(::BZ2_rNums[post(argc)-1])
::BZ2_rNums[::srcMode] == orig(::BZ2_rNums[argc-1])
::BZ2_crc32Table[::srcMode] == ::BZ2_crc32Table[orig(argc)-1]
::BZ2_crc32Table[::srcMode] == orig(::BZ2_crc32Table[post(argc)-1])
::BZ2_crc32Table[::srcMode] == orig(::BZ2_crc32Table[argc-1])
::incs has only one value
::incs[] == [1, 4, 13, 40, 121, 364, 1093, 3280, 9841, 29524, 88573, 265720, 797161, 2391484]
::bzerrorstrings has only one value
::bzerrorstrings[] == [OK, SEQUENCE_ERROR, PARAM_ERROR, MEM_ERROR, DATA_ERROR, DATA_ERROR_MAGIC, IO_ERROR, UNEXPECTED_EOF, OUTBUFF_FULL, CONFIG_ERROR, ???, ???, ???, ???, ???, ???]
::fileMetaInfo has only one value
::fileMetaInfo.st_dev == 2049
::fileMetaInfo.st_ino == 936492
::fileMetaInfo.st_nlink == 1
::fileMetaInfo.st_mode == 33277
::fileMetaInfo.st_uid == 1000
::fileMetaInfo.st_rdev == 0
::fileMetaInfo.st_size == 5738700
::fileMetaInfo.st_blksize == 4096
::fileMetaInfo.st_blocks == 11216
::fileMetaInfo.st_atim has only one value
::fileMetaInfo.st_atim.tv_sec == 1496096467
::fileMetaInfo.st_atim.tv_nsec == 709424920
::fileMetaInfo.st_mtim has only one value
::fileMetaInfo.st_mtim.tv_sec == 1483563943
::fileMetaInfo.st_mtim.tv_nsec == 421335644
::fileMetaInfo.st_ctim has only one value
::fileMetaInfo.__glibc_reserved has only one value
::fileMetaInfo.__glibc_reserved[] == [0, 0, 0]
::fileMetaInfo.__glibc_reserved[] elements == 0
::BZ2_rNums has only one value
::BZ2_rNums[] == [619, 720, 127, 481, 931, 816, 813, 233, 566, 247, 985, 724, 205, 454, 863, 491, 741, 242, 949, 214, 733, 859, 335, 708, 621, 574, 73, 654, 730, 472, 419, 436, 278, 496, 867, 210, 399, 680, 480, 51, 878, 465, 811, 169, 869, 675, 611, 697, 867, 561, 862, 687, 507, 283, 482, 129, 807, 591, 733, 623, 150, 238, 59, 379, 684, 877, 625, 169, 643, 105, 170, 607, 520, 932, 727, 476, 693, 425, 174, 647, 73, 122, 335, 530, 442, 853, 695, 249, 445, 515, 909, 545, 703, 919, 874, 474, 882, 500, 594, 612, 641, 801, 220, 162, 819, 984, 589, 513, 495, 799, 161, 604, 958, 533, 221, 400, 386, 867, 600, 782, 382, 596, 414, 171, 516, 375, 682, 485, 911, 276, 98, 553, 163, 354, 666, 933, 424, 341, 533, 870, 227, 730, 475, 186, 263, 647, 537, 686, 600, 224, 469, 68, 770, 919, 190, 373, 294, 822, 808, 206, 184, 943, 795, 384, 383, 461, 404, 758, 839, 887, 715, 67, 618, 276, 204, 918, 873, 777, 604, 560, 951, 160, 578, 722, 79, 804, 96, 409, 713, 940, 652, 934, 970, 447, 318, 353, 859, 672, 112, 785, 645, 863, 803, 350, 139, 93, 354, 99, 820, 908, 609, 772, 154, 274, 580, 184, 79, 626, 630, 742, 653, 282, 762, 623, 680, 81, 927, 626, 789, 125, 411, 521, 938, 300, 821, 78, 343, 175, 128, 250, 170, 774, 972, 275, 999, 639, 495, 78, 352, 126, 857, 956, 358, 619, 580, 124, 737, 594, 701, 612, 669, 112, 134, 694, 363, 992, 809, 743, 168, 974, 944, 375, 748, 52, 600, 747, 642, 182, 862, 81, 344, 805, 988, 739, 511, 655, 814, 334, 249, 515, 897, 955, 664, 981, 649, 113, 974, 459, 893, 228, 433, 837, 553, 268, 926, 240, 102, 654, 459, 51, 686, 754, 806, 760, 493, 403, 415, 394, 687, 700, 946, 670, 656, 610, 738, 392, 760, 799, 887, 653, 978, 321, 576, 617, 626, 502, 894, 679, 243, 440, 680, 879, 194, 572, 640, 724, 926, 56, 204, 700, 707, 151, 457, 449, 797, 195, 791, 558, 945, 679, 297, 59, 87, 824, 713, 663, 412, 693, 342, 606, 134, 108, 571, 364, 631, 212, 174, 643, 304, 329, 343, 97, 430, 751, 497, 314, 983, 374, 822, 928, 140, 206, 73, 263, 980, 736, 876, 478, 430, 305, 170, 514, 364, 692, 829, 82, 855, 953, 676, 246, 369, 970, 294, 750, 807, 827, 150, 790, 288, 923, 804, 378, 215, 828, 592, 281, 565, 555, 710, 82, 896, 831, 547, 261, 524, 462, 293, 465, 502, 56, 661, 821, 976, 991, 658, 869, 905, 758, 745, 193, 768, 550, 608, 933, 378, 286, 215, 979, 792, 961, 61, 688, 793, 644, 986, 403, 106, 366, 905, 644, 372, 567, 466, 434, 645, 210, 389, 550, 919, 135, 780, 773, 635, 389, 707, 100, 626, 958, 165, 504, 920, 176, 193, 713, 857, 265, 203, 50, 668, 108, 645, 990, 626, 197, 510, 357, 358, 850, 858, 364, 936, 638]
::BZ2_crc32Table has only one value
::BZ2_crc32Table[] == [0, 79764919, 159529838, 222504665, 319059676, 398814059, 445009330, 507990021, 638119352, 583659535, 797628118, 726387553, 890018660, 835552979, 1015980042, 944750013, 1276238704, 1221641927, 1167319070, 1095957929, 1595256236, 1540665371, 1452775106, 1381403509, 1780037320, 1859660671, 1671105958, 1733955601, 2031960084, 2111593891, 1889500026, 1952343757, 2552477408, 2632100695, 2443283854, 2506133561, 2334638140, 2414271883, 2191915858, 2254759653, 3190512472, 3135915759, 3081330742, 3009969537, 2905550212, 2850959411, 2762807018, 2691435357, 3560074640, 3505614887, 3719321342, 3648080713, 3342211916, 3287746299, 3467911202, 3396681109, 4063920168, 4143685023, 4223187782, 4286162673, 3779000052, 3858754371, 3904687514, 3967668269, 881225847, 809987520, 1023691545, 969234094, 662832811, 591600412, 771767749, 717299826, 311336399, 374308984, 453813921, 533576470, 25881363, 88864420, 134795389, 214552010, 2023205639, 2086057648, 1897238633, 1976864222, 1804852699, 1867694188, 1645340341, 1724971778, 1587496639, 1516133128, 1461550545, 1406951526, 1302016099, 1230646740, 1142491917, 1087903418, 2896545431, 2825181984, 2770861561, 2716262478, 3215044683, 3143675388, 3055782693, 3001194130, 2326604591, 2389456536, 2200899649, 2280525302, 2578013683, 2640855108, 2418763421, 2498394922, 3769900519, 3832873040, 3912640137, 3992402750, 4088425275, 4151408268, 4197601365, 4277358050, 3334271071, 3263032808, 3476998961, 3422541446, 3585640067, 3514407732, 3694837229, 3640369242, 1762451694, 1842216281, 1619975040, 1682949687, 2047383090, 2127137669, 1938468188, 2001449195, 1325665622, 1271206113, 1183200824, 1111960463, 1543535498, 1489069629, 1434599652, 1363369299, 622672798, 568075817, 748617968, 677256519, 907627842, 853037301, 1067152940, 995781531, 51762726, 131386257, 177728840, 240578815, 269590778, 349224269, 429104020, 491947555, 4046411278, 4126034873, 4172115296, 4234965207, 3794477266, 3874110821, 3953728444, 4016571915, 3609705398, 3555108353, 3735388376, 3664026991, 3290680682, 3236090077, 3449943556, 3378572211, 3174993278, 3120533705, 3032266256, 2961025959, 2923101090, 2868635157, 2813903052, 2742672763, 2604032198, 2683796849, 2461293480, 2524268063, 2284983834, 2364738477, 2175806836, 2238787779, 1569362073, 1498123566, 1409854455, 1355396672, 1317987909, 1246755826, 1192025387, 1137557660, 2072149281, 2135122070, 1912620623, 1992383480, 1753615357, 1816598090, 1627664531, 1707420964, 295390185, 358241886, 404320391, 483945776, 43990325, 106832002, 186451547, 266083308, 932423249, 861060070, 1041341759, 986742920, 613929101, 542559546, 756411363, 701822548, 3316196985, 3244833742, 3425377559, 3370778784, 3601682597, 3530312978, 3744426955, 3689838204, 3819031489, 3881883254, 3928223919, 4007849240, 4037393693, 4100235434, 4180117107, 4259748804, 2310601993, 2373574846, 2151335527, 2231098320, 2596047829, 2659030626, 2470359227, 2550115596, 2947551409, 2876312838, 2788305887, 2733848168, 3165939309, 3094707162, 3040238851, 2985771188]
::mammamia == 3216
::keepInputFiles == 1
::smallMode == 0
::numFileNames == 1
::blockSize100k == 9
::longestFileName == 20
::inName == "../inputs/in_big.txt"
::outName == "../inputs/in_big.txt.bz2"
::tmpName == ""
::progName == "zip-injected"
::progNameReally == "./zip-injected"
::outputHandleJustInCase == null
::workFactor == 30
::zSuffix has only one value
::zSuffix[] == [.bz2, .bz, .tbz2, .tbz]
::unzSuffix has only one value
::unzSuffix[] == [, , .tar, .tar]
::unzSuffix[] elements one of { "", ".tar" }
argv[] == [./zip-injected]
argv[] elements == "./zip-injected"
orig(argc) == 4
size(::incs[]) == 14
size(::bzerrorstrings[]) == 16
size(::BZ2_rNums[]) == 512
size(::BZ2_crc32Table[]) == 256
::incs[::blockSize100k] == 29524
::incs[::blockSize100k-1] == 9841
::incs[::srcMode] == 40
::incs[orig(argc)] == 121
::BZ2_rNums[::verbosity] == 619
::BZ2_rNums[::numFileNames] == 720
::BZ2_rNums[::blockSize100k] == 247
::BZ2_rNums[::blockSize100k-1] == 566
::BZ2_rNums[::srcMode] == 481
::BZ2_rNums[::srcMode-1] == 127
::BZ2_rNums[::longestFileName] == 733
::BZ2_rNums[::longestFileName-1] == 214
::BZ2_rNums[::workFactor] == 419
::BZ2_rNums[::workFactor-1] == 472
::BZ2_rNums[orig(argc)] == 931
::BZ2_crc32Table[::numFileNames] == 79764919
::BZ2_crc32Table[::blockSize100k] == 583659535
::BZ2_crc32Table[::blockSize100k-1] == 638119352
::BZ2_crc32Table[::srcMode] == 222504665
::BZ2_crc32Table[::srcMode-1] == 159529838
::BZ2_crc32Table[::longestFileName] == 1595256236
::BZ2_crc32Table[::longestFileName-1] == 1095957929
::BZ2_crc32Table[::workFactor] == 1889500026
::BZ2_crc32Table[::workFactor-1] == 2111593891
::BZ2_crc32Table[orig(argc)] == 319059676
::fileMetaInfo.__glibc_reserved[] elements == ::verbosity
size(::BZ2_rNums[])-1 in ::BZ2_rNums[]
::tmpName in ::unzSuffix[]
::tmpName == orig(::inName)
::tmpName == orig(::outName)
::tmpName == orig(::tmpName)
::tmpName == orig(::progNameReally)
::progNameReally in argv[]
